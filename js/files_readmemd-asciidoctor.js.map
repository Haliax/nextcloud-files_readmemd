{"version":3,"sources":["webpack:///files_readmemd/node_modules/@asciidoctor/core/dist/browser/asciidoctor.js","webpack:///files_readmemd/node_modules/asciidoctor/index.js"],"names":["factory","undefined","console","nil","BasicObject","_Object","Module","Class","global_object","this","g","window","log","warn","Opal","global","config","missing_require_severity","unsupported_features_severity","enable_stack_trace","$hasOwn","Object","hasOwnProperty","$bind","Function","prototype","bind","$setPrototype","setPrototypeOf","$slice","Array","slice","$splice","splice","unique_id","$defineProperty","object","name","initialValue","defineProperty","value","enumerable","configurable","writable","const_get_name","cref","$$const","const_lookup_ancestors","i","ii","ancestors","length","call","const_missing","skip_missing","$const_missing","isRoot","proto","create_iclass","module","iclass","create_dummy_iclass","$$is_module","$$iclasses","push","$$prototype","$$define_methods_on","props","getOwnPropertyNames","prop","chain_iclasses","iclasses","first","last","previous","current","protoToModule","$$module","$$class","is_method_body","body","$$stub","uid","id","obj","$$is_number","$$id","gvars","exit","status","DEBUG","exceptions","pop_exception","pop","inspect","$inspect","toString","truthy","val","$$is_boolean","falsy","const_get_local","result","$$is_class","TypeError","const_get_qualified","cache","cached","current_version","const_cache_version","$$const_cache","create","const_get_relative","nesting","constant","const_lookup_nesting","const_lookup_Object","const_set","$$is_a_module","$$name","$$base_module","$$","constants","inherit","modules","concat","keys","const_remove","old","$$autoload","NameError","$new","$name","allocate_class","superclass","klass","constructor","$$bridge","args","arguments","self","apply","$$constructor","$$meta","build_class_singleton_class","scope","bridged","find_existing_class","$$super","ensureSuperclassMatch","$inherited","bridge","allocate_module","find_existing_module","get_singleton_class","build_module_singletin_class","build_object_singleton_class","meta","mod","is_method","instance_methods","exclude","results","l","j","ll","method_name","method","indexOf","own_instance_methods","methods","own_methods","receiver_methods","singleton_methods","class_variables","ancestor","cvar","$$cvars","class_variable_set","append_features","includer","module_ancestors","ArgumentError","start_chain_after","end_chain_on","includer_ancestors","chain","getPrototypeOf","parent","module_iclass","next_ancestor","$$own_included_modules","own_included_modules","prepend_features","prepender","prepender_iclass","dummy_prepender","previous_parent","flush_methods_in","RuntimeError","$$own_prepended_modules","own_prepended_modules","native_klass","$$ancestors_cache_version","$$ancestors","mods","own_ancestors","included_modules","$$iclass","$$included","add_stubs","stubs","stub","existing_method","add_stub_for","stub_for","method_missing_stub","$method_missing","$$p","args_ary","ac","actual","expected","meth","block_ac","context","find_super_dispatcher","mid","current_func","defcheck","defs","super_method","jsid","$$owner","Kernel","NoMethodError","find_iter_super_dispatcher","implicit","call_jsid","$$define_meth","$$def","$$jsid","ret","returner","$v","brk","breaker","new_brk","Error","yield1","block","arg","LocalJumpError","has_mlhs","$$has_top_level_mlhs_arg","has_trailing_comma","$$has_trailing_comma_in_args","to_ary","$$is_array","yieldX","rescue","exception","candidates","candidate","JS","is_a","$$is_number_class","to_hash","$$is_hash","hash","$to_hash","ary","$to_ary","to_a","$to_a","extract_kwargs","parameters","kwargs","hash2","kwrestargs","given_args","used_args","map","key","given_map","$$smap","send","recv","lambda","$$is_lambda","def","top","defn","$$eval","displayName","$$module_function","singleton_of","$$singleton_of","$method_added","$singleton_method_added","substr","$$is_string","rdef","$$is_singleton","$singleton_method_removed","$method_removed","udef","$singleton_method_undefined","$method_undefined","alias","old_id","$$alias_of","$$arity","$$parameters","$$source_location","$$alias_name","alias_native","native_name","hash_init","$$map","$$keys","hash_clone","from_hash","$$none","$$proc","smap","len","hash_put","key_hash","bucket","last_bucket","$$by_identity","$hash","next","hash_get","hash_delete","hash_rehash","arguments_length","Hash","range","exc","Range","begin","end","excl","ivar","escape_regexp","str","replace","global_regexp","pattern","$$g","RegExp","source","multiline","ignoreCase","lastIndex","global_multiline_regexp","$$gm","loaded_features","current_dir","require_table","normalize","path","parts","part","new_parts","split","join","loaded","paths","load","severity","message","LoadError","require","encodings","set_encoding","FrozenError","encoding","enc","dup","String","internal_encoding","to_s","$to_s","valueOf","NilClass","$nesting","$module","$truthy","$base","$parent_nesting","$Opal_bridge$1","$Opal_type_error$2","$Opal_coerce_to$3","$Opal_coerce_to$excl$4","$Opal_coerce_to$ques$5","$Opal_try_convert$6","$Opal_compare$7","$Opal_destructure$8","$Opal_respond_to$ques$9","$Opal_inspect_obj$10","$Opal_instance_variable_name$excl$11","$Opal_class_variable_name$excl$12","$Opal_const_name$excl$13","$Opal_pristine$14","type","coerced","$a","$class","$raise","$type_error","$__send__","$coerce_to","a","b","compare","include_all","test","const_name","$upcase","owner_class","method_names","$$pristine","$rb_lt","lhs","rhs","$rb_gt","$$$","$breaker","$klass","$send","$lambda","$range","$hash2","$super","$Module_allocate$1","$Module_initialize$2","$Module_$eq_eq_eq$3","$Module_$lt$4","$Module_$lt_eq$5","$Module_$gt$6","$Module_$gt_eq$7","$Module_$lt_eq_gt$8","$Module_alias_method$9","$Module_alias_native$10","$Module_ancestors$11","$Module_append_features$12","$Module_attr_accessor$13","$Module_attr_reader$14","$Module_attr_writer$15","$Module_autoload$16","$Module_class_variables$17","$Module_class_variable_get$18","$Module_class_variable_set$19","$Module_class_variable_defined$ques$20","$Module_remove_class_variable$21","$Module_constants$22","$Module_constants$23","$Module_nesting$24","$Module_const_defined$ques$25","$Module_const_get$26","$Module_const_missing$28","$Module_const_set$29","$Module_public_constant$30","$Module_define_method$31","$Module_remove_method$33","$Module_singleton_class$ques$34","$Module_include$35","$Module_included_modules$36","$Module_include$ques$37","$Module_instance_method$38","$Module_instance_methods$39","$Module_included$40","$Module_extended$41","$Module_extend_object$42","$Module_method_added$43","$Module_method_removed$44","$Module_method_undefined$45","$Module_module_eval$46","$Module_module_exec$48","$Module_method_defined$ques$49","$Module_module_function$50","$Module_name$51","$Module_prepend$52","$Module_prepend_features$53","$Module_prepended$54","$Module_remove_const$55","$Module_to_s$56","$Module_undef_method$57","$Module_instance_variables$58","$Module_dup$59","$Module_copy_class_variables$60","$Module_copy_constants$61","$iter","$to_proc","other","lt","newname","oldname","names","const$","$$nesting","$$27","$split","o","c","$$s","$const_get","full_const_name","file","$require","$$32","$case","$$unbound","$b","bound","$append_features","$included","mod2","include_super","$$module_eval","$post_args","$$47","string","_lineno","default_eval_options","compiling_options","compiled","compile","$size","arity_check","$merge","$compile","eval","block_self","func","$$full_name","base","unshift","$prepend_features","$prepended","$__id__","consts","$constants","charAt","copy","$zuper","$zuper_i","$zuper_ii","$copy_class_variables","$copy_constants","other_constants","$Class_new$1","$Class_allocate$2","$Class_inherited$3","$Class_initialize_dup$4","$Class_new$5","$Class_superclass$6","$Class_to_s$7","cls","original","$initialize_copy","$allocate","$initialize","$BasicObject_initialize$1","$BasicObject_$eq_eq$2","$BasicObject_eql$ques$3","$BasicObject___id__$4","$BasicObject___send__$5","$BasicObject_$excl$6","$BasicObject_$not_eq$7","$BasicObject_instance_eval$8","$BasicObject_instance_exec$10","$BasicObject_singleton_method_added$11","$BasicObject_singleton_method_removed$12","$BasicObject_singleton_method_undefined$13","$BasicObject_class$14","$BasicObject_method_missing$15","symbol","$$instance_eval","$$9","$rb_le","$gvars","$Kernel_method_missing$1","$Kernel_$eq_tilde$2","$Kernel_$excl_tilde$3","$Kernel_$eq_eq_eq$4","$Kernel_$lt_eq_gt$5","$Kernel_method$6","$Kernel_methods$7","$Kernel_public_methods$8","$Kernel_Array$9","$Kernel_at_exit$10","$Kernel_caller$11","$Kernel_class$12","$Kernel_copy_instance_variables$13","$Kernel_copy_singleton_methods$14","$Kernel_clone$15","$Kernel_initialize_clone$16","$Kernel_define_singleton_method$17","$Kernel_dup$18","$Kernel_initialize_dup$19","$Kernel_enum_for$20","$Kernel_equal$ques$21","$Kernel_exit$22","$Kernel_extend$23","$Kernel_hash$24","$Kernel_initialize_copy$25","$Kernel_inspect$26","$Kernel_instance_of$ques$27","$Kernel_instance_variable_defined$ques$28","$Kernel_instance_variable_get$29","$Kernel_instance_variable_set$30","$Kernel_remove_instance_variable$31","$Kernel_instance_variables$32","$Kernel_Integer$33","$Kernel_Float$34","$Kernel_Hash$35","$Kernel_is_a$ques$36","$Kernel_itself$37","$Kernel_lambda$38","$Kernel_load$39","$Kernel_loop$40","$Kernel_nil$ques$42","$Kernel_printf$43","$Kernel_proc$44","$Kernel_puts$45","$Kernel_p$46","$Kernel_print$48","$Kernel_warn$49","$Kernel_raise$50","$Kernel_rand$51","$Kernel_respond_to$ques$52","$Kernel_respond_to_missing$ques$53","$Kernel_require$54","$Kernel_require_relative$55","$Kernel_require_tree$56","$Kernel_singleton_class$57","$Kernel_sleep$58","$Kernel_srand$59","$Kernel_String$60","$Kernel_tap$61","$Kernel_to_proc$62","$Kernel_to_s$63","$Kernel_catch$64","$Kernel_throw$65","$Kernel_open$66","$Kernel_yield_self$67","$object_id","$$comparable","x","all","__at_exit__","other_singleton_class","self_singleton_class","assign","$kwargs","$copy_instance_variables","$copy_singleton_methods","$initialize_clone","$singleton_class","$initialize_dup","$pop","$call","singleton","$extend_object","$extended","base_digits","toLowerCase","_","head","flag","fromCharCode","parseInt","isNaN","Infinity","Math","floor","$to_int","$Integer","parseFloat","$$41","$yield","e","$err","$result","$print","strs","stdout","$puts","$length","VERBOSE","stderr","_backtrace","$exception","max","$rand","abs","$to_i","$expand_path","$join","current_file","seconds","get_time","performance","now","Date","t","seed","$new_seed","$srand","sym","$sym","$arg","$$68","$include","$Exception_new$1","$Exception_exception$2","$Exception_initialize$3","$Exception_backtrace$4","$Exception_exception$5","$Exception_message$6","$Exception_inspect$7","$Exception_set_backtrace$8","$Exception_to_s$9","stack_trace_limit","error","captureStackTrace","backtrace","stack","cloned","$clone","as_str","valid","$EINVAL_new$10","$UncaughtThrowError_initialize$11","$attr_reader","$NameError_initialize$12","$NoMethodError_initialize$13","$KeyError_initialize$14","$KeyError_receiver$15","$KeyError_key$16","receiver","$NilClass_$excl$2","$NilClass_$$3","$NilClass_$$4","$NilClass_$$5","$NilClass_$eq_eq$6","$NilClass_dup$7","$NilClass_clone$8","$NilClass_inspect$9","$NilClass_nil$ques$10","$NilClass_singleton_class$11","$NilClass_to_a$12","$NilClass_to_h$13","$NilClass_to_i$14","$NilClass_to_s$15","$NilClass_to_c$16","$NilClass_rationalize$17","$NilClass_to_r$18","$NilClass_instance_variables$19","$allocate$1","$Rational","$Boolean___id__$2","$Boolean_$excl$3","$Boolean_$$4","$Boolean_$$5","$Boolean_$$6","$Boolean_$eq_eq$7","$Boolean_singleton_class$8","$Boolean_to_s$9","$Boolean_dup$10","$Boolean_clone$11","Boolean","$Comparable_normalize$1","$Comparable_$eq_eq$2","$Comparable_$gt$3","$Comparable_$gt_eq$4","$Comparable_$lt$5","$Comparable_$lt_eq$6","$Comparable_between$ques$7","$Comparable_clamp$8","what","cmp","$normalize","min","$Regexp_$eq_eq$6","$Regexp_$eq_eq_eq$7","$Regexp_$eq_tilde$8","$Regexp_inspect$9","$Regexp_match$10","$Regexp_match$ques$11","$Regexp_$$12","$Regexp_source$13","$Regexp_options$14","$Regexp_casefold$ques$15","$escape$2","$last_match$3","$union$4","$new$5","allocated","uninitialized","n","is_first_part_array","quoted_validated","options","each_part_options","$$is_regexp","$escape","$options","$to_str","regexp","temp","$match","$begin","matches","exec","regexp_pattern","regexp_flags","chars","chars_length","char_escaped","regexp_pattern_escaped","current_char","pos","m","md","re","index","$MatchData_initialize$16","$MatchData_$$$17","$MatchData_offset$18","$MatchData_$eq_eq$19","$MatchData_begin$20","$MatchData_end$21","$MatchData_captures$22","$MatchData_inspect$23","$MatchData_length$24","$MatchData_to_a$25","$MatchData_to_s$26","$MatchData_values_at$27","match_groups","input","pre_match","post_match","group","$c","$d","values","$$is_range","$rb_divide","$rb_plus","$String___id__$1","$String_try_convert$2","$String_new$3","$String_initialize$4","$String_$percent$5","$String_$$6","$String_$plus$7","$String_$lt_eq_gt$8","$String_$eq_eq$9","$String_$eq_tilde$10","$String_$$$11","$String_b$12","$String_capitalize$13","$String_casecmp$14","$String_casecmp$ques$15","$String_center$16","$String_chars$17","$String_chomp$18","$String_chop$19","$String_chr$20","$String_clone$21","$String_dup$22","$String_count$23","$String_delete$24","$String_delete_prefix$25","$String_delete_suffix$26","$String_downcase$27","$String_each_char$28","$String_each_line$30","$String_empty$ques$31","$String_end_with$ques$32","$String_gsub$33","$String_hash$34","$String_hex$35","$String_include$ques$36","$String_index$37","$String_inspect$38","$String_intern$39","$String_lines$40","$String_length$41","$String_ljust$42","$String_lstrip$43","$String_ascii_only$ques$44","$String_match$45","$String_match$ques$46","$String_next$47","$String_oct$48","$String_ord$49","$String_partition$50","$String_reverse$51","$String_rindex$52","$String_rjust$53","$String_rpartition$54","$String_rstrip$55","$String_scan$56","$String_split$57","$String_squeeze$58","$String_start_with$ques$59","$String_strip$60","$String_sub$61","$String_sum$62","$String_swapcase$63","$String_to_f$64","$String_to_i$65","$String_to_proc$66","$String_to_s$68","$String_tr$69","$String_tr_s$70","$String_upcase$71","$String_upto$72","$String_instance_variables$73","$String__load$74","$String_unicode_normalize$75","$String_unicode_normalized$ques$76","$String_unpack$77","$String_unpack1$78","char_class_from_char_sets","sets","explode_sequences_in_character_set","set","curr_char","skip_next_dash","char_code_from","char_code_upto","char_code","charCodeAt","intersection","setA","setB","chr","neg","tmp","pos_intersection","neg_intersection","data","$format","count","$$cast","size","match","$force_encoding","toUpperCase","ascii_only","$casecmp","width","padstr","ljustified","$ljust","$ceil","rjustified","$rjust","$floor","$each_char","separator","char_class","prefix","suffix","$$29","chomped","trailing","splitted","$enum_for","$chomp","suffixes","replacement","_replacement","match_data","slashes","command","search","offset","regex","code","first_alphanum_char_index","carry","radix","tail","sep","reverse","r","_m","lastIndexOf","patterns","remaining","$captures","limit","castResult","prefixes","pow","$0","$1","$2","$$67","from","to","in_range","ch","start","subs","from_chars","from_length","to_chars","to_length","inverse","global_sub","shift","from_chars_expanded","last_from","to_chars_expanded","last_to","length_diff","pad_char","new_str","sub","last_substitute","stop","s","$succ","form","format","$rb_minus","$falsy","$Enumerable_all$ques$1","$Enumerable_any$ques$5","$Enumerable_chunk$9","$Enumerable_chunk_while$12","$Enumerable_collect$14","$Enumerable_collect_concat$16","$Enumerable_count$19","$Enumerable_cycle$23","$Enumerable_detect$25","$Enumerable_drop$27","$Enumerable_drop_while$28","$Enumerable_each_cons$29","$Enumerable_each_entry$31","$Enumerable_each_slice$33","$Enumerable_each_with_index$35","$Enumerable_each_with_object$37","$Enumerable_entries$39","$Enumerable_find_all$40","$Enumerable_find_index$42","$Enumerable_first$45","$Enumerable_grep$48","$Enumerable_grep_v$50","$Enumerable_group_by$52","$Enumerable_include$ques$54","$Enumerable_inject$56","$Enumerable_lazy$57","$Enumerable_enumerator_size$59","$Enumerable_max$60","$Enumerable_max_by$61","$Enumerable_min$63","$Enumerable_min_by$64","$Enumerable_minmax$66","$Enumerable_minmax_by$68","$Enumerable_none$ques$69","$Enumerable_one$ques$73","$Enumerable_partition$77","$Enumerable_reject$79","$Enumerable_reverse_each$81","$Enumerable_slice_before$83","$Enumerable_slice_after$85","$Enumerable_slice_when$88","$Enumerable_sort$90","$Enumerable_sort_by$92","$Enumerable_sum$97","$Enumerable_take$99","$Enumerable_take_while$100","$Enumerable_uniq$102","$Enumerable_zip$104","comparableForPattern","$$2","$$3","$$4","comparable","$destructure","$returner","$$6","$$7","$$8","$$10","$$11","$enumerator_size","yielder","accumulate","releaseAccumulate","$each","$$13","before","after","$$15","$$17","$$18","item","$flatten","$$20","$$21","$$22","$warn","$$24","param","ifnone","$$26","number","dropping","$$30","$try_convert","enum_size","buffer","element","$$34","$$36","$$38","$$43","$$44","$$46","$$49","$push","$$51","$$53","$writer","$$55","$$58","enum$","$reverse","$first","$$62","by","$compare","$$65","first_time","min_cmp","max_cmp","$$70","$$71","$$72","$$74","$$75","$$76","$$78","$$80","$$82","$$84","$dup","$$86","$$87","end_chunk","$$89","last_after","$each_cons","params","$$91","$$93","$$94","$$95","$$96","initial","$$98","num","$$101","$$103","produced","$values","others","$Enumerator_for$1","$Enumerator_initialize$2","$Enumerator_each$3","$Enumerator_size$4","$Enumerator_with_index$5","$Enumerator_inspect$7","$$is_enumerator","$Generator_initialize$8","$Generator_each$9","$Yielder_initialize$10","$Yielder_yield$11","$Yielder_$lt$lt$12","$Lazy_initialize$13","$Lazy_lazy$16","$Lazy_collect$17","$Lazy_collect_concat$19","$Lazy_drop$23","$Lazy_drop_while$25","$Lazy_enum_for$27","$Lazy_find_all$28","$Lazy_grep$30","$Lazy_reject$33","$Lazy_take$35","$Lazy_take_while$37","$Lazy_inspect$39","enumerator","$$14","each_args","v","array","current_size","set_size","dropped","succeeding","$$31","taken","$rb_times","$Numeric_coerce$1","$Numeric___coerced__$2","$Numeric_$lt_eq_gt$3","$Numeric_$plus$$4","$Numeric_$minus$$5","$Numeric_$percent$6","$Numeric_abs$7","$Numeric_abs2$8","$Numeric_angle$9","$Numeric_ceil$10","$Numeric_conj$11","$Numeric_denominator$12","$Numeric_div$13","$Numeric_divmod$14","$Numeric_fdiv$15","$Numeric_floor$16","$Numeric_i$17","$Numeric_imag$18","$Numeric_integer$ques$19","$Numeric_nonzero$ques$20","$Numeric_numerator$21","$Numeric_polar$22","$Numeric_quo$23","$Numeric_real$24","$Numeric_real$ques$25","$Numeric_rect$26","$Numeric_round$27","$Numeric_to_c$28","$Numeric_to_int$29","$Numeric_truncate$30","$Numeric_zero$ques$31","$Numeric_positive$ques$32","$Numeric_negative$ques$33","$Numeric_dup$34","$Numeric_clone$35","$Numeric_finite$ques$36","$Numeric_infinite$ques$37","$Float","$coerce","$div","ndigits","$to_f","$to_r","$denominator","$Complex","$numerator","$abs","digits","$round","$truncate","$Array_$$$1","$Array_initialize$2","$Array_try_convert$3","$Array_$$4","$Array_$$5","$Array_$$6","$Array_$plus$7","$Array_$minus$8","$Array_$lt$lt$9","$Array_$lt_eq_gt$10","$Array_$eq_eq$11","$Array_$$$12","$Array_$$$eq$13","$Array_any$ques$14","$Array_assoc$15","$Array_at$16","$Array_bsearch_index$17","$Array_bsearch$18","$Array_cycle$19","$Array_clear$21","$Array_count$22","$Array_initialize_copy$23","$Array_collect$24","$Array_collect$excl$26","$Array_combination$28","$Array_repeated_combination$30","$Array_compact$32","$Array_compact$excl$33","$Array_concat$34","$Array_delete$37","$Array_delete_at$38","$Array_delete_if$39","$Array_dig$41","$Array_drop$42","$Array_dup$43","$Array_each$44","$Array_each_index$46","$Array_empty$ques$48","$Array_eql$ques$49","$Array_fetch$50","$Array_fill$51","$Array_first$52","$Array_flatten$53","$Array_flatten$excl$54","$Array_hash$55","$Array_include$ques$56","$Array_index$57","$Array_insert$58","$Array_inspect$59","$Array_join$60","$Array_keep_if$61","$Array_last$63","$Array_length$64","$Array_max$65","$Array_min$66","$Array_permutation$67","$Array_repeated_permutation$69","$Array_pop$71","$Array_product$72","$Array_push$73","$Array_rassoc$74","$Array_reject$75","$Array_reject$excl$77","$Array_replace$79","$Array_reverse$80","$Array_reverse$excl$81","$Array_reverse_each$82","$Array_rindex$84","$Array_rotate$85","$Array_rotate$excl$86","$Array_sample$89","$Array_select$90","$Array_select$excl$92","$Array_shift$94","$Array_shuffle$95","$Array_shuffle$excl$96","$Array_slice$excl$97","$Array_sort$98","$Array_sort$excl$99","$Array_sort_by$excl$100","$Array_take$102","$Array_take_while$103","$Array_to_a$104","$Array_to_h$105","$Array_transpose$106","$Array_uniq$109","$Array_uniq$excl$110","$Array_unshift$111","$Array_values_at$112","$Array_zip$115","$Array_inherited$116","$Array_instance_variables$117","$Array_pack$119","toArraySubclass","$replace","binomial_coefficient","k","$keys","converted","recursed","_eqeq","Integer","$array_slice_range","$array_slice_index_length","extra","smaller","satisfied","$$25","chosen","lev","done","iterate","$$35","$$40","idx","idxs","$$45","_eql","defaults","one","two","left","right","$end","level","_flatten","flattened","hash_ids","hash_id","member","objects","permute","offensive","output","perm","used","how_many","descending_factorial","blk","subarray","counters","lengths","arrays","resultlen","outer_loop","$$83","firstPart","lastPart","cnt","$rotate","$SampleRandom_initialize$87","$SampleRandom_rand$88","rng","random","abandon","spin","targetIndex","oldValue","$at","list","shiftNoArg","randgen","range_start","range_end","range_length","sort","y","$sort","$$107","row","$$108","original_length","$$113","out","elem","$$114","finish","$last","jj","$take","$$118","$pristine","$rb_ge","$Hash_$$$1","$Hash_allocate$2","$Hash_try_convert$3","$Hash_initialize$4","$Hash_$eq_eq$5","$Hash_$gt_eq$6","$Hash_$gt$8","$Hash_$lt$9","$Hash_$lt_eq$10","$Hash_$$$11","$Hash_$$$eq$12","$Hash_assoc$13","$Hash_clear$14","$Hash_clone$15","$Hash_compact$16","$Hash_compact$excl$17","$Hash_compare_by_identity$18","$Hash_compare_by_identity$ques$19","$Hash_default$20","$Hash_default$eq$21","$Hash_default_proc$22","$Hash_default_proc$eq$23","$Hash_delete$24","$Hash_delete_if$25","$Hash_dig$27","$Hash_each$28","$Hash_each_key$30","$Hash_each_value$32","$Hash_empty$ques$34","$Hash_fetch$35","$Hash_fetch_values$36","$Hash_flatten$38","$Hash_has_key$ques$39","$Hash_has_value$ques$40","$Hash_hash$41","$Hash_index$42","$Hash_indexes$43","$Hash_inspect$44","$Hash_invert$45","$Hash_keep_if$46","$Hash_keys$48","$Hash_length$49","$Hash_merge$50","$Hash_merge$excl$51","$Hash_rassoc$52","$Hash_rehash$53","$Hash_reject$54","$Hash_reject$excl$56","$Hash_replace$58","$Hash_select$59","$Hash_select$excl$61","$Hash_shift$63","$Hash_slice$64","$Hash_to_a$65","$Hash_to_h$66","$Hash_to_hash$67","$Hash_to_proc$68","$Hash_transform_keys$70","$Hash_transform_keys$excl$72","$Hash_transform_values$74","$Hash_transform_values$excl$76","$Hash_values$78","inspect_ids","argv","argc","$store","other_value","other_key","other_val","$fetch","$default","changes_were_made","identity_hash","$compare_by_identity","default_proc","proc","$arity","$$33","$$37","other_keys","$$57","$default_proc","$$60","$$69","$$73","new_key","$$77","$Number_coerce$2","$Number___id__$3","$Number_$plus$4","$Number_$minus$5","$Number_$$6","$Number_$slash$7","$Number_$percent$8","$Number_$$9","$Number_$$10","$Number_$$11","$Number_$lt$12","$Number_$lt_eq$13","$Number_$gt$14","$Number_$gt_eq$15","$Number_$lt_eq_gt$16","$Number_$lt$lt$17","$Number_$gt$gt$18","$Number_$$$19","$Number_$plus$$20","$Number_$minus$$21","$Number_$$22","$Number_$$$23","$Number_$eq_eq_eq$24","$Number_$eq_eq$25","$Number_abs$26","$Number_abs2$27","$Number_allbits$ques$28","$Number_anybits$ques$29","$Number_angle$30","$Number_bit_length$31","$Number_ceil$32","$Number_chr$33","$Number_denominator$34","$Number_downto$35","$Number_equal$ques$37","$Number_even$ques$38","$Number_floor$39","$Number_gcd$40","$Number_gcdlcm$41","$Number_integer$ques$42","$Number_is_a$ques$43","$Number_instance_of$ques$44","$Number_lcm$45","$Number_next$46","$Number_nobits$ques$47","$Number_nonzero$ques$48","$Number_numerator$49","$Number_odd$ques$50","$Number_ord$51","$Number_pow$52","$Number_pred$53","$Number_quo$54","$Number_rationalize$55","$Number_remainder$56","$Number_round$57","$Number_step$58","$Number_times$60","$Number_to_f$62","$Number_to_i$63","$Number_to_r$64","$Number_to_s$65","$Number_truncate$66","$Number_digits$67","$Number_divmod$68","$Number_upto$69","$Number_zero$ques$71","$Number_size$72","$Number_nan$ques$73","$Number_finite$ques$74","$Number_infinite$ques$75","$Number_positive$ques$76","$Number_negative$ques$77","$bridge","Number","$__coerced__","spaceship_operator","bit","mask","PI","f","factor","ceil","round","$gcd","$lcm","eps","$frexp","$ldexp","$rationalize","exp","step","$$59","positional_args","keyword_args","validateParameters","sign","stepFloatSize","err","stepSize","d","$$61","$allocate$78","$eq_eq_eq$79","$sqrt$80","sqrt","$allocate$81","$eq_eq_eq$82","MAX_VALUE","MIN_VALUE","NaN","EPSILON","$Range_initialize$1","$Range_$eq_eq$2","$Range_$eq_eq_eq$3","$Range_cover$ques$4","$Range_each$5","$Range_eql$ques$6","$Range_exclude_end$ques$7","$Range_first$8","$Range_last$9","$Range_max$10","$Range_min$11","$Range_size$12","$Range_step$13","$Range_bsearch$17","$Range_to_s$18","$Range_inspect$19","$Range_marshal_load$20","$Range_hash$21","beg_cmp","end_cmp","infinity","range_begin","$$16","coerceStepSize","enumeratorSize","$brk","$$brk","$Proc_new$1","$Proc_call$2","$Proc_to_proc$3","$Proc_lambda$ques$4","$Proc_arity$5","$Proc_source_location$6","$Proc_binding$7","$Proc_parameters$8","$Proc_curry$9","$Proc_dup$10","$$is_curried","parameter","arity","curried","original_proc","$$original_proc","$Method_initialize$1","$Method_arity$2","$Method_parameters$3","$Method_source_location$4","$Method_comments$5","$Method_call$6","$Method_unbind$7","$Method_to_proc$8","$Method_inspect$9","owner","$$comments","$source_location","$UnboundMethod_initialize$10","$UnboundMethod_arity$11","$UnboundMethod_parameters$12","$UnboundMethod_source_location$13","$UnboundMethod_comments$14","$UnboundMethod_bind$15","$UnboundMethod_inspect$16","LOADED_FEATURES","LOAD_PATH","SAFE","$$23","$Encoding_register$1","$Encoding_find$3","$Encoding_initialize$4","$Encoding_ascii_compatible$ques$5","$Encoding_dummy$ques$6","$Encoding_to_s$7","$Encoding_inspect$8","$Encoding_each_byte$9","$Encoding_bytesize$10","ascii","dummy","register","encoding_name","$const_set","$sub","$default_external","$attr_accessor","$each_byte$12","$bytesize$13","codePoint","units","leadSurrogate","$bytes","$each_byte$15","$bytesize$16","$each_byte$18","$bytesize$19","$each_byte$21","$bytesize$22","$each_byte$24","$bytesize$25","$String_bytes$26","$String_bytesize$27","$String_each_byte$28","$String_encode$29","$String_force_encoding$30","$String_getbyte$31","$String_valid_encoding$ques$32","bytes","$each_byte","$bytesize","$find","string_bytes","$Struct_new$1","$Struct_define_struct_attribute$6","$Struct_members$9","$Struct_inherited$10","$Struct_initialize$12","$Struct_members$15","$Struct_hash$16","$Struct_$$$17","$Struct_$$$eq$18","$Struct_$eq_eq$19","$Struct_eql$ques$20","$Struct_each$21","$Struct_each_pair$24","$Struct_length$27","$Struct_to_a$28","$Struct_inspect$30","$Struct_to_h$32","$Struct_values_at$34","$Struct_dig$36","keyword_init","$unshift","$define_struct_attribute","instance","$$data","$alias_method","$$keyword_init","$members","members","$to_sym","recursed1","recursed2","struct","$each_pair","h","$IO_tty$ques$1","$IO_closed$ques$2","$IO_write$3","$IO_flush$4","tty","closed","write_proc","$Writable_$lt$lt$5","$Writable_print$6","$Writable_puts$8","$write","$String","newline","$concat","$Readable_readbyte$10","$Readable_readchar$11","$Readable_readline$12","$Readable_readpartial$13","$getbyte","$getc","integer","outbuf","stdin","process","write","$extend","$to_s$1","$include$2","$chdir$1","$pwd$2","$home$3","dir","prev_cwd","windows_root_rx","$absolute_path$1","$expand_path$2","$dirname$3","$basename$4","$extname$5","$exist$ques$6","$directory$ques$7","$join$9","$split$12","$coerce_to_path","$to_path","$sep_chars","basedir","sep_chars","path_abs","basedir_abs","leading_sep","new_path","$pwd","home","home_path_regexp","$home","$absolute_path","absolute","filename","last_dot_idx","$basename","$rindex","files","$gsub","$each_with_index","next_item","$Process___register_clock__$1","$Process_pid$2","$Process_times$3","$Process_clock_gettime$4","monotonic","__clocks__","$__register_clock__","hrtime","hrtime_base","us","$now","clock_id","unit","clock","ms","$Signal_trap$5","$GC_start$6","$public$35","$private$36","warnings","handle_unsupported_feature","$String_$lt$lt$1","$String_capitalize$excl$2","$String_chomp$excl$3","$String_chop$excl$4","$String_downcase$excl$5","$String_gsub$excl$6","$String_lstrip$excl$7","$String_next$excl$8","$String_reverse$excl$9","$String_slice$excl$10","$String_squeeze$excl$11","$String_strip$excl$12","$String_sub$excl$13","$String_succ$excl$14","$String_swapcase$excl$15","$String_tr$excl$16","$String_tr_s$excl$17","$String_upcase$excl$18","$String_prepend$19","$String_$$$eq$20","$String_clear$21","$String_encode$excl$22","$String_unicode_normalize$excl$23","ERROR","$Kernel_freeze$24","$Kernel_frozen$ques$25","$Kernel_taint$26","$Kernel_untaint$27","$Kernel_tainted$ques$28","$Module_public$29","$Module_private_class_method$30","$Module_private_method_defined$ques$31","$Module_private_constant$32","$Kernel_private_methods$33","$Kernel_eval$34","moduleConfig","$File_read$1","xhr","XMLHttpRequest","open","addEventListener","responseText","overrideMimeType","platform","engine","framework","ioModule","runtime","$AbstractNode_read_contents$1","$AbstractNode_generate_data_uri_from_uri$2","document","target","opts","doc","$path_resolver","$web_path","$normalize_system_path","$read_asset","$base_dir","$logger","$prepare_source_string","$read","image_uri","cache_uri","contentType","b64encoded","binary","rawText","byteCode","btoa","getResponseHeader","endsWith","$OpenURI_open_uri$1","rest","$path","$PathResolver_root$ques$1","$PreprocessorReader_resolve_include_path$1","path_resolver","include_stack","attrlist","attributes","p_target","base_dir","inc_path","relpath","ctx_dir","top_level","$posixify","$attributes","$replace_next_line","$Set_$$$1","$Set_initialize$2","$Set_dup$4","$Set_$minus$5","$Set_inspect$6","$Set_$eq_eq$7","$Set_add$9","$Set_classify$10","$Set_collect$excl$13","$Set_delete$15","$Set_delete$ques$16","$Set_delete_if$17","$Set_add$ques$20","$Set_each$21","$Set_empty$ques$22","$Set_eql$ques$23","$Set_clear$25","$Set_include$ques$26","$Set_merge$27","$Set_replace$29","$Set_size$30","$Set_subtract$31","$Set_$$33","$Set_superset$ques$34","$Set_proper_superset$ques$36","$Set_subset$ques$38","$Set_proper_subset$ques$40","$Set_to_a$42","$add","$subtract","$instance_variable_get","$$12","$delete","$$19","$clear","$$28","$$39","$Enumerable_to_set$43","$Kernel_open$1","$Kernel___dir__$2","$File_initialize$1","$File_read$2","$File_each_line$3","$File_readlines$4","eof","flags","encoding_flag_regexp","contents","lineno","res","lines","$to_enum","$each_line","$readlines","$readlines$5","$file$ques$6","$readable$ques$7","$read$8","$IO_read$9","$MatchData_$$$eq$1","$String_limit_bytesize$1","$String_byteslice$2","$String_unpack$3","$byteslice","$_original_byteslice","$_original_unpack","$URI_parse$1","$URI_path$2","$Base64_decode64$1","$Base64_encode64$2","$Base64_strict_decode64$3","$Base64_strict_encode64$4","$Base64_urlsafe_decode64$5","$Base64_urlsafe_encode64$6","encode","decode","Buffer","atob","padding","$Number_round$1","toFixed","$Asciidoctor_unpack_hex_range$1","$unpack_hex_range","$StringScanner_initialize$1","$StringScanner_beginning_of_line$ques$2","$StringScanner_scan$3","$StringScanner_scan_until$4","$StringScanner_$$$5","$StringScanner_check$6","$StringScanner_check_until$7","$StringScanner_peek$8","$StringScanner_eos$ques$9","$StringScanner_exist$ques$10","$StringScanner_skip$11","$StringScanner_skip_until$12","$StringScanner_get_byte$13","$StringScanner_match$ques$14","$StringScanner_pos$eq$15","$StringScanner_matched_size$16","$StringScanner_post_match$17","$StringScanner_pre_match$18","$StringScanner_reset$19","$StringScanner_rest$20","$StringScanner_rest$ques$21","$StringScanner_rest_size$22","$StringScanner_terminate$23","$StringScanner_unscan$24","$StringScanner_anchor$25","working","matched","prev_pos","$anchor","substring","$scan_until","match_str","match_len","$rest","$private","$$1","$instance_method","$merge$2","acc","$MatchData_names$1","$Helpers_require_library$1","$Helpers_prepare_source_array$2","$Helpers_prepare_source_string$11","$Helpers_uriish$ques$16","$Helpers_encode_uri_component$17","$Helpers_encode_spaces_in_uri$18","$Helpers_rootname$19","$Helpers_basename$20","$Helpers_extname$ques$21","$Helpers_extname$22","$Helpers_extname$23","$Helpers_mkdir_p$24","$Helpers_int_to_roman$25","$Helpers_nextval$27","$Helpers_resolve_class$28","$Helpers_class_for_name$29","$module_function","gem_name","on_failure","details","$message","trim_end","$$5","leading_2_bytes","leading_bytes","$unpack","line","$encode","$rstrip","$encoding","encodeURIComponent","$index","drop_ext","$extname","fallback","parent_dir","$dirname","$mkdir_p","$mkdir","$private_constant","repeat","$divmod","intval","$class_for_name","qualified_name","resolved","$Logger$1","$Logger_initialize$4","$Logger_level$eq$5","$Logger_info$6","$Logger_debug$7","$Logger_warn$8","$Logger_error$9","$Logger_fatal$10","$Logger_unknown$11","$Logger_info$ques$12","$Logger_debug$ques$13","$Logger_warn$ques$14","$Logger_error$ques$15","$Logger_fatal$ques$16","$Logger_add$17","progname","pipe","formatter","$to_h","$Formatter_call$2","$Formatter_message_as_string$3","time","msg","$chr","$strftime","$message_as_string","$backtrace","$key","$Logger_initialize$1","$Logger_add$2","max_severity","$BasicFormatter_call$3","$AutoFormattingMessage_inspect$4","sloc","$MemoryLogger$5","$MemoryLogger_initialize$6","$MemoryLogger_add$7","$MemoryLogger_clear$8","$MemoryLogger_empty$ques$9","$MemoryLogger_max_severity$10","messages","$max","$NullLogger_initialize$12","$NullLogger_add$13","logger_class","$logger$14","$logger$eq$15","$memoize_logger$16","logger","$memoize_logger","new_logger","$Logging_included$17","$Logging_logger$18","$Logging_message_with_context$19","into","$private_class_method","text","$Asciidoctor$1","$Asciidoctor$2","$Substitutors_apply_subs$1","$Substitutors_apply_normal_subs$3","$Substitutors_apply_header_subs$4","$Substitutors_apply_reftext_subs$5","$Substitutors_sub_specialchars$6","$Substitutors_sub_quotes$7","$Substitutors_sub_attributes$10","$Substitutors_sub_replacements$16","$Substitutors_sub_macros$19","$Substitutors_sub_post_replacements$42","$Substitutors_sub_source$45","$Substitutors_sub_callouts$46","$Substitutors_highlight_source$48","$Substitutors_resolve_lines_to_highlight$49","$Substitutors_extract_passthroughs$52","$Substitutors_restore_passthroughs$56","$Substitutors_resolve_subs$58","$Substitutors_resolve_block_subs$60","$Substitutors_resolve_pass_subs$61","$Substitutors_expand_subs$62","$Substitutors_commit_subs$64","$Substitutors_parse_attributes$65","$Substitutors_extract_attributes_from_text$66","$Substitutors_extract_callouts$67","$Substitutors_restore_callouts$70","$Substitutors_extract_inner_passthrough$73","$Substitutors_convert_quoted_text$74","$Substitutors_do_replacement$75","$Substitutors_parse_quoted_text_attributes$76","$Substitutors_normalize_text$77","$Substitutors_split_simple_csv$78","$freeze","is_multiline","passthrus","clear_passthrus","passthroughs","passthroughs_locked","$extract_passthroughs","$sub_specialchars","$sub_quotes","$sub_attributes","$sub_replacements","$sub_macros","$highlight_source","$sub_callouts","$sub_post_replacements","$restore_passthroughs","$apply_subs","compat","$compat_mode","$convert_quoted_text","doc_attrs","drop","drop_line","drop_line_severity","drop_empty_line","attribute_undefined","attribute_missing","$shift","$store_attribute","$attribute_undefined","$downcase","$attribute_missing","$squeeze","restore","$do_replacement","found_square_bracket","found_colon","found_macroish","found_macroish_short","extensions","$extensions","$inline_macros","extension","$instance","$regexp","content","default_attrs","ext_config","inline_subs","$names","$config","$normalize_text","$parse_attributes","$process_method","$expand_subs","$text","$convert","delim_idx","delim","$strip","$compact","$min","$chop","menu","items","submenus","menuitem","it","$e","posattrs","attrs","$register","$tr","primary","see_also","term","encl_text","visible","see","subbed_term","terms","$parse","$lstrip","$split_simple_csv","$partition","link_opts","link_text","new_link_text","bare","$extract_attributes_from_text","mailto","mailto_text","$encode_uri_component","address","$style","reftext","refid","macro","fragment","hash_idx","fragment_len","src2src","$catalog","$info","$outfilesuffix","$natural_xrefs","$resolve_id","footnote","$footnotes","$id","$counter","process_callouts","callout_rx","autonum","$attr","$callouts","$read_next_id","syntax_hl_name","linenums_mode","source_offset","syntax_hl","callout_marks","start_line_number","highlight_lines","highlighted","$syntax_highlighter","$extract_callouts","$resolve_lines_to_highlight","$highlight","$restore_callouts","$sub_source","spec","$$50","entry","negate","$count","$$54","compat_mode","pass_inline_char1","pass_inline_char2","pass_inline_rx","boundary","escape_count","preceding","old_behavior","passthru_key","$parse_quoted_text_attributes","$resolve_pass_subs","quoted_text","escape_mark","format_mark","$extract_inner_passthrough","pass","subbed_text","$error","subject","modifiers_present","invalid","modifier_operation","resolved_keys","resolved_key","$drop","$resolve_subs","$$63","expanded_subs","sub_group","custom_subs","default_subs","content_model","style","$resolve_block_subs","$parse_into","default_text","resolved_text","last_lineno","preamble","conums","guard","numeral","guard_it","numeral_it","pre","unescaped_attrs","captured","roles","$shorthand_property_syntax","normalize_whitespace","unescape_closing_square_brackets","$$79","accum","quote_open","$AbstractNode_initialize$1","$AbstractNode_block$ques$2","$AbstractNode_inline$ques$3","$AbstractNode_converter$4","$AbstractNode_parent$eq$5","$AbstractNode_attr$6","$AbstractNode_attr$ques$7","$AbstractNode_set_attr$8","$AbstractNode_remove_attr$9","$AbstractNode_option$ques$10","$AbstractNode_set_option$11","$AbstractNode_enabled_options$12","$AbstractNode_update_attributes$15","$AbstractNode_role$16","$AbstractNode_roles$17","$AbstractNode_role$ques$18","$AbstractNode_has_role$ques$19","$AbstractNode_role$eq$20","$AbstractNode_add_role$21","$AbstractNode_remove_role$22","$AbstractNode_reftext$23","$AbstractNode_reftext$ques$24","$AbstractNode_icon_uri$25","$AbstractNode_image_uri$26","$AbstractNode_media_uri$27","$AbstractNode_generate_data_uri$28","$AbstractNode_generate_data_uri_from_uri$29","$AbstractNode_normalize_asset_path$31","$AbstractNode_normalize_system_path$32","$AbstractNode_normalize_web_path$33","$AbstractNode_read_asset$34","$AbstractNode_read_contents$35","$AbstractNode_is_uri$ques$38","$document","node_name","$converter","default_value","fallback_name","expected_value","overwrite","new_attributes","$update","$apply_reftext_subs","icon","$image_uri","target_image","asset_dir_key","images_base","$safe","$encode_spaces_in_uri","$normalize_web_path","$generate_data_uri_from_uri","$generate_data_uri","ext","mimetype","image_path","$strict_encode64","$binread","bindata","$require_library","$content_type","asset_ref","asset_name","autocorrect","jail","$system_path","preserve_uri_target","$AbstractBlock_initialize$1","$AbstractBlock_block$ques$2","$AbstractBlock_inline$ques$3","$AbstractBlock_file$4","$AbstractBlock_lineno$5","$AbstractBlock_convert$6","$AbstractBlock_content$7","$AbstractBlock_context$eq$9","$AbstractBlock_$lt$lt$10","$AbstractBlock_blocks$ques$11","$AbstractBlock_sections$ques$12","$AbstractBlock_number$13","$AbstractBlock_number$eq$14","$AbstractBlock_find_by$15","$AbstractBlock_next_adjacent_block$16","$AbstractBlock_sections$18","$AbstractBlock_alt$20","$AbstractBlock_caption$21","$AbstractBlock_captioned_title$22","$AbstractBlock_list_marker_keyword$23","$AbstractBlock_title$24","$AbstractBlock_title$ques$25","$AbstractBlock_title$eq$26","$AbstractBlock_sub$ques$27","$AbstractBlock_remove_sub$28","$AbstractBlock_xreftext$29","$AbstractBlock_assign_caption$30","$AbstractBlock_assign_numeral$31","$AbstractBlock_reindex_sections$32","$AbstractBlock_find_by_internal$34","source_location","blocks","next_section_index","caption","converted_title","title","next_section_ordinal","header","$attr_writer","$level","$file","$lineno","$playback_attributes","$parent","selector","p","sib","$context","$items","desc","$next_adjacent_block","$blocks","$find_index","$title","list_type","$apply_title_subs","xrefstyle","quoted_title","caption_attr_name","$reftext","$sub_placeholder","caption_context","attr_name","$increment_and_store_counter","section","like","sectname","$numbered","$sectname","$numeral","$int_to_roman","$assign_numeral","$reindex_sections","$protected","any_context","context_selector","style_selector","role_selector","id_selector","verdict","$rows","$head","$body","$foot","$inner_document","$$42","$AttributeList_initialize$1","$AttributeList_parse_into$2","$AttributeList_parse$3","$AttributeList_rekey$4","$AttributeList_rekey$5","$AttributeList_parse_attribute$7","$AttributeList_parse_attribute_value$9","$AttributeList_skip_blank$10","$AttributeList_skip_delimiter$11","$AttributeList_scan_name$12","$AttributeList_scan_to_delimiter$13","$AttributeList_scan_to_quote$14","scanner","delimiter","delimiter_skip_pattern","delimiter_boundary_pattern","positional_attrs","$parse_attribute","$skip_delimiter","$rekey","continue$","single_quoted","skipped","positional_attr_name","$skip_blank","$peek","$parse_attribute_value","$get_byte","$scan_name","$string","$unscan","$scan_to_delimiter","opt","quote","$scan_to_quote","$skip","$scan","$Block_initialize$1","$Block_content$2","$Block_source$3","$Block_to_s$4","raw_source","$commit_subs","content_summary","$Callouts_initialize$1","$Callouts_register$2","$Callouts_read_next_id$3","$Callouts_callout_ids$4","$Callouts_current_list$6","$Callouts_next_list$7","$Callouts_rewind$8","$Callouts_generate_next_callout_id$9","$Callouts_generate_callout_id$10","co_index","lists","list_index","$next_list","li_ordinal","$current_list","$generate_next_callout_id","$generate_callout_id","$Converter_initialize$1","$Converter_convert$2","$Converter_handles$ques$3","$Converter_derive_backend_traits$4","$Converter_included$28","$autoload","$__dir__","backend","node","transform","basebackend","outfilesuffix","filetype","$BackendTraits_basebackend$5","$BackendTraits_filetype$6","$BackendTraits_htmlsyntax$7","$BackendTraits_outfilesuffix$8","$BackendTraits_supports_templates$9","$BackendTraits_supports_templates$ques$10","$BackendTraits_init_backend_traits$11","$BackendTraits_backend_traits$12","$BackendTraits_derive_backend_traits$13","$backend_traits","backend_traits","$derive_backend_traits","$Config_register_for$14","backends","$Factory_new$16","$Factory_default$17","$Factory_create$18","$Factory_register$19","$Factory_for$21","$Factory_create$22","$Factory_converters$23","$Factory_registry$24","converters","proxy_default","$create","converter","$registry","template_dirs","delegate_backend","$for","$CustomFactory_initialize$25","$CustomFactory_unregister_all$26","seed_registry","registry","$DefaultFactory_registry$27","$Base_convert$29","$Base_handles$ques$30","$Base_content_only$31","$Base_skip$32","ex","$node_name","$receiver","$content","$Document$1","$Document_initialize$8","$Document_parse$11","$Document_parsed$ques$14","$Document_counter$15","$Document_increment_and_store_counter$16","$Document_register$17","$Document_resolve_id$18","$Document_footnotes$ques$22","$Document_footnotes$23","$Document_callouts$24","$Document_nested$ques$25","$Document_embedded$ques$26","$Document_extensions$ques$27","$Document_source$28","$Document_source_lines$29","$Document_basebackend$ques$30","$Document_title$31","$Document_title$eq$32","$Document_doctitle$33","$Document_xreftext$34","$Document_author$35","$Document_authors$36","$Document_revdate$37","$Document_notitle$38","$Document_noheader$39","$Document_nofooter$40","$Document_first_section$41","$Document_header$ques$43","$Document_$lt$lt$44","$Document_finalize_header$45","$Document_playback_attributes$46","$Document_restore_attributes$48","$Document_set_attribute$49","$Document_delete_attribute$50","$Document_attribute_locked$ques$51","$Document_set_header_attribute$52","$Document_convert$53","$Document_write$55","$Document_content$56","$Document_docinfo$57","$Document_docinfo_processors$ques$60","$Document_to_s$61","$Document_apply_attribute_value_subs$62","$Document_limit_bytesize$63","$Document_resolve_docinfo_subs$64","$Document_create_converter$65","$Document_clear_playback_attributes$66","$Document_save_attributes$67","$Document_fill_datetime_attributes$69","$Document_update_backend_attributes$70","$Document_update_doctype_attributes$71","safe","sourcemap","reader","parsed","parent_document","catalog","reftexts","header_attributes","attributes_modified","attribute_overrides","timings","docinfo_processor_extensions","max_attribute_value_size","doctype","$AttributeEntry_initialize$2","$AttributeEntry_save_to$3","block_attributes","$Title_initialize$4","$Title_sanitized$ques$5","$Title_subtitle$ques$6","$Title_to_s$7","sanitized","subtitle","combined","main","$rpartition","$f","$g","standalone","safe_mode_name","base_dir_val","parent_doc","attr_overrides","parent_doctype","initialize_extensions","to_file","safe_mode","input_mtime","backend_val","doctype_val","initial_backend","ext_registry","ext_block","$sourcemap","syntax_highlighter","$value_for_name","$name_for_value","$update_doctype_attributes","$cursor","$restore_attributes","$update_backend_attributes","$fill_datetime_attributes","$activate","$groups","exts","$preprocessors","$tree_processors","locked","curr_val","next_val","$nextval","counter_name","$save_to","$value","$logical_op_recvr_tmp_1","ref","resolved_id","$xreftext","xreftext","$source","$source_lines","$doctitle","sect","$first_section","authors","num_authors","unrooted_attributes","header_valid","$clear_playback_attributes","$save_attributes","$negate","$rewind","$apply_attribute_value_subs","$start","$doctype","$content_model","$postprocessors","$record","$write_alternate_pages","location","qualifier","docinfo","docinfo_file","docinfo_dir","docinfo_subs","docinfo_path","shared_docinfo","private_docinfo","$resolve_docinfo_subs","$docinfo_processors","$apply_header_subs","$limit_bytesize","converter_opts","doctitle_val","toc_val","toc_position_val","toc_placement_val","default_toc_position","default_toc_class","position","icons_val","syntax_hl_factory","syntax_hls","localtime","doctime","source_date_epoch","localdate","docdate","$utc","$year","$utc_offset","new_backend","init","current_backend","current_basebackend","current_doctype","actual_backend","new_basebackend","new_filetype","htmlsyntax","current_filetype","page_width","$create_converter","$basebackend","$filetype","$htmlsyntax","new_doctype","$Inline_initialize$1","$Inline_block$ques$2","$Inline_inline$ques$3","$Inline_convert$4","$Inline_alt$5","$Inline_reftext$ques$6","$Inline_reftext$7","$Inline_xreftext$8","$List_initialize$1","$List_outline$ques$2","$List_convert$3","$List_to_s$4","$ListItem_initialize$5","$ListItem_text$ques$6","$ListItem_text$7","$ListItem_simple$ques$8","$ListItem_compound$ques$9","$ListItem_fold_first$10","$ListItem_to_s$11","$Parser$1","$Parser$2","$Parser$3","$Parser_parse$4","$Parser_parse_document_header$5","$Parser_parse_manpage_header$6","$Parser_next_section$9","$Parser_next_block$10","$Parser_read_paragraph_lines$14","$Parser_is_delimited_block$ques$15","$Parser_build_block$16","$Parser_parse_blocks$17","$Parser_parse_list$18","$Parser_catalog_callouts$19","$Parser_catalog_inline_anchor$21","$Parser_catalog_inline_anchors$22","$Parser_catalog_inline_biblio_anchor$24","$Parser_parse_description_list$25","$Parser_parse_callout_list$26","$Parser_parse_list_item$27","$Parser_read_lines_for_list_item$28","$Parser_initialize_section$34","$Parser_is_next_line_section$ques$35","$Parser_is_next_line_doctitle$ques$36","$Parser_is_section_title$ques$37","$Parser_atx_section_title$ques$38","$Parser_setext_section_title$ques$39","$Parser_parse_section_title$40","$Parser_parse_header_metadata$41","$Parser_process_authors$46","$Parser_parse_block_metadata_lines$51","$Parser_parse_block_metadata_line$52","$Parser_process_attribute_entries$53","$Parser_process_attribute_entry$54","$Parser_store_attribute$55","$Parser_resolve_list_marker$56","$Parser_resolve_ordered_list_marker$57","$Parser_is_sibling_list_item$ques$59","$Parser_parse_table$60","$Parser_parse_colspecs$61","$Parser_parse_cellspec$65","$Parser_parse_style_attribute$66","$Parser_yield_buffered_attribute$69","$Parser_adjust_indentation$excl$70","$Parser_uniform$ques$79","$Parser_sanitize_attribute_name$80","new_section","$parse_document_header","$next_section","implicit_doctitle","block_attrs","doctitle_attr_val","l0_section_title","atx","doc_id","role","modified_attrs","$skip_blank_lines","$parse_block_metadata_lines","$finalize_header","$parse_section_title","$header","$parse_header_metadata","$parse_manpage_header","manvolnum","mantitle","manname","name_section_level","name_section","name_section_buffer","mannames","manpurpose","error_msg","$message_with_context","$cursor_at_line","$backend","$save","$initialize_section","$read_lines_until","$restore_save","$discard_save","intro","has_header","book","current_level","expected_next_level","expected_next_level_alt","next_level","expected_condition","block_cursor","new_block","first_block","child_block","$special","$next_block","$unwrap_standalone_preamble","block_id","text_only","block_extensions","block_macro_extensions","this_line","block_context","cloaked_context","terminator","delimited_block","indented","md_syntax","ch0","layout_break_chars","blk_ctx","blk_attrs","expanded_target","scaledwidth","block_title","report_unknown_block_macro","float_id","float_reftext","float_level","content_adjacent","admonition_name","credit_line","attribution","citetitle","language","comma_idx","block_reader","$parse_block_metadata_line","$mark","$read_line","$terminator","$masq","$debug","$cursor_at_mark","$strict_verbatim_paragraphs","$unshift_line","$markdown_syntax","$assign_caption","old_v","$parse_callout_list","$parse_list","$parse_description_list","$underline_style_section_titles","$peek_line","$generate_id","$read_paragraph_lines","$post_match","$build_block","$catalog_inline_anchors","$parse_table","$update_attributes","$catalog_callouts","$remove_sub","break_at_list","break_condition","$block_terminates_paragraph","return_match_data","masq","line_len","tip","tip_len","skip_processing","parse_as_content_model","tab_size","indent","$lines","$parse_blocks","list_block","list_rx","list_item","$parse_list_item","found","$pre_match","$advance","sibling_pattern","current_pair","next_pair","callouts","next_index","coids","$callout_ids","sibling_trait","dlist","list_term","term_text","item_text","has_text","sourcemap_assignment_deferred","ordinal","implicit_style","list_item_reader","comment_lines","subsequent_line","$catalog_inline_anchor","$catalog_inline_biblio_anchor","$set_option","$resolve_ordered_list_marker","$read_lines_for_list_item","$skip_line_comments","$unshift_lines","$fold_first","continuation","within_nested_list","detached_continuation","prev_line","nested_list_type","last_line","ctx","sect_id","sect_reftext","sect_atx","sect_style","sect_title","sect_level","sect_name","sect_special","sect_numbered","generated_id","next_lines","$peek_lines","leveloffset","line1","line2","line2_ch0","line2_len","$cursor_at_prev_line","implicit_authors","metadata","implicit_author","implicit_authorinitials","author_metadata","rev_metadata","rev_line","component","author_line","author_idx","author_key","explicit","sparse","author_override","$process_attribute_entries","$process_authors","author","name_idx","names_only","multiple","author_entry","$$48","key_map","segments","fname","mname","lname","next_line","normal","current_style","$parse_style_attribute","$process_attribute_entry","$skip_comment_lines","con","keep_open","resolved_value","$sanitize_attribute_name","$set_attribute","$delete_attribute","marker","validate","$ord","$resolve_list_marker","table_reader","table","colspecs","explicit_colspecs","implicit_header","parser_ctx","loop_idx","implicit_header_boundary","beyond_first","next_cellspec","cell_text","$logical_op_recvr_tmp_2","$parse_colspecs","$create_columns","$close_open_cell","$parse_cellspec","$delimiter","$match_delimiter","$buffer","$keep_cell_open","$close_cell","$skip_past_delimiter","$skip_past_escaped_delimiter","$push_cellspec","$columns","$assign_column_widths","$partition_header_footer","records","specs","record","$$64","colspec","rowspec","spec_part","raw_style","parsed_attrs","parsed_style","existing_role","$yield_buffered_attribute","indent_size","full_tab_space","block_indent","new_block_indent","tab_idx","leading_tabs","spaces_added","spaces","line_indent","$PathResolver_initialize$1","$PathResolver_absolute_path$ques$2","$PathResolver_root$ques$3","$PathResolver_unc$ques$4","$PathResolver_web_root$ques$5","$PathResolver_descends_from$ques$6","$PathResolver_relative_path$7","$PathResolver_posixify$8","$PathResolver_expand_path$9","$PathResolver_partition_path$11","$PathResolver_join_path$12","$PathResolver_system_path$13","$PathResolver_web_path$16","$PathResolver_extract_uri_prefix$18","file_separator","_partition_path_web","_partition_path_sys","working_dir","$relative_path_from","path_segments","path_root","resolved_segments","$partition_path","segment","$join_path","web","posix_path","root","target_path","target_segments","jail_segments","jail_root","recheck","start_segments","start_root","unresolved_segments","warned","uri_prefix","target_root","resolved_path","$extract_uri_prefix","$Reader_initialize$4","$Reader_has_more_lines$ques$5","$Reader_empty$ques$6","$Reader_next_line_empty$ques$7","$Reader_peek_line$8","$Reader_peek_lines$9","$Reader_read_line$11","$Reader_read_lines$12","$Reader_read$13","$Reader_advance$14","$Reader_unshift_line$15","$Reader_unshift_lines$16","$Reader_replace_next_line$17","$Reader_skip_blank_lines$18","$Reader_skip_comment_lines$19","$Reader_skip_line_comments$20","$Reader_terminate$21","$Reader_read_lines_until$22","$Reader_shift$23","$Reader_unshift$24","$Reader_unshift_all$25","$Reader_unshift_all$27","$Reader_cursor$28","$Reader_cursor_at_line$29","$Reader_cursor_at_mark$30","$Reader_cursor_before_mark$31","$Reader_cursor_at_prev_line$32","$Reader_mark$33","$Reader_line_info$34","$Reader_lines$35","$Reader_string$36","$Reader_source$37","$Reader_save$38","$Reader_restore_save$41","$Reader_discard_save$43","$Reader_to_s$44","$Reader_prepare_lines$45","$Reader_process_line$46","look_ahead","unescape_next_line","process_lines","mark","source_lines","saved","$Cursor_initialize$1","$Cursor_advance$2","$Cursor_line_info$3","cursor","$dir","$prepare_lines","unterminated","direct","$process_line","old_look_ahead","$unshift_all","$read_lines","line_to_restore","lines_to_restore","num_skipped","skip_comments","restore_process_lines","start_cursor","break_on_blank_lines","break_on_list_continuation","line_read","line_restored","m_file","m_dir","m_path","m_lineno","$instance_variables","$instance_variable_set","$prepare_source_array","$PreprocessorReader_initialize$47","$PreprocessorReader_has_more_lines$ques$48","$PreprocessorReader_empty$ques$49","$PreprocessorReader_peek_line$50","$PreprocessorReader_push_include$51","$PreprocessorReader_include_depth$52","$PreprocessorReader_exceeds_max_depth$ques$53","$PreprocessorReader_shift$54","$PreprocessorReader_include_processors$ques$55","$PreprocessorReader_create_include_cursor$56","$PreprocessorReader_to_s$57","$PreprocessorReader_prepare_lines$59","$PreprocessorReader_process_line$60","$PreprocessorReader_preprocess_conditional_directive$61","$PreprocessorReader_preprocess_include_directive$66","$PreprocessorReader_resolve_include_path$79","$PreprocessorReader_pop_include$81","$PreprocessorReader_split_delimited_value$82","$PreprocessorReader_skip_front_matter$excl$83","$PreprocessorReader_resolve_expr_val$84","maxdepth","includes","include_processor_extensions","skipping","conditional_stack","default_include_depth","$pop_include","rel_maxdepth","curr_maxdepth","abs_maxdepth","$rootname","$include_processors","inc","front_matter","$preprocess_conditional_directive","$preprocess_include_directive","keyword","no_target","pair","skip","op","$resolve_expr_val","attr_missing","target_type","read_mode","read_mode_params","inc_linenos","inc_tags","tag","inc_lines","inc_offset","inc_lineno","tag_stack","tags_used","active_tag","select","base_select","wildcard","missing_tags","inc_content","$resolve_include_path","$method","$split_delimited_value","linedef","$uniq","tagdef","select_remaining","$push_include","dbl_co","dbl_sb","this_tag","include_cursor","$create_include_cursor","$delete_at","tag_name","tag_lineno","$relative_path","increment_linenos","original_data","quoted","$Section_initialize$1","$Section_generate_id$2","$Section_sectnum$3","$Section_xreftext$4","$Section_$lt$lt$5","$Section_to_s$6","$Section_generate_id$7","numbered","special","append","$sectnum","signifier","formal_title","no_sep","sep_sub","gen_id","ids","candidate_id","$tr_s","$unique_id_start_index","$Stylesheets_instance$1","$Stylesheets_primary_stylesheet_name$2","$Stylesheets_primary_stylesheet_data$3","$Stylesheets_embed_primary_stylesheet$4","$Stylesheets_write_primary_stylesheet$5","$Stylesheets_coderay_stylesheet_name$6","$Stylesheets_coderay_stylesheet_data$7","$Stylesheets_embed_coderay_stylesheet$8","$Stylesheets_write_coderay_stylesheet$9","$Stylesheets_pygments_stylesheet_name$10","$Stylesheets_pygments_stylesheet_data$11","$Stylesheets_embed_pygments_stylesheet$12","$Stylesheets_write_pygments_stylesheet$13","primary_stylesheet_data","__instance__","$primary_stylesheet_data","target_dir","$primary_stylesheet_name","$stylesheet_basename","$read_stylesheet","$coderay_stylesheet_data","$coderay_stylesheet_name","$pygments_stylesheet_data","$pygments_stylesheet_name","$Table_initialize$4","$Table_header_row$ques$5","$Table_create_columns$6","$Table_assign_column_widths$8","$Table_partition_header_footer$12","has_header_option","rows","columns","$Rows_initialize$1","$Rows_by_section$2","$Rows_to_h$3","foot","pcwidth","pcwidth_intval","abswidth_val","num_cols","cols","autowidth_cols","width_base","colwidth","precision","total_width","col_pcwidth","autowidth","autowidth_attrs","col","$assign_width","num_body_rows","cell","$reinitialize","$Column_initialize$15","$Column_assign_width$16","$Column_block$ques$17","$Column_inline$ques$18","col_abswidth","$Cell_initialize$19","$Cell_reinitialize$20","$Cell_catalog_inline_anchor$21","$Cell_text$22","$Cell_content$23","$Cell_lines$25","$Cell_source$26","$Cell_file$27","$Cell_lineno$28","$Cell_to_s$29","reinitialize_args","inner_document","colspan","rowspan","column","in_header_row","cell_style","asciidoc","inner_document_cursor","lines_advanced","literal","normal_psv","parent_doctitle","inner_document_lines","unprocessed_line1","preprocessed_lines","$table","para","$ParserContext_initialize$30","$ParserContext_starts_with_delimiter$ques$31","$ParserContext_match_delimiter$32","$ParserContext_skip_past_delimiter$33","$ParserContext_skip_past_escaped_delimiter$34","$ParserContext_buffer_has_unclosed_quotes$ques$35","$ParserContext_take_cellspec$36","$ParserContext_push_cellspec$37","$ParserContext_keep_cell_open$38","$ParserContext_mark_cell_closed$39","$ParserContext_cell_open$ques$40","$ParserContext_cell_closed$ques$41","$ParserContext_close_open_cell$42","$ParserContext_close_cell$43","$ParserContext_close_row$46","$ParserContext_activate_rowspan$47","$ParserContext_end_of_row$ques$49","$ParserContext_effective_column_visits$50","$ParserContext_advance$51","delimiter_rx","cellspecs","cell_open","start_cursor_data","current_row","colcount","column_visits","active_rowspans","linenum","$to_set","xsv","q","qq","trailing_quote","cellspec","eol","$take_cellspec","extra_cols","$cursor_before_mark","$rowspan","$activate_rowspan","$colspan","$close_row","$effective_column_visits","$Writer_write$1","$VoidWriter_write$2","$load$1","$load_file$8","input_path","wrapped_e","$ancestors","$mtime","$set_backtrace","$stack_trace","$load","$convert$1","$convert_file$2","to_dir","mkdirs","write_to_target","sibling_path","stream_output","outdir","outfile","stylesdir","stylesheet","copy_asciidoctor_stylesheet","copy_user_stylesheet","copy_syntax_hl_stylesheet","stylesoutdir","stylesheet_src","stylesheet_dest","stylesheet_data","stylesheet_outdir","$write_primary_stylesheet","$write_stylesheet","$HighlightJsAdapter_initialize$1","$HighlightJsAdapter_format$2","$HighlightJsAdapter_docinfo$ques$4","$HighlightJsAdapter_docinfo$5","$register_for","pre_class","lang","base_url","$SyntaxHighlighter_initialize$1","$SyntaxHighlighter_docinfo$ques$2","$SyntaxHighlighter_docinfo$3","$SyntaxHighlighter_highlight$ques$4","$SyntaxHighlighter_highlight$5","$SyntaxHighlighter_format$6","$SyntaxHighlighter_write_stylesheet$ques$7","$SyntaxHighlighter_write_stylesheet$8","$SyntaxHighlighter_included$9","$Config_register_for$10","$Factory_register$12","$Factory_for$14","$Factory_create$15","$Factory_registry$16","$CustomFactory_initialize$17","$DefaultFactory_registry$18","$Base_format$19","class_attr_val","$Timings_initialize$1","$Timings_start$2","$Timings_record$3","$Timings_time$4","$Timings_read$6","$Timings_parse$7","$Timings_read_parse$8","$Timings_convert$9","$Timings_read_parse_convert$10","$Timings_write$11","$Timings_total$12","$Timings_print_report$13","$Timings_now$14","$Timings_now$15","timers","sum","$time","$sprintf","$read_parse","$read_parse_convert","$clock_gettime","$CompositeConverter_initialize$1","$CompositeConverter_convert$4","$CompositeConverter_converter_for$5","$CompositeConverter_find_converter$6","converter_cache","backend_traits_source","$composed","$init_backend_traits","$find_converter","$converter_for","$Html5Converter_initialize$1","$Html5Converter_convert$2","$Html5Converter_convert_document$3","$Html5Converter_convert_embedded$6","$Html5Converter_convert_outline$8","$Html5Converter_convert_section$10","$Html5Converter_convert_admonition$11","$Html5Converter_convert_audio$12","$Html5Converter_convert_colist$13","$Html5Converter_convert_dlist$16","$Html5Converter_convert_example$23","$Html5Converter_convert_floating_title$24","$Html5Converter_convert_image$25","$Html5Converter_convert_listing$26","$Html5Converter_convert_literal$27","$Html5Converter_convert_stem$28","$Html5Converter_convert_olist$30","$Html5Converter_convert_open$32","$Html5Converter_convert_page_break$33","$Html5Converter_convert_paragraph$34","$Html5Converter_convert_preamble$35","$Html5Converter_convert_quote$36","$Html5Converter_convert_thematic_break$37","$Html5Converter_convert_sidebar$38","$Html5Converter_convert_table$39","$Html5Converter_convert_toc$44","$Html5Converter_convert_ulist$45","$Html5Converter_convert_verse$47","$Html5Converter_convert_video$48","$Html5Converter_convert_inline_anchor$49","$Html5Converter_convert_inline_break$50","$Html5Converter_convert_inline_button$51","$Html5Converter_convert_inline_callout$52","$Html5Converter_convert_inline_footnote$53","$Html5Converter_convert_inline_image$54","$Html5Converter_convert_inline_indexterm$56","$Html5Converter_convert_inline_kbd$57","$Html5Converter_convert_inline_menu$58","$Html5Converter_convert_inline_quoted$59","$Html5Converter_read_svg_contents$60","$Html5Converter_append_boolean_attribute$62","$Html5Converter_append_link_constraint_attrs$63","$Html5Converter_encode_attribute_value$64","$Html5Converter_generate_manname_section$65","$Html5Converter_get_root_document$66","$Html5Converter_method_missing$67","$Html5Converter_respond_to_missing$ques$68","void_element_slash","xml_mode","refs","resolving_xref","syntax","$convert_inline_quoted","$convert_paragraph","$convert_inline_anchor","$convert_section","$convert_listing","$convert_literal","$convert_ulist","$convert_olist","$convert_dlist","$convert_admonition","$convert_colist","$convert_embedded","$convert_example","$convert_floating_title","$convert_image","$convert_inline_break","$convert_inline_button","$convert_inline_callout","$convert_inline_footnote","$convert_inline_image","$convert_inline_indexterm","$convert_inline_kbd","$convert_inline_menu","$convert_open","$convert_page_break","$convert_preamble","$convert_quote","$convert_sidebar","$convert_stem","$convert_table","$convert_thematic_break","$convert_verse","$convert_video","$convert_document","$convert_toc","$convert_pass","$convert_audio","br","slash","cdn_base_url","linkcss","max_width_attr","lang_attribute","id_attr","sectioned","asset_uri_scheme","icon_href","icon_type","icon_ext","webfonts","iconfont_stylesheet","syntax_hl_docinfo_head_idx","docinfo_content","classes","eqnums_val","eqnums_opt","$read_contents","$docinfo","$role","$noheader","$generate_manname_section","$notitle","$authors","$email","$nofooter","toc_p","sectnumlevels","toclevels","sections","$sections","slevel","stitle","child_toc_level","$caption","$captioned_title","$convert_outline","title_element","label","$icon_uri","xml","id_attribute","class_attribute","start_t","end_t","time_anchor","$media_uri","$append_boolean_attribute","font_icons","num_label","col_style_attribute","dt_style_attribute","dd","dt","first_term","summary_element","width_attr","height_attr","svg","img","$read_svg_contents","$alt","$encode_attribute_value","$append_link_constraint_attrs","nowrap","pre_open","pre_close","close","equation","type_attribute","start_attribute","reversed_attribute","$list_marker_keyword","title_el","toc","cite_element","attribution_element","stripes","style_attribute","frame","styles","tablewidth","tsec","cell_tag_name","cell_class_attribute","cell_colspan_attribute","cell_rowspan_attribute","cell_style_attribute","cell_content","levels","title_id_attr","checklist","div_classes","marker_checked","marker_unchecked","ul_class_attribute","width_attribute","height_attribute","start_anchor","autoplay_param","loop_param","muted_param","rel_param_val","start_param","end_param","has_loop_param","mute_param","controls_param","fs_param","fs_attribute","modest_param","theme_param","hl_param","list_param","playlist","poster_attribute","preload_attribute","outer","$type","$get_root_document","$target","title_attr","caret","submenu_joiner","class_attr","old_start_tag","new_start_tag","start_tag_match","dim","rel","manname_title","next_section","next_section_title","manname_id","$parent_document","$Processor_initialize$4","$Processor_update_config$5","$Processor_process$6","$Processor_create_section$7","$Processor_create_block$8","$Processor_create_list$9","$Processor_create_list_item$10","$Processor_create_image_block$11","$Processor_create_inline$12","$Processor_parse_content$13","$Processor_parse_attributes$14","$Processor$15","$config$1","$option$2","$enable_dsl$3","$create_block","delegate_method_name","$ProcessorDsl_option$17","$ProcessorDsl_process$18","$ProcessorDsl_process_block_given$ques$20","process_block","$binding","m_args","$DocumentProcessorDsl_prefer$21","$option","$SyntaxProcessorDsl_named$22","$SyntaxProcessorDsl_content_model$23","$SyntaxProcessorDsl_positional_attributes$24","$SyntaxProcessorDsl_default_attributes$25","$SyntaxProcessorDsl_resolve_attributes$26","$Preprocessor_process$29","$TreeProcessor_process$30","$Postprocessor_process$31","$IncludeProcessor_process$32","$IncludeProcessor_handles$ques$33","$IncludeProcessorDsl_handles$ques$34","handles_block","$DocinfoProcessor_initialize$35","$DocinfoProcessor_process$36","$DocinfoProcessorDsl_at_location$37","$BlockProcessor_initialize$38","$BlockProcessor_process$39","$BlockProcessorDsl_contexts$40","$MacroProcessor_initialize$41","$MacroProcessor_process$42","$MacroProcessorDsl_resolve_attributes$43","$BlockMacroProcessor_name$44","$InlineMacroProcessor_regexp$45","$InlineMacroProcessor_resolve_regexp$46","$resolve_regexp","$InlineMacroProcessorDsl_format$47","$InlineMacroProcessorDsl_match$48","$Extension_initialize$49","kind","$ProcessorExtension_initialize$50","process_method","$Group_activate$52","$register$51","$Registry_initialize$53","$Registry_activate$54","$Registry_preprocessor$56","$Registry_preprocessors$ques$57","$Registry_preprocessors$58","$Registry_tree_processor$59","$Registry_tree_processors$ques$60","$Registry_tree_processors$61","$Registry_postprocessor$62","$Registry_postprocessors$ques$63","$Registry_postprocessors$64","$Registry_include_processor$65","$Registry_include_processors$ques$66","$Registry_include_processors$67","$Registry_docinfo_processor$68","$Registry_docinfo_processors$ques$69","$Registry_docinfo_processors$71","$Registry_block$73","$Registry_blocks$ques$74","$Registry_registered_for_block$ques$75","$Registry_find_block_extension$76","$Registry_block_macro$77","$Registry_block_macros$ques$78","$Registry_registered_for_block_macro$ques$79","$Registry_find_block_macro_extension$80","$Registry_inline_macro$81","$Registry_inline_macros$ques$82","$Registry_registered_for_inline_macro$ques$83","$Registry_find_inline_macro_extension$84","$Registry_inline_macros$85","$Registry_prefer$86","$Registry_add_document_processor$87","$Registry_add_syntax_processor$89","$Registry_resolve_args$91","$Registry_as_symbol$92","groups","preprocessor_extensions","tree_processor_extensions","postprocessor_extensions","inline_macro_extensions","ext_groups","arg0","extensions_store","$kind","$$88","kind_class_symbol","kind_name","kind_class","kind_java_class","kind_store","processor","processor_class","processor_instance","$capitalize","$resolve_args","$enable_dsl","$resolve_class","$update_config","$$90","$as_symbol","expect","missing","$generate_name$93","$next_auto_id$94","$groups$95","$create$96","$register$97","$unregister_all$98","$unregister$99","$next_auto_id","auto_id","$generate_name","resolved_group","$$100","$Stylesheets_primary_stylesheet_data$1","$Document_fill_datetime_attributes$1","utc_offset","getYear","getUTCFullYear","getFullYear","getMonth","getUTCMonth","getDay","getUTCDate","getDate","getHours","getUTCHours","setTime","getTimezoneOffset","localyear","now_year","now_month","now_day","utc_offset_format","hours","minutes","getMinutes","getSeconds","localdatetime","mtime_year","mtime_month","mtime_day","mtime_hours","mtime_minutes","mtime_seconds","$Substitutors_sub_placeholder$1","format_string","$Parser_uniform$ques$1","$Parser_uniform$ques$2","$Factory_for$1","$Formatter_call$1","time_format","getMilliseconds","$Asciidoctor$7","$Asciidoctor$9","$Asciidoctor$11","$Asciidoctor$13","$SafeMode$1","$SafeMode$2","$SafeMode_value_for_name$3","$SafeMode_name_for_value$4","$SafeMode_names$5","names_by_value","$mlhs_tmp1","$mlhs_tmp2","$define$6","$define","$insert","toHash","fromHash","stringMap","stringMapKey","stringMapValue","numericMap","positional","numericMapKey","numericMapValue","$positional","fromHashKeys","prepareOptions","initializeClass","superClass","className","functions","defaultFunctions","argProxyFunctions","postConstructFunction","initializeFunction","constructorFunction","initialize","defaultFunctionsOverridden","functionName","userFunction","argumentsList","defaultFunctionName","defaultFunction","Asciidoctor","getCoreVersion","VERSION","getRuntime","convert","convertFile","$convert_file","loadFile","$load_file","AbstractBlock","$append","getTitle","setTitle","assignCaption","captionContext","getCaptionedTitle","getStyle","setStyle","getSourceLocation","sourceLocation","getFile","getDirectory","getPath","getLineNumber","getCaption","setCaption","getLevel","getSubstitutions","hasSubstitution","substitution","removeSubstitution","hasBlocks","getBlocks","getContent","findBy","$find_by","hasSections","getSections","getNumeral","setNumeral","hasTitle","getAlt","Section","setLevel","getIndex","setIndex","getSectionName","setSectionName","isSpecial","setSpecial","isNumbered","getName","Block","getSource","getSourceLines","AbstractNode","applySubstitutions","resolveSubstitutions","resolveBlockSubstitutions","resolvePassSubstitutions","getNodeName","getAttributes","getAttribute","defaultValue","fallbackName","hasAttribute","isAttribute","expectedValue","setAttribute","$set_attr","removeAttribute","$remove_attr","getDocument","getParent","isInline","isBlock","isRole","getRole","hasRole","getRoles","$roles","addRole","$add_role","removeRole","$remove_role","isReftext","getReftext","getContext","getId","setId","isOption","setOption","getIconUri","getMediaUri","assetDirKey","getImageUri","targetImage","getConverter","readContents","readAsset","normalizeWebPath","preserveTargetUri","normalizeSystemPath","normalizeAssetPath","assetRef","assetName","autoCorrect","$normalize_asset_path","Document","getRefs","getImages","images","getLinks","links","hasFootnotes","getFootnotes","getHeader","getAuthor","$author","isNested","isEmbedded","hasExtensions","getDoctype","getBackend","isBasebackend","getDocumentTitle","doctitle","getDoctitle","getCatalog","getReferences","getRevisionDate","getRevdate","getRevisionNumber","getRevisionRemark","setHeaderAttribute","$set_header_attribute","getAuthors","Footnote","getText","ImageReference","getTarget","getImagesDirectory","imagesdir","Author","getFirstName","firstName","firstname","getMiddleName","middleName","middlename","getLastName","lastName","lastname","getInitials","initials","getEmail","email","RevisionInfo","date","remark","getNumber","getRemark","isEmpty","SafeMode","getValueForName","getNameForValue","getNames","Callouts","readNextId","getCalloutIds","getLists","getListIndex","getCurrentList","currentList","nextList","$nextList","rewind","getRevisionInfo","hasRevisionInfo","getNotitle","getNoheader","getNofooter","hasHeader","playbackAttributes","blockAttributes","attrEntries","isArray","attrEntryObject","deleteAttribute","isAttributeLocked","restoreAttributes","parse","getDocinfo","docinfoLocation","hasDocinfoProcessors","incrementAndStoreCounter","counterName","counterIncrement","counter","getSafe","getCompatMode","getSourcemap","setSourcemap","getCounters","getCallouts","getBaseDir","getOptions","getOutfilesuffix","getParentDocument","parentDocument","getReader","getExtensions","Title","getMain","getCombined","getSubtitle","isSanitized","hasSubtitle","Inline","getType","List","hasItems","getItems","ListItem","setText","hasText","getMarker","setMarker","getList","$list","Reader","pushInclude","getCursor","getLines","getString","hasMoreLines","peekLine","readLine","readLines","read","advance","Cursor","LoggerManager","getLogger","setLogger","newLogger","add","messageObject","initializeLoggerClass","newFormatter","Logger","initializeLoggerFormatterClass","LoggerSeverity","get","LoggerFormatter","programName","MemoryLogger","getMessages","getSeverity","Logging","createLogMessage","getMaxSeverity","getFormatter","setFormatter","getProgramName","setProgramName","RubyLogger","severityValue","debug","info","fatal","isDebugEnabled","isInfoEnabled","isWarnEnabled","isErrorEnabled","isFatalEnabled","NullLogger","StopIteration","Timings","printReport","outputFunction","SyntaxHighlighter","properties","propertyIdx","propertyName","SyntaxHighlighterBase","highlight","callout","for","registerFor","Table","getRows","getColumns","getHeadRows","hasHeadRows","getBodyRows","hasBodyRows","getFootRows","hasFootRows","hasHeaderOption","hasFooterOption","hasAutowidthOption","getRowCount","setRowCount","getColumnCount","setColumnCount","Rows","getHead","getFoot","getBody","bySection","Column","getColumnNumber","getWidth","getHorizontalAlign","getVerticalAlign","Cell","cellText","getColumnSpan","setColumnSpan","getRowSpan","setRowSpan","getColumn","$column","getColumnPercentageWidth","getInnerDocument","innerDocument","TemplateConverter","Converter","templateDirectories","template_cache","getCache","caches","scans","templates","clearCache","$clear_caches","templateName","handles","getTemplates","$templates","template","TemplateEngine","templateEngineAdapter","toBlock","registerExtension","Extensions","getGroups","unregisterAll","$unregister_all","unregister","groupNameIdx","groupSymbolNames","groupSymbolName","groupStringName","Registry","prefer","$prefer","inlineMacro","includeProcessor","blockMacro","treeProcessor","postprocessor","preprocessor","docinfoProcessor","hasPreprocessors","hasTreeProcessors","hasIncludeProcessors","hasPostprocessors","hasBlockMacros","hasInlineMacros","getPreprocessors","getTreeProcessors","getIncludeProcessors","getPostprocessors","getDocinfoProcessors","getBlockMacros","getInlineMacros","getInlineMacroFor","getBlockFor","$find_block_extension","getBlockMacroFor","Processor","prepend","blockProxy","Proxy","thisArg","named","$named","createBlock","createList","$create_list","createListItem","$create_list_item","createImageBlock","$create_image_block","createParagraph","$create_paragraph","createOpenBlock","$create_open_block","createExampleBlock","$create_example_block","createPassBlock","$create_pass_block","createListingBlock","$create_listing_block","createLiteralBlock","$create_literal_block","createAnchor","$create_anchor","createInlinePass","$create_inline_pass","createInline","$create_inline","parseContent","$parse_content","parseAttributes","positionalAttributes","$positional_attrs","resolveAttributes","$resolves_attributes","resolvesAttributes","getConfig","option","BlockProcessor","defaultAttributes","$default_attributes","onContext","$on_context","onContexts","contexts","$on_contexts","parseContentAs","$parse_content_as","BlockMacroProcessor","InlineMacroProcessor","matchFormat","$match_format","IncludeProcessor","TreeProcessor","Postprocessor","Preprocessor","DocinfoProcessor","initializeProcessorClass","superclassName","atLocation","$at_location","createPostprocessor","newPostprocessor","createPreprocessor","newPreprocessor","createTreeProcessor","newTreeProcessor","createIncludeProcessor","newIncludeProcessor","createDocinfoProcessor","newDocinfoProcessor","createBlockProcessor","newBlockProcessor","createInlineMacroProcessor","newInlineMacroProcessor","createBlockMacroProcessor","newBlockMacroProcessor","ConverterFactory","Factory","ConverterBase","Base","ConverterBackendTraits","BackendTraits","assignBackendTraitsToInstance","backendTraits","supports_templates","buildBackendTraitsFromObject","bridgeHandlesMethodToInstance","bridgeMethodToInstance","bridgeComposedMethodToInstance","methodName","defaultImplementation","addRespondToMethod","propertyNames","super","getDefault","getRegistry","internalRegistry","DefaultFactory","html5","Html5Converter","getVersion","exports"],"mappings":"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","file":"files_readmemd-asciidoctor.js?v=ae2ebe7b00c6a8793810","sourcesContent":["/**\n * @license Asciidoctor.js 2.2.5 | MIT | https://github.com/asciidoctor/asciidoctor.js\n */\n(function(undefined) {\n  // @note\n  //   A few conventions for the documentation of this file:\n  //   1. Always use \"//\" (in contrast with \"/**/\")\n  //   2. The syntax used is Yardoc (yardoc.org), which is intended for Ruby (se below)\n  //   3. `@param` and `@return` types should be preceded by `JS.` when referring to\n  //      JavaScript constructors (e.g. `JS.Function`) otherwise Ruby is assumed.\n  //   4. `nil` and `null` being unambiguous refer to the respective\n  //      objects/values in Ruby and JavaScript\n  //   5. This is still WIP :) so please give feedback and suggestions on how\n  //      to improve or for alternative solutions\n  //\n  //   The way the code is digested before going through Yardoc is a secret kept\n  //   in the docs repo (https://github.com/opal/docs/tree/master).\n\n  var global_object = this, console;\n\n  // Detect the global object\n  if (typeof(global) !== 'undefined') { global_object = global; }\n  if (typeof(window) !== 'undefined') { global_object = window; }\n\n  // Setup a dummy console object if missing\n  if (typeof(global_object.console) === 'object') {\n    console = global_object.console;\n  } else if (global_object.console == null) {\n    console = global_object.console = {};\n  } else {\n    console = {};\n  }\n\n  if (!('log' in console)) { console.log = function () {}; }\n  if (!('warn' in console)) { console.warn = console.log; }\n\n  if (typeof(global_object.Opal) !== 'undefined') {\n    console.warn('Opal already loaded. Loading twice can cause troubles, please fix your setup.');\n    return global_object.Opal;\n  }\n\n  var nil;\n\n  // The actual class for BasicObject\n  var BasicObject;\n\n  // The actual Object class.\n  // The leading underscore is to avoid confusion with window.Object()\n  var _Object;\n\n  // The actual Module class\n  var Module;\n\n  // The actual Class class\n  var Class;\n\n  // The Opal object that is exposed globally\n  var Opal = this.Opal = {};\n\n  // This is a useful reference to global object inside ruby files\n  Opal.global = global_object;\n  global_object.Opal = Opal;\n\n  // Configure runtime behavior with regards to require and unsupported fearures\n  Opal.config = {\n    missing_require_severity: 'error',        // error, warning, ignore\n    unsupported_features_severity: 'warning', // error, warning, ignore\n    enable_stack_trace: true                  // true, false\n  }\n\n  // Minify common function calls\n  var $hasOwn       = Object.hasOwnProperty;\n  var $bind         = Function.prototype.bind;\n  var $setPrototype = Object.setPrototypeOf;\n  var $slice        = Array.prototype.slice;\n  var $splice       = Array.prototype.splice;\n\n  // Nil object id is always 4\n  var nil_id = 4;\n\n  // Generates even sequential numbers greater than 4\n  // (nil_id) to serve as unique ids for ruby objects\n  var unique_id = nil_id;\n\n  // Return next unique id\n  Opal.uid = function() {\n    unique_id += 2;\n    return unique_id;\n  };\n\n  // Retrieve or assign the id of an object\n  Opal.id = function(obj) {\n    if (obj.$$is_number) return (obj * 2)+1;\n    if (obj.$$id != null) {\n      return obj.$$id;\n    };\n    $defineProperty(obj, '$$id', Opal.uid());\n    return obj.$$id;\n  };\n\n  // Globals table\n  Opal.gvars = {};\n\n  // Exit function, this should be replaced by platform specific implementation\n  // (See nodejs and chrome for examples)\n  Opal.exit = function(status) { if (Opal.gvars.DEBUG) console.log('Exited with status '+status); };\n\n  // keeps track of exceptions for $!\n  Opal.exceptions = [];\n\n  // @private\n  // Pops an exception from the stack and updates `$!`.\n  Opal.pop_exception = function() {\n    Opal.gvars[\"!\"] = Opal.exceptions.pop() || nil;\n  }\n\n  // Inspect any kind of object, including non Ruby ones\n  Opal.inspect = function(obj) {\n    if (obj === undefined) {\n      return \"undefined\";\n    }\n    else if (obj === null) {\n      return \"null\";\n    }\n    else if (!obj.$$class) {\n      return obj.toString();\n    }\n    else {\n      return obj.$inspect();\n    }\n  }\n\n  function $defineProperty(object, name, initialValue) {\n    if (typeof(object) === \"string\") {\n      // Special case for:\n      //   s = \"string\"\n      //   def s.m; end\n      // String class is the only class that:\n      // + compiles to JS primitive\n      // + allows method definition directly on instances\n      // numbers, true, false and nil do not support it.\n      object[name] = initialValue;\n    } else {\n      Object.defineProperty(object, name, {\n        value: initialValue,\n        enumerable: false,\n        configurable: true,\n        writable: true\n      });\n    }\n  }\n\n  Opal.defineProperty = $defineProperty;\n\n  Opal.slice = $slice;\n\n\n  // Truth\n  // -----\n\n  Opal.truthy = function(val) {\n    return (val !== nil && val != null && (!val.$$is_boolean || val == true));\n  };\n\n  Opal.falsy = function(val) {\n    return (val === nil || val == null || (val.$$is_boolean && val == false))\n  };\n\n\n  // Constants\n  // ---------\n  //\n  // For future reference:\n  // - The Rails autoloading guide (http://guides.rubyonrails.org/v5.0/autoloading_and_reloading_constants.html)\n  // - @ConradIrwin's 2012 post on “Everything you ever wanted to know about constant lookup in Ruby” (http://cirw.in/blog/constant-lookup.html)\n  //\n  // Legend of MRI concepts/names:\n  // - constant reference (cref): the module/class that acts as a namespace\n  // - nesting: the namespaces wrapping the current scope, e.g. nesting inside\n  //            `module A; module B::C; end; end` is `[B::C, A]`\n\n  // Get the constant in the scope of the current cref\n  function const_get_name(cref, name) {\n    if (cref) return cref.$$const[name];\n  }\n\n  // Walk up the nesting array looking for the constant\n  function const_lookup_nesting(nesting, name) {\n    var i, ii, result, constant;\n\n    if (nesting.length === 0) return;\n\n    // If the nesting is not empty the constant is looked up in its elements\n    // and in order. The ancestors of those elements are ignored.\n    for (i = 0, ii = nesting.length; i < ii; i++) {\n      constant = nesting[i].$$const[name];\n      if (constant != null) return constant;\n    }\n  }\n\n  // Walk up the ancestors chain looking for the constant\n  function const_lookup_ancestors(cref, name) {\n    var i, ii, result, ancestors;\n\n    if (cref == null) return;\n\n    ancestors = Opal.ancestors(cref);\n\n    for (i = 0, ii = ancestors.length; i < ii; i++) {\n      if (ancestors[i].$$const && $hasOwn.call(ancestors[i].$$const, name)) {\n        return ancestors[i].$$const[name];\n      }\n    }\n  }\n\n  // Walk up Object's ancestors chain looking for the constant,\n  // but only if cref is missing or a module.\n  function const_lookup_Object(cref, name) {\n    if (cref == null || cref.$$is_module) {\n      return const_lookup_ancestors(_Object, name);\n    }\n  }\n\n  // Call const_missing if nothing else worked\n  function const_missing(cref, name, skip_missing) {\n    if (!skip_missing) {\n      return (cref || _Object).$const_missing(name);\n    }\n  }\n\n  // Look for the constant just in the current cref or call `#const_missing`\n  Opal.const_get_local = function(cref, name, skip_missing) {\n    var result;\n\n    if (cref == null) return;\n\n    if (cref === '::') cref = _Object;\n\n    if (!cref.$$is_module && !cref.$$is_class) {\n      throw new Opal.TypeError(cref.toString() + \" is not a class/module\");\n    }\n\n    result = const_get_name(cref, name);              if (result != null) return result;\n    result = const_missing(cref, name, skip_missing); if (result != null) return result;\n  }\n\n  // Look for the constant relative to a cref or call `#const_missing` (when the\n  // constant is prefixed by `::`).\n  Opal.const_get_qualified = function(cref, name, skip_missing) {\n    var result, cache, cached, current_version = Opal.const_cache_version;\n\n    if (cref == null) return;\n\n    if (cref === '::') cref = _Object;\n\n    if (!cref.$$is_module && !cref.$$is_class) {\n      throw new Opal.TypeError(cref.toString() + \" is not a class/module\");\n    }\n\n    if ((cache = cref.$$const_cache) == null) {\n      $defineProperty(cref, '$$const_cache', Object.create(null));\n      cache = cref.$$const_cache;\n    }\n    cached = cache[name];\n\n    if (cached == null || cached[0] !== current_version) {\n      ((result = const_get_name(cref, name))              != null) ||\n      ((result = const_lookup_ancestors(cref, name))      != null);\n      cache[name] = [current_version, result];\n    } else {\n      result = cached[1];\n    }\n\n    return result != null ? result : const_missing(cref, name, skip_missing);\n  };\n\n  // Initialize the top level constant cache generation counter\n  Opal.const_cache_version = 1;\n\n  // Look for the constant in the open using the current nesting and the nearest\n  // cref ancestors or call `#const_missing` (when the constant has no :: prefix).\n  Opal.const_get_relative = function(nesting, name, skip_missing) {\n    var cref = nesting[0], result, current_version = Opal.const_cache_version, cache, cached;\n\n    if ((cache = nesting.$$const_cache) == null) {\n      $defineProperty(nesting, '$$const_cache', Object.create(null));\n      cache = nesting.$$const_cache;\n    }\n    cached = cache[name];\n\n    if (cached == null || cached[0] !== current_version) {\n      ((result = const_get_name(cref, name))              != null) ||\n      ((result = const_lookup_nesting(nesting, name))     != null) ||\n      ((result = const_lookup_ancestors(cref, name))      != null) ||\n      ((result = const_lookup_Object(cref, name))         != null);\n\n      cache[name] = [current_version, result];\n    } else {\n      result = cached[1];\n    }\n\n    return result != null ? result : const_missing(cref, name, skip_missing);\n  };\n\n  // Register the constant on a cref and opportunistically set the name of\n  // unnamed classes/modules.\n  Opal.const_set = function(cref, name, value) {\n    if (cref == null || cref === '::') cref = _Object;\n\n    if (value.$$is_a_module) {\n      if (value.$$name == null || value.$$name === nil) value.$$name = name;\n      if (value.$$base_module == null) value.$$base_module = cref;\n    }\n\n    cref.$$const = (cref.$$const || Object.create(null));\n    cref.$$const[name] = value;\n\n    // Add a short helper to navigate constants manually.\n    // @example\n    //   Opal.$$.Regexp.$$.IGNORECASE\n    cref.$$ = cref.$$const;\n\n    Opal.const_cache_version++;\n\n    // Expose top level constants onto the Opal object\n    if (cref === _Object) Opal[name] = value;\n\n    // Name new class directly onto current scope (Opal.Foo.Baz = klass)\n    $defineProperty(cref, name, value);\n\n    return value;\n  };\n\n  // Get all the constants reachable from a given cref, by default will include\n  // inherited constants.\n  Opal.constants = function(cref, inherit) {\n    if (inherit == null) inherit = true;\n\n    var module, modules = [cref], module_constants, i, ii, constants = {}, constant;\n\n    if (inherit) modules = modules.concat(Opal.ancestors(cref));\n    if (inherit && cref.$$is_module) modules = modules.concat([Opal.Object]).concat(Opal.ancestors(Opal.Object));\n\n    for (i = 0, ii = modules.length; i < ii; i++) {\n      module = modules[i];\n\n      // Don not show Objects constants unless we're querying Object itself\n      if (cref !== _Object && module == _Object) break;\n\n      for (constant in module.$$const) {\n        constants[constant] = true;\n      }\n    }\n\n    return Object.keys(constants);\n  };\n\n  // Remove a constant from a cref.\n  Opal.const_remove = function(cref, name) {\n    Opal.const_cache_version++;\n\n    if (cref.$$const[name] != null) {\n      var old = cref.$$const[name];\n      delete cref.$$const[name];\n      return old;\n    }\n\n    if (cref.$$autoload != null && cref.$$autoload[name] != null) {\n      delete cref.$$autoload[name];\n      return nil;\n    }\n\n    throw Opal.NameError.$new(\"constant \"+cref+\"::\"+cref.$name()+\" not defined\");\n  };\n\n\n  // Modules & Classes\n  // -----------------\n\n  // A `class Foo; end` expression in ruby is compiled to call this runtime\n  // method which either returns an existing class of the given name, or creates\n  // a new class in the given `base` scope.\n  //\n  // If a constant with the given name exists, then we check to make sure that\n  // it is a class and also that the superclasses match. If either of these\n  // fail, then we raise a `TypeError`. Note, `superclass` may be null if one\n  // was not specified in the ruby code.\n  //\n  // We pass a constructor to this method of the form `function ClassName() {}`\n  // simply so that classes show up with nicely formatted names inside debuggers\n  // in the web browser (or node/sprockets).\n  //\n  // The `scope` is the current `self` value where the class is being created\n  // from. We use this to get the scope for where the class should be created.\n  // If `scope` is an object (not a class/module), we simple get its class and\n  // use that as the scope instead.\n  //\n  // @param scope        [Object] where the class is being created\n  // @param superclass  [Class,null] superclass of the new class (may be null)\n  // @param id          [String] the name of the class to be created\n  // @param constructor [JS.Function] function to use as constructor\n  //\n  // @return new [Class]  or existing ruby class\n  //\n  Opal.allocate_class = function(name, superclass) {\n    var klass, constructor;\n\n    if (superclass != null && superclass.$$bridge) {\n      // Inheritance from bridged classes requires\n      // calling original JS constructors\n      constructor = function() {\n        var args = $slice.call(arguments),\n            self = new ($bind.apply(superclass.$$constructor, [null].concat(args)))();\n\n        // and replacing a __proto__ manually\n        $setPrototype(self, klass.$$prototype);\n        return self;\n      }\n    } else {\n      constructor = function(){};\n    }\n\n    if (name) {\n      $defineProperty(constructor, 'displayName', '::'+name);\n    }\n\n    klass = constructor;\n\n    $defineProperty(klass, '$$name', name);\n    $defineProperty(klass, '$$constructor', constructor);\n    $defineProperty(klass, '$$prototype', constructor.prototype);\n    $defineProperty(klass, '$$const', {});\n    $defineProperty(klass, '$$is_class', true);\n    $defineProperty(klass, '$$is_a_module', true);\n    $defineProperty(klass, '$$super', superclass);\n    $defineProperty(klass, '$$cvars', {});\n    $defineProperty(klass, '$$own_included_modules', []);\n    $defineProperty(klass, '$$own_prepended_modules', []);\n    $defineProperty(klass, '$$ancestors', []);\n    $defineProperty(klass, '$$ancestors_cache_version', null);\n\n    $defineProperty(klass.$$prototype, '$$class', klass);\n\n    // By default if there are no singleton class methods\n    // __proto__ is Class.prototype\n    // Later singleton methods generate a singleton_class\n    // and inject it into ancestors chain\n    if (Opal.Class) {\n      $setPrototype(klass, Opal.Class.prototype);\n    }\n\n    if (superclass != null) {\n      $setPrototype(klass.$$prototype, superclass.$$prototype);\n\n      if (superclass.$$meta) {\n        // If superclass has metaclass then we have explicitely inherit it.\n        Opal.build_class_singleton_class(klass);\n      }\n    };\n\n    return klass;\n  }\n\n\n  function find_existing_class(scope, name) {\n    // Try to find the class in the current scope\n    var klass = const_get_name(scope, name);\n\n    // If the class exists in the scope, then we must use that\n    if (klass) {\n      // Make sure the existing constant is a class, or raise error\n      if (!klass.$$is_class) {\n        throw Opal.TypeError.$new(name + \" is not a class\");\n      }\n\n      return klass;\n    }\n  }\n\n  function ensureSuperclassMatch(klass, superclass) {\n    if (klass.$$super !== superclass) {\n      throw Opal.TypeError.$new(\"superclass mismatch for class \" + klass.$$name);\n    }\n  }\n\n  Opal.klass = function(scope, superclass, name) {\n    var bridged;\n\n    if (scope == null) {\n      // Global scope\n      scope = _Object;\n    } else if (!scope.$$is_class && !scope.$$is_module) {\n      // Scope is an object, use its class\n      scope = scope.$$class;\n    }\n\n    // If the superclass is not an Opal-generated class then we're bridging a native JS class\n    if (superclass != null && !superclass.hasOwnProperty('$$is_class')) {\n      bridged = superclass;\n      superclass = _Object;\n    }\n\n    var klass = find_existing_class(scope, name);\n\n    if (klass) {\n      if (superclass) {\n        // Make sure existing class has same superclass\n        ensureSuperclassMatch(klass, superclass);\n      }\n      return klass;\n    }\n\n    // Class doesn't exist, create a new one with given superclass...\n\n    // Not specifying a superclass means we can assume it to be Object\n    if (superclass == null) {\n      superclass = _Object;\n    }\n\n    // Create the class object (instance of Class)\n    klass = Opal.allocate_class(name, superclass);\n    Opal.const_set(scope, name, klass);\n\n    // Call .inherited() hook with new class on the superclass\n    if (superclass.$inherited) {\n      superclass.$inherited(klass);\n    }\n\n    if (bridged) {\n      Opal.bridge(bridged, klass);\n    }\n\n    return klass;\n  }\n\n  // Define new module (or return existing module). The given `scope` is basically\n  // the current `self` value the `module` statement was defined in. If this is\n  // a ruby module or class, then it is used, otherwise if the scope is a ruby\n  // object then that objects real ruby class is used (e.g. if the scope is the\n  // main object, then the top level `Object` class is used as the scope).\n  //\n  // If a module of the given name is already defined in the scope, then that\n  // instance is just returned.\n  //\n  // If there is a class of the given name in the scope, then an error is\n  // generated instead (cannot have a class and module of same name in same scope).\n  //\n  // Otherwise, a new module is created in the scope with the given name, and that\n  // new instance is returned back (to be referenced at runtime).\n  //\n  // @param  scope [Module, Class] class or module this definition is inside\n  // @param  id   [String] the name of the new (or existing) module\n  //\n  // @return [Module]\n  Opal.allocate_module = function(name) {\n    var constructor = function(){};\n    if (name) {\n      $defineProperty(constructor, 'displayName', name+'.$$constructor');\n    }\n\n    var module = constructor;\n\n    if (name)\n      $defineProperty(constructor, 'displayName', name+'.constructor');\n\n    $defineProperty(module, '$$name', name);\n    $defineProperty(module, '$$prototype', constructor.prototype);\n    $defineProperty(module, '$$const', {});\n    $defineProperty(module, '$$is_module', true);\n    $defineProperty(module, '$$is_a_module', true);\n    $defineProperty(module, '$$cvars', {});\n    $defineProperty(module, '$$iclasses', []);\n    $defineProperty(module, '$$own_included_modules', []);\n    $defineProperty(module, '$$own_prepended_modules', []);\n    $defineProperty(module, '$$ancestors', [module]);\n    $defineProperty(module, '$$ancestors_cache_version', null);\n\n    $setPrototype(module, Opal.Module.prototype);\n\n    return module;\n  }\n\n  function find_existing_module(scope, name) {\n    var module = const_get_name(scope, name);\n    if (module == null && scope === _Object) module = const_lookup_ancestors(_Object, name);\n\n    if (module) {\n      if (!module.$$is_module && module !== _Object) {\n        throw Opal.TypeError.$new(name + \" is not a module\");\n      }\n    }\n\n    return module;\n  }\n\n  Opal.module = function(scope, name) {\n    var module;\n\n    if (scope == null) {\n      // Global scope\n      scope = _Object;\n    } else if (!scope.$$is_class && !scope.$$is_module) {\n      // Scope is an object, use its class\n      scope = scope.$$class;\n    }\n\n    module = find_existing_module(scope, name);\n\n    if (module) {\n      return module;\n    }\n\n    // Module doesnt exist, create a new one...\n    module = Opal.allocate_module(name);\n    Opal.const_set(scope, name, module);\n\n    return module;\n  }\n\n  // Return the singleton class for the passed object.\n  //\n  // If the given object alredy has a singleton class, then it will be stored on\n  // the object as the `$$meta` property. If this exists, then it is simply\n  // returned back.\n  //\n  // Otherwise, a new singleton object for the class or object is created, set on\n  // the object at `$$meta` for future use, and then returned.\n  //\n  // @param object [Object] the ruby object\n  // @return [Class] the singleton class for object\n  Opal.get_singleton_class = function(object) {\n    if (object.$$meta) {\n      return object.$$meta;\n    }\n\n    if (object.hasOwnProperty('$$is_class')) {\n      return Opal.build_class_singleton_class(object);\n    } else if (object.hasOwnProperty('$$is_module')) {\n      return Opal.build_module_singletin_class(object);\n    } else {\n      return Opal.build_object_singleton_class(object);\n    }\n  };\n\n  // Build the singleton class for an existing class. Class object are built\n  // with their singleton class already in the prototype chain and inheriting\n  // from their superclass object (up to `Class` itself).\n  //\n  // NOTE: Actually in MRI a class' singleton class inherits from its\n  // superclass' singleton class which in turn inherits from Class.\n  //\n  // @param klass [Class]\n  // @return [Class]\n  Opal.build_class_singleton_class = function(klass) {\n    var superclass, meta;\n\n    if (klass.$$meta) {\n      return klass.$$meta;\n    }\n\n    // The singleton_class superclass is the singleton_class of its superclass;\n    // but BasicObject has no superclass (its `$$super` is null), thus we\n    // fallback on `Class`.\n    superclass = klass === BasicObject ? Class : Opal.get_singleton_class(klass.$$super);\n\n    meta = Opal.allocate_class(null, superclass, function(){});\n\n    $defineProperty(meta, '$$is_singleton', true);\n    $defineProperty(meta, '$$singleton_of', klass);\n    $defineProperty(klass, '$$meta', meta);\n    $setPrototype(klass, meta.$$prototype);\n    // Restoring ClassName.class\n    $defineProperty(klass, '$$class', Opal.Class);\n\n    return meta;\n  };\n\n  Opal.build_module_singletin_class = function(mod) {\n    if (mod.$$meta) {\n      return mod.$$meta;\n    }\n\n    var meta = Opal.allocate_class(null, Opal.Module, function(){});\n\n    $defineProperty(meta, '$$is_singleton', true);\n    $defineProperty(meta, '$$singleton_of', mod);\n    $defineProperty(mod, '$$meta', meta);\n    $setPrototype(mod, meta.$$prototype);\n    // Restoring ModuleName.class\n    $defineProperty(mod, '$$class', Opal.Module);\n\n    return meta;\n  }\n\n  // Build the singleton class for a Ruby (non class) Object.\n  //\n  // @param object [Object]\n  // @return [Class]\n  Opal.build_object_singleton_class = function(object) {\n    var superclass = object.$$class,\n        klass = Opal.allocate_class(nil, superclass, function(){});\n\n    $defineProperty(klass, '$$is_singleton', true);\n    $defineProperty(klass, '$$singleton_of', object);\n\n    delete klass.$$prototype.$$class;\n\n    $defineProperty(object, '$$meta', klass);\n\n    $setPrototype(object, object.$$meta.$$prototype);\n\n    return klass;\n  };\n\n  Opal.is_method = function(prop) {\n    return (prop[0] === '$' && prop[1] !== '$');\n  }\n\n  Opal.instance_methods = function(mod) {\n    var exclude = [], results = [], ancestors = Opal.ancestors(mod);\n\n    for (var i = 0, l = ancestors.length; i < l; i++) {\n      var ancestor = ancestors[i],\n          proto = ancestor.$$prototype;\n\n      if (proto.hasOwnProperty('$$dummy')) {\n        proto = proto.$$define_methods_on;\n      }\n\n      var props = Object.getOwnPropertyNames(proto);\n\n      for (var j = 0, ll = props.length; j < ll; j++) {\n        var prop = props[j];\n\n        if (Opal.is_method(prop)) {\n          var method_name = prop.slice(1),\n              method = proto[prop];\n\n          if (method.$$stub && exclude.indexOf(method_name) === -1) {\n            exclude.push(method_name);\n          }\n\n          if (!method.$$stub && results.indexOf(method_name) === -1 && exclude.indexOf(method_name) === -1) {\n            results.push(method_name);\n          }\n        }\n      }\n    }\n\n    return results;\n  }\n\n  Opal.own_instance_methods = function(mod) {\n    var results = [],\n        proto = mod.$$prototype;\n\n    if (proto.hasOwnProperty('$$dummy')) {\n      proto = proto.$$define_methods_on;\n    }\n\n    var props = Object.getOwnPropertyNames(proto);\n\n    for (var i = 0, length = props.length; i < length; i++) {\n      var prop = props[i];\n\n      if (Opal.is_method(prop)) {\n        var method = proto[prop];\n\n        if (!method.$$stub) {\n          var method_name = prop.slice(1);\n          results.push(method_name);\n        }\n      }\n    }\n\n    return results;\n  }\n\n  Opal.methods = function(obj) {\n    return Opal.instance_methods(Opal.get_singleton_class(obj));\n  }\n\n  Opal.own_methods = function(obj) {\n    return Opal.own_instance_methods(Opal.get_singleton_class(obj));\n  }\n\n  Opal.receiver_methods = function(obj) {\n    var mod = Opal.get_singleton_class(obj);\n    var singleton_methods = Opal.own_instance_methods(mod);\n    var instance_methods = Opal.own_instance_methods(mod.$$super);\n    return singleton_methods.concat(instance_methods);\n  }\n\n  // Returns an object containing all pairs of names/values\n  // for all class variables defined in provided +module+\n  // and its ancestors.\n  //\n  // @param module [Module]\n  // @return [Object]\n  Opal.class_variables = function(module) {\n    var ancestors = Opal.ancestors(module),\n        i, length = ancestors.length,\n        result = {};\n\n    for (i = length - 1; i >= 0; i--) {\n      var ancestor = ancestors[i];\n\n      for (var cvar in ancestor.$$cvars) {\n        result[cvar] = ancestor.$$cvars[cvar];\n      }\n    }\n\n    return result;\n  }\n\n  // Sets class variable with specified +name+ to +value+\n  // in provided +module+\n  //\n  // @param module [Module]\n  // @param name [String]\n  // @param value [Object]\n  Opal.class_variable_set = function(module, name, value) {\n    var ancestors = Opal.ancestors(module),\n        i, length = ancestors.length;\n\n    for (i = length - 2; i >= 0; i--) {\n      var ancestor = ancestors[i];\n\n      if ($hasOwn.call(ancestor.$$cvars, name)) {\n        ancestor.$$cvars[name] = value;\n        return value;\n      }\n    }\n\n    module.$$cvars[name] = value;\n\n    return value;\n  }\n\n  function isRoot(proto) {\n    return proto.hasOwnProperty('$$iclass') && proto.hasOwnProperty('$$root');\n  }\n\n  function own_included_modules(module) {\n    var result = [], mod, proto = Object.getPrototypeOf(module.$$prototype);\n\n    while (proto) {\n      if (proto.hasOwnProperty('$$class')) {\n        // superclass\n        break;\n      }\n      mod = protoToModule(proto);\n      if (mod) {\n        result.push(mod);\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    return result;\n  }\n\n  function own_prepended_modules(module) {\n    var result = [], mod, proto = Object.getPrototypeOf(module.$$prototype);\n\n    if (module.$$prototype.hasOwnProperty('$$dummy')) {\n      while (proto) {\n        if (proto === module.$$prototype.$$define_methods_on) {\n          break;\n        }\n\n        mod = protoToModule(proto);\n        if (mod) {\n          result.push(mod);\n        }\n\n        proto = Object.getPrototypeOf(proto);\n      }\n    }\n\n    return result;\n  }\n\n\n  // The actual inclusion of a module into a class.\n  //\n  // ## Class `$$parent` and `iclass`\n  //\n  // To handle `super` calls, every class has a `$$parent`. This parent is\n  // used to resolve the next class for a super call. A normal class would\n  // have this point to its superclass. However, if a class includes a module\n  // then this would need to take into account the module. The module would\n  // also have to then point its `$$parent` to the actual superclass. We\n  // cannot modify modules like this, because it might be included in more\n  // then one class. To fix this, we actually insert an `iclass` as the class'\n  // `$$parent` which can then point to the superclass. The `iclass` acts as\n  // a proxy to the actual module, so the `super` chain can then search it for\n  // the required method.\n  //\n  // @param module [Module] the module to include\n  // @param includer [Module] the target class to include module into\n  // @return [null]\n  Opal.append_features = function(module, includer) {\n    var module_ancestors = Opal.ancestors(module);\n    var iclasses = [];\n\n    if (module_ancestors.indexOf(includer) !== -1) {\n      throw Opal.ArgumentError.$new('cyclic include detected');\n    }\n\n    for (var i = 0, length = module_ancestors.length; i < length; i++) {\n      var ancestor = module_ancestors[i], iclass = create_iclass(ancestor);\n      $defineProperty(iclass, '$$included', true);\n      iclasses.push(iclass);\n    }\n    var includer_ancestors = Opal.ancestors(includer),\n        chain = chain_iclasses(iclasses),\n        start_chain_after,\n        end_chain_on;\n\n    if (includer_ancestors.indexOf(module) === -1) {\n      // first time include\n\n      // includer -> chain.first -> ...chain... -> chain.last -> includer.parent\n      start_chain_after = includer.$$prototype;\n      end_chain_on = Object.getPrototypeOf(includer.$$prototype);\n    } else {\n      // The module has been already included,\n      // we don't need to put it into the ancestors chain again,\n      // but this module may have new included modules.\n      // If it's true we need to copy them.\n      //\n      // The simplest way is to replace ancestors chain from\n      //          parent\n      //            |\n      //   `module` iclass (has a $$root flag)\n      //            |\n      //   ...previos chain of module.included_modules ...\n      //            |\n      //  \"next ancestor\" (has a $$root flag or is a real class)\n      //\n      // to\n      //          parent\n      //            |\n      //    `module` iclass (has a $$root flag)\n      //            |\n      //   ...regenerated chain of module.included_modules\n      //            |\n      //   \"next ancestor\" (has a $$root flag or is a real class)\n      //\n      // because there are no intermediate classes between `parent` and `next ancestor`.\n      // It doesn't break any prototypes of other objects as we don't change class references.\n\n      var proto = includer.$$prototype, parent = proto, module_iclass = Object.getPrototypeOf(parent);\n\n      while (module_iclass != null) {\n        if (isRoot(module_iclass) && module_iclass.$$module === module) {\n          break;\n        }\n\n        parent = module_iclass;\n        module_iclass = Object.getPrototypeOf(module_iclass);\n      }\n\n      var next_ancestor = Object.getPrototypeOf(module_iclass);\n\n      // skip non-root iclasses (that were recursively included)\n      while (next_ancestor.hasOwnProperty('$$iclass') && !isRoot(next_ancestor)) {\n        next_ancestor = Object.getPrototypeOf(next_ancestor);\n      }\n\n      start_chain_after = parent;\n      end_chain_on = next_ancestor;\n    }\n\n    $setPrototype(start_chain_after, chain.first);\n    $setPrototype(chain.last, end_chain_on);\n\n    // recalculate own_included_modules cache\n    includer.$$own_included_modules = own_included_modules(includer);\n\n    Opal.const_cache_version++;\n  }\n\n  Opal.prepend_features = function(module, prepender) {\n    // Here we change the ancestors chain from\n    //\n    //   prepender\n    //      |\n    //    parent\n    //\n    // to:\n    //\n    // dummy(prepender)\n    //      |\n    //  iclass(module)\n    //      |\n    // iclass(prepender)\n    //      |\n    //    parent\n    var module_ancestors = Opal.ancestors(module);\n    var iclasses = [];\n\n    if (module_ancestors.indexOf(prepender) !== -1) {\n      throw Opal.ArgumentError.$new('cyclic prepend detected');\n    }\n\n    for (var i = 0, length = module_ancestors.length; i < length; i++) {\n      var ancestor = module_ancestors[i], iclass = create_iclass(ancestor);\n      $defineProperty(iclass, '$$prepended', true);\n      iclasses.push(iclass);\n    }\n\n    var chain = chain_iclasses(iclasses),\n        dummy_prepender = prepender.$$prototype,\n        previous_parent = Object.getPrototypeOf(dummy_prepender),\n        prepender_iclass,\n        start_chain_after,\n        end_chain_on;\n\n    if (dummy_prepender.hasOwnProperty('$$dummy')) {\n      // The module already has some prepended modules\n      // which means that we don't need to make it \"dummy\"\n      prepender_iclass = dummy_prepender.$$define_methods_on;\n    } else {\n      // Making the module \"dummy\"\n      prepender_iclass = create_dummy_iclass(prepender);\n      flush_methods_in(prepender);\n      $defineProperty(dummy_prepender, '$$dummy', true);\n      $defineProperty(dummy_prepender, '$$define_methods_on', prepender_iclass);\n\n      // Converting\n      //   dummy(prepender) -> previous_parent\n      // to\n      //   dummy(prepender) -> iclass(prepender) -> previous_parent\n      $setPrototype(dummy_prepender, prepender_iclass);\n      $setPrototype(prepender_iclass, previous_parent);\n    }\n\n    var prepender_ancestors = Opal.ancestors(prepender);\n\n    if (prepender_ancestors.indexOf(module) === -1) {\n      // first time prepend\n\n      start_chain_after = dummy_prepender;\n\n      // next $$root or prepender_iclass or non-$$iclass\n      end_chain_on = Object.getPrototypeOf(dummy_prepender);\n      while (end_chain_on != null) {\n        if (\n          end_chain_on.hasOwnProperty('$$root') ||\n          end_chain_on === prepender_iclass ||\n          !end_chain_on.hasOwnProperty('$$iclass')\n        ) {\n          break;\n        }\n\n        end_chain_on = Object.getPrototypeOf(end_chain_on);\n      }\n    } else {\n      throw Opal.RuntimeError.$new(\"Prepending a module multiple times is not supported\");\n    }\n\n    $setPrototype(start_chain_after, chain.first);\n    $setPrototype(chain.last, end_chain_on);\n\n    // recalculate own_prepended_modules cache\n    prepender.$$own_prepended_modules = own_prepended_modules(prepender);\n\n    Opal.const_cache_version++;\n  }\n\n  function flush_methods_in(module) {\n    var proto = module.$$prototype,\n        props = Object.getOwnPropertyNames(proto);\n\n    for (var i = 0; i < props.length; i++) {\n      var prop = props[i];\n      if (Opal.is_method(prop)) {\n        delete proto[prop];\n      }\n    }\n  }\n\n  function create_iclass(module) {\n    var iclass = create_dummy_iclass(module);\n\n    if (module.$$is_module) {\n      module.$$iclasses.push(iclass);\n    }\n\n    return iclass;\n  }\n\n  // Dummy iclass doesn't receive updates when the module gets a new method.\n  function create_dummy_iclass(module) {\n    var iclass = {},\n        proto = module.$$prototype;\n\n    if (proto.hasOwnProperty('$$dummy')) {\n      proto = proto.$$define_methods_on;\n    }\n\n    var props = Object.getOwnPropertyNames(proto),\n        length = props.length, i;\n\n    for (i = 0; i < length; i++) {\n      var prop = props[i];\n      $defineProperty(iclass, prop, proto[prop]);\n    }\n\n    $defineProperty(iclass, '$$iclass', true);\n    $defineProperty(iclass, '$$module', module);\n\n    return iclass;\n  }\n\n  function chain_iclasses(iclasses) {\n    var length = iclasses.length, first = iclasses[0];\n\n    $defineProperty(first, '$$root', true);\n\n    if (length === 1) {\n      return { first: first, last: first };\n    }\n\n    var previous = first;\n\n    for (var i = 1; i < length; i++) {\n      var current = iclasses[i];\n      $setPrototype(previous, current);\n      previous = current;\n    }\n\n\n    return { first: iclasses[0], last: iclasses[length - 1] };\n  }\n\n  // For performance, some core Ruby classes are toll-free bridged to their\n  // native JavaScript counterparts (e.g. a Ruby Array is a JavaScript Array).\n  //\n  // This method is used to setup a native constructor (e.g. Array), to have\n  // its prototype act like a normal Ruby class. Firstly, a new Ruby class is\n  // created using the native constructor so that its prototype is set as the\n  // target for the new class. Note: all bridged classes are set to inherit\n  // from Object.\n  //\n  // Example:\n  //\n  //    Opal.bridge(self, Function);\n  //\n  // @param klass       [Class] the Ruby class to bridge\n  // @param constructor [JS.Function] native JavaScript constructor to use\n  // @return [Class] returns the passed Ruby class\n  //\n  Opal.bridge = function(native_klass, klass) {\n    if (native_klass.hasOwnProperty('$$bridge')) {\n      throw Opal.ArgumentError.$new(\"already bridged\");\n    }\n\n    var klass_to_inject, klass_reference;\n\n    klass_to_inject = klass.$$super || Opal.Object;\n    klass_reference = klass;\n    var original_prototype = klass.$$prototype;\n\n    // constructor is a JS function with a prototype chain like:\n    // - constructor\n    //   - super\n    //\n    // What we need to do is to inject our class (with its prototype chain)\n    // between constructor and super. For example, after injecting ::Object\n    // into JS String we get:\n    //\n    // - constructor (window.String)\n    //   - Opal.Object\n    //     - Opal.Kernel\n    //       - Opal.BasicObject\n    //         - super (window.Object)\n    //           - null\n    //\n    $defineProperty(native_klass, '$$bridge', klass);\n    $setPrototype(native_klass.prototype, (klass.$$super || Opal.Object).$$prototype);\n    $defineProperty(klass, '$$prototype', native_klass.prototype);\n\n    $defineProperty(klass.$$prototype, '$$class', klass);\n    $defineProperty(klass, '$$constructor', native_klass);\n    $defineProperty(klass, '$$bridge', true);\n  };\n\n  function protoToModule(proto) {\n    if (proto.hasOwnProperty('$$dummy')) {\n      return;\n    } else if (proto.hasOwnProperty('$$iclass')) {\n      return proto.$$module;\n    } else if (proto.hasOwnProperty('$$class')) {\n      return proto.$$class;\n    }\n  }\n\n  function own_ancestors(module) {\n    return module.$$own_prepended_modules.concat([module]).concat(module.$$own_included_modules);\n  }\n\n  // The Array of ancestors for a given module/class\n  Opal.ancestors = function(module) {\n    if (!module) { return []; }\n\n    if (module.$$ancestors_cache_version === Opal.const_cache_version) {\n      return module.$$ancestors;\n    }\n\n    var result = [], i, mods, length;\n\n    for (i = 0, mods = own_ancestors(module), length = mods.length; i < length; i++) {\n      result.push(mods[i]);\n    }\n\n    if (module.$$super) {\n      for (i = 0, mods = Opal.ancestors(module.$$super), length = mods.length; i < length; i++) {\n        result.push(mods[i]);\n      }\n    }\n\n    module.$$ancestors_cache_version = Opal.const_cache_version;\n    module.$$ancestors = result;\n\n    return result;\n  }\n\n  Opal.included_modules = function(module) {\n    var result = [], mod = null, proto = Object.getPrototypeOf(module.$$prototype);\n\n    for (; proto && Object.getPrototypeOf(proto); proto = Object.getPrototypeOf(proto)) {\n      mod = protoToModule(proto);\n      if (mod && mod.$$is_module && proto.$$iclass && proto.$$included) {\n        result.push(mod);\n      }\n    }\n\n    return result;\n  }\n\n\n  // Method Missing\n  // --------------\n\n  // Methods stubs are used to facilitate method_missing in opal. A stub is a\n  // placeholder function which just calls `method_missing` on the receiver.\n  // If no method with the given name is actually defined on an object, then it\n  // is obvious to say that the stub will be called instead, and then in turn\n  // method_missing will be called.\n  //\n  // When a file in ruby gets compiled to javascript, it includes a call to\n  // this function which adds stubs for every method name in the compiled file.\n  // It should then be safe to assume that method_missing will work for any\n  // method call detected.\n  //\n  // Method stubs are added to the BasicObject prototype, which every other\n  // ruby object inherits, so all objects should handle method missing. A stub\n  // is only added if the given property name (method name) is not already\n  // defined.\n  //\n  // Note: all ruby methods have a `$` prefix in javascript, so all stubs will\n  // have this prefix as well (to make this method more performant).\n  //\n  //    Opal.add_stubs([\"$foo\", \"$bar\", \"$baz=\"]);\n  //\n  // All stub functions will have a private `$$stub` property set to true so\n  // that other internal methods can detect if a method is just a stub or not.\n  // `Kernel#respond_to?` uses this property to detect a methods presence.\n  //\n  // @param stubs [Array] an array of method stubs to add\n  // @return [undefined]\n  Opal.add_stubs = function(stubs) {\n    var proto = Opal.BasicObject.$$prototype;\n\n    for (var i = 0, length = stubs.length; i < length; i++) {\n      var stub = stubs[i], existing_method = proto[stub];\n\n      if (existing_method == null || existing_method.$$stub) {\n        Opal.add_stub_for(proto, stub);\n      }\n    }\n  };\n\n  // Add a method_missing stub function to the given prototype for the\n  // given name.\n  //\n  // @param prototype [Prototype] the target prototype\n  // @param stub [String] stub name to add (e.g. \"$foo\")\n  // @return [undefined]\n  Opal.add_stub_for = function(prototype, stub) {\n    var method_missing_stub = Opal.stub_for(stub);\n    $defineProperty(prototype, stub, method_missing_stub);\n  };\n\n  // Generate the method_missing stub for a given method name.\n  //\n  // @param method_name [String] The js-name of the method to stub (e.g. \"$foo\")\n  // @return [undefined]\n  Opal.stub_for = function(method_name) {\n    function method_missing_stub() {\n      // Copy any given block onto the method_missing dispatcher\n      this.$method_missing.$$p = method_missing_stub.$$p;\n\n      // Set block property to null ready for the next call (stop false-positives)\n      method_missing_stub.$$p = null;\n\n      // call method missing with correct args (remove '$' prefix on method name)\n      var args_ary = new Array(arguments.length);\n      for(var i = 0, l = args_ary.length; i < l; i++) { args_ary[i] = arguments[i]; }\n\n      return this.$method_missing.apply(this, [method_name.slice(1)].concat(args_ary));\n    }\n\n    method_missing_stub.$$stub = true;\n\n    return method_missing_stub;\n  };\n\n\n  // Methods\n  // -------\n\n  // Arity count error dispatcher for methods\n  //\n  // @param actual [Fixnum] number of arguments given to method\n  // @param expected [Fixnum] expected number of arguments\n  // @param object [Object] owner of the method +meth+\n  // @param meth [String] method name that got wrong number of arguments\n  // @raise [ArgumentError]\n  Opal.ac = function(actual, expected, object, meth) {\n    var inspect = '';\n    if (object.$$is_a_module) {\n      inspect += object.$$name + '.';\n    }\n    else {\n      inspect += object.$$class.$$name + '#';\n    }\n    inspect += meth;\n\n    throw Opal.ArgumentError.$new('[' + inspect + '] wrong number of arguments(' + actual + ' for ' + expected + ')');\n  };\n\n  // Arity count error dispatcher for blocks\n  //\n  // @param actual [Fixnum] number of arguments given to block\n  // @param expected [Fixnum] expected number of arguments\n  // @param context [Object] context of the block definition\n  // @raise [ArgumentError]\n  Opal.block_ac = function(actual, expected, context) {\n    var inspect = \"`block in \" + context + \"'\";\n\n    throw Opal.ArgumentError.$new(inspect + ': wrong number of arguments (' + actual + ' for ' + expected + ')');\n  };\n\n  // Super dispatcher\n  Opal.find_super_dispatcher = function(obj, mid, current_func, defcheck, defs) {\n    var jsid = '$' + mid, ancestors, super_method;\n\n    if (obj.hasOwnProperty('$$meta')) {\n      ancestors = Opal.ancestors(obj.$$meta);\n    } else {\n      ancestors = Opal.ancestors(obj.$$class);\n    }\n\n    var current_index = ancestors.indexOf(current_func.$$owner);\n\n    for (var i = current_index + 1; i < ancestors.length; i++) {\n      var ancestor = ancestors[i],\n          proto = ancestor.$$prototype;\n\n      if (proto.hasOwnProperty('$$dummy')) {\n        proto = proto.$$define_methods_on;\n      }\n\n      if (proto.hasOwnProperty(jsid)) {\n        var method = proto[jsid];\n\n        if (!method.$$stub) {\n          super_method = method;\n        }\n        break;\n      }\n    }\n\n    if (!defcheck && super_method == null && Opal.Kernel.$method_missing === obj.$method_missing) {\n      // method_missing hasn't been explicitly defined\n      throw Opal.NoMethodError.$new('super: no superclass method `'+mid+\"' for \"+obj, mid);\n    }\n\n    return super_method;\n  };\n\n  // Iter dispatcher for super in a block\n  Opal.find_iter_super_dispatcher = function(obj, jsid, current_func, defcheck, implicit) {\n    var call_jsid = jsid;\n\n    if (!current_func) {\n      throw Opal.RuntimeError.$new(\"super called outside of method\");\n    }\n\n    if (implicit && current_func.$$define_meth) {\n      throw Opal.RuntimeError.$new(\"implicit argument passing of super from method defined by define_method() is not supported. Specify all arguments explicitly\");\n    }\n\n    if (current_func.$$def) {\n      call_jsid = current_func.$$jsid;\n    }\n\n    return Opal.find_super_dispatcher(obj, call_jsid, current_func, defcheck);\n  };\n\n  // Used to return as an expression. Sometimes, we can't simply return from\n  // a javascript function as if we were a method, as the return is used as\n  // an expression, or even inside a block which must \"return\" to the outer\n  // method. This helper simply throws an error which is then caught by the\n  // method. This approach is expensive, so it is only used when absolutely\n  // needed.\n  //\n  Opal.ret = function(val) {\n    Opal.returner.$v = val;\n    throw Opal.returner;\n  };\n\n  // Used to break out of a block.\n  Opal.brk = function(val, breaker) {\n    breaker.$v = val;\n    throw breaker;\n  };\n\n  // Builds a new unique breaker, this is to avoid multiple nested breaks to get\n  // in the way of each other.\n  Opal.new_brk = function() {\n    return new Error('unexpected break');\n  };\n\n  // handles yield calls for 1 yielded arg\n  Opal.yield1 = function(block, arg) {\n    if (typeof(block) !== \"function\") {\n      throw Opal.LocalJumpError.$new(\"no block given\");\n    }\n\n    var has_mlhs = block.$$has_top_level_mlhs_arg,\n        has_trailing_comma = block.$$has_trailing_comma_in_args;\n\n    if (block.length > 1 || ((has_mlhs || has_trailing_comma) && block.length === 1)) {\n      arg = Opal.to_ary(arg);\n    }\n\n    if ((block.length > 1 || (has_trailing_comma && block.length === 1)) && arg.$$is_array) {\n      return block.apply(null, arg);\n    }\n    else {\n      return block(arg);\n    }\n  };\n\n  // handles yield for > 1 yielded arg\n  Opal.yieldX = function(block, args) {\n    if (typeof(block) !== \"function\") {\n      throw Opal.LocalJumpError.$new(\"no block given\");\n    }\n\n    if (block.length > 1 && args.length === 1) {\n      if (args[0].$$is_array) {\n        return block.apply(null, args[0]);\n      }\n    }\n\n    if (!args.$$is_array) {\n      var args_ary = new Array(args.length);\n      for(var i = 0, l = args_ary.length; i < l; i++) { args_ary[i] = args[i]; }\n\n      return block.apply(null, args_ary);\n    }\n\n    return block.apply(null, args);\n  };\n\n  // Finds the corresponding exception match in candidates.  Each candidate can\n  // be a value, or an array of values.  Returns null if not found.\n  Opal.rescue = function(exception, candidates) {\n    for (var i = 0; i < candidates.length; i++) {\n      var candidate = candidates[i];\n\n      if (candidate.$$is_array) {\n        var result = Opal.rescue(exception, candidate);\n\n        if (result) {\n          return result;\n        }\n      }\n      else if (candidate === Opal.JS.Error) {\n        return candidate;\n      }\n      else if (candidate['$==='](exception)) {\n        return candidate;\n      }\n    }\n\n    return null;\n  };\n\n  Opal.is_a = function(object, klass) {\n    if (klass != null && object.$$meta === klass || object.$$class === klass) {\n      return true;\n    }\n\n    if (object.$$is_number && klass.$$is_number_class) {\n      return true;\n    }\n\n    var i, length, ancestors = Opal.ancestors(object.$$is_class ? Opal.get_singleton_class(object) : (object.$$meta || object.$$class));\n\n    for (i = 0, length = ancestors.length; i < length; i++) {\n      if (ancestors[i] === klass) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  // Helpers for extracting kwsplats\n  // Used for: { **h }\n  Opal.to_hash = function(value) {\n    if (value.$$is_hash) {\n      return value;\n    }\n    else if (value['$respond_to?']('to_hash', true)) {\n      var hash = value.$to_hash();\n      if (hash.$$is_hash) {\n        return hash;\n      }\n      else {\n        throw Opal.TypeError.$new(\"Can't convert \" + value.$$class +\n          \" to Hash (\" + value.$$class + \"#to_hash gives \" + hash.$$class + \")\");\n      }\n    }\n    else {\n      throw Opal.TypeError.$new(\"no implicit conversion of \" + value.$$class + \" into Hash\");\n    }\n  };\n\n  // Helpers for implementing multiple assignment\n  // Our code for extracting the values and assigning them only works if the\n  // return value is a JS array.\n  // So if we get an Array subclass, extract the wrapped JS array from it\n\n  // Used for: a, b = something (no splat)\n  Opal.to_ary = function(value) {\n    if (value.$$is_array) {\n      return value;\n    }\n    else if (value['$respond_to?']('to_ary', true)) {\n      var ary = value.$to_ary();\n      if (ary === nil) {\n        return [value];\n      }\n      else if (ary.$$is_array) {\n        return ary;\n      }\n      else {\n        throw Opal.TypeError.$new(\"Can't convert \" + value.$$class +\n          \" to Array (\" + value.$$class + \"#to_ary gives \" + ary.$$class + \")\");\n      }\n    }\n    else {\n      return [value];\n    }\n  };\n\n  // Used for: a, b = *something (with splat)\n  Opal.to_a = function(value) {\n    if (value.$$is_array) {\n      // A splatted array must be copied\n      return value.slice();\n    }\n    else if (value['$respond_to?']('to_a', true)) {\n      var ary = value.$to_a();\n      if (ary === nil) {\n        return [value];\n      }\n      else if (ary.$$is_array) {\n        return ary;\n      }\n      else {\n        throw Opal.TypeError.$new(\"Can't convert \" + value.$$class +\n          \" to Array (\" + value.$$class + \"#to_a gives \" + ary.$$class + \")\");\n      }\n    }\n    else {\n      return [value];\n    }\n  };\n\n  // Used for extracting keyword arguments from arguments passed to\n  // JS function. If provided +arguments+ list doesn't have a Hash\n  // as a last item, returns a blank Hash.\n  //\n  // @param parameters [Array]\n  // @return [Hash]\n  //\n  Opal.extract_kwargs = function(parameters) {\n    var kwargs = parameters[parameters.length - 1];\n    if (kwargs != null && kwargs['$respond_to?']('to_hash', true)) {\n      $splice.call(parameters, parameters.length - 1, 1);\n      return kwargs.$to_hash();\n    }\n    else {\n      return Opal.hash2([], {});\n    }\n  }\n\n  // Used to get a list of rest keyword arguments. Method takes the given\n  // keyword args, i.e. the hash literal passed to the method containing all\n  // keyword arguemnts passed to method, as well as the used args which are\n  // the names of required and optional arguments defined. This method then\n  // just returns all key/value pairs which have not been used, in a new\n  // hash literal.\n  //\n  // @param given_args [Hash] all kwargs given to method\n  // @param used_args [Object<String: true>] all keys used as named kwargs\n  // @return [Hash]\n  //\n  Opal.kwrestargs = function(given_args, used_args) {\n    var keys      = [],\n        map       = {},\n        key       = null,\n        given_map = given_args.$$smap;\n\n    for (key in given_map) {\n      if (!used_args[key]) {\n        keys.push(key);\n        map[key] = given_map[key];\n      }\n    }\n\n    return Opal.hash2(keys, map);\n  };\n\n  // Calls passed method on a ruby object with arguments and block:\n  //\n  // Can take a method or a method name.\n  //\n  // 1. When method name gets passed it invokes it by its name\n  //    and calls 'method_missing' when object doesn't have this method.\n  //    Used internally by Opal to invoke method that takes a block or a splat.\n  // 2. When method (i.e. method body) gets passed, it doesn't trigger 'method_missing'\n  //    because it doesn't know the name of the actual method.\n  //    Used internally by Opal to invoke 'super'.\n  //\n  // @example\n  //   var my_array = [1, 2, 3, 4]\n  //   Opal.send(my_array, 'length')                    # => 4\n  //   Opal.send(my_array, my_array.$length)            # => 4\n  //\n  //   Opal.send(my_array, 'reverse!')                  # => [4, 3, 2, 1]\n  //   Opal.send(my_array, my_array['$reverse!']')      # => [4, 3, 2, 1]\n  //\n  // @param recv [Object] ruby object\n  // @param method [Function, String] method body or name of the method\n  // @param args [Array] arguments that will be passed to the method call\n  // @param block [Function] ruby block\n  // @return [Object] returning value of the method call\n  Opal.send = function(recv, method, args, block) {\n    var body = (typeof(method) === 'string') ? recv['$'+method] : method;\n\n    if (body != null) {\n      if (typeof block === 'function') {\n        body.$$p = block;\n      }\n      return body.apply(recv, args);\n    }\n\n    return recv.$method_missing.apply(recv, [method].concat(args));\n  }\n\n  Opal.lambda = function(block) {\n    block.$$is_lambda = true;\n    return block;\n  }\n\n  // Used to define methods on an object. This is a helper method, used by the\n  // compiled source to define methods on special case objects when the compiler\n  // can not determine the destination object, or the object is a Module\n  // instance. This can get called by `Module#define_method` as well.\n  //\n  // ## Modules\n  //\n  // Any method defined on a module will come through this runtime helper.\n  // The method is added to the module body, and the owner of the method is\n  // set to be the module itself. This is used later when choosing which\n  // method should show on a class if more than 1 included modules define\n  // the same method. Finally, if the module is in `module_function` mode,\n  // then the method is also defined onto the module itself.\n  //\n  // ## Classes\n  //\n  // This helper will only be called for classes when a method is being\n  // defined indirectly; either through `Module#define_method`, or by a\n  // literal `def` method inside an `instance_eval` or `class_eval` body. In\n  // either case, the method is simply added to the class' prototype. A special\n  // exception exists for `BasicObject` and `Object`. These two classes are\n  // special because they are used in toll-free bridged classes. In each of\n  // these two cases, extra work is required to define the methods on toll-free\n  // bridged class' prototypes as well.\n  //\n  // ## Objects\n  //\n  // If a simple ruby object is the object, then the method is simply just\n  // defined on the object as a singleton method. This would be the case when\n  // a method is defined inside an `instance_eval` block.\n  //\n  // @param obj  [Object, Class] the actual obj to define method for\n  // @param jsid [String] the JavaScript friendly method name (e.g. '$foo')\n  // @param body [JS.Function] the literal JavaScript function used as method\n  // @return [null]\n  //\n  Opal.def = function(obj, jsid, body) {\n    // Special case for a method definition in the\n    // top-level namespace\n    if (obj === Opal.top) {\n      Opal.defn(Opal.Object, jsid, body)\n    }\n    // if instance_eval is invoked on a module/class, it sets inst_eval_mod\n    else if (!obj.$$eval && obj.$$is_a_module) {\n      Opal.defn(obj, jsid, body);\n    }\n    else {\n      Opal.defs(obj, jsid, body);\n    }\n  };\n\n  // Define method on a module or class (see Opal.def).\n  Opal.defn = function(module, jsid, body) {\n    body.displayName = jsid;\n    body.$$owner = module;\n\n    var proto = module.$$prototype;\n    if (proto.hasOwnProperty('$$dummy')) {\n      proto = proto.$$define_methods_on;\n    }\n    $defineProperty(proto, jsid, body);\n\n    if (module.$$is_module) {\n      if (module.$$module_function) {\n        Opal.defs(module, jsid, body)\n      }\n\n      for (var i = 0, iclasses = module.$$iclasses, length = iclasses.length; i < length; i++) {\n        var iclass = iclasses[i];\n        $defineProperty(iclass, jsid, body);\n      }\n    }\n\n    var singleton_of = module.$$singleton_of;\n    if (module.$method_added && !module.$method_added.$$stub && !singleton_of) {\n      module.$method_added(jsid.substr(1));\n    }\n    else if (singleton_of && singleton_of.$singleton_method_added && !singleton_of.$singleton_method_added.$$stub) {\n      singleton_of.$singleton_method_added(jsid.substr(1));\n    }\n  }\n\n  // Define a singleton method on the given object (see Opal.def).\n  Opal.defs = function(obj, jsid, body) {\n    if (obj.$$is_string || obj.$$is_number) {\n      throw Opal.TypeError.$new(\"can't define singleton\");\n    }\n    Opal.defn(Opal.get_singleton_class(obj), jsid, body)\n  };\n\n  // Called from #remove_method.\n  Opal.rdef = function(obj, jsid) {\n    if (!$hasOwn.call(obj.$$prototype, jsid)) {\n      throw Opal.NameError.$new(\"method '\" + jsid.substr(1) + \"' not defined in \" + obj.$name());\n    }\n\n    delete obj.$$prototype[jsid];\n\n    if (obj.$$is_singleton) {\n      if (obj.$$prototype.$singleton_method_removed && !obj.$$prototype.$singleton_method_removed.$$stub) {\n        obj.$$prototype.$singleton_method_removed(jsid.substr(1));\n      }\n    }\n    else {\n      if (obj.$method_removed && !obj.$method_removed.$$stub) {\n        obj.$method_removed(jsid.substr(1));\n      }\n    }\n  };\n\n  // Called from #undef_method.\n  Opal.udef = function(obj, jsid) {\n    if (!obj.$$prototype[jsid] || obj.$$prototype[jsid].$$stub) {\n      throw Opal.NameError.$new(\"method '\" + jsid.substr(1) + \"' not defined in \" + obj.$name());\n    }\n\n    Opal.add_stub_for(obj.$$prototype, jsid);\n\n    if (obj.$$is_singleton) {\n      if (obj.$$prototype.$singleton_method_undefined && !obj.$$prototype.$singleton_method_undefined.$$stub) {\n        obj.$$prototype.$singleton_method_undefined(jsid.substr(1));\n      }\n    }\n    else {\n      if (obj.$method_undefined && !obj.$method_undefined.$$stub) {\n        obj.$method_undefined(jsid.substr(1));\n      }\n    }\n  };\n\n  function is_method_body(body) {\n    return (typeof(body) === \"function\" && !body.$$stub);\n  }\n\n  Opal.alias = function(obj, name, old) {\n    var id     = '$' + name,\n        old_id = '$' + old,\n        body   = obj.$$prototype['$' + old],\n        alias;\n\n    // When running inside #instance_eval the alias refers to class methods.\n    if (obj.$$eval) {\n      return Opal.alias(Opal.get_singleton_class(obj), name, old);\n    }\n\n    if (!is_method_body(body)) {\n      var ancestor = obj.$$super;\n\n      while (typeof(body) !== \"function\" && ancestor) {\n        body     = ancestor[old_id];\n        ancestor = ancestor.$$super;\n      }\n\n      if (!is_method_body(body) && obj.$$is_module) {\n        // try to look into Object\n        body = Opal.Object.$$prototype[old_id]\n      }\n\n      if (!is_method_body(body)) {\n        throw Opal.NameError.$new(\"undefined method `\" + old + \"' for class `\" + obj.$name() + \"'\")\n      }\n    }\n\n    // If the body is itself an alias use the original body\n    // to keep the max depth at 1.\n    if (body.$$alias_of) body = body.$$alias_of;\n\n    // We need a wrapper because otherwise properties\n    // would be ovrewritten on the original body.\n    alias = function() {\n      var block = alias.$$p, args, i, ii;\n\n      args = new Array(arguments.length);\n      for(i = 0, ii = arguments.length; i < ii; i++) {\n        args[i] = arguments[i];\n      }\n\n      if (block != null) { alias.$$p = null }\n\n      return Opal.send(this, body, args, block);\n    };\n\n    // Try to make the browser pick the right name\n    alias.displayName       = name;\n    alias.length            = body.length;\n    alias.$$arity           = body.$$arity;\n    alias.$$parameters      = body.$$parameters;\n    alias.$$source_location = body.$$source_location;\n    alias.$$alias_of        = body;\n    alias.$$alias_name      = name;\n\n    Opal.defn(obj, id, alias);\n\n    return obj;\n  };\n\n  Opal.alias_native = function(obj, name, native_name) {\n    var id   = '$' + name,\n        body = obj.$$prototype[native_name];\n\n    if (typeof(body) !== \"function\" || body.$$stub) {\n      throw Opal.NameError.$new(\"undefined native method `\" + native_name + \"' for class `\" + obj.$name() + \"'\")\n    }\n\n    Opal.defn(obj, id, body);\n\n    return obj;\n  };\n\n\n  // Hashes\n  // ------\n\n  Opal.hash_init = function(hash) {\n    hash.$$smap = Object.create(null);\n    hash.$$map  = Object.create(null);\n    hash.$$keys = [];\n  };\n\n  Opal.hash_clone = function(from_hash, to_hash) {\n    to_hash.$$none = from_hash.$$none;\n    to_hash.$$proc = from_hash.$$proc;\n\n    for (var i = 0, keys = from_hash.$$keys, smap = from_hash.$$smap, len = keys.length, key, value; i < len; i++) {\n      key = keys[i];\n\n      if (key.$$is_string) {\n        value = smap[key];\n      } else {\n        value = key.value;\n        key = key.key;\n      }\n\n      Opal.hash_put(to_hash, key, value);\n    }\n  };\n\n  Opal.hash_put = function(hash, key, value) {\n    if (key.$$is_string) {\n      if (!$hasOwn.call(hash.$$smap, key)) {\n        hash.$$keys.push(key);\n      }\n      hash.$$smap[key] = value;\n      return;\n    }\n\n    var key_hash, bucket, last_bucket;\n    key_hash = hash.$$by_identity ? Opal.id(key) : key.$hash();\n\n    if (!$hasOwn.call(hash.$$map, key_hash)) {\n      bucket = {key: key, key_hash: key_hash, value: value};\n      hash.$$keys.push(bucket);\n      hash.$$map[key_hash] = bucket;\n      return;\n    }\n\n    bucket = hash.$$map[key_hash];\n\n    while (bucket) {\n      if (key === bucket.key || key['$eql?'](bucket.key)) {\n        last_bucket = undefined;\n        bucket.value = value;\n        break;\n      }\n      last_bucket = bucket;\n      bucket = bucket.next;\n    }\n\n    if (last_bucket) {\n      bucket = {key: key, key_hash: key_hash, value: value};\n      hash.$$keys.push(bucket);\n      last_bucket.next = bucket;\n    }\n  };\n\n  Opal.hash_get = function(hash, key) {\n    if (key.$$is_string) {\n      if ($hasOwn.call(hash.$$smap, key)) {\n        return hash.$$smap[key];\n      }\n      return;\n    }\n\n    var key_hash, bucket;\n    key_hash = hash.$$by_identity ? Opal.id(key) : key.$hash();\n\n    if ($hasOwn.call(hash.$$map, key_hash)) {\n      bucket = hash.$$map[key_hash];\n\n      while (bucket) {\n        if (key === bucket.key || key['$eql?'](bucket.key)) {\n          return bucket.value;\n        }\n        bucket = bucket.next;\n      }\n    }\n  };\n\n  Opal.hash_delete = function(hash, key) {\n    var i, keys = hash.$$keys, length = keys.length, value;\n\n    if (key.$$is_string) {\n      if (!$hasOwn.call(hash.$$smap, key)) {\n        return;\n      }\n\n      for (i = 0; i < length; i++) {\n        if (keys[i] === key) {\n          keys.splice(i, 1);\n          break;\n        }\n      }\n\n      value = hash.$$smap[key];\n      delete hash.$$smap[key];\n      return value;\n    }\n\n    var key_hash = key.$hash();\n\n    if (!$hasOwn.call(hash.$$map, key_hash)) {\n      return;\n    }\n\n    var bucket = hash.$$map[key_hash], last_bucket;\n\n    while (bucket) {\n      if (key === bucket.key || key['$eql?'](bucket.key)) {\n        value = bucket.value;\n\n        for (i = 0; i < length; i++) {\n          if (keys[i] === bucket) {\n            keys.splice(i, 1);\n            break;\n          }\n        }\n\n        if (last_bucket && bucket.next) {\n          last_bucket.next = bucket.next;\n        }\n        else if (last_bucket) {\n          delete last_bucket.next;\n        }\n        else if (bucket.next) {\n          hash.$$map[key_hash] = bucket.next;\n        }\n        else {\n          delete hash.$$map[key_hash];\n        }\n\n        return value;\n      }\n      last_bucket = bucket;\n      bucket = bucket.next;\n    }\n  };\n\n  Opal.hash_rehash = function(hash) {\n    for (var i = 0, length = hash.$$keys.length, key_hash, bucket, last_bucket; i < length; i++) {\n\n      if (hash.$$keys[i].$$is_string) {\n        continue;\n      }\n\n      key_hash = hash.$$keys[i].key.$hash();\n\n      if (key_hash === hash.$$keys[i].key_hash) {\n        continue;\n      }\n\n      bucket = hash.$$map[hash.$$keys[i].key_hash];\n      last_bucket = undefined;\n\n      while (bucket) {\n        if (bucket === hash.$$keys[i]) {\n          if (last_bucket && bucket.next) {\n            last_bucket.next = bucket.next;\n          }\n          else if (last_bucket) {\n            delete last_bucket.next;\n          }\n          else if (bucket.next) {\n            hash.$$map[hash.$$keys[i].key_hash] = bucket.next;\n          }\n          else {\n            delete hash.$$map[hash.$$keys[i].key_hash];\n          }\n          break;\n        }\n        last_bucket = bucket;\n        bucket = bucket.next;\n      }\n\n      hash.$$keys[i].key_hash = key_hash;\n\n      if (!$hasOwn.call(hash.$$map, key_hash)) {\n        hash.$$map[key_hash] = hash.$$keys[i];\n        continue;\n      }\n\n      bucket = hash.$$map[key_hash];\n      last_bucket = undefined;\n\n      while (bucket) {\n        if (bucket === hash.$$keys[i]) {\n          last_bucket = undefined;\n          break;\n        }\n        last_bucket = bucket;\n        bucket = bucket.next;\n      }\n\n      if (last_bucket) {\n        last_bucket.next = hash.$$keys[i];\n      }\n    }\n  };\n\n  Opal.hash = function() {\n    var arguments_length = arguments.length, args, hash, i, length, key, value;\n\n    if (arguments_length === 1 && arguments[0].$$is_hash) {\n      return arguments[0];\n    }\n\n    hash = new Opal.Hash();\n    Opal.hash_init(hash);\n\n    if (arguments_length === 1 && arguments[0].$$is_array) {\n      args = arguments[0];\n      length = args.length;\n\n      for (i = 0; i < length; i++) {\n        if (args[i].length !== 2) {\n          throw Opal.ArgumentError.$new(\"value not of length 2: \" + args[i].$inspect());\n        }\n\n        key = args[i][0];\n        value = args[i][1];\n\n        Opal.hash_put(hash, key, value);\n      }\n\n      return hash;\n    }\n\n    if (arguments_length === 1) {\n      args = arguments[0];\n      for (key in args) {\n        if ($hasOwn.call(args, key)) {\n          value = args[key];\n\n          Opal.hash_put(hash, key, value);\n        }\n      }\n\n      return hash;\n    }\n\n    if (arguments_length % 2 !== 0) {\n      throw Opal.ArgumentError.$new(\"odd number of arguments for Hash\");\n    }\n\n    for (i = 0; i < arguments_length; i += 2) {\n      key = arguments[i];\n      value = arguments[i + 1];\n\n      Opal.hash_put(hash, key, value);\n    }\n\n    return hash;\n  };\n\n  // A faster Hash creator for hashes that just use symbols and\n  // strings as keys. The map and keys array can be constructed at\n  // compile time, so they are just added here by the constructor\n  // function.\n  //\n  Opal.hash2 = function(keys, smap) {\n    var hash = new Opal.Hash();\n\n    hash.$$smap = smap;\n    hash.$$map  = Object.create(null);\n    hash.$$keys = keys;\n\n    return hash;\n  };\n\n  // Create a new range instance with first and last values, and whether the\n  // range excludes the last value.\n  //\n  Opal.range = function(first, last, exc) {\n    var range         = new Opal.Range();\n        range.begin   = first;\n        range.end     = last;\n        range.excl    = exc;\n\n    return range;\n  };\n\n  // Get the ivar name for a given name.\n  // Mostly adds a trailing $ to reserved names.\n  //\n  Opal.ivar = function(name) {\n    if (\n        // properties\n        name === \"constructor\" ||\n        name === \"displayName\" ||\n        name === \"__count__\" ||\n        name === \"__noSuchMethod__\" ||\n        name === \"__parent__\" ||\n        name === \"__proto__\" ||\n\n        // methods\n        name === \"hasOwnProperty\" ||\n        name === \"valueOf\"\n       )\n    {\n      return name + \"$\";\n    }\n\n    return name;\n  };\n\n\n  // Regexps\n  // -------\n\n  // Escape Regexp special chars letting the resulting string be used to build\n  // a new Regexp.\n  //\n  Opal.escape_regexp = function(str) {\n    return str.replace(/([-[\\]\\/{}()*+?.^$\\\\| ])/g, '\\\\$1')\n              .replace(/[\\n]/g, '\\\\n')\n              .replace(/[\\r]/g, '\\\\r')\n              .replace(/[\\f]/g, '\\\\f')\n              .replace(/[\\t]/g, '\\\\t');\n  };\n\n  // Create a global Regexp from a RegExp object and cache the result\n  // on the object itself ($$g attribute).\n  //\n  Opal.global_regexp = function(pattern) {\n    if (pattern.global) {\n      return pattern; // RegExp already has the global flag\n    }\n    if (pattern.$$g == null) {\n      pattern.$$g = new RegExp(pattern.source, (pattern.multiline ? 'gm' : 'g') + (pattern.ignoreCase ? 'i' : ''));\n    } else {\n      pattern.$$g.lastIndex = null; // reset lastIndex property\n    }\n    return pattern.$$g;\n  };\n\n  // Create a global multiline Regexp from a RegExp object and cache the result\n  // on the object itself ($$gm or $$g attribute).\n  //\n  Opal.global_multiline_regexp = function(pattern) {\n    var result;\n    if (pattern.multiline) {\n      if (pattern.global) {\n        return pattern; // RegExp already has the global and multiline flag\n      }\n      // we are using the $$g attribute because the Regexp is already multiline\n      if (pattern.$$g != null) {\n        result = pattern.$$g;\n      } else {\n        result = pattern.$$g = new RegExp(pattern.source, 'gm' + (pattern.ignoreCase ? 'i' : ''));\n      }\n    } else if (pattern.$$gm != null) {\n      result = pattern.$$gm;\n    } else {\n      result = pattern.$$gm = new RegExp(pattern.source, 'gm' + (pattern.ignoreCase ? 'i' : ''));\n    }\n    result.lastIndex = null; // reset lastIndex property\n    return result;\n  };\n\n  // Require system\n  // --------------\n\n  Opal.modules         = {};\n  Opal.loaded_features = ['corelib/runtime'];\n  Opal.current_dir     = '.';\n  Opal.require_table   = {'corelib/runtime': true};\n\n  Opal.normalize = function(path) {\n    var parts, part, new_parts = [], SEPARATOR = '/';\n\n    if (Opal.current_dir !== '.') {\n      path = Opal.current_dir.replace(/\\/*$/, '/') + path;\n    }\n\n    path = path.replace(/^\\.\\//, '');\n    path = path.replace(/\\.(rb|opal|js)$/, '');\n    parts = path.split(SEPARATOR);\n\n    for (var i = 0, ii = parts.length; i < ii; i++) {\n      part = parts[i];\n      if (part === '') continue;\n      (part === '..') ? new_parts.pop() : new_parts.push(part)\n    }\n\n    return new_parts.join(SEPARATOR);\n  };\n\n  Opal.loaded = function(paths) {\n    var i, l, path;\n\n    for (i = 0, l = paths.length; i < l; i++) {\n      path = Opal.normalize(paths[i]);\n\n      if (Opal.require_table[path]) {\n        continue;\n      }\n\n      Opal.loaded_features.push(path);\n      Opal.require_table[path] = true;\n    }\n  };\n\n  Opal.load = function(path) {\n    path = Opal.normalize(path);\n\n    Opal.loaded([path]);\n\n    var module = Opal.modules[path];\n\n    if (module) {\n      module(Opal);\n    }\n    else {\n      var severity = Opal.config.missing_require_severity;\n      var message  = 'cannot load such file -- ' + path;\n\n      if (severity === \"error\") {\n        if (Opal.LoadError) {\n          throw Opal.LoadError.$new(message)\n        } else {\n          throw message\n        }\n      }\n      else if (severity === \"warning\") {\n        console.warn('WARNING: LoadError: ' + message);\n      }\n    }\n\n    return true;\n  };\n\n  Opal.require = function(path) {\n    path = Opal.normalize(path);\n\n    if (Opal.require_table[path]) {\n      return false;\n    }\n\n    return Opal.load(path);\n  };\n\n\n  // Strings\n  // -------\n\n  Opal.encodings = Object.create(null);\n\n  // Sets the encoding on a string, will treat string literals as frozen strings\n  // raising a FrozenError.\n  // @param str [String] the string on which the encoding should be set.\n  // @param name [String] the canonical name of the encoding\n  Opal.set_encoding = function(str, name) {\n    if (typeof str === 'string')\n      throw Opal.FrozenError.$new(\"can't modify frozen String\");\n\n    var encoding = Opal.encodings[name];\n\n    if (encoding === str.encoding) { return str; }\n\n    str.encoding = encoding;\n\n    return str;\n  };\n\n  // @returns a String object with the encoding set from a string literal\n  Opal.enc = function(str, name) {\n    var dup = new String(str);\n    Opal.set_encoding(dup, name);\n    dup.internal_encoding = dup.encoding;\n    return dup\n  }\n\n\n  // Initialization\n  // --------------\n  function $BasicObject() {};\n  function $Object() {};\n  function $Module() {};\n  function $Class() {};\n\n  Opal.BasicObject = BasicObject = Opal.allocate_class('BasicObject', null, $BasicObject);\n  Opal.Object      = _Object     = Opal.allocate_class('Object', Opal.BasicObject, $Object);\n  Opal.Module      = Module      = Opal.allocate_class('Module', Opal.Object, $Module);\n  Opal.Class       = Class       = Opal.allocate_class('Class', Opal.Module, $Class);\n\n  $setPrototype(Opal.BasicObject, Opal.Class.$$prototype);\n  $setPrototype(Opal.Object, Opal.Class.$$prototype);\n  $setPrototype(Opal.Module, Opal.Class.$$prototype);\n  $setPrototype(Opal.Class, Opal.Class.$$prototype);\n\n  // BasicObject can reach itself, avoid const_set to skip the $$base_module logic\n  BasicObject.$$const[\"BasicObject\"] = BasicObject;\n\n  // Assign basic constants\n  Opal.const_set(_Object, \"BasicObject\",  BasicObject);\n  Opal.const_set(_Object, \"Object\",       _Object);\n  Opal.const_set(_Object, \"Module\",       Module);\n  Opal.const_set(_Object, \"Class\",        Class);\n\n  // Fix booted classes to have correct .class value\n  BasicObject.$$class = Class;\n  _Object.$$class     = Class;\n  Module.$$class      = Class;\n  Class.$$class       = Class;\n\n  // Forward .toString() to #to_s\n  $defineProperty(_Object.$$prototype, 'toString', function() {\n    var to_s = this.$to_s();\n    if (to_s.$$is_string && typeof(to_s) === 'object') {\n      // a string created using new String('string')\n      return to_s.valueOf();\n    } else {\n      return to_s;\n    }\n  });\n\n  // Make Kernel#require immediately available as it's needed to require all the\n  // other corelib files.\n  $defineProperty(_Object.$$prototype, '$require', Opal.require);\n\n  // Add a short helper to navigate constants manually.\n  // @example\n  //   Opal.$$.Regexp.$$.IGNORECASE\n  Opal.$$ = _Object.$$;\n\n  // Instantiate the main object\n  Opal.top = new _Object();\n  Opal.top.$to_s = Opal.top.$inspect = function() { return 'main' };\n\n\n  // Nil\n  function $NilClass() {};\n  Opal.NilClass = Opal.allocate_class('NilClass', Opal.Object, $NilClass);\n  Opal.const_set(_Object, 'NilClass', Opal.NilClass);\n  nil = Opal.nil = new Opal.NilClass();\n  nil.$$id = nil_id;\n  nil.call = nil.apply = function() { throw Opal.LocalJumpError.$new('no block given'); };\n\n  // Errors\n  Opal.breaker  = new Error('unexpected break (old)');\n  Opal.returner = new Error('unexpected return');\n  TypeError.$$super = Error;\n}).call(this);\nOpal.loaded([\"corelib/runtime.js\"]);\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/helpers\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$new', '$class', '$===', '$respond_to?', '$raise', '$type_error', '$__send__', '$coerce_to', '$nil?', '$<=>', '$coerce_to!', '$!=', '$[]', '$upcase']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Opal');\n\n    var $nesting = [self].concat($parent_nesting), $Opal_bridge$1, $Opal_type_error$2, $Opal_coerce_to$3, $Opal_coerce_to$excl$4, $Opal_coerce_to$ques$5, $Opal_try_convert$6, $Opal_compare$7, $Opal_destructure$8, $Opal_respond_to$ques$9, $Opal_inspect_obj$10, $Opal_instance_variable_name$excl$11, $Opal_class_variable_name$excl$12, $Opal_const_name$excl$13, $Opal_pristine$14;\n\n    \n    Opal.defs(self, '$bridge', $Opal_bridge$1 = function $$bridge(constructor, klass) {\n      var self = this;\n\n      return Opal.bridge(constructor, klass);\n    }, $Opal_bridge$1.$$arity = 2);\n    Opal.defs(self, '$type_error', $Opal_type_error$2 = function $$type_error(object, type, method, coerced) {\n      var $a, self = this;\n\n      \n      \n      if (method == null) {\n        method = nil;\n      };\n      \n      if (coerced == null) {\n        coerced = nil;\n      };\n      if ($truthy(($truthy($a = method) ? coerced : $a))) {\n        return $$($nesting, 'TypeError').$new(\"\" + \"can't convert \" + (object.$class()) + \" into \" + (type) + \" (\" + (object.$class()) + \"#\" + (method) + \" gives \" + (coerced.$class()) + \")\")\n      } else {\n        return $$($nesting, 'TypeError').$new(\"\" + \"no implicit conversion of \" + (object.$class()) + \" into \" + (type))\n      };\n    }, $Opal_type_error$2.$$arity = -3);\n    Opal.defs(self, '$coerce_to', $Opal_coerce_to$3 = function $$coerce_to(object, type, method) {\n      var self = this;\n\n      \n      if ($truthy(type['$==='](object))) {\n        return object};\n      if ($truthy(object['$respond_to?'](method))) {\n      } else {\n        self.$raise(self.$type_error(object, type))\n      };\n      return object.$__send__(method);\n    }, $Opal_coerce_to$3.$$arity = 3);\n    Opal.defs(self, '$coerce_to!', $Opal_coerce_to$excl$4 = function(object, type, method) {\n      var self = this, coerced = nil;\n\n      \n      coerced = self.$coerce_to(object, type, method);\n      if ($truthy(type['$==='](coerced))) {\n      } else {\n        self.$raise(self.$type_error(object, type, method, coerced))\n      };\n      return coerced;\n    }, $Opal_coerce_to$excl$4.$$arity = 3);\n    Opal.defs(self, '$coerce_to?', $Opal_coerce_to$ques$5 = function(object, type, method) {\n      var self = this, coerced = nil;\n\n      \n      if ($truthy(object['$respond_to?'](method))) {\n      } else {\n        return nil\n      };\n      coerced = self.$coerce_to(object, type, method);\n      if ($truthy(coerced['$nil?']())) {\n        return nil};\n      if ($truthy(type['$==='](coerced))) {\n      } else {\n        self.$raise(self.$type_error(object, type, method, coerced))\n      };\n      return coerced;\n    }, $Opal_coerce_to$ques$5.$$arity = 3);\n    Opal.defs(self, '$try_convert', $Opal_try_convert$6 = function $$try_convert(object, type, method) {\n      var self = this;\n\n      \n      if ($truthy(type['$==='](object))) {\n        return object};\n      if ($truthy(object['$respond_to?'](method))) {\n        return object.$__send__(method)\n      } else {\n        return nil\n      };\n    }, $Opal_try_convert$6.$$arity = 3);\n    Opal.defs(self, '$compare', $Opal_compare$7 = function $$compare(a, b) {\n      var self = this, compare = nil;\n\n      \n      compare = a['$<=>'](b);\n      if ($truthy(compare === nil)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (a.$class()) + \" with \" + (b.$class()) + \" failed\")};\n      return compare;\n    }, $Opal_compare$7.$$arity = 2);\n    Opal.defs(self, '$destructure', $Opal_destructure$8 = function $$destructure(args) {\n      var self = this;\n\n      \n      if (args.length == 1) {\n        return args[0];\n      }\n      else if (args.$$is_array) {\n        return args;\n      }\n      else {\n        var args_ary = new Array(args.length);\n        for(var i = 0, l = args_ary.length; i < l; i++) { args_ary[i] = args[i]; }\n\n        return args_ary;\n      }\n    \n    }, $Opal_destructure$8.$$arity = 1);\n    Opal.defs(self, '$respond_to?', $Opal_respond_to$ques$9 = function(obj, method, include_all) {\n      var self = this;\n\n      \n      \n      if (include_all == null) {\n        include_all = false;\n      };\n      \n      if (obj == null || !obj.$$class) {\n        return false;\n      }\n    ;\n      return obj['$respond_to?'](method, include_all);\n    }, $Opal_respond_to$ques$9.$$arity = -3);\n    Opal.defs(self, '$inspect_obj', $Opal_inspect_obj$10 = function $$inspect_obj(obj) {\n      var self = this;\n\n      return Opal.inspect(obj);\n    }, $Opal_inspect_obj$10.$$arity = 1);\n    Opal.defs(self, '$instance_variable_name!', $Opal_instance_variable_name$excl$11 = function(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$coerce_to!'](name, $$($nesting, 'String'), \"to_str\");\n      if ($truthy(/^@[a-zA-Z_][a-zA-Z0-9_]*?$/.test(name))) {\n      } else {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"'\" + (name) + \"' is not allowed as an instance variable name\", name))\n      };\n      return name;\n    }, $Opal_instance_variable_name$excl$11.$$arity = 1);\n    Opal.defs(self, '$class_variable_name!', $Opal_class_variable_name$excl$12 = function(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$coerce_to!'](name, $$($nesting, 'String'), \"to_str\");\n      if ($truthy(name.length < 3 || name.slice(0,2) !== '@@')) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"`\" + (name) + \"' is not allowed as a class variable name\", name))};\n      return name;\n    }, $Opal_class_variable_name$excl$12.$$arity = 1);\n    Opal.defs(self, '$const_name!', $Opal_const_name$excl$13 = function(const_name) {\n      var self = this;\n\n      \n      const_name = $$($nesting, 'Opal')['$coerce_to!'](const_name, $$($nesting, 'String'), \"to_str\");\n      if ($truthy(const_name['$[]'](0)['$!='](const_name['$[]'](0).$upcase()))) {\n        self.$raise($$($nesting, 'NameError'), \"\" + \"wrong constant name \" + (const_name))};\n      return const_name;\n    }, $Opal_const_name$excl$13.$$arity = 1);\n    Opal.defs(self, '$pristine', $Opal_pristine$14 = function $$pristine(owner_class, $a) {\n      var $post_args, method_names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      method_names = $post_args;;\n      \n      var method_name, method;\n      for (var i = method_names.length - 1; i >= 0; i--) {\n        method_name = method_names[i];\n        method = owner_class.$$prototype['$'+method_name];\n\n        if (method && !method.$$stub) {\n          method.$$pristine = true;\n        }\n      }\n    ;\n      return nil;\n    }, $Opal_pristine$14.$$arity = -2);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/module\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $lambda = Opal.lambda, $range = Opal.range, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$module_eval', '$to_proc', '$===', '$raise', '$equal?', '$<', '$>', '$nil?', '$attr_reader', '$attr_writer', '$class_variable_name!', '$new', '$const_name!', '$=~', '$inject', '$split', '$const_get', '$==', '$!~', '$start_with?', '$bind', '$call', '$class', '$append_features', '$included', '$name', '$cover?', '$size', '$merge', '$compile', '$proc', '$any?', '$prepend_features', '$prepended', '$to_s', '$__id__', '$constants', '$include?', '$copy_class_variables', '$copy_constants']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Module');\n\n    var $nesting = [self].concat($parent_nesting), $Module_allocate$1, $Module_initialize$2, $Module_$eq_eq_eq$3, $Module_$lt$4, $Module_$lt_eq$5, $Module_$gt$6, $Module_$gt_eq$7, $Module_$lt_eq_gt$8, $Module_alias_method$9, $Module_alias_native$10, $Module_ancestors$11, $Module_append_features$12, $Module_attr_accessor$13, $Module_attr_reader$14, $Module_attr_writer$15, $Module_autoload$16, $Module_class_variables$17, $Module_class_variable_get$18, $Module_class_variable_set$19, $Module_class_variable_defined$ques$20, $Module_remove_class_variable$21, $Module_constants$22, $Module_constants$23, $Module_nesting$24, $Module_const_defined$ques$25, $Module_const_get$26, $Module_const_missing$28, $Module_const_set$29, $Module_public_constant$30, $Module_define_method$31, $Module_remove_method$33, $Module_singleton_class$ques$34, $Module_include$35, $Module_included_modules$36, $Module_include$ques$37, $Module_instance_method$38, $Module_instance_methods$39, $Module_included$40, $Module_extended$41, $Module_extend_object$42, $Module_method_added$43, $Module_method_removed$44, $Module_method_undefined$45, $Module_module_eval$46, $Module_module_exec$48, $Module_method_defined$ques$49, $Module_module_function$50, $Module_name$51, $Module_prepend$52, $Module_prepend_features$53, $Module_prepended$54, $Module_remove_const$55, $Module_to_s$56, $Module_undef_method$57, $Module_instance_variables$58, $Module_dup$59, $Module_copy_class_variables$60, $Module_copy_constants$61;\n\n    \n    Opal.defs(self, '$allocate', $Module_allocate$1 = function $$allocate() {\n      var self = this;\n\n      \n      var module = Opal.allocate_module(nil, function(){});\n      // Link the prototype of Module subclasses\n      if (self !== Opal.Module) Object.setPrototypeOf(module, self.$$prototype);\n      return module;\n    \n    }, $Module_allocate$1.$$arity = 0);\n    \n    Opal.def(self, '$initialize', $Module_initialize$2 = function $$initialize() {\n      var $iter = $Module_initialize$2.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Module_initialize$2.$$p = null;\n      \n      \n      if ($iter) $Module_initialize$2.$$p = null;;\n      if ((block !== nil)) {\n        return $send(self, 'module_eval', [], block.$to_proc())\n      } else {\n        return nil\n      };\n    }, $Module_initialize$2.$$arity = 0);\n    \n    Opal.def(self, '$===', $Module_$eq_eq_eq$3 = function(object) {\n      var self = this;\n\n      \n      if ($truthy(object == null)) {\n        return false};\n      return Opal.is_a(object, self);;\n    }, $Module_$eq_eq_eq$3.$$arity = 1);\n    \n    Opal.def(self, '$<', $Module_$lt$4 = function(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Module')['$==='](other))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"compared with non class/module\")\n      };\n      \n      var working = self,\n          ancestors,\n          i, length;\n\n      if (working === other) {\n        return false;\n      }\n\n      for (i = 0, ancestors = Opal.ancestors(self), length = ancestors.length; i < length; i++) {\n        if (ancestors[i] === other) {\n          return true;\n        }\n      }\n\n      for (i = 0, ancestors = Opal.ancestors(other), length = ancestors.length; i < length; i++) {\n        if (ancestors[i] === self) {\n          return false;\n        }\n      }\n\n      return nil;\n    ;\n    }, $Module_$lt$4.$$arity = 1);\n    \n    Opal.def(self, '$<=', $Module_$lt_eq$5 = function(other) {\n      var $a, self = this;\n\n      return ($truthy($a = self['$equal?'](other)) ? $a : $rb_lt(self, other))\n    }, $Module_$lt_eq$5.$$arity = 1);\n    \n    Opal.def(self, '$>', $Module_$gt$6 = function(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Module')['$==='](other))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"compared with non class/module\")\n      };\n      return $rb_lt(other, self);\n    }, $Module_$gt$6.$$arity = 1);\n    \n    Opal.def(self, '$>=', $Module_$gt_eq$7 = function(other) {\n      var $a, self = this;\n\n      return ($truthy($a = self['$equal?'](other)) ? $a : $rb_gt(self, other))\n    }, $Module_$gt_eq$7.$$arity = 1);\n    \n    Opal.def(self, '$<=>', $Module_$lt_eq_gt$8 = function(other) {\n      var self = this, lt = nil;\n\n      \n      \n      if (self === other) {\n        return 0;\n      }\n    ;\n      if ($truthy($$($nesting, 'Module')['$==='](other))) {\n      } else {\n        return nil\n      };\n      lt = $rb_lt(self, other);\n      if ($truthy(lt['$nil?']())) {\n        return nil};\n      if ($truthy(lt)) {\n        return -1\n      } else {\n        return 1\n      };\n    }, $Module_$lt_eq_gt$8.$$arity = 1);\n    \n    Opal.def(self, '$alias_method', $Module_alias_method$9 = function $$alias_method(newname, oldname) {\n      var self = this;\n\n      \n      Opal.alias(self, newname, oldname);\n      return self;\n    }, $Module_alias_method$9.$$arity = 2);\n    \n    Opal.def(self, '$alias_native', $Module_alias_native$10 = function $$alias_native(mid, jsid) {\n      var self = this;\n\n      \n      \n      if (jsid == null) {\n        jsid = mid;\n      };\n      Opal.alias_native(self, mid, jsid);\n      return self;\n    }, $Module_alias_native$10.$$arity = -2);\n    \n    Opal.def(self, '$ancestors', $Module_ancestors$11 = function $$ancestors() {\n      var self = this;\n\n      return Opal.ancestors(self);\n    }, $Module_ancestors$11.$$arity = 0);\n    \n    Opal.def(self, '$append_features', $Module_append_features$12 = function $$append_features(includer) {\n      var self = this;\n\n      \n      Opal.append_features(self, includer);\n      return self;\n    }, $Module_append_features$12.$$arity = 1);\n    \n    Opal.def(self, '$attr_accessor', $Module_attr_accessor$13 = function $$attr_accessor($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      $send(self, 'attr_reader', Opal.to_a(names));\n      return $send(self, 'attr_writer', Opal.to_a(names));\n    }, $Module_attr_accessor$13.$$arity = -1);\n    Opal.alias(self, \"attr\", \"attr_accessor\");\n    \n    Opal.def(self, '$attr_reader', $Module_attr_reader$14 = function $$attr_reader($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      \n      var proto = self.$$prototype;\n\n      for (var i = names.length - 1; i >= 0; i--) {\n        var name = names[i],\n            id   = '$' + name,\n            ivar = Opal.ivar(name);\n\n        // the closure here is needed because name will change at the next\n        // cycle, I wish we could use let.\n        var body = (function(ivar) {\n          return function() {\n            if (this[ivar] == null) {\n              return nil;\n            }\n            else {\n              return this[ivar];\n            }\n          };\n        })(ivar);\n\n        // initialize the instance variable as nil\n        Opal.defineProperty(proto, ivar, nil);\n\n        body.$$parameters = [];\n        body.$$arity = 0;\n\n        Opal.defn(self, id, body);\n      }\n    ;\n      return nil;\n    }, $Module_attr_reader$14.$$arity = -1);\n    \n    Opal.def(self, '$attr_writer', $Module_attr_writer$15 = function $$attr_writer($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      \n      var proto = self.$$prototype;\n\n      for (var i = names.length - 1; i >= 0; i--) {\n        var name = names[i],\n            id   = '$' + name + '=',\n            ivar = Opal.ivar(name);\n\n        // the closure here is needed because name will change at the next\n        // cycle, I wish we could use let.\n        var body = (function(ivar){\n          return function(value) {\n            return this[ivar] = value;\n          }\n        })(ivar);\n\n        body.$$parameters = [['req']];\n        body.$$arity = 1;\n\n        // initialize the instance variable as nil\n        Opal.defineProperty(proto, ivar, nil);\n\n        Opal.defn(self, id, body);\n      }\n    ;\n      return nil;\n    }, $Module_attr_writer$15.$$arity = -1);\n    \n    Opal.def(self, '$autoload', $Module_autoload$16 = function $$autoload(const$, path) {\n      var self = this;\n\n      \n      if (self.$$autoload == null) self.$$autoload = {};\n      Opal.const_cache_version++;\n      self.$$autoload[const$] = path;\n      return nil;\n    \n    }, $Module_autoload$16.$$arity = 2);\n    \n    Opal.def(self, '$class_variables', $Module_class_variables$17 = function $$class_variables() {\n      var self = this;\n\n      return Object.keys(Opal.class_variables(self));\n    }, $Module_class_variables$17.$$arity = 0);\n    \n    Opal.def(self, '$class_variable_get', $Module_class_variable_get$18 = function $$class_variable_get(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$class_variable_name!'](name);\n      \n      var value = Opal.class_variables(self)[name];\n      if (value == null) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"uninitialized class variable \" + (name) + \" in \" + (self), name))\n      }\n      return value;\n    ;\n    }, $Module_class_variable_get$18.$$arity = 1);\n    \n    Opal.def(self, '$class_variable_set', $Module_class_variable_set$19 = function $$class_variable_set(name, value) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$class_variable_name!'](name);\n      return Opal.class_variable_set(self, name, value);;\n    }, $Module_class_variable_set$19.$$arity = 2);\n    \n    Opal.def(self, '$class_variable_defined?', $Module_class_variable_defined$ques$20 = function(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$class_variable_name!'](name);\n      return Opal.class_variables(self).hasOwnProperty(name);;\n    }, $Module_class_variable_defined$ques$20.$$arity = 1);\n    \n    Opal.def(self, '$remove_class_variable', $Module_remove_class_variable$21 = function $$remove_class_variable(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$class_variable_name!'](name);\n      \n      if (Opal.hasOwnProperty.call(self.$$cvars, name)) {\n        var value = self.$$cvars[name];\n        delete self.$$cvars[name];\n        return value;\n      } else {\n        self.$raise($$($nesting, 'NameError'), \"\" + \"cannot remove \" + (name) + \" for \" + (self))\n      }\n    ;\n    }, $Module_remove_class_variable$21.$$arity = 1);\n    \n    Opal.def(self, '$constants', $Module_constants$22 = function $$constants(inherit) {\n      var self = this;\n\n      \n      \n      if (inherit == null) {\n        inherit = true;\n      };\n      return Opal.constants(self, inherit);;\n    }, $Module_constants$22.$$arity = -1);\n    Opal.defs(self, '$constants', $Module_constants$23 = function $$constants(inherit) {\n      var self = this;\n\n      \n      ;\n      \n      if (inherit == null) {\n        var nesting = (self.$$nesting || []).concat(Opal.Object),\n            constant, constants = {},\n            i, ii;\n\n        for(i = 0, ii = nesting.length; i < ii; i++) {\n          for (constant in nesting[i].$$const) {\n            constants[constant] = true;\n          }\n        }\n        return Object.keys(constants);\n      } else {\n        return Opal.constants(self, inherit)\n      }\n    ;\n    }, $Module_constants$23.$$arity = -1);\n    Opal.defs(self, '$nesting', $Module_nesting$24 = function $$nesting() {\n      var self = this;\n\n      return self.$$nesting || [];\n    }, $Module_nesting$24.$$arity = 0);\n    \n    Opal.def(self, '$const_defined?', $Module_const_defined$ques$25 = function(name, inherit) {\n      var self = this;\n\n      \n      \n      if (inherit == null) {\n        inherit = true;\n      };\n      name = $$($nesting, 'Opal')['$const_name!'](name);\n      if ($truthy(name['$=~']($$$($$($nesting, 'Opal'), 'CONST_NAME_REGEXP')))) {\n      } else {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"wrong constant name \" + (name), name))\n      };\n      \n      var module, modules = [self], module_constants, i, ii;\n\n      // Add up ancestors if inherit is true\n      if (inherit) {\n        modules = modules.concat(Opal.ancestors(self));\n\n        // Add Object's ancestors if it's a module – modules have no ancestors otherwise\n        if (self.$$is_module) {\n          modules = modules.concat([Opal.Object]).concat(Opal.ancestors(Opal.Object));\n        }\n      }\n\n      for (i = 0, ii = modules.length; i < ii; i++) {\n        module = modules[i];\n        if (module.$$const[name] != null) {\n          return true;\n        }\n      }\n\n      return false;\n    ;\n    }, $Module_const_defined$ques$25.$$arity = -2);\n    \n    Opal.def(self, '$const_get', $Module_const_get$26 = function $$const_get(name, inherit) {\n      var $$27, self = this;\n\n      \n      \n      if (inherit == null) {\n        inherit = true;\n      };\n      name = $$($nesting, 'Opal')['$const_name!'](name);\n      \n      if (name.indexOf('::') === 0 && name !== '::'){\n        name = name.slice(2);\n      }\n    ;\n      if ($truthy(name.indexOf('::') != -1 && name != '::')) {\n        return $send(name.$split(\"::\"), 'inject', [self], ($$27 = function(o, c){var self = $$27.$$s || this;\n\n        \n          \n          if (o == null) {\n            o = nil;\n          };\n          \n          if (c == null) {\n            c = nil;\n          };\n          return o.$const_get(c);}, $$27.$$s = self, $$27.$$arity = 2, $$27))};\n      if ($truthy(name['$=~']($$$($$($nesting, 'Opal'), 'CONST_NAME_REGEXP')))) {\n      } else {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"wrong constant name \" + (name), name))\n      };\n      \n      if (inherit) {\n        return $$([self], name);\n      } else {\n        return Opal.const_get_local(self, name);\n      }\n    ;\n    }, $Module_const_get$26.$$arity = -2);\n    \n    Opal.def(self, '$const_missing', $Module_const_missing$28 = function $$const_missing(name) {\n      var self = this, full_const_name = nil;\n\n      \n      \n      if (self.$$autoload) {\n        var file = self.$$autoload[name];\n\n        if (file) {\n          self.$require(file);\n\n          return self.$const_get(name);\n        }\n      }\n    ;\n      full_const_name = (function() {if (self['$==']($$($nesting, 'Object'))) {\n        return name\n      } else {\n        return \"\" + (self) + \"::\" + (name)\n      }; return nil; })();\n      return self.$raise($$($nesting, 'NameError').$new(\"\" + \"uninitialized constant \" + (full_const_name), name));\n    }, $Module_const_missing$28.$$arity = 1);\n    \n    Opal.def(self, '$const_set', $Module_const_set$29 = function $$const_set(name, value) {\n      var $a, self = this;\n\n      \n      name = $$($nesting, 'Opal')['$const_name!'](name);\n      if ($truthy(($truthy($a = name['$!~']($$$($$($nesting, 'Opal'), 'CONST_NAME_REGEXP'))) ? $a : name['$start_with?'](\"::\")))) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"wrong constant name \" + (name), name))};\n      Opal.const_set(self, name, value);\n      return value;\n    }, $Module_const_set$29.$$arity = 2);\n    \n    Opal.def(self, '$public_constant', $Module_public_constant$30 = function $$public_constant(const_name) {\n      var self = this;\n\n      return nil\n    }, $Module_public_constant$30.$$arity = 1);\n    \n    Opal.def(self, '$define_method', $Module_define_method$31 = function $$define_method(name, method) {\n      var $iter = $Module_define_method$31.$$p, block = $iter || nil, $a, $$32, self = this, $case = nil;\n\n      if ($iter) $Module_define_method$31.$$p = null;\n      \n      \n      if ($iter) $Module_define_method$31.$$p = null;;\n      ;\n      if ($truthy(method === undefined && block === nil)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"tried to create a Proc object without a block\")};\n      block = ($truthy($a = block) ? $a : (function() {$case = method;\n      if ($$($nesting, 'Proc')['$===']($case)) {return method}\n      else if ($$($nesting, 'Method')['$===']($case)) {return method.$to_proc().$$unbound}\n      else if ($$($nesting, 'UnboundMethod')['$===']($case)) {return $lambda(($$32 = function($b){var self = $$32.$$s || this, $post_args, args, bound = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        bound = method.$bind(self);\n        return $send(bound, 'call', Opal.to_a(args));}, $$32.$$s = self, $$32.$$arity = -1, $$32))}\n      else {return self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + (block.$class()) + \" (expected Proc/Method)\")}})());\n      \n      var id = '$' + name;\n\n      block.$$jsid        = name;\n      block.$$s           = null;\n      block.$$def         = block;\n      block.$$define_meth = true;\n\n      Opal.defn(self, id, block);\n\n      return name;\n    ;\n    }, $Module_define_method$31.$$arity = -2);\n    \n    Opal.def(self, '$remove_method', $Module_remove_method$33 = function $$remove_method($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      \n      for (var i = 0, length = names.length; i < length; i++) {\n        Opal.rdef(self, \"$\" + names[i]);\n      }\n    ;\n      return self;\n    }, $Module_remove_method$33.$$arity = -1);\n    \n    Opal.def(self, '$singleton_class?', $Module_singleton_class$ques$34 = function() {\n      var self = this;\n\n      return !!self.$$is_singleton;\n    }, $Module_singleton_class$ques$34.$$arity = 0);\n    \n    Opal.def(self, '$include', $Module_include$35 = function $$include($a) {\n      var $post_args, mods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      mods = $post_args;;\n      \n      for (var i = mods.length - 1; i >= 0; i--) {\n        var mod = mods[i];\n\n        if (!mod.$$is_module) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((mod).$class()) + \" (expected Module)\");\n        }\n\n        (mod).$append_features(self);\n        (mod).$included(self);\n      }\n    ;\n      return self;\n    }, $Module_include$35.$$arity = -1);\n    \n    Opal.def(self, '$included_modules', $Module_included_modules$36 = function $$included_modules() {\n      var self = this;\n\n      return Opal.included_modules(self);\n    }, $Module_included_modules$36.$$arity = 0);\n    \n    Opal.def(self, '$include?', $Module_include$ques$37 = function(mod) {\n      var self = this;\n\n      \n      if (!mod.$$is_module) {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((mod).$class()) + \" (expected Module)\");\n      }\n\n      var i, ii, mod2, ancestors = Opal.ancestors(self);\n\n      for (i = 0, ii = ancestors.length; i < ii; i++) {\n        mod2 = ancestors[i];\n        if (mod2 === mod && mod2 !== self) {\n          return true;\n        }\n      }\n\n      return false;\n    \n    }, $Module_include$ques$37.$$arity = 1);\n    \n    Opal.def(self, '$instance_method', $Module_instance_method$38 = function $$instance_method(name) {\n      var self = this;\n\n      \n      var meth = self.$$prototype['$' + name];\n\n      if (!meth || meth.$$stub) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"undefined method `\" + (name) + \"' for class `\" + (self.$name()) + \"'\", name));\n      }\n\n      return $$($nesting, 'UnboundMethod').$new(self, meth.$$owner || self, meth, name);\n    \n    }, $Module_instance_method$38.$$arity = 1);\n    \n    Opal.def(self, '$instance_methods', $Module_instance_methods$39 = function $$instance_methods(include_super) {\n      var self = this;\n\n      \n      \n      if (include_super == null) {\n        include_super = true;\n      };\n      \n      if ($truthy(include_super)) {\n        return Opal.instance_methods(self);\n      } else {\n        return Opal.own_instance_methods(self);\n      }\n    ;\n    }, $Module_instance_methods$39.$$arity = -1);\n    \n    Opal.def(self, '$included', $Module_included$40 = function $$included(mod) {\n      var self = this;\n\n      return nil\n    }, $Module_included$40.$$arity = 1);\n    \n    Opal.def(self, '$extended', $Module_extended$41 = function $$extended(mod) {\n      var self = this;\n\n      return nil\n    }, $Module_extended$41.$$arity = 1);\n    \n    Opal.def(self, '$extend_object', $Module_extend_object$42 = function $$extend_object(object) {\n      var self = this;\n\n      return nil\n    }, $Module_extend_object$42.$$arity = 1);\n    \n    Opal.def(self, '$method_added', $Module_method_added$43 = function $$method_added($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Module_method_added$43.$$arity = -1);\n    \n    Opal.def(self, '$method_removed', $Module_method_removed$44 = function $$method_removed($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Module_method_removed$44.$$arity = -1);\n    \n    Opal.def(self, '$method_undefined', $Module_method_undefined$45 = function $$method_undefined($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Module_method_undefined$45.$$arity = -1);\n    \n    Opal.def(self, '$module_eval', $Module_module_eval$46 = function $$module_eval($a) {\n      var $iter = $Module_module_eval$46.$$p, block = $iter || nil, $post_args, args, $b, $$47, self = this, string = nil, file = nil, _lineno = nil, default_eval_options = nil, compiling_options = nil, compiled = nil;\n\n      if ($iter) $Module_module_eval$46.$$p = null;\n      \n      \n      if ($iter) $Module_module_eval$46.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(($truthy($b = block['$nil?']()) ? !!Opal.compile : $b))) {\n        \n        if ($truthy($range(1, 3, false)['$cover?'](args.$size()))) {\n        } else {\n          $$($nesting, 'Kernel').$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (0 for 1..3)\")\n        };\n        $b = [].concat(Opal.to_a(args)), (string = ($b[0] == null ? nil : $b[0])), (file = ($b[1] == null ? nil : $b[1])), (_lineno = ($b[2] == null ? nil : $b[2])), $b;\n        default_eval_options = $hash2([\"file\", \"eval\"], {\"file\": ($truthy($b = file) ? $b : \"(eval)\"), \"eval\": true});\n        compiling_options = Opal.hash({ arity_check: false }).$merge(default_eval_options);\n        compiled = $$($nesting, 'Opal').$compile(string, compiling_options);\n        block = $send($$($nesting, 'Kernel'), 'proc', [], ($$47 = function(){var self = $$47.$$s || this;\n\n        \n          return (function(self) {\n            return eval(compiled);\n          })(self)\n        }, $$47.$$s = self, $$47.$$arity = 0, $$47));\n      } else if ($truthy(args['$any?']())) {\n        $$($nesting, 'Kernel').$raise($$($nesting, 'ArgumentError'), \"\" + (\"\" + \"wrong number of arguments (\" + (args.$size()) + \" for 0)\") + \"\\n\\n  NOTE:If you want to enable passing a String argument please add \\\"require 'opal-parser'\\\" to your script\\n\")};\n      \n      var old = block.$$s,\n          result;\n\n      block.$$s = null;\n      result = block.apply(self, [self]);\n      block.$$s = old;\n\n      return result;\n    ;\n    }, $Module_module_eval$46.$$arity = -1);\n    Opal.alias(self, \"class_eval\", \"module_eval\");\n    \n    Opal.def(self, '$module_exec', $Module_module_exec$48 = function $$module_exec($a) {\n      var $iter = $Module_module_exec$48.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Module_module_exec$48.$$p = null;\n      \n      \n      if ($iter) $Module_module_exec$48.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      if (block === nil) {\n        self.$raise($$($nesting, 'LocalJumpError'), \"no block given\")\n      }\n\n      var block_self = block.$$s, result;\n\n      block.$$s = null;\n      result = block.apply(self, args);\n      block.$$s = block_self;\n\n      return result;\n    ;\n    }, $Module_module_exec$48.$$arity = -1);\n    Opal.alias(self, \"class_exec\", \"module_exec\");\n    \n    Opal.def(self, '$method_defined?', $Module_method_defined$ques$49 = function(method) {\n      var self = this;\n\n      \n      var body = self.$$prototype['$' + method];\n      return (!!body) && !body.$$stub;\n    \n    }, $Module_method_defined$ques$49.$$arity = 1);\n    \n    Opal.def(self, '$module_function', $Module_module_function$50 = function $$module_function($a) {\n      var $post_args, methods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      methods = $post_args;;\n      \n      if (methods.length === 0) {\n        self.$$module_function = true;\n      }\n      else {\n        for (var i = 0, length = methods.length; i < length; i++) {\n          var meth = methods[i],\n              id   = '$' + meth,\n              func = self.$$prototype[id];\n\n          Opal.defs(self, id, func);\n        }\n      }\n\n      return self;\n    ;\n    }, $Module_module_function$50.$$arity = -1);\n    \n    Opal.def(self, '$name', $Module_name$51 = function $$name() {\n      var self = this;\n\n      \n      if (self.$$full_name) {\n        return self.$$full_name;\n      }\n\n      var result = [], base = self;\n\n      while (base) {\n        // Give up if any of the ancestors is unnamed\n        if (base.$$name === nil || base.$$name == null) return nil;\n\n        result.unshift(base.$$name);\n\n        base = base.$$base_module;\n\n        if (base === Opal.Object) {\n          break;\n        }\n      }\n\n      if (result.length === 0) {\n        return nil;\n      }\n\n      return self.$$full_name = result.join('::');\n    \n    }, $Module_name$51.$$arity = 0);\n    \n    Opal.def(self, '$prepend', $Module_prepend$52 = function $$prepend($a) {\n      var $post_args, mods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      mods = $post_args;;\n      \n      if (mods.length === 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (given 0, expected 1+)\")\n      }\n\n      for (var i = mods.length - 1; i >= 0; i--) {\n        var mod = mods[i];\n\n        if (!mod.$$is_module) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((mod).$class()) + \" (expected Module)\");\n        }\n\n        (mod).$prepend_features(self);\n        (mod).$prepended(self);\n      }\n    ;\n      return self;\n    }, $Module_prepend$52.$$arity = -1);\n    \n    Opal.def(self, '$prepend_features', $Module_prepend_features$53 = function $$prepend_features(prepender) {\n      var self = this;\n\n      \n      \n      if (!self.$$is_module) {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + (self.$class()) + \" (expected Module)\");\n      }\n\n      Opal.prepend_features(self, prepender)\n    ;\n      return self;\n    }, $Module_prepend_features$53.$$arity = 1);\n    \n    Opal.def(self, '$prepended', $Module_prepended$54 = function $$prepended(mod) {\n      var self = this;\n\n      return nil\n    }, $Module_prepended$54.$$arity = 1);\n    \n    Opal.def(self, '$remove_const', $Module_remove_const$55 = function $$remove_const(name) {\n      var self = this;\n\n      return Opal.const_remove(self, name);\n    }, $Module_remove_const$55.$$arity = 1);\n    \n    Opal.def(self, '$to_s', $Module_to_s$56 = function $$to_s() {\n      var $a, self = this;\n\n      return ($truthy($a = Opal.Module.$name.call(self)) ? $a : \"\" + \"#<\" + (self.$$is_module ? 'Module' : 'Class') + \":0x\" + (self.$__id__().$to_s(16)) + \">\")\n    }, $Module_to_s$56.$$arity = 0);\n    \n    Opal.def(self, '$undef_method', $Module_undef_method$57 = function $$undef_method($a) {\n      var $post_args, names, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      names = $post_args;;\n      \n      for (var i = 0, length = names.length; i < length; i++) {\n        Opal.udef(self, \"$\" + names[i]);\n      }\n    ;\n      return self;\n    }, $Module_undef_method$57.$$arity = -1);\n    \n    Opal.def(self, '$instance_variables', $Module_instance_variables$58 = function $$instance_variables() {\n      var self = this, consts = nil;\n\n      \n      consts = (Opal.Module.$$nesting = $nesting, self.$constants());\n      \n      var result = [];\n\n      for (var name in self) {\n        if (self.hasOwnProperty(name) && name.charAt(0) !== '$' && name !== 'constructor' && !consts['$include?'](name)) {\n          result.push('@' + name);\n        }\n      }\n\n      return result;\n    ;\n    }, $Module_instance_variables$58.$$arity = 0);\n    \n    Opal.def(self, '$dup', $Module_dup$59 = function $$dup() {\n      var $iter = $Module_dup$59.$$p, $yield = $iter || nil, self = this, copy = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Module_dup$59.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      copy = $send(self, Opal.find_super_dispatcher(self, 'dup', $Module_dup$59, false), $zuper, $iter);\n      copy.$copy_class_variables(self);\n      copy.$copy_constants(self);\n      return copy;\n    }, $Module_dup$59.$$arity = 0);\n    \n    Opal.def(self, '$copy_class_variables', $Module_copy_class_variables$60 = function $$copy_class_variables(other) {\n      var self = this;\n\n      \n      for (var name in other.$$cvars) {\n        self.$$cvars[name] = other.$$cvars[name];\n      }\n    \n    }, $Module_copy_class_variables$60.$$arity = 1);\n    return (Opal.def(self, '$copy_constants', $Module_copy_constants$61 = function $$copy_constants(other) {\n      var self = this;\n\n      \n      var name, other_constants = other.$$const;\n\n      for (name in other_constants) {\n        Opal.const_set(self, name, other_constants[name]);\n      }\n    \n    }, $Module_copy_constants$61.$$arity = 1), nil) && 'copy_constants';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/class\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send;\n\n  Opal.add_stubs(['$require', '$class_eval', '$to_proc', '$initialize_copy', '$allocate', '$name', '$to_s']);\n  \n  self.$require(\"corelib/module\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Class');\n\n    var $nesting = [self].concat($parent_nesting), $Class_new$1, $Class_allocate$2, $Class_inherited$3, $Class_initialize_dup$4, $Class_new$5, $Class_superclass$6, $Class_to_s$7;\n\n    \n    Opal.defs(self, '$new', $Class_new$1 = function(superclass) {\n      var $iter = $Class_new$1.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Class_new$1.$$p = null;\n      \n      \n      if ($iter) $Class_new$1.$$p = null;;\n      \n      if (superclass == null) {\n        superclass = $$($nesting, 'Object');\n      };\n      \n      if (!superclass.$$is_class) {\n        throw Opal.TypeError.$new(\"superclass must be a Class\");\n      }\n\n      var klass = Opal.allocate_class(nil, superclass);\n      superclass.$inherited(klass);\n      (function() {if ((block !== nil)) {\n        return $send((klass), 'class_eval', [], block.$to_proc())\n      } else {\n        return nil\n      }; return nil; })()\n      return klass;\n    ;\n    }, $Class_new$1.$$arity = -1);\n    \n    Opal.def(self, '$allocate', $Class_allocate$2 = function $$allocate() {\n      var self = this;\n\n      \n      var obj = new self.$$constructor();\n      obj.$$id = Opal.uid();\n      return obj;\n    \n    }, $Class_allocate$2.$$arity = 0);\n    \n    Opal.def(self, '$inherited', $Class_inherited$3 = function $$inherited(cls) {\n      var self = this;\n\n      return nil\n    }, $Class_inherited$3.$$arity = 1);\n    \n    Opal.def(self, '$initialize_dup', $Class_initialize_dup$4 = function $$initialize_dup(original) {\n      var self = this;\n\n      \n      self.$initialize_copy(original);\n      \n      self.$$name = null;\n      self.$$full_name = null;\n    ;\n    }, $Class_initialize_dup$4.$$arity = 1);\n    \n    Opal.def(self, '$new', $Class_new$5 = function($a) {\n      var $iter = $Class_new$5.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Class_new$5.$$p = null;\n      \n      \n      if ($iter) $Class_new$5.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var object = self.$allocate();\n      Opal.send(object, object.$initialize, args, block);\n      return object;\n    ;\n    }, $Class_new$5.$$arity = -1);\n    \n    Opal.def(self, '$superclass', $Class_superclass$6 = function $$superclass() {\n      var self = this;\n\n      return self.$$super || nil;\n    }, $Class_superclass$6.$$arity = 0);\n    return (Opal.def(self, '$to_s', $Class_to_s$7 = function $$to_s() {\n      var $iter = $Class_to_s$7.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Class_to_s$7.$$p = null;\n      \n      var singleton_of = self.$$singleton_of;\n\n      if (singleton_of && (singleton_of.$$is_a_module)) {\n        return \"\" + \"#<Class:\" + ((singleton_of).$name()) + \">\";\n      }\n      else if (singleton_of) {\n        // a singleton class created from an object\n        return \"\" + \"#<Class:#<\" + ((singleton_of.$$class).$name()) + \":0x\" + ((Opal.id(singleton_of)).$to_s(16)) + \">>\";\n      }\n      return $send(self, Opal.find_super_dispatcher(self, 'to_s', $Class_to_s$7, false), [], null);\n    \n    }, $Class_to_s$7.$$arity = 0), nil) && 'to_s';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/basic_object\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $range = Opal.range, $hash2 = Opal.hash2, $send = Opal.send;\n\n  Opal.add_stubs(['$==', '$!', '$nil?', '$cover?', '$size', '$raise', '$merge', '$compile', '$proc', '$any?', '$inspect', '$new']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'BasicObject');\n\n    var $nesting = [self].concat($parent_nesting), $BasicObject_initialize$1, $BasicObject_$eq_eq$2, $BasicObject_eql$ques$3, $BasicObject___id__$4, $BasicObject___send__$5, $BasicObject_$excl$6, $BasicObject_$not_eq$7, $BasicObject_instance_eval$8, $BasicObject_instance_exec$10, $BasicObject_singleton_method_added$11, $BasicObject_singleton_method_removed$12, $BasicObject_singleton_method_undefined$13, $BasicObject_class$14, $BasicObject_method_missing$15;\n\n    \n    \n    Opal.def(self, '$initialize', $BasicObject_initialize$1 = function $$initialize($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $BasicObject_initialize$1.$$arity = -1);\n    \n    Opal.def(self, '$==', $BasicObject_$eq_eq$2 = function(other) {\n      var self = this;\n\n      return self === other;\n    }, $BasicObject_$eq_eq$2.$$arity = 1);\n    \n    Opal.def(self, '$eql?', $BasicObject_eql$ques$3 = function(other) {\n      var self = this;\n\n      return self['$=='](other)\n    }, $BasicObject_eql$ques$3.$$arity = 1);\n    Opal.alias(self, \"equal?\", \"==\");\n    \n    Opal.def(self, '$__id__', $BasicObject___id__$4 = function $$__id__() {\n      var self = this;\n\n      \n      if (self.$$id != null) {\n        return self.$$id;\n      }\n      Opal.defineProperty(self, '$$id', Opal.uid());\n      return self.$$id;\n    \n    }, $BasicObject___id__$4.$$arity = 0);\n    \n    Opal.def(self, '$__send__', $BasicObject___send__$5 = function $$__send__(symbol, $a) {\n      var $iter = $BasicObject___send__$5.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $BasicObject___send__$5.$$p = null;\n      \n      \n      if ($iter) $BasicObject___send__$5.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      args = $post_args;;\n      \n      var func = self['$' + symbol]\n\n      if (func) {\n        if (block !== nil) {\n          func.$$p = block;\n        }\n\n        return func.apply(self, args);\n      }\n\n      if (block !== nil) {\n        self.$method_missing.$$p = block;\n      }\n\n      return self.$method_missing.apply(self, [symbol].concat(args));\n    ;\n    }, $BasicObject___send__$5.$$arity = -2);\n    \n    Opal.def(self, '$!', $BasicObject_$excl$6 = function() {\n      var self = this;\n\n      return false\n    }, $BasicObject_$excl$6.$$arity = 0);\n    \n    Opal.def(self, '$!=', $BasicObject_$not_eq$7 = function(other) {\n      var self = this;\n\n      return self['$=='](other)['$!']()\n    }, $BasicObject_$not_eq$7.$$arity = 1);\n    \n    Opal.def(self, '$instance_eval', $BasicObject_instance_eval$8 = function $$instance_eval($a) {\n      var $iter = $BasicObject_instance_eval$8.$$p, block = $iter || nil, $post_args, args, $b, $$9, self = this, string = nil, file = nil, _lineno = nil, default_eval_options = nil, compiling_options = nil, compiled = nil;\n\n      if ($iter) $BasicObject_instance_eval$8.$$p = null;\n      \n      \n      if ($iter) $BasicObject_instance_eval$8.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(($truthy($b = block['$nil?']()) ? !!Opal.compile : $b))) {\n        \n        if ($truthy($range(1, 3, false)['$cover?'](args.$size()))) {\n        } else {\n          $$$('::', 'Kernel').$raise($$$('::', 'ArgumentError'), \"wrong number of arguments (0 for 1..3)\")\n        };\n        $b = [].concat(Opal.to_a(args)), (string = ($b[0] == null ? nil : $b[0])), (file = ($b[1] == null ? nil : $b[1])), (_lineno = ($b[2] == null ? nil : $b[2])), $b;\n        default_eval_options = $hash2([\"file\", \"eval\"], {\"file\": ($truthy($b = file) ? $b : \"(eval)\"), \"eval\": true});\n        compiling_options = Opal.hash({ arity_check: false }).$merge(default_eval_options);\n        compiled = $$$('::', 'Opal').$compile(string, compiling_options);\n        block = $send($$$('::', 'Kernel'), 'proc', [], ($$9 = function(){var self = $$9.$$s || this;\n\n        \n          return (function(self) {\n            return eval(compiled);\n          })(self)\n        }, $$9.$$s = self, $$9.$$arity = 0, $$9));\n      } else if ($truthy(args['$any?']())) {\n        $$$('::', 'Kernel').$raise($$$('::', 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (args.$size()) + \" for 0)\")};\n      \n      var old = block.$$s,\n          result;\n\n      block.$$s = null;\n\n      // Need to pass $$eval so that method definitions know if this is\n      // being done on a class/module. Cannot be compiler driven since\n      // send(:instance_eval) needs to work.\n      if (self.$$is_a_module) {\n        self.$$eval = true;\n        try {\n          result = block.call(self, self);\n        }\n        finally {\n          self.$$eval = false;\n        }\n      }\n      else {\n        result = block.call(self, self);\n      }\n\n      block.$$s = old;\n\n      return result;\n    ;\n    }, $BasicObject_instance_eval$8.$$arity = -1);\n    \n    Opal.def(self, '$instance_exec', $BasicObject_instance_exec$10 = function $$instance_exec($a) {\n      var $iter = $BasicObject_instance_exec$10.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $BasicObject_instance_exec$10.$$p = null;\n      \n      \n      if ($iter) $BasicObject_instance_exec$10.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(block)) {\n      } else {\n        $$$('::', 'Kernel').$raise($$$('::', 'ArgumentError'), \"no block given\")\n      };\n      \n      var block_self = block.$$s,\n          result;\n\n      block.$$s = null;\n\n      if (self.$$is_a_module) {\n        self.$$eval = true;\n        try {\n          result = block.apply(self, args);\n        }\n        finally {\n          self.$$eval = false;\n        }\n      }\n      else {\n        result = block.apply(self, args);\n      }\n\n      block.$$s = block_self;\n\n      return result;\n    ;\n    }, $BasicObject_instance_exec$10.$$arity = -1);\n    \n    Opal.def(self, '$singleton_method_added', $BasicObject_singleton_method_added$11 = function $$singleton_method_added($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $BasicObject_singleton_method_added$11.$$arity = -1);\n    \n    Opal.def(self, '$singleton_method_removed', $BasicObject_singleton_method_removed$12 = function $$singleton_method_removed($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $BasicObject_singleton_method_removed$12.$$arity = -1);\n    \n    Opal.def(self, '$singleton_method_undefined', $BasicObject_singleton_method_undefined$13 = function $$singleton_method_undefined($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $BasicObject_singleton_method_undefined$13.$$arity = -1);\n    \n    Opal.def(self, '$class', $BasicObject_class$14 = function() {\n      var self = this;\n\n      return self.$$class;\n    }, $BasicObject_class$14.$$arity = 0);\n    return (Opal.def(self, '$method_missing', $BasicObject_method_missing$15 = function $$method_missing(symbol, $a) {\n      var $iter = $BasicObject_method_missing$15.$$p, block = $iter || nil, $post_args, args, self = this, message = nil;\n\n      if ($iter) $BasicObject_method_missing$15.$$p = null;\n      \n      \n      if ($iter) $BasicObject_method_missing$15.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      args = $post_args;;\n      message = (function() {if ($truthy(self.$inspect && !self.$inspect.$$stub)) {\n        return \"\" + \"undefined method `\" + (symbol) + \"' for \" + (self.$inspect()) + \":\" + (self.$$class)\n      } else {\n        return \"\" + \"undefined method `\" + (symbol) + \"' for \" + (self.$$class)\n      }; return nil; })();\n      return $$$('::', 'Kernel').$raise($$$('::', 'NoMethodError').$new(message, symbol));\n    }, $BasicObject_method_missing$15.$$arity = -2), nil) && 'method_missing';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/kernel\"] = function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy, $gvars = Opal.gvars, $hash2 = Opal.hash2, $send = Opal.send, $klass = Opal.klass;\n\n  Opal.add_stubs(['$raise', '$new', '$inspect', '$!', '$=~', '$==', '$object_id', '$class', '$coerce_to?', '$<<', '$allocate', '$copy_instance_variables', '$copy_singleton_methods', '$initialize_clone', '$initialize_copy', '$define_method', '$singleton_class', '$to_proc', '$initialize_dup', '$for', '$empty?', '$pop', '$call', '$coerce_to', '$append_features', '$extend_object', '$extended', '$__id__', '$to_s', '$instance_variable_name!', '$respond_to?', '$to_int', '$coerce_to!', '$Integer', '$nil?', '$===', '$enum_for', '$result', '$any?', '$print', '$format', '$puts', '$each', '$<=', '$length', '$[]', '$exception', '$is_a?', '$rand', '$respond_to_missing?', '$try_convert!', '$expand_path', '$join', '$start_with?', '$new_seed', '$srand', '$sym', '$arg', '$open', '$include']);\n  \n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_method_missing$1, $Kernel_$eq_tilde$2, $Kernel_$excl_tilde$3, $Kernel_$eq_eq_eq$4, $Kernel_$lt_eq_gt$5, $Kernel_method$6, $Kernel_methods$7, $Kernel_public_methods$8, $Kernel_Array$9, $Kernel_at_exit$10, $Kernel_caller$11, $Kernel_class$12, $Kernel_copy_instance_variables$13, $Kernel_copy_singleton_methods$14, $Kernel_clone$15, $Kernel_initialize_clone$16, $Kernel_define_singleton_method$17, $Kernel_dup$18, $Kernel_initialize_dup$19, $Kernel_enum_for$20, $Kernel_equal$ques$21, $Kernel_exit$22, $Kernel_extend$23, $Kernel_hash$24, $Kernel_initialize_copy$25, $Kernel_inspect$26, $Kernel_instance_of$ques$27, $Kernel_instance_variable_defined$ques$28, $Kernel_instance_variable_get$29, $Kernel_instance_variable_set$30, $Kernel_remove_instance_variable$31, $Kernel_instance_variables$32, $Kernel_Integer$33, $Kernel_Float$34, $Kernel_Hash$35, $Kernel_is_a$ques$36, $Kernel_itself$37, $Kernel_lambda$38, $Kernel_load$39, $Kernel_loop$40, $Kernel_nil$ques$42, $Kernel_printf$43, $Kernel_proc$44, $Kernel_puts$45, $Kernel_p$46, $Kernel_print$48, $Kernel_warn$49, $Kernel_raise$50, $Kernel_rand$51, $Kernel_respond_to$ques$52, $Kernel_respond_to_missing$ques$53, $Kernel_require$54, $Kernel_require_relative$55, $Kernel_require_tree$56, $Kernel_singleton_class$57, $Kernel_sleep$58, $Kernel_srand$59, $Kernel_String$60, $Kernel_tap$61, $Kernel_to_proc$62, $Kernel_to_s$63, $Kernel_catch$64, $Kernel_throw$65, $Kernel_open$66, $Kernel_yield_self$67;\n\n    \n    \n    Opal.def(self, '$method_missing', $Kernel_method_missing$1 = function $$method_missing(symbol, $a) {\n      var $iter = $Kernel_method_missing$1.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Kernel_method_missing$1.$$p = null;\n      \n      \n      if ($iter) $Kernel_method_missing$1.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      args = $post_args;;\n      return self.$raise($$($nesting, 'NoMethodError').$new(\"\" + \"undefined method `\" + (symbol) + \"' for \" + (self.$inspect()), symbol, args));\n    }, $Kernel_method_missing$1.$$arity = -2);\n    \n    Opal.def(self, '$=~', $Kernel_$eq_tilde$2 = function(obj) {\n      var self = this;\n\n      return false\n    }, $Kernel_$eq_tilde$2.$$arity = 1);\n    \n    Opal.def(self, '$!~', $Kernel_$excl_tilde$3 = function(obj) {\n      var self = this;\n\n      return self['$=~'](obj)['$!']()\n    }, $Kernel_$excl_tilde$3.$$arity = 1);\n    \n    Opal.def(self, '$===', $Kernel_$eq_eq_eq$4 = function(other) {\n      var $a, self = this;\n\n      return ($truthy($a = self.$object_id()['$=='](other.$object_id())) ? $a : self['$=='](other))\n    }, $Kernel_$eq_eq_eq$4.$$arity = 1);\n    \n    Opal.def(self, '$<=>', $Kernel_$lt_eq_gt$5 = function(other) {\n      var self = this;\n\n      \n      // set guard for infinite recursion\n      self.$$comparable = true;\n\n      var x = self['$=='](other);\n\n      if (x && x !== nil) {\n        return 0;\n      }\n\n      return nil;\n    \n    }, $Kernel_$lt_eq_gt$5.$$arity = 1);\n    \n    Opal.def(self, '$method', $Kernel_method$6 = function $$method(name) {\n      var self = this;\n\n      \n      var meth = self['$' + name];\n\n      if (!meth || meth.$$stub) {\n        self.$raise($$($nesting, 'NameError').$new(\"\" + \"undefined method `\" + (name) + \"' for class `\" + (self.$class()) + \"'\", name));\n      }\n\n      return $$($nesting, 'Method').$new(self, meth.$$owner || self.$class(), meth, name);\n    \n    }, $Kernel_method$6.$$arity = 1);\n    \n    Opal.def(self, '$methods', $Kernel_methods$7 = function $$methods(all) {\n      var self = this;\n\n      \n      \n      if (all == null) {\n        all = true;\n      };\n      \n      if ($truthy(all)) {\n        return Opal.methods(self);\n      } else {\n        return Opal.own_methods(self);\n      }\n    ;\n    }, $Kernel_methods$7.$$arity = -1);\n    \n    Opal.def(self, '$public_methods', $Kernel_public_methods$8 = function $$public_methods(all) {\n      var self = this;\n\n      \n      \n      if (all == null) {\n        all = true;\n      };\n      \n      if ($truthy(all)) {\n        return Opal.methods(self);\n      } else {\n        return Opal.receiver_methods(self);\n      }\n    ;\n    }, $Kernel_public_methods$8.$$arity = -1);\n    \n    Opal.def(self, '$Array', $Kernel_Array$9 = function $$Array(object) {\n      var self = this;\n\n      \n      var coerced;\n\n      if (object === nil) {\n        return [];\n      }\n\n      if (object.$$is_array) {\n        return object;\n      }\n\n      coerced = $$($nesting, 'Opal')['$coerce_to?'](object, $$($nesting, 'Array'), \"to_ary\");\n      if (coerced !== nil) { return coerced; }\n\n      coerced = $$($nesting, 'Opal')['$coerce_to?'](object, $$($nesting, 'Array'), \"to_a\");\n      if (coerced !== nil) { return coerced; }\n\n      return [object];\n    \n    }, $Kernel_Array$9.$$arity = 1);\n    \n    Opal.def(self, '$at_exit', $Kernel_at_exit$10 = function $$at_exit() {\n      var $iter = $Kernel_at_exit$10.$$p, block = $iter || nil, $a, self = this;\n      if ($gvars.__at_exit__ == null) $gvars.__at_exit__ = nil;\n\n      if ($iter) $Kernel_at_exit$10.$$p = null;\n      \n      \n      if ($iter) $Kernel_at_exit$10.$$p = null;;\n      $gvars.__at_exit__ = ($truthy($a = $gvars.__at_exit__) ? $a : []);\n      return $gvars.__at_exit__['$<<'](block);\n    }, $Kernel_at_exit$10.$$arity = 0);\n    \n    Opal.def(self, '$caller', $Kernel_caller$11 = function $$caller($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return [];\n    }, $Kernel_caller$11.$$arity = -1);\n    \n    Opal.def(self, '$class', $Kernel_class$12 = function() {\n      var self = this;\n\n      return self.$$class;\n    }, $Kernel_class$12.$$arity = 0);\n    \n    Opal.def(self, '$copy_instance_variables', $Kernel_copy_instance_variables$13 = function $$copy_instance_variables(other) {\n      var self = this;\n\n      \n      var keys = Object.keys(other), i, ii, name;\n      for (i = 0, ii = keys.length; i < ii; i++) {\n        name = keys[i];\n        if (name.charAt(0) !== '$' && other.hasOwnProperty(name)) {\n          self[name] = other[name];\n        }\n      }\n    \n    }, $Kernel_copy_instance_variables$13.$$arity = 1);\n    \n    Opal.def(self, '$copy_singleton_methods', $Kernel_copy_singleton_methods$14 = function $$copy_singleton_methods(other) {\n      var self = this;\n\n      \n      var i, name, names, length;\n\n      if (other.hasOwnProperty('$$meta')) {\n        var other_singleton_class = Opal.get_singleton_class(other);\n        var self_singleton_class = Opal.get_singleton_class(self);\n        names = Object.getOwnPropertyNames(other_singleton_class.$$prototype);\n\n        for (i = 0, length = names.length; i < length; i++) {\n          name = names[i];\n          if (Opal.is_method(name)) {\n            self_singleton_class.$$prototype[name] = other_singleton_class.$$prototype[name];\n          }\n        }\n\n        self_singleton_class.$$const = Object.assign({}, other_singleton_class.$$const);\n        Object.setPrototypeOf(\n          self_singleton_class.$$prototype,\n          Object.getPrototypeOf(other_singleton_class.$$prototype)\n        );\n      }\n\n      for (i = 0, names = Object.getOwnPropertyNames(other), length = names.length; i < length; i++) {\n        name = names[i];\n        if (name.charAt(0) === '$' && name.charAt(1) !== '$' && other.hasOwnProperty(name)) {\n          self[name] = other[name];\n        }\n      }\n    \n    }, $Kernel_copy_singleton_methods$14.$$arity = 1);\n    \n    Opal.def(self, '$clone', $Kernel_clone$15 = function $$clone($kwargs) {\n      var freeze, self = this, copy = nil;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      freeze = $kwargs.$$smap[\"freeze\"];\n      if (freeze == null) {\n        freeze = true\n      };\n      copy = self.$class().$allocate();\n      copy.$copy_instance_variables(self);\n      copy.$copy_singleton_methods(self);\n      copy.$initialize_clone(self);\n      return copy;\n    }, $Kernel_clone$15.$$arity = -1);\n    \n    Opal.def(self, '$initialize_clone', $Kernel_initialize_clone$16 = function $$initialize_clone(other) {\n      var self = this;\n\n      return self.$initialize_copy(other)\n    }, $Kernel_initialize_clone$16.$$arity = 1);\n    \n    Opal.def(self, '$define_singleton_method', $Kernel_define_singleton_method$17 = function $$define_singleton_method(name, method) {\n      var $iter = $Kernel_define_singleton_method$17.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Kernel_define_singleton_method$17.$$p = null;\n      \n      \n      if ($iter) $Kernel_define_singleton_method$17.$$p = null;;\n      ;\n      return $send(self.$singleton_class(), 'define_method', [name, method], block.$to_proc());\n    }, $Kernel_define_singleton_method$17.$$arity = -2);\n    \n    Opal.def(self, '$dup', $Kernel_dup$18 = function $$dup() {\n      var self = this, copy = nil;\n\n      \n      copy = self.$class().$allocate();\n      copy.$copy_instance_variables(self);\n      copy.$initialize_dup(self);\n      return copy;\n    }, $Kernel_dup$18.$$arity = 0);\n    \n    Opal.def(self, '$initialize_dup', $Kernel_initialize_dup$19 = function $$initialize_dup(other) {\n      var self = this;\n\n      return self.$initialize_copy(other)\n    }, $Kernel_initialize_dup$19.$$arity = 1);\n    \n    Opal.def(self, '$enum_for', $Kernel_enum_for$20 = function $$enum_for($a, $b) {\n      var $iter = $Kernel_enum_for$20.$$p, block = $iter || nil, $post_args, method, args, self = this;\n\n      if ($iter) $Kernel_enum_for$20.$$p = null;\n      \n      \n      if ($iter) $Kernel_enum_for$20.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      if ($post_args.length > 0) {\n        method = $post_args[0];\n        $post_args.splice(0, 1);\n      }\n      if (method == null) {\n        method = \"each\";\n      };\n      \n      args = $post_args;;\n      return $send($$($nesting, 'Enumerator'), 'for', [self, method].concat(Opal.to_a(args)), block.$to_proc());\n    }, $Kernel_enum_for$20.$$arity = -1);\n    Opal.alias(self, \"to_enum\", \"enum_for\");\n    \n    Opal.def(self, '$equal?', $Kernel_equal$ques$21 = function(other) {\n      var self = this;\n\n      return self === other;\n    }, $Kernel_equal$ques$21.$$arity = 1);\n    \n    Opal.def(self, '$exit', $Kernel_exit$22 = function $$exit(status) {\n      var $a, self = this, block = nil;\n      if ($gvars.__at_exit__ == null) $gvars.__at_exit__ = nil;\n\n      \n      \n      if (status == null) {\n        status = true;\n      };\n      $gvars.__at_exit__ = ($truthy($a = $gvars.__at_exit__) ? $a : []);\n      while (!($truthy($gvars.__at_exit__['$empty?']()))) {\n        \n        block = $gvars.__at_exit__.$pop();\n        block.$call();\n      };\n      \n      if (status.$$is_boolean) {\n        status = status ? 0 : 1;\n      } else {\n        status = $$($nesting, 'Opal').$coerce_to(status, $$($nesting, 'Integer'), \"to_int\")\n      }\n\n      Opal.exit(status);\n    ;\n      return nil;\n    }, $Kernel_exit$22.$$arity = -1);\n    \n    Opal.def(self, '$extend', $Kernel_extend$23 = function $$extend($a) {\n      var $post_args, mods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      mods = $post_args;;\n      \n      var singleton = self.$singleton_class();\n\n      for (var i = mods.length - 1; i >= 0; i--) {\n        var mod = mods[i];\n\n        if (!mod.$$is_module) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((mod).$class()) + \" (expected Module)\");\n        }\n\n        (mod).$append_features(singleton);\n        (mod).$extend_object(self);\n        (mod).$extended(self);\n      }\n    ;\n      return self;\n    }, $Kernel_extend$23.$$arity = -1);\n    \n    Opal.def(self, '$hash', $Kernel_hash$24 = function $$hash() {\n      var self = this;\n\n      return self.$__id__()\n    }, $Kernel_hash$24.$$arity = 0);\n    \n    Opal.def(self, '$initialize_copy', $Kernel_initialize_copy$25 = function $$initialize_copy(other) {\n      var self = this;\n\n      return nil\n    }, $Kernel_initialize_copy$25.$$arity = 1);\n    \n    Opal.def(self, '$inspect', $Kernel_inspect$26 = function $$inspect() {\n      var self = this;\n\n      return self.$to_s()\n    }, $Kernel_inspect$26.$$arity = 0);\n    \n    Opal.def(self, '$instance_of?', $Kernel_instance_of$ques$27 = function(klass) {\n      var self = this;\n\n      \n      if (!klass.$$is_class && !klass.$$is_module) {\n        self.$raise($$($nesting, 'TypeError'), \"class or module required\");\n      }\n\n      return self.$$class === klass;\n    \n    }, $Kernel_instance_of$ques$27.$$arity = 1);\n    \n    Opal.def(self, '$instance_variable_defined?', $Kernel_instance_variable_defined$ques$28 = function(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$instance_variable_name!'](name);\n      return Opal.hasOwnProperty.call(self, name.substr(1));;\n    }, $Kernel_instance_variable_defined$ques$28.$$arity = 1);\n    \n    Opal.def(self, '$instance_variable_get', $Kernel_instance_variable_get$29 = function $$instance_variable_get(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$instance_variable_name!'](name);\n      \n      var ivar = self[Opal.ivar(name.substr(1))];\n\n      return ivar == null ? nil : ivar;\n    ;\n    }, $Kernel_instance_variable_get$29.$$arity = 1);\n    \n    Opal.def(self, '$instance_variable_set', $Kernel_instance_variable_set$30 = function $$instance_variable_set(name, value) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$instance_variable_name!'](name);\n      return self[Opal.ivar(name.substr(1))] = value;;\n    }, $Kernel_instance_variable_set$30.$$arity = 2);\n    \n    Opal.def(self, '$remove_instance_variable', $Kernel_remove_instance_variable$31 = function $$remove_instance_variable(name) {\n      var self = this;\n\n      \n      name = $$($nesting, 'Opal')['$instance_variable_name!'](name);\n      \n      var key = Opal.ivar(name.substr(1)),\n          val;\n      if (self.hasOwnProperty(key)) {\n        val = self[key];\n        delete self[key];\n        return val;\n      }\n    ;\n      return self.$raise($$($nesting, 'NameError'), \"\" + \"instance variable \" + (name) + \" not defined\");\n    }, $Kernel_remove_instance_variable$31.$$arity = 1);\n    \n    Opal.def(self, '$instance_variables', $Kernel_instance_variables$32 = function $$instance_variables() {\n      var self = this;\n\n      \n      var result = [], ivar;\n\n      for (var name in self) {\n        if (self.hasOwnProperty(name) && name.charAt(0) !== '$') {\n          if (name.substr(-1) === '$') {\n            ivar = name.slice(0, name.length - 1);\n          } else {\n            ivar = name;\n          }\n          result.push('@' + ivar);\n        }\n      }\n\n      return result;\n    \n    }, $Kernel_instance_variables$32.$$arity = 0);\n    \n    Opal.def(self, '$Integer', $Kernel_Integer$33 = function $$Integer(value, base) {\n      var self = this;\n\n      \n      ;\n      \n      var i, str, base_digits;\n\n      if (!value.$$is_string) {\n        if (base !== undefined) {\n          self.$raise($$($nesting, 'ArgumentError'), \"base specified for non string value\")\n        }\n        if (value === nil) {\n          self.$raise($$($nesting, 'TypeError'), \"can't convert nil into Integer\")\n        }\n        if (value.$$is_number) {\n          if (value === Infinity || value === -Infinity || isNaN(value)) {\n            self.$raise($$($nesting, 'FloatDomainError'), value)\n          }\n          return Math.floor(value);\n        }\n        if (value['$respond_to?'](\"to_int\")) {\n          i = value.$to_int();\n          if (i !== nil) {\n            return i;\n          }\n        }\n        return $$($nesting, 'Opal')['$coerce_to!'](value, $$($nesting, 'Integer'), \"to_i\");\n      }\n\n      if (value === \"0\") {\n        return 0;\n      }\n\n      if (base === undefined) {\n        base = 0;\n      } else {\n        base = $$($nesting, 'Opal').$coerce_to(base, $$($nesting, 'Integer'), \"to_int\");\n        if (base === 1 || base < 0 || base > 36) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid radix \" + (base))\n        }\n      }\n\n      str = value.toLowerCase();\n\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\n\n      str = str.replace(/^(\\s*[+-]?)(0[bodx]?)/, function (_, head, flag) {\n        switch (flag) {\n        case '0b':\n          if (base === 0 || base === 2) {\n            base = 2;\n            return head;\n          }\n        case '0':\n        case '0o':\n          if (base === 0 || base === 8) {\n            base = 8;\n            return head;\n          }\n        case '0d':\n          if (base === 0 || base === 10) {\n            base = 10;\n            return head;\n          }\n        case '0x':\n          if (base === 0 || base === 16) {\n            base = 16;\n            return head;\n          }\n        }\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid value for Integer(): \\\"\" + (value) + \"\\\"\")\n      });\n\n      base = (base === 0 ? 10 : base);\n\n      base_digits = '0-' + (base <= 10 ? base - 1 : '9a-' + String.fromCharCode(97 + (base - 11)));\n\n      if (!(new RegExp('^\\\\s*[+-]?[' + base_digits + ']+\\\\s*$')).test(str)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid value for Integer(): \\\"\" + (value) + \"\\\"\")\n      }\n\n      i = parseInt(str, base);\n\n      if (isNaN(i)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid value for Integer(): \\\"\" + (value) + \"\\\"\")\n      }\n\n      return i;\n    ;\n    }, $Kernel_Integer$33.$$arity = -2);\n    \n    Opal.def(self, '$Float', $Kernel_Float$34 = function $$Float(value) {\n      var self = this;\n\n      \n      var str;\n\n      if (value === nil) {\n        self.$raise($$($nesting, 'TypeError'), \"can't convert nil into Float\")\n      }\n\n      if (value.$$is_string) {\n        str = value.toString();\n\n        str = str.replace(/(\\d)_(?=\\d)/g, '$1');\n\n        //Special case for hex strings only:\n        if (/^\\s*[-+]?0[xX][0-9a-fA-F]+\\s*$/.test(str)) {\n          return self.$Integer(str);\n        }\n\n        if (!/^\\s*[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?\\s*$/.test(str)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid value for Float(): \\\"\" + (value) + \"\\\"\")\n        }\n\n        return parseFloat(str);\n      }\n\n      return $$($nesting, 'Opal')['$coerce_to!'](value, $$($nesting, 'Float'), \"to_f\");\n    \n    }, $Kernel_Float$34.$$arity = 1);\n    \n    Opal.def(self, '$Hash', $Kernel_Hash$35 = function $$Hash(arg) {\n      var $a, self = this;\n\n      \n      if ($truthy(($truthy($a = arg['$nil?']()) ? $a : arg['$==']([])))) {\n        return $hash2([], {})};\n      if ($truthy($$($nesting, 'Hash')['$==='](arg))) {\n        return arg};\n      return $$($nesting, 'Opal')['$coerce_to!'](arg, $$($nesting, 'Hash'), \"to_hash\");\n    }, $Kernel_Hash$35.$$arity = 1);\n    \n    Opal.def(self, '$is_a?', $Kernel_is_a$ques$36 = function(klass) {\n      var self = this;\n\n      \n      if (!klass.$$is_class && !klass.$$is_module) {\n        self.$raise($$($nesting, 'TypeError'), \"class or module required\");\n      }\n\n      return Opal.is_a(self, klass);\n    \n    }, $Kernel_is_a$ques$36.$$arity = 1);\n    \n    Opal.def(self, '$itself', $Kernel_itself$37 = function $$itself() {\n      var self = this;\n\n      return self\n    }, $Kernel_itself$37.$$arity = 0);\n    Opal.alias(self, \"kind_of?\", \"is_a?\");\n    \n    Opal.def(self, '$lambda', $Kernel_lambda$38 = function $$lambda() {\n      var $iter = $Kernel_lambda$38.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Kernel_lambda$38.$$p = null;\n      \n      \n      if ($iter) $Kernel_lambda$38.$$p = null;;\n      return Opal.lambda(block);;\n    }, $Kernel_lambda$38.$$arity = 0);\n    \n    Opal.def(self, '$load', $Kernel_load$39 = function $$load(file) {\n      var self = this;\n\n      \n      file = $$($nesting, 'Opal')['$coerce_to!'](file, $$($nesting, 'String'), \"to_str\");\n      return Opal.load(file);\n    }, $Kernel_load$39.$$arity = 1);\n    \n    Opal.def(self, '$loop', $Kernel_loop$40 = function $$loop() {\n      var $$41, $a, $iter = $Kernel_loop$40.$$p, $yield = $iter || nil, self = this, e = nil;\n\n      if ($iter) $Kernel_loop$40.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"loop\"], ($$41 = function(){var self = $$41.$$s || this;\n\n        return $$$($$($nesting, 'Float'), 'INFINITY')}, $$41.$$s = self, $$41.$$arity = 0, $$41))\n      };\n      while ($truthy(true)) {\n        \n        try {\n          Opal.yieldX($yield, [])\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StopIteration')])) {e = $err;\n            try {\n              return e.$result()\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      };\n      return self;\n    }, $Kernel_loop$40.$$arity = 0);\n    \n    Opal.def(self, '$nil?', $Kernel_nil$ques$42 = function() {\n      var self = this;\n\n      return false\n    }, $Kernel_nil$ques$42.$$arity = 0);\n    Opal.alias(self, \"object_id\", \"__id__\");\n    \n    Opal.def(self, '$printf', $Kernel_printf$43 = function $$printf($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(args['$any?']())) {\n        self.$print($send(self, 'format', Opal.to_a(args)))};\n      return nil;\n    }, $Kernel_printf$43.$$arity = -1);\n    \n    Opal.def(self, '$proc', $Kernel_proc$44 = function $$proc() {\n      var $iter = $Kernel_proc$44.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Kernel_proc$44.$$p = null;\n      \n      \n      if ($iter) $Kernel_proc$44.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"tried to create Proc object without a block\")\n      };\n      block.$$is_lambda = false;\n      return block;\n    }, $Kernel_proc$44.$$arity = 0);\n    \n    Opal.def(self, '$puts', $Kernel_puts$45 = function $$puts($a) {\n      var $post_args, strs, self = this;\n      if ($gvars.stdout == null) $gvars.stdout = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      strs = $post_args;;\n      return $send($gvars.stdout, 'puts', Opal.to_a(strs));\n    }, $Kernel_puts$45.$$arity = -1);\n    \n    Opal.def(self, '$p', $Kernel_p$46 = function $$p($a) {\n      var $post_args, args, $$47, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      $send(args, 'each', [], ($$47 = function(obj){var self = $$47.$$s || this;\n        if ($gvars.stdout == null) $gvars.stdout = nil;\n\n      \n        \n        if (obj == null) {\n          obj = nil;\n        };\n        return $gvars.stdout.$puts(obj.$inspect());}, $$47.$$s = self, $$47.$$arity = 1, $$47));\n      if ($truthy($rb_le(args.$length(), 1))) {\n        return args['$[]'](0)\n      } else {\n        return args\n      };\n    }, $Kernel_p$46.$$arity = -1);\n    \n    Opal.def(self, '$print', $Kernel_print$48 = function $$print($a) {\n      var $post_args, strs, self = this;\n      if ($gvars.stdout == null) $gvars.stdout = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      strs = $post_args;;\n      return $send($gvars.stdout, 'print', Opal.to_a(strs));\n    }, $Kernel_print$48.$$arity = -1);\n    \n    Opal.def(self, '$warn', $Kernel_warn$49 = function $$warn($a) {\n      var $post_args, strs, $b, self = this;\n      if ($gvars.VERBOSE == null) $gvars.VERBOSE = nil;\n      if ($gvars.stderr == null) $gvars.stderr = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      strs = $post_args;;\n      if ($truthy(($truthy($b = $gvars.VERBOSE['$nil?']()) ? $b : strs['$empty?']()))) {\n        return nil\n      } else {\n        return $send($gvars.stderr, 'puts', Opal.to_a(strs))\n      };\n    }, $Kernel_warn$49.$$arity = -1);\n    \n    Opal.def(self, '$raise', $Kernel_raise$50 = function $$raise(exception, string, _backtrace) {\n      var self = this;\n      if ($gvars[\"!\"] == null) $gvars[\"!\"] = nil;\n\n      \n      ;\n      \n      if (string == null) {\n        string = nil;\n      };\n      \n      if (_backtrace == null) {\n        _backtrace = nil;\n      };\n      \n      if (exception == null && $gvars[\"!\"] !== nil) {\n        throw $gvars[\"!\"];\n      }\n      if (exception == null) {\n        exception = $$($nesting, 'RuntimeError').$new();\n      }\n      else if (exception.$$is_string) {\n        exception = $$($nesting, 'RuntimeError').$new(exception);\n      }\n      // using respond_to? and not an undefined check to avoid method_missing matching as true\n      else if (exception.$$is_class && exception['$respond_to?'](\"exception\")) {\n        exception = exception.$exception(string);\n      }\n      else if (exception['$is_a?']($$($nesting, 'Exception'))) {\n        // exception is fine\n      }\n      else {\n        exception = $$($nesting, 'TypeError').$new(\"exception class/object expected\");\n      }\n\n      if ($gvars[\"!\"] !== nil) {\n        Opal.exceptions.push($gvars[\"!\"]);\n      }\n\n      $gvars[\"!\"] = exception;\n\n      throw exception;\n    ;\n    }, $Kernel_raise$50.$$arity = -1);\n    Opal.alias(self, \"fail\", \"raise\");\n    \n    Opal.def(self, '$rand', $Kernel_rand$51 = function $$rand(max) {\n      var self = this;\n\n      \n      ;\n      \n      if (max === undefined) {\n        return $$$($$($nesting, 'Random'), 'DEFAULT').$rand();\n      }\n\n      if (max.$$is_number) {\n        if (max < 0) {\n          max = Math.abs(max);\n        }\n\n        if (max % 1 !== 0) {\n          max = max.$to_i();\n        }\n\n        if (max === 0) {\n          max = undefined;\n        }\n      }\n    ;\n      return $$$($$($nesting, 'Random'), 'DEFAULT').$rand(max);\n    }, $Kernel_rand$51.$$arity = -1);\n    \n    Opal.def(self, '$respond_to?', $Kernel_respond_to$ques$52 = function(name, include_all) {\n      var self = this;\n\n      \n      \n      if (include_all == null) {\n        include_all = false;\n      };\n      if ($truthy(self['$respond_to_missing?'](name, include_all))) {\n        return true};\n      \n      var body = self['$' + name];\n\n      if (typeof(body) === \"function\" && !body.$$stub) {\n        return true;\n      }\n    ;\n      return false;\n    }, $Kernel_respond_to$ques$52.$$arity = -2);\n    \n    Opal.def(self, '$respond_to_missing?', $Kernel_respond_to_missing$ques$53 = function(method_name, include_all) {\n      var self = this;\n\n      \n      \n      if (include_all == null) {\n        include_all = false;\n      };\n      return false;\n    }, $Kernel_respond_to_missing$ques$53.$$arity = -2);\n    \n    Opal.def(self, '$require', $Kernel_require$54 = function $$require(file) {\n      var self = this;\n\n      \n      file = $$($nesting, 'Opal')['$coerce_to!'](file, $$($nesting, 'String'), \"to_str\");\n      return Opal.require(file);\n    }, $Kernel_require$54.$$arity = 1);\n    \n    Opal.def(self, '$require_relative', $Kernel_require_relative$55 = function $$require_relative(file) {\n      var self = this;\n\n      \n      $$($nesting, 'Opal')['$try_convert!'](file, $$($nesting, 'String'), \"to_str\");\n      file = $$($nesting, 'File').$expand_path($$($nesting, 'File').$join(Opal.current_file, \"..\", file));\n      return Opal.require(file);\n    }, $Kernel_require_relative$55.$$arity = 1);\n    \n    Opal.def(self, '$require_tree', $Kernel_require_tree$56 = function $$require_tree(path) {\n      var self = this;\n\n      \n      var result = [];\n\n      path = $$($nesting, 'File').$expand_path(path)\n      path = Opal.normalize(path);\n      if (path === '.') path = '';\n      for (var name in Opal.modules) {\n        if ((name)['$start_with?'](path)) {\n          result.push([name, Opal.require(name)]);\n        }\n      }\n\n      return result;\n    \n    }, $Kernel_require_tree$56.$$arity = 1);\n    Opal.alias(self, \"send\", \"__send__\");\n    Opal.alias(self, \"public_send\", \"__send__\");\n    \n    Opal.def(self, '$singleton_class', $Kernel_singleton_class$57 = function $$singleton_class() {\n      var self = this;\n\n      return Opal.get_singleton_class(self);\n    }, $Kernel_singleton_class$57.$$arity = 0);\n    \n    Opal.def(self, '$sleep', $Kernel_sleep$58 = function $$sleep(seconds) {\n      var self = this;\n\n      \n      \n      if (seconds == null) {\n        seconds = nil;\n      };\n      \n      if (seconds === nil) {\n        self.$raise($$($nesting, 'TypeError'), \"can't convert NilClass into time interval\")\n      }\n      if (!seconds.$$is_number) {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't convert \" + (seconds.$class()) + \" into time interval\")\n      }\n      if (seconds < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"time interval must be positive\")\n      }\n      var get_time = Opal.global.performance ?\n        function() {return performance.now()} :\n        function() {return new Date()}\n\n      var t = get_time();\n      while (get_time() - t <= seconds * 1000);\n      return seconds;\n    ;\n    }, $Kernel_sleep$58.$$arity = -1);\n    \n    Opal.def(self, '$srand', $Kernel_srand$59 = function $$srand(seed) {\n      var self = this;\n\n      \n      \n      if (seed == null) {\n        seed = $$($nesting, 'Random').$new_seed();\n      };\n      return $$($nesting, 'Random').$srand(seed);\n    }, $Kernel_srand$59.$$arity = -1);\n    \n    Opal.def(self, '$String', $Kernel_String$60 = function $$String(str) {\n      var $a, self = this;\n\n      return ($truthy($a = $$($nesting, 'Opal')['$coerce_to?'](str, $$($nesting, 'String'), \"to_str\")) ? $a : $$($nesting, 'Opal')['$coerce_to!'](str, $$($nesting, 'String'), \"to_s\"))\n    }, $Kernel_String$60.$$arity = 1);\n    \n    Opal.def(self, '$tap', $Kernel_tap$61 = function $$tap() {\n      var $iter = $Kernel_tap$61.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Kernel_tap$61.$$p = null;\n      \n      \n      if ($iter) $Kernel_tap$61.$$p = null;;\n      Opal.yield1(block, self);\n      return self;\n    }, $Kernel_tap$61.$$arity = 0);\n    \n    Opal.def(self, '$to_proc', $Kernel_to_proc$62 = function $$to_proc() {\n      var self = this;\n\n      return self\n    }, $Kernel_to_proc$62.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Kernel_to_s$63 = function $$to_s() {\n      var self = this;\n\n      return \"\" + \"#<\" + (self.$class()) + \":0x\" + (self.$__id__().$to_s(16)) + \">\"\n    }, $Kernel_to_s$63.$$arity = 0);\n    \n    Opal.def(self, '$catch', $Kernel_catch$64 = function(sym) {\n      var $iter = $Kernel_catch$64.$$p, $yield = $iter || nil, self = this, e = nil;\n\n      if ($iter) $Kernel_catch$64.$$p = null;\n      try {\n        return Opal.yieldX($yield, []);\n      } catch ($err) {\n        if (Opal.rescue($err, [$$($nesting, 'UncaughtThrowError')])) {e = $err;\n          try {\n            \n            if (e.$sym()['$=='](sym)) {\n              return e.$arg()};\n            return self.$raise();\n          } finally { Opal.pop_exception() }\n        } else { throw $err; }\n      }\n    }, $Kernel_catch$64.$$arity = 1);\n    \n    Opal.def(self, '$throw', $Kernel_throw$65 = function($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return self.$raise($$($nesting, 'UncaughtThrowError'), args);\n    }, $Kernel_throw$65.$$arity = -1);\n    \n    Opal.def(self, '$open', $Kernel_open$66 = function $$open($a) {\n      var $iter = $Kernel_open$66.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Kernel_open$66.$$p = null;\n      \n      \n      if ($iter) $Kernel_open$66.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return $send($$($nesting, 'File'), 'open', Opal.to_a(args), block.$to_proc());\n    }, $Kernel_open$66.$$arity = -1);\n    \n    Opal.def(self, '$yield_self', $Kernel_yield_self$67 = function $$yield_self() {\n      var $$68, $iter = $Kernel_yield_self$67.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Kernel_yield_self$67.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"yield_self\"], ($$68 = function(){var self = $$68.$$s || this;\n\n        return 1}, $$68.$$s = self, $$68.$$arity = 0, $$68))\n      };\n      return Opal.yield1($yield, self);;\n    }, $Kernel_yield_self$67.$$arity = 0);\n  })($nesting[0], $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Object');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return self.$include($$($nesting, 'Kernel'))\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/error\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $module = Opal.module, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$new', '$clone', '$to_s', '$empty?', '$class', '$raise', '$+', '$attr_reader', '$[]', '$>', '$length', '$inspect']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Exception');\n\n    var $nesting = [self].concat($parent_nesting), $Exception_new$1, $Exception_exception$2, $Exception_initialize$3, $Exception_backtrace$4, $Exception_exception$5, $Exception_message$6, $Exception_inspect$7, $Exception_set_backtrace$8, $Exception_to_s$9;\n\n    self.$$prototype.message = nil;\n    \n    var stack_trace_limit;\n    Opal.defs(self, '$new', $Exception_new$1 = function($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var message   = (args.length > 0) ? args[0] : nil;\n      var error     = new self.$$constructor(message);\n      error.name    = self.$$name;\n      error.message = message;\n      Opal.send(error, error.$initialize, args);\n\n      // Error.captureStackTrace() will use .name and .toString to build the\n      // first line of the stack trace so it must be called after the error\n      // has been initialized.\n      // https://nodejs.org/dist/latest-v6.x/docs/api/errors.html\n      if (Opal.config.enable_stack_trace && Error.captureStackTrace) {\n        // Passing Kernel.raise will cut the stack trace from that point above\n        Error.captureStackTrace(error, stack_trace_limit);\n      }\n\n      return error;\n    ;\n    }, $Exception_new$1.$$arity = -1);\n    stack_trace_limit = self.$new;\n    Opal.defs(self, '$exception', $Exception_exception$2 = function $$exception($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return $send(self, 'new', Opal.to_a(args));\n    }, $Exception_exception$2.$$arity = -1);\n    \n    Opal.def(self, '$initialize', $Exception_initialize$3 = function $$initialize($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return self.message = (args.length > 0) ? args[0] : nil;;\n    }, $Exception_initialize$3.$$arity = -1);\n    \n    Opal.def(self, '$backtrace', $Exception_backtrace$4 = function $$backtrace() {\n      var self = this;\n\n      \n      if (self.backtrace) {\n        // nil is a valid backtrace\n        return self.backtrace;\n      }\n\n      var backtrace = self.stack;\n\n      if (typeof(backtrace) === 'string') {\n        return backtrace.split(\"\\n\").slice(0, 15);\n      }\n      else if (backtrace) {\n        return backtrace.slice(0, 15);\n      }\n\n      return [];\n    \n    }, $Exception_backtrace$4.$$arity = 0);\n    \n    Opal.def(self, '$exception', $Exception_exception$5 = function $$exception(str) {\n      var self = this;\n\n      \n      \n      if (str == null) {\n        str = nil;\n      };\n      \n      if (str === nil || self === str) {\n        return self;\n      }\n\n      var cloned = self.$clone();\n      cloned.message = str;\n      return cloned;\n    ;\n    }, $Exception_exception$5.$$arity = -1);\n    \n    Opal.def(self, '$message', $Exception_message$6 = function $$message() {\n      var self = this;\n\n      return self.$to_s()\n    }, $Exception_message$6.$$arity = 0);\n    \n    Opal.def(self, '$inspect', $Exception_inspect$7 = function $$inspect() {\n      var self = this, as_str = nil;\n\n      \n      as_str = self.$to_s();\n      if ($truthy(as_str['$empty?']())) {\n        return self.$class().$to_s()\n      } else {\n        return \"\" + \"#<\" + (self.$class().$to_s()) + \": \" + (self.$to_s()) + \">\"\n      };\n    }, $Exception_inspect$7.$$arity = 0);\n    \n    Opal.def(self, '$set_backtrace', $Exception_set_backtrace$8 = function $$set_backtrace(backtrace) {\n      var self = this;\n\n      \n      var valid = true, i, ii;\n\n      if (backtrace === nil) {\n        self.backtrace = nil;\n      } else if (backtrace.$$is_string) {\n        self.backtrace = [backtrace];\n      } else {\n        if (backtrace.$$is_array) {\n          for (i = 0, ii = backtrace.length; i < ii; i++) {\n            if (!backtrace[i].$$is_string) {\n              valid = false;\n              break;\n            }\n          }\n        } else {\n          valid = false;\n        }\n\n        if (valid === false) {\n          self.$raise($$($nesting, 'TypeError'), \"backtrace must be Array of String\")\n        }\n\n        self.backtrace = backtrace;\n      }\n\n      return backtrace;\n    \n    }, $Exception_set_backtrace$8.$$arity = 1);\n    return (Opal.def(self, '$to_s', $Exception_to_s$9 = function $$to_s() {\n      var $a, $b, self = this;\n\n      return ($truthy($a = ($truthy($b = self.message) ? self.message.$to_s() : $b)) ? $a : self.$class().$to_s())\n    }, $Exception_to_s$9.$$arity = 0), nil) && 'to_s';\n  })($nesting[0], Error, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'ScriptError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SyntaxError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'ScriptError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'LoadError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'ScriptError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NotImplementedError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'ScriptError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SystemExit');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NoMemoryError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SignalException');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Interrupt');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SecurityError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'StandardError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'Exception'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'EncodingError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'ZeroDivisionError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NameError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NoMethodError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'NameError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'RuntimeError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'FrozenError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'RuntimeError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'LocalJumpError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'TypeError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'ArgumentError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'IndexError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'StopIteration');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'IndexError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'KeyError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'IndexError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'RangeError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'FloatDomainError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'RangeError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'IOError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'SystemCallError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Errno');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'EINVAL');\n\n      var $nesting = [self].concat($parent_nesting), $EINVAL_new$10;\n\n      return (Opal.defs(self, '$new', $EINVAL_new$10 = function(name) {\n        var $iter = $EINVAL_new$10.$$p, $yield = $iter || nil, self = this, message = nil;\n\n        if ($iter) $EINVAL_new$10.$$p = null;\n        \n        \n        if (name == null) {\n          name = nil;\n        };\n        message = \"Invalid argument\";\n        if ($truthy(name)) {\n          message = $rb_plus(message, \"\" + \" - \" + (name))};\n        return $send(self, Opal.find_super_dispatcher(self, 'new', $EINVAL_new$10, false, self.$$class.$$prototype), [message], null);\n      }, $EINVAL_new$10.$$arity = -1), nil) && 'new'\n    })($nesting[0], $$($nesting, 'SystemCallError'), $nesting)\n  })($nesting[0], $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'UncaughtThrowError');\n\n    var $nesting = [self].concat($parent_nesting), $UncaughtThrowError_initialize$11;\n\n    self.$$prototype.sym = nil;\n    \n    self.$attr_reader(\"sym\", \"arg\");\n    return (Opal.def(self, '$initialize', $UncaughtThrowError_initialize$11 = function $$initialize(args) {\n      var $iter = $UncaughtThrowError_initialize$11.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $UncaughtThrowError_initialize$11.$$p = null;\n      \n      self.sym = args['$[]'](0);\n      if ($truthy($rb_gt(args.$length(), 1))) {\n        self.arg = args['$[]'](1)};\n      return $send(self, Opal.find_super_dispatcher(self, 'initialize', $UncaughtThrowError_initialize$11, false), [\"\" + \"uncaught throw \" + (self.sym.$inspect())], null);\n    }, $UncaughtThrowError_initialize$11.$$arity = 1), nil) && 'initialize';\n  })($nesting[0], $$($nesting, 'ArgumentError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NameError');\n\n    var $nesting = [self].concat($parent_nesting), $NameError_initialize$12;\n\n    \n    self.$attr_reader(\"name\");\n    return (Opal.def(self, '$initialize', $NameError_initialize$12 = function $$initialize(message, name) {\n      var $iter = $NameError_initialize$12.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $NameError_initialize$12.$$p = null;\n      \n      \n      if (name == null) {\n        name = nil;\n      };\n      $send(self, Opal.find_super_dispatcher(self, 'initialize', $NameError_initialize$12, false), [message], null);\n      return (self.name = name);\n    }, $NameError_initialize$12.$$arity = -2), nil) && 'initialize';\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NoMethodError');\n\n    var $nesting = [self].concat($parent_nesting), $NoMethodError_initialize$13;\n\n    \n    self.$attr_reader(\"args\");\n    return (Opal.def(self, '$initialize', $NoMethodError_initialize$13 = function $$initialize(message, name, args) {\n      var $iter = $NoMethodError_initialize$13.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $NoMethodError_initialize$13.$$p = null;\n      \n      \n      if (name == null) {\n        name = nil;\n      };\n      \n      if (args == null) {\n        args = [];\n      };\n      $send(self, Opal.find_super_dispatcher(self, 'initialize', $NoMethodError_initialize$13, false), [message, name], null);\n      return (self.args = args);\n    }, $NoMethodError_initialize$13.$$arity = -2), nil) && 'initialize';\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'StopIteration');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return self.$attr_reader(\"result\")\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'KeyError');\n\n    var $nesting = [self].concat($parent_nesting), $KeyError_initialize$14, $KeyError_receiver$15, $KeyError_key$16;\n\n    self.$$prototype.receiver = self.$$prototype.key = nil;\n    \n    \n    Opal.def(self, '$initialize', $KeyError_initialize$14 = function $$initialize(message, $kwargs) {\n      var receiver, key, $iter = $KeyError_initialize$14.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $KeyError_initialize$14.$$p = null;\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      receiver = $kwargs.$$smap[\"receiver\"];\n      if (receiver == null) {\n        receiver = nil\n      };\n      \n      key = $kwargs.$$smap[\"key\"];\n      if (key == null) {\n        key = nil\n      };\n      $send(self, Opal.find_super_dispatcher(self, 'initialize', $KeyError_initialize$14, false), [message], null);\n      self.receiver = receiver;\n      return (self.key = key);\n    }, $KeyError_initialize$14.$$arity = -2);\n    \n    Opal.def(self, '$receiver', $KeyError_receiver$15 = function $$receiver() {\n      var $a, self = this;\n\n      return ($truthy($a = self.receiver) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"no receiver is available\"))\n    }, $KeyError_receiver$15.$$arity = 0);\n    return (Opal.def(self, '$key', $KeyError_key$16 = function $$key() {\n      var $a, self = this;\n\n      return ($truthy($a = self.key) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"no key is available\"))\n    }, $KeyError_key$16.$$arity = 0), nil) && 'key';\n  })($nesting[0], null, $nesting);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'JS');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Error');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      return nil\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/constants\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  \n  Opal.const_set($nesting[0], 'RUBY_PLATFORM', \"opal\");\n  Opal.const_set($nesting[0], 'RUBY_ENGINE', \"opal\");\n  Opal.const_set($nesting[0], 'RUBY_VERSION', \"2.5.1\");\n  Opal.const_set($nesting[0], 'RUBY_ENGINE_VERSION', \"0.11.99.dev\");\n  Opal.const_set($nesting[0], 'RUBY_RELEASE_DATE', \"2018-12-25\");\n  Opal.const_set($nesting[0], 'RUBY_PATCHLEVEL', 0);\n  Opal.const_set($nesting[0], 'RUBY_REVISION', 0);\n  Opal.const_set($nesting[0], 'RUBY_COPYRIGHT', \"opal - Copyright (C) 2013-2018 Adam Beynon and the Opal contributors\");\n  return Opal.const_set($nesting[0], 'RUBY_DESCRIPTION', \"\" + \"opal \" + ($$($nesting, 'RUBY_ENGINE_VERSION')) + \" (\" + ($$($nesting, 'RUBY_RELEASE_DATE')) + \" revision \" + ($$($nesting, 'RUBY_REVISION')) + \")\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"opal/base\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"corelib/runtime\");\n  self.$require(\"corelib/helpers\");\n  self.$require(\"corelib/module\");\n  self.$require(\"corelib/class\");\n  self.$require(\"corelib/basic_object\");\n  self.$require(\"corelib/kernel\");\n  self.$require(\"corelib/error\");\n  return self.$require(\"corelib/constants\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/nil\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$raise', '$name', '$new', '$>', '$length', '$Rational']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NilClass');\n\n    var $nesting = [self].concat($parent_nesting), $NilClass_$excl$2, $NilClass_$$3, $NilClass_$$4, $NilClass_$$5, $NilClass_$eq_eq$6, $NilClass_dup$7, $NilClass_clone$8, $NilClass_inspect$9, $NilClass_nil$ques$10, $NilClass_singleton_class$11, $NilClass_to_a$12, $NilClass_to_h$13, $NilClass_to_i$14, $NilClass_to_s$15, $NilClass_to_c$16, $NilClass_rationalize$17, $NilClass_to_r$18, $NilClass_instance_variables$19;\n\n    \n    self.$$prototype.$$meta = self;\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$1;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$1 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$1.$$arity = 0);\n      \n      \n      Opal.udef(self, '$' + \"new\");;\n      return nil;;\n    })(Opal.get_singleton_class(self), $nesting);\n    \n    Opal.def(self, '$!', $NilClass_$excl$2 = function() {\n      var self = this;\n\n      return true\n    }, $NilClass_$excl$2.$$arity = 0);\n    \n    Opal.def(self, '$&', $NilClass_$$3 = function(other) {\n      var self = this;\n\n      return false\n    }, $NilClass_$$3.$$arity = 1);\n    \n    Opal.def(self, '$|', $NilClass_$$4 = function(other) {\n      var self = this;\n\n      return other !== false && other !== nil;\n    }, $NilClass_$$4.$$arity = 1);\n    \n    Opal.def(self, '$^', $NilClass_$$5 = function(other) {\n      var self = this;\n\n      return other !== false && other !== nil;\n    }, $NilClass_$$5.$$arity = 1);\n    \n    Opal.def(self, '$==', $NilClass_$eq_eq$6 = function(other) {\n      var self = this;\n\n      return other === nil;\n    }, $NilClass_$eq_eq$6.$$arity = 1);\n    \n    Opal.def(self, '$dup', $NilClass_dup$7 = function $$dup() {\n      var self = this;\n\n      return nil\n    }, $NilClass_dup$7.$$arity = 0);\n    \n    Opal.def(self, '$clone', $NilClass_clone$8 = function $$clone($kwargs) {\n      var freeze, self = this;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      freeze = $kwargs.$$smap[\"freeze\"];\n      if (freeze == null) {\n        freeze = true\n      };\n      return nil;\n    }, $NilClass_clone$8.$$arity = -1);\n    \n    Opal.def(self, '$inspect', $NilClass_inspect$9 = function $$inspect() {\n      var self = this;\n\n      return \"nil\"\n    }, $NilClass_inspect$9.$$arity = 0);\n    \n    Opal.def(self, '$nil?', $NilClass_nil$ques$10 = function() {\n      var self = this;\n\n      return true\n    }, $NilClass_nil$ques$10.$$arity = 0);\n    \n    Opal.def(self, '$singleton_class', $NilClass_singleton_class$11 = function $$singleton_class() {\n      var self = this;\n\n      return $$($nesting, 'NilClass')\n    }, $NilClass_singleton_class$11.$$arity = 0);\n    \n    Opal.def(self, '$to_a', $NilClass_to_a$12 = function $$to_a() {\n      var self = this;\n\n      return []\n    }, $NilClass_to_a$12.$$arity = 0);\n    \n    Opal.def(self, '$to_h', $NilClass_to_h$13 = function $$to_h() {\n      var self = this;\n\n      return Opal.hash();\n    }, $NilClass_to_h$13.$$arity = 0);\n    \n    Opal.def(self, '$to_i', $NilClass_to_i$14 = function $$to_i() {\n      var self = this;\n\n      return 0\n    }, $NilClass_to_i$14.$$arity = 0);\n    Opal.alias(self, \"to_f\", \"to_i\");\n    \n    Opal.def(self, '$to_s', $NilClass_to_s$15 = function $$to_s() {\n      var self = this;\n\n      return \"\"\n    }, $NilClass_to_s$15.$$arity = 0);\n    \n    Opal.def(self, '$to_c', $NilClass_to_c$16 = function $$to_c() {\n      var self = this;\n\n      return $$($nesting, 'Complex').$new(0, 0)\n    }, $NilClass_to_c$16.$$arity = 0);\n    \n    Opal.def(self, '$rationalize', $NilClass_rationalize$17 = function $$rationalize($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy($rb_gt(args.$length(), 1))) {\n        self.$raise($$($nesting, 'ArgumentError'))};\n      return self.$Rational(0, 1);\n    }, $NilClass_rationalize$17.$$arity = -1);\n    \n    Opal.def(self, '$to_r', $NilClass_to_r$18 = function $$to_r() {\n      var self = this;\n\n      return self.$Rational(0, 1)\n    }, $NilClass_to_r$18.$$arity = 0);\n    return (Opal.def(self, '$instance_variables', $NilClass_instance_variables$19 = function $$instance_variables() {\n      var self = this;\n\n      return []\n    }, $NilClass_instance_variables$19.$$arity = 0), nil) && 'instance_variables';\n  })($nesting[0], null, $nesting);\n  return Opal.const_set($nesting[0], 'NIL', nil);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/boolean\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$raise', '$name']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Boolean');\n\n    var $nesting = [self].concat($parent_nesting), $Boolean___id__$2, $Boolean_$excl$3, $Boolean_$$4, $Boolean_$$5, $Boolean_$$6, $Boolean_$eq_eq$7, $Boolean_singleton_class$8, $Boolean_to_s$9, $Boolean_dup$10, $Boolean_clone$11;\n\n    \n    Opal.defineProperty(self.$$prototype, '$$is_boolean', true);\n    Opal.defineProperty(self.$$prototype, '$$meta', self);\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$1;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$1 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$1.$$arity = 0);\n      \n      \n      Opal.udef(self, '$' + \"new\");;\n      return nil;;\n    })(Opal.get_singleton_class(self), $nesting);\n    \n    Opal.def(self, '$__id__', $Boolean___id__$2 = function $$__id__() {\n      var self = this;\n\n      return self.valueOf() ? 2 : 0;\n    }, $Boolean___id__$2.$$arity = 0);\n    Opal.alias(self, \"object_id\", \"__id__\");\n    \n    Opal.def(self, '$!', $Boolean_$excl$3 = function() {\n      var self = this;\n\n      return self != true;\n    }, $Boolean_$excl$3.$$arity = 0);\n    \n    Opal.def(self, '$&', $Boolean_$$4 = function(other) {\n      var self = this;\n\n      return (self == true) ? (other !== false && other !== nil) : false;\n    }, $Boolean_$$4.$$arity = 1);\n    \n    Opal.def(self, '$|', $Boolean_$$5 = function(other) {\n      var self = this;\n\n      return (self == true) ? true : (other !== false && other !== nil);\n    }, $Boolean_$$5.$$arity = 1);\n    \n    Opal.def(self, '$^', $Boolean_$$6 = function(other) {\n      var self = this;\n\n      return (self == true) ? (other === false || other === nil) : (other !== false && other !== nil);\n    }, $Boolean_$$6.$$arity = 1);\n    \n    Opal.def(self, '$==', $Boolean_$eq_eq$7 = function(other) {\n      var self = this;\n\n      return (self == true) === other.valueOf();\n    }, $Boolean_$eq_eq$7.$$arity = 1);\n    Opal.alias(self, \"equal?\", \"==\");\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$singleton_class', $Boolean_singleton_class$8 = function $$singleton_class() {\n      var self = this;\n\n      return $$($nesting, 'Boolean')\n    }, $Boolean_singleton_class$8.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Boolean_to_s$9 = function $$to_s() {\n      var self = this;\n\n      return (self == true) ? 'true' : 'false';\n    }, $Boolean_to_s$9.$$arity = 0);\n    \n    Opal.def(self, '$dup', $Boolean_dup$10 = function $$dup() {\n      var self = this;\n\n      return self\n    }, $Boolean_dup$10.$$arity = 0);\n    return (Opal.def(self, '$clone', $Boolean_clone$11 = function $$clone($kwargs) {\n      var freeze, self = this;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      freeze = $kwargs.$$smap[\"freeze\"];\n      if (freeze == null) {\n        freeze = true\n      };\n      return self;\n    }, $Boolean_clone$11.$$arity = -1), nil) && 'clone';\n  })($nesting[0], Boolean, $nesting);\n  Opal.const_set($nesting[0], 'TrueClass', $$($nesting, 'Boolean'));\n  Opal.const_set($nesting[0], 'FalseClass', $$($nesting, 'Boolean'));\n  Opal.const_set($nesting[0], 'TRUE', true);\n  return Opal.const_set($nesting[0], 'FALSE', false);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/comparable\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$===', '$>', '$<', '$equal?', '$<=>', '$normalize', '$raise', '$class']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Comparable');\n\n    var $nesting = [self].concat($parent_nesting), $Comparable_normalize$1, $Comparable_$eq_eq$2, $Comparable_$gt$3, $Comparable_$gt_eq$4, $Comparable_$lt$5, $Comparable_$lt_eq$6, $Comparable_between$ques$7, $Comparable_clamp$8;\n\n    \n    Opal.defs(self, '$normalize', $Comparable_normalize$1 = function $$normalize(what) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](what))) {\n        return what};\n      if ($truthy($rb_gt(what, 0))) {\n        return 1};\n      if ($truthy($rb_lt(what, 0))) {\n        return -1};\n      return 0;\n    }, $Comparable_normalize$1.$$arity = 1);\n    \n    Opal.def(self, '$==', $Comparable_$eq_eq$2 = function(other) {\n      var self = this, cmp = nil;\n\n      try {\n        \n        if ($truthy(self['$equal?'](other))) {\n          return true};\n        \n      if (self[\"$<=>\"] == Opal.Kernel[\"$<=>\"]) {\n        return false;\n      }\n\n      // check for infinite recursion\n      if (self.$$comparable) {\n        delete self.$$comparable;\n        return false;\n      }\n    ;\n        if ($truthy((cmp = self['$<=>'](other)))) {\n        } else {\n          return false\n        };\n        return $$($nesting, 'Comparable').$normalize(cmp) == 0;\n      } catch ($err) {\n        if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n          try {\n            return false\n          } finally { Opal.pop_exception() }\n        } else { throw $err; }\n      }\n    }, $Comparable_$eq_eq$2.$$arity = 1);\n    \n    Opal.def(self, '$>', $Comparable_$gt$3 = function(other) {\n      var self = this, cmp = nil;\n\n      \n      if ($truthy((cmp = self['$<=>'](other)))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")\n      };\n      return $$($nesting, 'Comparable').$normalize(cmp) > 0;\n    }, $Comparable_$gt$3.$$arity = 1);\n    \n    Opal.def(self, '$>=', $Comparable_$gt_eq$4 = function(other) {\n      var self = this, cmp = nil;\n\n      \n      if ($truthy((cmp = self['$<=>'](other)))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")\n      };\n      return $$($nesting, 'Comparable').$normalize(cmp) >= 0;\n    }, $Comparable_$gt_eq$4.$$arity = 1);\n    \n    Opal.def(self, '$<', $Comparable_$lt$5 = function(other) {\n      var self = this, cmp = nil;\n\n      \n      if ($truthy((cmp = self['$<=>'](other)))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")\n      };\n      return $$($nesting, 'Comparable').$normalize(cmp) < 0;\n    }, $Comparable_$lt$5.$$arity = 1);\n    \n    Opal.def(self, '$<=', $Comparable_$lt_eq$6 = function(other) {\n      var self = this, cmp = nil;\n\n      \n      if ($truthy((cmp = self['$<=>'](other)))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")\n      };\n      return $$($nesting, 'Comparable').$normalize(cmp) <= 0;\n    }, $Comparable_$lt_eq$6.$$arity = 1);\n    \n    Opal.def(self, '$between?', $Comparable_between$ques$7 = function(min, max) {\n      var self = this;\n\n      \n      if ($rb_lt(self, min)) {\n        return false};\n      if ($rb_gt(self, max)) {\n        return false};\n      return true;\n    }, $Comparable_between$ques$7.$$arity = 2);\n    \n    Opal.def(self, '$clamp', $Comparable_clamp$8 = function $$clamp(min, max) {\n      var self = this, cmp = nil;\n\n      \n      cmp = min['$<=>'](max);\n      if ($truthy(cmp)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (min.$class()) + \" with \" + (max.$class()) + \" failed\")\n      };\n      if ($truthy($rb_gt($$($nesting, 'Comparable').$normalize(cmp), 0))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"min argument must be smaller than max argument\")};\n      if ($truthy($rb_lt($$($nesting, 'Comparable').$normalize(self['$<=>'](min)), 0))) {\n        return min};\n      if ($truthy($rb_gt($$($nesting, 'Comparable').$normalize(self['$<=>'](max)), 0))) {\n        return max};\n      return self;\n    }, $Comparable_clamp$8.$$arity = 2);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/regexp\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$nil?', '$[]', '$raise', '$escape', '$options', '$to_str', '$new', '$join', '$coerce_to!', '$!', '$match', '$coerce_to?', '$begin', '$coerce_to', '$=~', '$attr_reader', '$===', '$inspect', '$to_a']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'RegexpError');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return nil\n  })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Regexp');\n\n    var $nesting = [self].concat($parent_nesting), $Regexp_$eq_eq$6, $Regexp_$eq_eq_eq$7, $Regexp_$eq_tilde$8, $Regexp_inspect$9, $Regexp_match$10, $Regexp_match$ques$11, $Regexp_$$12, $Regexp_source$13, $Regexp_options$14, $Regexp_casefold$ques$15;\n\n    \n    Opal.const_set($nesting[0], 'IGNORECASE', 1);\n    Opal.const_set($nesting[0], 'EXTENDED', 2);\n    Opal.const_set($nesting[0], 'MULTILINE', 4);\n    Opal.defineProperty(self.$$prototype, '$$is_regexp', true);\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$1, $escape$2, $last_match$3, $union$4, $new$5;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$1 = function $$allocate() {\n        var $iter = $allocate$1.$$p, $yield = $iter || nil, self = this, allocated = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $allocate$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        allocated = $send(self, Opal.find_super_dispatcher(self, 'allocate', $allocate$1, false), $zuper, $iter);\n        allocated.uninitialized = true;\n        return allocated;\n      }, $allocate$1.$$arity = 0);\n      \n      Opal.def(self, '$escape', $escape$2 = function $$escape(string) {\n        var self = this;\n\n        return Opal.escape_regexp(string);\n      }, $escape$2.$$arity = 1);\n      \n      Opal.def(self, '$last_match', $last_match$3 = function $$last_match(n) {\n        var self = this;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        \n        if (n == null) {\n          n = nil;\n        };\n        if ($truthy(n['$nil?']())) {\n          return $gvars[\"~\"]\n        } else {\n          return $gvars[\"~\"]['$[]'](n)\n        };\n      }, $last_match$3.$$arity = -1);\n      Opal.alias(self, \"quote\", \"escape\");\n      \n      Opal.def(self, '$union', $union$4 = function $$union($a) {\n        var $post_args, parts, self = this;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        parts = $post_args;;\n        \n        var is_first_part_array, quoted_validated, part, options, each_part_options;\n        if (parts.length == 0) {\n          return /(?!)/;\n        }\n        // return fast if there's only one element\n        if (parts.length == 1 && parts[0].$$is_regexp) {\n          return parts[0];\n        }\n        // cover the 2 arrays passed as arguments case\n        is_first_part_array = parts[0].$$is_array;\n        if (parts.length > 1 && is_first_part_array) {\n          self.$raise($$($nesting, 'TypeError'), \"no implicit conversion of Array into String\")\n        }\n        // deal with splat issues (related to https://github.com/opal/opal/issues/858)\n        if (is_first_part_array) {\n          parts = parts[0];\n        }\n        options = undefined;\n        quoted_validated = [];\n        for (var i=0; i < parts.length; i++) {\n          part = parts[i];\n          if (part.$$is_string) {\n            quoted_validated.push(self.$escape(part));\n          }\n          else if (part.$$is_regexp) {\n            each_part_options = (part).$options();\n            if (options != undefined && options != each_part_options) {\n              self.$raise($$($nesting, 'TypeError'), \"All expressions must use the same options\")\n            }\n            options = each_part_options;\n            quoted_validated.push('('+part.source+')');\n          }\n          else {\n            quoted_validated.push(self.$escape((part).$to_str()));\n          }\n        }\n      ;\n        return self.$new((quoted_validated).$join(\"|\"), options);\n      }, $union$4.$$arity = -1);\n      return (Opal.def(self, '$new', $new$5 = function(regexp, options) {\n        var self = this;\n\n        \n        ;\n        \n        if (regexp.$$is_regexp) {\n          return new RegExp(regexp);\n        }\n\n        regexp = $$($nesting, 'Opal')['$coerce_to!'](regexp, $$($nesting, 'String'), \"to_str\");\n\n        if (regexp.charAt(regexp.length - 1) === '\\\\' && regexp.charAt(regexp.length - 2) !== '\\\\') {\n          self.$raise($$($nesting, 'RegexpError'), \"\" + \"too short escape sequence: /\" + (regexp) + \"/\")\n        }\n\n        if (options === undefined || options['$!']()) {\n          return new RegExp(regexp);\n        }\n\n        if (options.$$is_number) {\n          var temp = '';\n          if ($$($nesting, 'IGNORECASE') & options) { temp += 'i'; }\n          if ($$($nesting, 'MULTILINE')  & options) { temp += 'm'; }\n          options = temp;\n        }\n        else {\n          options = 'i';\n        }\n\n        return new RegExp(regexp, options);\n      ;\n      }, $new$5.$$arity = -2), nil) && 'new';\n    })(Opal.get_singleton_class(self), $nesting);\n    \n    Opal.def(self, '$==', $Regexp_$eq_eq$6 = function(other) {\n      var self = this;\n\n      return other instanceof RegExp && self.toString() === other.toString();\n    }, $Regexp_$eq_eq$6.$$arity = 1);\n    \n    Opal.def(self, '$===', $Regexp_$eq_eq_eq$7 = function(string) {\n      var self = this;\n\n      return self.$match($$($nesting, 'Opal')['$coerce_to?'](string, $$($nesting, 'String'), \"to_str\")) !== nil\n    }, $Regexp_$eq_eq_eq$7.$$arity = 1);\n    \n    Opal.def(self, '$=~', $Regexp_$eq_tilde$8 = function(string) {\n      var $a, self = this;\n      if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n      return ($truthy($a = self.$match(string)) ? $gvars[\"~\"].$begin(0) : $a)\n    }, $Regexp_$eq_tilde$8.$$arity = 1);\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$inspect', $Regexp_inspect$9 = function $$inspect() {\n      var self = this;\n\n      \n      var regexp_format = /^\\/(.*)\\/([^\\/]*)$/;\n      var value = self.toString();\n      var matches = regexp_format.exec(value);\n      if (matches) {\n        var regexp_pattern = matches[1];\n        var regexp_flags = matches[2];\n        var chars = regexp_pattern.split('');\n        var chars_length = chars.length;\n        var char_escaped = false;\n        var regexp_pattern_escaped = '';\n        for (var i = 0; i < chars_length; i++) {\n          var current_char = chars[i];\n          if (!char_escaped && current_char == '/') {\n            regexp_pattern_escaped = regexp_pattern_escaped.concat('\\\\');\n          }\n          regexp_pattern_escaped = regexp_pattern_escaped.concat(current_char);\n          if (current_char == '\\\\') {\n            if (char_escaped) {\n              // does not over escape\n              char_escaped = false;\n            } else {\n              char_escaped = true;\n            }\n          } else {\n            char_escaped = false;\n          }\n        }\n        return '/' + regexp_pattern_escaped + '/' + regexp_flags;\n      } else {\n        return value;\n      }\n    \n    }, $Regexp_inspect$9.$$arity = 0);\n    \n    Opal.def(self, '$match', $Regexp_match$10 = function $$match(string, pos) {\n      var $iter = $Regexp_match$10.$$p, block = $iter || nil, self = this;\n      if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n      if ($iter) $Regexp_match$10.$$p = null;\n      \n      \n      if ($iter) $Regexp_match$10.$$p = null;;\n      ;\n      \n      if (self.uninitialized) {\n        self.$raise($$($nesting, 'TypeError'), \"uninitialized Regexp\")\n      }\n\n      if (pos === undefined) {\n        if (string === nil) return ($gvars[\"~\"] = nil);\n        var m = self.exec($$($nesting, 'Opal').$coerce_to(string, $$($nesting, 'String'), \"to_str\"));\n        if (m) {\n          ($gvars[\"~\"] = $$($nesting, 'MatchData').$new(self, m));\n          return block === nil ? $gvars[\"~\"] : Opal.yield1(block, $gvars[\"~\"]);\n        } else {\n          return ($gvars[\"~\"] = nil);\n        }\n      }\n\n      pos = $$($nesting, 'Opal').$coerce_to(pos, $$($nesting, 'Integer'), \"to_int\");\n\n      if (string === nil) {\n        return ($gvars[\"~\"] = nil);\n      }\n\n      string = $$($nesting, 'Opal').$coerce_to(string, $$($nesting, 'String'), \"to_str\");\n\n      if (pos < 0) {\n        pos += string.length;\n        if (pos < 0) {\n          return ($gvars[\"~\"] = nil);\n        }\n      }\n\n      // global RegExp maintains state, so not using self/this\n      var md, re = Opal.global_regexp(self);\n\n      while (true) {\n        md = re.exec(string);\n        if (md === null) {\n          return ($gvars[\"~\"] = nil);\n        }\n        if (md.index >= pos) {\n          ($gvars[\"~\"] = $$($nesting, 'MatchData').$new(re, md));\n          return block === nil ? $gvars[\"~\"] : Opal.yield1(block, $gvars[\"~\"]);\n        }\n        re.lastIndex = md.index + 1;\n      }\n    ;\n    }, $Regexp_match$10.$$arity = -2);\n    \n    Opal.def(self, '$match?', $Regexp_match$ques$11 = function(string, pos) {\n      var self = this;\n\n      \n      ;\n      \n      if (self.uninitialized) {\n        self.$raise($$($nesting, 'TypeError'), \"uninitialized Regexp\")\n      }\n\n      if (pos === undefined) {\n        return string === nil ? false : self.test($$($nesting, 'Opal').$coerce_to(string, $$($nesting, 'String'), \"to_str\"));\n      }\n\n      pos = $$($nesting, 'Opal').$coerce_to(pos, $$($nesting, 'Integer'), \"to_int\");\n\n      if (string === nil) {\n        return false;\n      }\n\n      string = $$($nesting, 'Opal').$coerce_to(string, $$($nesting, 'String'), \"to_str\");\n\n      if (pos < 0) {\n        pos += string.length;\n        if (pos < 0) {\n          return false;\n        }\n      }\n\n      // global RegExp maintains state, so not using self/this\n      var md, re = Opal.global_regexp(self);\n\n      md = re.exec(string);\n      if (md === null || md.index < pos) {\n        return false;\n      } else {\n        return true;\n      }\n    ;\n    }, $Regexp_match$ques$11.$$arity = -2);\n    \n    Opal.def(self, '$~', $Regexp_$$12 = function() {\n      var self = this;\n      if ($gvars._ == null) $gvars._ = nil;\n\n      return self['$=~']($gvars._)\n    }, $Regexp_$$12.$$arity = 0);\n    \n    Opal.def(self, '$source', $Regexp_source$13 = function $$source() {\n      var self = this;\n\n      return self.source;\n    }, $Regexp_source$13.$$arity = 0);\n    \n    Opal.def(self, '$options', $Regexp_options$14 = function $$options() {\n      var self = this;\n\n      \n      if (self.uninitialized) {\n        self.$raise($$($nesting, 'TypeError'), \"uninitialized Regexp\")\n      }\n      var result = 0;\n      // should be supported in IE6 according to https://msdn.microsoft.com/en-us/library/7f5z26w4(v=vs.94).aspx\n      if (self.multiline) {\n        result |= $$($nesting, 'MULTILINE');\n      }\n      if (self.ignoreCase) {\n        result |= $$($nesting, 'IGNORECASE');\n      }\n      return result;\n    \n    }, $Regexp_options$14.$$arity = 0);\n    \n    Opal.def(self, '$casefold?', $Regexp_casefold$ques$15 = function() {\n      var self = this;\n\n      return self.ignoreCase;\n    }, $Regexp_casefold$ques$15.$$arity = 0);\n    return Opal.alias(self, \"to_s\", \"source\");\n  })($nesting[0], RegExp, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'MatchData');\n\n    var $nesting = [self].concat($parent_nesting), $MatchData_initialize$16, $MatchData_$$$17, $MatchData_offset$18, $MatchData_$eq_eq$19, $MatchData_begin$20, $MatchData_end$21, $MatchData_captures$22, $MatchData_inspect$23, $MatchData_length$24, $MatchData_to_a$25, $MatchData_to_s$26, $MatchData_values_at$27;\n\n    self.$$prototype.matches = nil;\n    \n    self.$attr_reader(\"post_match\", \"pre_match\", \"regexp\", \"string\");\n    \n    Opal.def(self, '$initialize', $MatchData_initialize$16 = function $$initialize(regexp, match_groups) {\n      var self = this;\n\n      \n      $gvars[\"~\"] = self;\n      self.regexp = regexp;\n      self.begin = match_groups.index;\n      self.string = match_groups.input;\n      self.pre_match = match_groups.input.slice(0, match_groups.index);\n      self.post_match = match_groups.input.slice(match_groups.index + match_groups[0].length);\n      self.matches = [];\n      \n      for (var i = 0, length = match_groups.length; i < length; i++) {\n        var group = match_groups[i];\n\n        if (group == null) {\n          self.matches.push(nil);\n        }\n        else {\n          self.matches.push(group);\n        }\n      }\n    ;\n    }, $MatchData_initialize$16.$$arity = 2);\n    \n    Opal.def(self, '$[]', $MatchData_$$$17 = function($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return $send(self.matches, '[]', Opal.to_a(args));\n    }, $MatchData_$$$17.$$arity = -1);\n    \n    Opal.def(self, '$offset', $MatchData_offset$18 = function $$offset(n) {\n      var self = this;\n\n      \n      if (n !== 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"MatchData#offset only supports 0th element\")\n      }\n      return [self.begin, self.begin + self.matches[n].length];\n    \n    }, $MatchData_offset$18.$$arity = 1);\n    \n    Opal.def(self, '$==', $MatchData_$eq_eq$19 = function(other) {\n      var $a, $b, $c, $d, self = this;\n\n      \n      if ($truthy($$($nesting, 'MatchData')['$==='](other))) {\n      } else {\n        return false\n      };\n      return ($truthy($a = ($truthy($b = ($truthy($c = ($truthy($d = self.string == other.string) ? self.regexp.toString() == other.regexp.toString() : $d)) ? self.pre_match == other.pre_match : $c)) ? self.post_match == other.post_match : $b)) ? self.begin == other.begin : $a);\n    }, $MatchData_$eq_eq$19.$$arity = 1);\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$begin', $MatchData_begin$20 = function $$begin(n) {\n      var self = this;\n\n      \n      if (n !== 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"MatchData#begin only supports 0th element\")\n      }\n      return self.begin;\n    \n    }, $MatchData_begin$20.$$arity = 1);\n    \n    Opal.def(self, '$end', $MatchData_end$21 = function $$end(n) {\n      var self = this;\n\n      \n      if (n !== 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"MatchData#end only supports 0th element\")\n      }\n      return self.begin + self.matches[n].length;\n    \n    }, $MatchData_end$21.$$arity = 1);\n    \n    Opal.def(self, '$captures', $MatchData_captures$22 = function $$captures() {\n      var self = this;\n\n      return self.matches.slice(1)\n    }, $MatchData_captures$22.$$arity = 0);\n    \n    Opal.def(self, '$inspect', $MatchData_inspect$23 = function $$inspect() {\n      var self = this;\n\n      \n      var str = \"#<MatchData \" + (self.matches[0]).$inspect();\n\n      for (var i = 1, length = self.matches.length; i < length; i++) {\n        str += \" \" + i + \":\" + (self.matches[i]).$inspect();\n      }\n\n      return str + \">\";\n    \n    }, $MatchData_inspect$23.$$arity = 0);\n    \n    Opal.def(self, '$length', $MatchData_length$24 = function $$length() {\n      var self = this;\n\n      return self.matches.length\n    }, $MatchData_length$24.$$arity = 0);\n    Opal.alias(self, \"size\", \"length\");\n    \n    Opal.def(self, '$to_a', $MatchData_to_a$25 = function $$to_a() {\n      var self = this;\n\n      return self.matches\n    }, $MatchData_to_a$25.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $MatchData_to_s$26 = function $$to_s() {\n      var self = this;\n\n      return self.matches[0]\n    }, $MatchData_to_s$26.$$arity = 0);\n    return (Opal.def(self, '$values_at', $MatchData_values_at$27 = function $$values_at($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var i, a, index, values = [];\n\n      for (i = 0; i < args.length; i++) {\n\n        if (args[i].$$is_range) {\n          a = (args[i]).$to_a();\n          a.unshift(i, 1);\n          Array.prototype.splice.apply(args, a);\n        }\n\n        index = $$($nesting, 'Opal')['$coerce_to!'](args[i], $$($nesting, 'Integer'), \"to_int\");\n\n        if (index < 0) {\n          index += self.matches.length;\n          if (index < 0) {\n            values.push(nil);\n            continue;\n          }\n        }\n\n        values.push(self.matches[index]);\n      }\n\n      return values;\n    ;\n    }, $MatchData_values_at$27.$$arity = -1), nil) && 'values_at';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/string\"] = function(Opal) {\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$require', '$include', '$coerce_to?', '$coerce_to', '$raise', '$===', '$format', '$to_s', '$respond_to?', '$to_str', '$<=>', '$==', '$=~', '$new', '$force_encoding', '$casecmp', '$empty?', '$ljust', '$ceil', '$/', '$+', '$rjust', '$floor', '$to_a', '$each_char', '$to_proc', '$coerce_to!', '$copy_singleton_methods', '$initialize_clone', '$initialize_dup', '$enum_for', '$size', '$chomp', '$[]', '$to_i', '$each_line', '$class', '$match', '$match?', '$captures', '$proc', '$succ', '$escape']);\n  \n  self.$require(\"corelib/comparable\");\n  self.$require(\"corelib/regexp\");\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting), $String___id__$1, $String_try_convert$2, $String_new$3, $String_initialize$4, $String_$percent$5, $String_$$6, $String_$plus$7, $String_$lt_eq_gt$8, $String_$eq_eq$9, $String_$eq_tilde$10, $String_$$$11, $String_b$12, $String_capitalize$13, $String_casecmp$14, $String_casecmp$ques$15, $String_center$16, $String_chars$17, $String_chomp$18, $String_chop$19, $String_chr$20, $String_clone$21, $String_dup$22, $String_count$23, $String_delete$24, $String_delete_prefix$25, $String_delete_suffix$26, $String_downcase$27, $String_each_char$28, $String_each_line$30, $String_empty$ques$31, $String_end_with$ques$32, $String_gsub$33, $String_hash$34, $String_hex$35, $String_include$ques$36, $String_index$37, $String_inspect$38, $String_intern$39, $String_lines$40, $String_length$41, $String_ljust$42, $String_lstrip$43, $String_ascii_only$ques$44, $String_match$45, $String_match$ques$46, $String_next$47, $String_oct$48, $String_ord$49, $String_partition$50, $String_reverse$51, $String_rindex$52, $String_rjust$53, $String_rpartition$54, $String_rstrip$55, $String_scan$56, $String_split$57, $String_squeeze$58, $String_start_with$ques$59, $String_strip$60, $String_sub$61, $String_sum$62, $String_swapcase$63, $String_to_f$64, $String_to_i$65, $String_to_proc$66, $String_to_s$68, $String_tr$69, $String_tr_s$70, $String_upcase$71, $String_upto$72, $String_instance_variables$73, $String__load$74, $String_unicode_normalize$75, $String_unicode_normalized$ques$76, $String_unpack$77, $String_unpack1$78;\n\n    \n    self.$include($$($nesting, 'Comparable'));\n    \n    Opal.defineProperty(self.$$prototype, '$$is_string', true);\n\n    Opal.defineProperty(self.$$prototype, '$$cast', function(string) {\n      var klass = this.$$class;\n      if (klass.$$constructor === String) {\n        return string;\n      } else {\n        return new klass.$$constructor(string);\n      }\n    });\n  ;\n    \n    Opal.def(self, '$__id__', $String___id__$1 = function $$__id__() {\n      var self = this;\n\n      return self.toString();\n    }, $String___id__$1.$$arity = 0);\n    Opal.alias(self, \"object_id\", \"__id__\");\n    Opal.defs(self, '$try_convert', $String_try_convert$2 = function $$try_convert(what) {\n      var self = this;\n\n      return $$($nesting, 'Opal')['$coerce_to?'](what, $$($nesting, 'String'), \"to_str\")\n    }, $String_try_convert$2.$$arity = 1);\n    Opal.defs(self, '$new', $String_new$3 = function(str) {\n      var self = this;\n\n      \n      \n      if (str == null) {\n        str = \"\";\n      };\n      str = $$($nesting, 'Opal').$coerce_to(str, $$($nesting, 'String'), \"to_str\");\n      return new self.$$constructor(str);;\n    }, $String_new$3.$$arity = -1);\n    \n    Opal.def(self, '$initialize', $String_initialize$4 = function $$initialize(str) {\n      var self = this;\n\n      \n      ;\n      \n      if (str === undefined) {\n        return self;\n      }\n    ;\n      return self.$raise($$($nesting, 'NotImplementedError'), \"Mutable strings are not supported in Opal.\");\n    }, $String_initialize$4.$$arity = -1);\n    \n    Opal.def(self, '$%', $String_$percent$5 = function(data) {\n      var self = this;\n\n      if ($truthy($$($nesting, 'Array')['$==='](data))) {\n        return $send(self, 'format', [self].concat(Opal.to_a(data)))\n      } else {\n        return self.$format(self, data)\n      }\n    }, $String_$percent$5.$$arity = 1);\n    \n    Opal.def(self, '$*', $String_$$6 = function(count) {\n      var self = this;\n\n      \n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n\n      if (count < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative argument\")\n      }\n\n      if (count === 0) {\n        return self.$$cast('');\n      }\n\n      var result = '',\n          string = self.toString();\n\n      // All credit for the bit-twiddling magic code below goes to Mozilla\n      // polyfill implementation of String.prototype.repeat() posted here:\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n      if (string.length * count >= 1 << 28) {\n        self.$raise($$($nesting, 'RangeError'), \"multiply count must not overflow maximum string size\")\n      }\n\n      for (;;) {\n        if ((count & 1) === 1) {\n          result += string;\n        }\n        count >>>= 1;\n        if (count === 0) {\n          break;\n        }\n        string += string;\n      }\n\n      return self.$$cast(result);\n    \n    }, $String_$$6.$$arity = 1);\n    \n    Opal.def(self, '$+', $String_$plus$7 = function(other) {\n      var self = this;\n\n      \n      other = $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'String'), \"to_str\");\n      return self + other.$to_s();\n    }, $String_$plus$7.$$arity = 1);\n    \n    Opal.def(self, '$<=>', $String_$lt_eq_gt$8 = function(other) {\n      var self = this;\n\n      if ($truthy(other['$respond_to?'](\"to_str\"))) {\n        \n        other = other.$to_str().$to_s();\n        return self > other ? 1 : (self < other ? -1 : 0);;\n      } else {\n        \n        var cmp = other['$<=>'](self);\n\n        if (cmp === nil) {\n          return nil;\n        }\n        else {\n          return cmp > 0 ? -1 : (cmp < 0 ? 1 : 0);\n        }\n      \n      }\n    }, $String_$lt_eq_gt$8.$$arity = 1);\n    \n    Opal.def(self, '$==', $String_$eq_eq$9 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_string) {\n        return self.toString() === other.toString();\n      }\n      if ($$($nesting, 'Opal')['$respond_to?'](other, \"to_str\")) {\n        return other['$=='](self);\n      }\n      return false;\n    \n    }, $String_$eq_eq$9.$$arity = 1);\n    Opal.alias(self, \"eql?\", \"==\");\n    Opal.alias(self, \"===\", \"==\");\n    \n    Opal.def(self, '$=~', $String_$eq_tilde$10 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_string) {\n        self.$raise($$($nesting, 'TypeError'), \"type mismatch: String given\");\n      }\n\n      return other['$=~'](self);\n    \n    }, $String_$eq_tilde$10.$$arity = 1);\n    \n    Opal.def(self, '$[]', $String_$$$11 = function(index, length) {\n      var self = this;\n\n      \n      ;\n      \n      var size = self.length, exclude;\n\n      if (index.$$is_range) {\n        exclude = index.excl;\n        length  = $$($nesting, 'Opal').$coerce_to(index.end, $$($nesting, 'Integer'), \"to_int\");\n        index   = $$($nesting, 'Opal').$coerce_to(index.begin, $$($nesting, 'Integer'), \"to_int\");\n\n        if (Math.abs(index) > size) {\n          return nil;\n        }\n\n        if (index < 0) {\n          index += size;\n        }\n\n        if (length < 0) {\n          length += size;\n        }\n\n        if (!exclude) {\n          length += 1;\n        }\n\n        length = length - index;\n\n        if (length < 0) {\n          length = 0;\n        }\n\n        return self.$$cast(self.substr(index, length));\n      }\n\n\n      if (index.$$is_string) {\n        if (length != null) {\n          self.$raise($$($nesting, 'TypeError'))\n        }\n        return self.indexOf(index) !== -1 ? self.$$cast(index) : nil;\n      }\n\n\n      if (index.$$is_regexp) {\n        var match = self.match(index);\n\n        if (match === null) {\n          ($gvars[\"~\"] = nil)\n          return nil;\n        }\n\n        ($gvars[\"~\"] = $$($nesting, 'MatchData').$new(index, match))\n\n        if (length == null) {\n          return self.$$cast(match[0]);\n        }\n\n        length = $$($nesting, 'Opal').$coerce_to(length, $$($nesting, 'Integer'), \"to_int\");\n\n        if (length < 0 && -length < match.length) {\n          return self.$$cast(match[length += match.length]);\n        }\n\n        if (length >= 0 && length < match.length) {\n          return self.$$cast(match[length]);\n        }\n\n        return nil;\n      }\n\n\n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n\n      if (index < 0) {\n        index += size;\n      }\n\n      if (length == null) {\n        if (index >= size || index < 0) {\n          return nil;\n        }\n        return self.$$cast(self.substr(index, 1));\n      }\n\n      length = $$($nesting, 'Opal').$coerce_to(length, $$($nesting, 'Integer'), \"to_int\");\n\n      if (length < 0) {\n        return nil;\n      }\n\n      if (index > size || index < 0) {\n        return nil;\n      }\n\n      return self.$$cast(self.substr(index, length));\n    ;\n    }, $String_$$$11.$$arity = -2);\n    Opal.alias(self, \"byteslice\", \"[]\");\n    \n    Opal.def(self, '$b', $String_b$12 = function $$b() {\n      var self = this;\n\n      return self.$force_encoding(\"binary\")\n    }, $String_b$12.$$arity = 0);\n    \n    Opal.def(self, '$capitalize', $String_capitalize$13 = function $$capitalize() {\n      var self = this;\n\n      return self.$$cast(self.charAt(0).toUpperCase() + self.substr(1).toLowerCase());\n    }, $String_capitalize$13.$$arity = 0);\n    \n    Opal.def(self, '$casecmp', $String_casecmp$14 = function $$casecmp(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$respond_to?'](\"to_str\"))) {\n      } else {\n        return nil\n      };\n      other = $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'String'), \"to_str\").$to_s();\n      \n      var ascii_only = /^[\\x00-\\x7F]*$/;\n      if (ascii_only.test(self) && ascii_only.test(other)) {\n        self = self.toLowerCase();\n        other = other.toLowerCase();\n      }\n    ;\n      return self['$<=>'](other);\n    }, $String_casecmp$14.$$arity = 1);\n    \n    Opal.def(self, '$casecmp?', $String_casecmp$ques$15 = function(other) {\n      var self = this;\n\n      \n      var cmp = self.$casecmp(other);\n      if (cmp === nil) {\n        return nil;\n      } else {\n        return cmp === 0;\n      }\n    \n    }, $String_casecmp$ques$15.$$arity = 1);\n    \n    Opal.def(self, '$center', $String_center$16 = function $$center(width, padstr) {\n      var self = this;\n\n      \n      \n      if (padstr == null) {\n        padstr = \" \";\n      };\n      width = $$($nesting, 'Opal').$coerce_to(width, $$($nesting, 'Integer'), \"to_int\");\n      padstr = $$($nesting, 'Opal').$coerce_to(padstr, $$($nesting, 'String'), \"to_str\").$to_s();\n      if ($truthy(padstr['$empty?']())) {\n        self.$raise($$($nesting, 'ArgumentError'), \"zero width padding\")};\n      if ($truthy(width <= self.length)) {\n        return self};\n      \n      var ljustified = self.$ljust($rb_divide($rb_plus(width, self.length), 2).$ceil(), padstr),\n          rjustified = self.$rjust($rb_divide($rb_plus(width, self.length), 2).$floor(), padstr);\n\n      return self.$$cast(rjustified + ljustified.slice(self.length));\n    ;\n    }, $String_center$16.$$arity = -2);\n    \n    Opal.def(self, '$chars', $String_chars$17 = function $$chars() {\n      var $iter = $String_chars$17.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_chars$17.$$p = null;\n      \n      \n      if ($iter) $String_chars$17.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return self.$each_char().$to_a()\n      };\n      return $send(self, 'each_char', [], block.$to_proc());\n    }, $String_chars$17.$$arity = 0);\n    \n    Opal.def(self, '$chomp', $String_chomp$18 = function $$chomp(separator) {\n      var self = this;\n      if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n      \n      \n      if (separator == null) {\n        separator = $gvars[\"/\"];\n      };\n      if ($truthy(separator === nil || self.length === 0)) {\n        return self};\n      separator = $$($nesting, 'Opal')['$coerce_to!'](separator, $$($nesting, 'String'), \"to_str\").$to_s();\n      \n      var result;\n\n      if (separator === \"\\n\") {\n        result = self.replace(/\\r?\\n?$/, '');\n      }\n      else if (separator === \"\") {\n        result = self.replace(/(\\r?\\n)+$/, '');\n      }\n      else if (self.length >= separator.length) {\n        var tail = self.substr(self.length - separator.length, separator.length);\n\n        if (tail === separator) {\n          result = self.substr(0, self.length - separator.length);\n        }\n      }\n\n      if (result != null) {\n        return self.$$cast(result);\n      }\n    ;\n      return self;\n    }, $String_chomp$18.$$arity = -1);\n    \n    Opal.def(self, '$chop', $String_chop$19 = function $$chop() {\n      var self = this;\n\n      \n      var length = self.length, result;\n\n      if (length <= 1) {\n        result = \"\";\n      } else if (self.charAt(length - 1) === \"\\n\" && self.charAt(length - 2) === \"\\r\") {\n        result = self.substr(0, length - 2);\n      } else {\n        result = self.substr(0, length - 1);\n      }\n\n      return self.$$cast(result);\n    \n    }, $String_chop$19.$$arity = 0);\n    \n    Opal.def(self, '$chr', $String_chr$20 = function $$chr() {\n      var self = this;\n\n      return self.charAt(0);\n    }, $String_chr$20.$$arity = 0);\n    \n    Opal.def(self, '$clone', $String_clone$21 = function $$clone() {\n      var self = this, copy = nil;\n\n      \n      copy = self.slice();\n      copy.$copy_singleton_methods(self);\n      copy.$initialize_clone(self);\n      return copy;\n    }, $String_clone$21.$$arity = 0);\n    \n    Opal.def(self, '$dup', $String_dup$22 = function $$dup() {\n      var self = this, copy = nil;\n\n      \n      copy = self.slice();\n      copy.$initialize_dup(self);\n      return copy;\n    }, $String_dup$22.$$arity = 0);\n    \n    Opal.def(self, '$count', $String_count$23 = function $$count($a) {\n      var $post_args, sets, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      sets = $post_args;;\n      \n      if (sets.length === 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"ArgumentError: wrong number of arguments (0 for 1+)\")\n      }\n      var char_class = char_class_from_char_sets(sets);\n      if (char_class === null) {\n        return 0;\n      }\n      return self.length - self.replace(new RegExp(char_class, 'g'), '').length;\n    ;\n    }, $String_count$23.$$arity = -1);\n    \n    Opal.def(self, '$delete', $String_delete$24 = function($a) {\n      var $post_args, sets, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      sets = $post_args;;\n      \n      if (sets.length === 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"ArgumentError: wrong number of arguments (0 for 1+)\")\n      }\n      var char_class = char_class_from_char_sets(sets);\n      if (char_class === null) {\n        return self;\n      }\n      return self.$$cast(self.replace(new RegExp(char_class, 'g'), ''));\n    ;\n    }, $String_delete$24.$$arity = -1);\n    \n    Opal.def(self, '$delete_prefix', $String_delete_prefix$25 = function $$delete_prefix(prefix) {\n      var self = this;\n\n      \n      if (!prefix.$$is_string) {\n        (prefix = $$($nesting, 'Opal').$coerce_to(prefix, $$($nesting, 'String'), \"to_str\"))\n      }\n\n      if (self.slice(0, prefix.length) === prefix) {\n        return self.$$cast(self.slice(prefix.length));\n      } else {\n        return self;\n      }\n    \n    }, $String_delete_prefix$25.$$arity = 1);\n    \n    Opal.def(self, '$delete_suffix', $String_delete_suffix$26 = function $$delete_suffix(suffix) {\n      var self = this;\n\n      \n      if (!suffix.$$is_string) {\n        (suffix = $$($nesting, 'Opal').$coerce_to(suffix, $$($nesting, 'String'), \"to_str\"))\n      }\n\n      if (self.slice(self.length - suffix.length) === suffix) {\n        return self.$$cast(self.slice(0, self.length - suffix.length));\n      } else {\n        return self;\n      }\n    \n    }, $String_delete_suffix$26.$$arity = 1);\n    \n    Opal.def(self, '$downcase', $String_downcase$27 = function $$downcase() {\n      var self = this;\n\n      return self.$$cast(self.toLowerCase());\n    }, $String_downcase$27.$$arity = 0);\n    \n    Opal.def(self, '$each_char', $String_each_char$28 = function $$each_char() {\n      var $iter = $String_each_char$28.$$p, block = $iter || nil, $$29, self = this;\n\n      if ($iter) $String_each_char$28.$$p = null;\n      \n      \n      if ($iter) $String_each_char$28.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_char\"], ($$29 = function(){var self = $$29.$$s || this;\n\n        return self.$size()}, $$29.$$s = self, $$29.$$arity = 0, $$29))\n      };\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        Opal.yield1(block, self.charAt(i));\n      }\n    ;\n      return self;\n    }, $String_each_char$28.$$arity = 0);\n    \n    Opal.def(self, '$each_line', $String_each_line$30 = function $$each_line(separator) {\n      var $iter = $String_each_line$30.$$p, block = $iter || nil, self = this;\n      if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n      if ($iter) $String_each_line$30.$$p = null;\n      \n      \n      if ($iter) $String_each_line$30.$$p = null;;\n      \n      if (separator == null) {\n        separator = $gvars[\"/\"];\n      };\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"each_line\", separator)\n      };\n      \n      if (separator === nil) {\n        Opal.yield1(block, self);\n\n        return self;\n      }\n\n      separator = $$($nesting, 'Opal').$coerce_to(separator, $$($nesting, 'String'), \"to_str\")\n\n      var a, i, n, length, chomped, trailing, splitted;\n\n      if (separator.length === 0) {\n        for (a = self.split(/(\\n{2,})/), i = 0, n = a.length; i < n; i += 2) {\n          if (a[i] || a[i + 1]) {\n            var value = (a[i] || \"\") + (a[i + 1] || \"\");\n            Opal.yield1(block, self.$$cast(value));\n          }\n        }\n\n        return self;\n      }\n\n      chomped  = self.$chomp(separator);\n      trailing = self.length != chomped.length;\n      splitted = chomped.split(separator);\n\n      for (i = 0, length = splitted.length; i < length; i++) {\n        if (i < length - 1 || trailing) {\n          Opal.yield1(block, self.$$cast(splitted[i] + separator));\n        }\n        else {\n          Opal.yield1(block, self.$$cast(splitted[i]));\n        }\n      }\n    ;\n      return self;\n    }, $String_each_line$30.$$arity = -1);\n    \n    Opal.def(self, '$empty?', $String_empty$ques$31 = function() {\n      var self = this;\n\n      return self.length === 0;\n    }, $String_empty$ques$31.$$arity = 0);\n    \n    Opal.def(self, '$end_with?', $String_end_with$ques$32 = function($a) {\n      var $post_args, suffixes, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      suffixes = $post_args;;\n      \n      for (var i = 0, length = suffixes.length; i < length; i++) {\n        var suffix = $$($nesting, 'Opal').$coerce_to(suffixes[i], $$($nesting, 'String'), \"to_str\").$to_s();\n\n        if (self.length >= suffix.length &&\n            self.substr(self.length - suffix.length, suffix.length) == suffix) {\n          return true;\n        }\n      }\n    ;\n      return false;\n    }, $String_end_with$ques$32.$$arity = -1);\n    Opal.alias(self, \"equal?\", \"===\");\n    \n    Opal.def(self, '$gsub', $String_gsub$33 = function $$gsub(pattern, replacement) {\n      var $iter = $String_gsub$33.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_gsub$33.$$p = null;\n      \n      \n      if ($iter) $String_gsub$33.$$p = null;;\n      ;\n      \n      if (replacement === undefined && block === nil) {\n        return self.$enum_for(\"gsub\", pattern);\n      }\n\n      var result = '', match_data = nil, index = 0, match, _replacement;\n\n      if (pattern.$$is_regexp) {\n        pattern = Opal.global_multiline_regexp(pattern);\n      } else {\n        pattern = $$($nesting, 'Opal').$coerce_to(pattern, $$($nesting, 'String'), \"to_str\");\n        pattern = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gm');\n      }\n\n      var lastIndex;\n      while (true) {\n        match = pattern.exec(self);\n\n        if (match === null) {\n          ($gvars[\"~\"] = nil)\n          result += self.slice(index);\n          break;\n        }\n\n        match_data = $$($nesting, 'MatchData').$new(pattern, match);\n\n        if (replacement === undefined) {\n          lastIndex = pattern.lastIndex;\n          _replacement = block(match[0]);\n          pattern.lastIndex = lastIndex; // save and restore lastIndex\n        }\n        else if (replacement.$$is_hash) {\n          _replacement = (replacement)['$[]'](match[0]).$to_s();\n        }\n        else {\n          if (!replacement.$$is_string) {\n            replacement = $$($nesting, 'Opal').$coerce_to(replacement, $$($nesting, 'String'), \"to_str\");\n          }\n          _replacement = replacement.replace(/([\\\\]+)([0-9+&`'])/g, function (original, slashes, command) {\n            if (slashes.length % 2 === 0) {\n              return original;\n            }\n            switch (command) {\n            case \"+\":\n              for (var i = match.length - 1; i > 0; i--) {\n                if (match[i] !== undefined) {\n                  return slashes.slice(1) + match[i];\n                }\n              }\n              return '';\n            case \"&\": return slashes.slice(1) + match[0];\n            case \"`\": return slashes.slice(1) + self.slice(0, match.index);\n            case \"'\": return slashes.slice(1) + self.slice(match.index + match[0].length);\n            default:  return slashes.slice(1) + (match[command] || '');\n            }\n          }).replace(/\\\\\\\\/g, '\\\\');\n        }\n\n        if (pattern.lastIndex === match.index) {\n          result += (_replacement + self.slice(index, match.index + 1))\n          pattern.lastIndex += 1;\n        }\n        else {\n          result += (self.slice(index, match.index) + _replacement)\n        }\n        index = pattern.lastIndex;\n      }\n\n      ($gvars[\"~\"] = match_data)\n      return self.$$cast(result);\n    ;\n    }, $String_gsub$33.$$arity = -2);\n    \n    Opal.def(self, '$hash', $String_hash$34 = function $$hash() {\n      var self = this;\n\n      return self.toString();\n    }, $String_hash$34.$$arity = 0);\n    \n    Opal.def(self, '$hex', $String_hex$35 = function $$hex() {\n      var self = this;\n\n      return self.$to_i(16)\n    }, $String_hex$35.$$arity = 0);\n    \n    Opal.def(self, '$include?', $String_include$ques$36 = function(other) {\n      var self = this;\n\n      \n      if (!other.$$is_string) {\n        (other = $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'String'), \"to_str\"))\n      }\n      return self.indexOf(other) !== -1;\n    \n    }, $String_include$ques$36.$$arity = 1);\n    \n    Opal.def(self, '$index', $String_index$37 = function $$index(search, offset) {\n      var self = this;\n\n      \n      ;\n      \n      var index,\n          match,\n          regex;\n\n      if (offset === undefined) {\n        offset = 0;\n      } else {\n        offset = $$($nesting, 'Opal').$coerce_to(offset, $$($nesting, 'Integer'), \"to_int\");\n        if (offset < 0) {\n          offset += self.length;\n          if (offset < 0) {\n            return nil;\n          }\n        }\n      }\n\n      if (search.$$is_regexp) {\n        regex = Opal.global_multiline_regexp(search);\n        while (true) {\n          match = regex.exec(self);\n          if (match === null) {\n            ($gvars[\"~\"] = nil);\n            index = -1;\n            break;\n          }\n          if (match.index >= offset) {\n            ($gvars[\"~\"] = $$($nesting, 'MatchData').$new(regex, match))\n            index = match.index;\n            break;\n          }\n          regex.lastIndex = match.index + 1;\n        }\n      } else {\n        search = $$($nesting, 'Opal').$coerce_to(search, $$($nesting, 'String'), \"to_str\");\n        if (search.length === 0 && offset > self.length) {\n          index = -1;\n        } else {\n          index = self.indexOf(search, offset);\n        }\n      }\n\n      return index === -1 ? nil : index;\n    ;\n    }, $String_index$37.$$arity = -2);\n    \n    Opal.def(self, '$inspect', $String_inspect$38 = function $$inspect() {\n      var self = this;\n\n      \n      var escapable = /[\\\\\\\"\\x00-\\x1f\\u007F-\\u009F\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n          meta = {\n            '\\u0007': '\\\\a',\n            '\\u001b': '\\\\e',\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\\v': '\\\\v',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n          },\n          escaped = self.replace(escapable, function (chr) {\n            return meta[chr] || '\\\\u' + ('0000' + chr.charCodeAt(0).toString(16).toUpperCase()).slice(-4);\n          });\n      return '\"' + escaped.replace(/\\#[\\$\\@\\{]/g, '\\\\$&') + '\"';\n    \n    }, $String_inspect$38.$$arity = 0);\n    \n    Opal.def(self, '$intern', $String_intern$39 = function $$intern() {\n      var self = this;\n\n      return self.toString();\n    }, $String_intern$39.$$arity = 0);\n    \n    Opal.def(self, '$lines', $String_lines$40 = function $$lines(separator) {\n      var $iter = $String_lines$40.$$p, block = $iter || nil, self = this, e = nil;\n      if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n      if ($iter) $String_lines$40.$$p = null;\n      \n      \n      if ($iter) $String_lines$40.$$p = null;;\n      \n      if (separator == null) {\n        separator = $gvars[\"/\"];\n      };\n      e = $send(self, 'each_line', [separator], block.$to_proc());\n      if ($truthy(block)) {\n        return self\n      } else {\n        return e.$to_a()\n      };\n    }, $String_lines$40.$$arity = -1);\n    \n    Opal.def(self, '$length', $String_length$41 = function $$length() {\n      var self = this;\n\n      return self.length;\n    }, $String_length$41.$$arity = 0);\n    \n    Opal.def(self, '$ljust', $String_ljust$42 = function $$ljust(width, padstr) {\n      var self = this;\n\n      \n      \n      if (padstr == null) {\n        padstr = \" \";\n      };\n      width = $$($nesting, 'Opal').$coerce_to(width, $$($nesting, 'Integer'), \"to_int\");\n      padstr = $$($nesting, 'Opal').$coerce_to(padstr, $$($nesting, 'String'), \"to_str\").$to_s();\n      if ($truthy(padstr['$empty?']())) {\n        self.$raise($$($nesting, 'ArgumentError'), \"zero width padding\")};\n      if ($truthy(width <= self.length)) {\n        return self};\n      \n      var index  = -1,\n          result = \"\";\n\n      width -= self.length;\n\n      while (++index < width) {\n        result += padstr;\n      }\n\n      return self.$$cast(self + result.slice(0, width));\n    ;\n    }, $String_ljust$42.$$arity = -2);\n    \n    Opal.def(self, '$lstrip', $String_lstrip$43 = function $$lstrip() {\n      var self = this;\n\n      return self.replace(/^\\s*/, '');\n    }, $String_lstrip$43.$$arity = 0);\n    \n    Opal.def(self, '$ascii_only?', $String_ascii_only$ques$44 = function() {\n      var self = this;\n\n      return self.match(/[ -~\\n]*/)[0] === self;\n    }, $String_ascii_only$ques$44.$$arity = 0);\n    \n    Opal.def(self, '$match', $String_match$45 = function $$match(pattern, pos) {\n      var $iter = $String_match$45.$$p, block = $iter || nil, $a, self = this;\n\n      if ($iter) $String_match$45.$$p = null;\n      \n      \n      if ($iter) $String_match$45.$$p = null;;\n      ;\n      if ($truthy(($truthy($a = $$($nesting, 'String')['$==='](pattern)) ? $a : pattern['$respond_to?'](\"to_str\")))) {\n        pattern = $$($nesting, 'Regexp').$new(pattern.$to_str())};\n      if ($truthy($$($nesting, 'Regexp')['$==='](pattern))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + (pattern.$class()) + \" (expected Regexp)\")\n      };\n      return $send(pattern, 'match', [self, pos], block.$to_proc());\n    }, $String_match$45.$$arity = -2);\n    \n    Opal.def(self, '$match?', $String_match$ques$46 = function(pattern, pos) {\n      var $a, self = this;\n\n      \n      ;\n      if ($truthy(($truthy($a = $$($nesting, 'String')['$==='](pattern)) ? $a : pattern['$respond_to?'](\"to_str\")))) {\n        pattern = $$($nesting, 'Regexp').$new(pattern.$to_str())};\n      if ($truthy($$($nesting, 'Regexp')['$==='](pattern))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + (pattern.$class()) + \" (expected Regexp)\")\n      };\n      return pattern['$match?'](self, pos);\n    }, $String_match$ques$46.$$arity = -2);\n    \n    Opal.def(self, '$next', $String_next$47 = function $$next() {\n      var self = this;\n\n      \n      var i = self.length;\n      if (i === 0) {\n        return self.$$cast('');\n      }\n      var result = self;\n      var first_alphanum_char_index = self.search(/[a-zA-Z0-9]/);\n      var carry = false;\n      var code;\n      while (i--) {\n        code = self.charCodeAt(i);\n        if ((code >= 48 && code <= 57) ||\n          (code >= 65 && code <= 90) ||\n          (code >= 97 && code <= 122)) {\n          switch (code) {\n          case 57:\n            carry = true;\n            code = 48;\n            break;\n          case 90:\n            carry = true;\n            code = 65;\n            break;\n          case 122:\n            carry = true;\n            code = 97;\n            break;\n          default:\n            carry = false;\n            code += 1;\n          }\n        } else {\n          if (first_alphanum_char_index === -1) {\n            if (code === 255) {\n              carry = true;\n              code = 0;\n            } else {\n              carry = false;\n              code += 1;\n            }\n          } else {\n            carry = true;\n          }\n        }\n        result = result.slice(0, i) + String.fromCharCode(code) + result.slice(i + 1);\n        if (carry && (i === 0 || i === first_alphanum_char_index)) {\n          switch (code) {\n          case 65:\n            break;\n          case 97:\n            break;\n          default:\n            code += 1;\n          }\n          if (i === 0) {\n            result = String.fromCharCode(code) + result;\n          } else {\n            result = result.slice(0, i) + String.fromCharCode(code) + result.slice(i);\n          }\n          carry = false;\n        }\n        if (!carry) {\n          break;\n        }\n      }\n      return self.$$cast(result);\n    \n    }, $String_next$47.$$arity = 0);\n    \n    Opal.def(self, '$oct', $String_oct$48 = function $$oct() {\n      var self = this;\n\n      \n      var result,\n          string = self,\n          radix = 8;\n\n      if (/^\\s*_/.test(string)) {\n        return 0;\n      }\n\n      string = string.replace(/^(\\s*[+-]?)(0[bodx]?)(.+)$/i, function (original, head, flag, tail) {\n        switch (tail.charAt(0)) {\n        case '+':\n        case '-':\n          return original;\n        case '0':\n          if (tail.charAt(1) === 'x' && flag === '0x') {\n            return original;\n          }\n        }\n        switch (flag) {\n        case '0b':\n          radix = 2;\n          break;\n        case '0':\n        case '0o':\n          radix = 8;\n          break;\n        case '0d':\n          radix = 10;\n          break;\n        case '0x':\n          radix = 16;\n          break;\n        }\n        return head + tail;\n      });\n\n      result = parseInt(string.replace(/_(?!_)/g, ''), radix);\n      return isNaN(result) ? 0 : result;\n    \n    }, $String_oct$48.$$arity = 0);\n    \n    Opal.def(self, '$ord', $String_ord$49 = function $$ord() {\n      var self = this;\n\n      return self.charCodeAt(0);\n    }, $String_ord$49.$$arity = 0);\n    \n    Opal.def(self, '$partition', $String_partition$50 = function $$partition(sep) {\n      var self = this;\n\n      \n      var i, m;\n\n      if (sep.$$is_regexp) {\n        m = sep.exec(self);\n        if (m === null) {\n          i = -1;\n        } else {\n          $$($nesting, 'MatchData').$new(sep, m);\n          sep = m[0];\n          i = m.index;\n        }\n      } else {\n        sep = $$($nesting, 'Opal').$coerce_to(sep, $$($nesting, 'String'), \"to_str\");\n        i = self.indexOf(sep);\n      }\n\n      if (i === -1) {\n        return [self, '', ''];\n      }\n\n      return [\n        self.slice(0, i),\n        self.slice(i, i + sep.length),\n        self.slice(i + sep.length)\n      ];\n    \n    }, $String_partition$50.$$arity = 1);\n    \n    Opal.def(self, '$reverse', $String_reverse$51 = function $$reverse() {\n      var self = this;\n\n      return self.split('').reverse().join('');\n    }, $String_reverse$51.$$arity = 0);\n    \n    Opal.def(self, '$rindex', $String_rindex$52 = function $$rindex(search, offset) {\n      var self = this;\n\n      \n      ;\n      \n      var i, m, r, _m;\n\n      if (offset === undefined) {\n        offset = self.length;\n      } else {\n        offset = $$($nesting, 'Opal').$coerce_to(offset, $$($nesting, 'Integer'), \"to_int\");\n        if (offset < 0) {\n          offset += self.length;\n          if (offset < 0) {\n            return nil;\n          }\n        }\n      }\n\n      if (search.$$is_regexp) {\n        m = null;\n        r = Opal.global_multiline_regexp(search);\n        while (true) {\n          _m = r.exec(self);\n          if (_m === null || _m.index > offset) {\n            break;\n          }\n          m = _m;\n          r.lastIndex = m.index + 1;\n        }\n        if (m === null) {\n          ($gvars[\"~\"] = nil)\n          i = -1;\n        } else {\n          $$($nesting, 'MatchData').$new(r, m);\n          i = m.index;\n        }\n      } else {\n        search = $$($nesting, 'Opal').$coerce_to(search, $$($nesting, 'String'), \"to_str\");\n        i = self.lastIndexOf(search, offset);\n      }\n\n      return i === -1 ? nil : i;\n    ;\n    }, $String_rindex$52.$$arity = -2);\n    \n    Opal.def(self, '$rjust', $String_rjust$53 = function $$rjust(width, padstr) {\n      var self = this;\n\n      \n      \n      if (padstr == null) {\n        padstr = \" \";\n      };\n      width = $$($nesting, 'Opal').$coerce_to(width, $$($nesting, 'Integer'), \"to_int\");\n      padstr = $$($nesting, 'Opal').$coerce_to(padstr, $$($nesting, 'String'), \"to_str\").$to_s();\n      if ($truthy(padstr['$empty?']())) {\n        self.$raise($$($nesting, 'ArgumentError'), \"zero width padding\")};\n      if ($truthy(width <= self.length)) {\n        return self};\n      \n      var chars     = Math.floor(width - self.length),\n          patterns  = Math.floor(chars / padstr.length),\n          result    = Array(patterns + 1).join(padstr),\n          remaining = chars - result.length;\n\n      return self.$$cast(result + padstr.slice(0, remaining) + self);\n    ;\n    }, $String_rjust$53.$$arity = -2);\n    \n    Opal.def(self, '$rpartition', $String_rpartition$54 = function $$rpartition(sep) {\n      var self = this;\n\n      \n      var i, m, r, _m;\n\n      if (sep.$$is_regexp) {\n        m = null;\n        r = Opal.global_multiline_regexp(sep);\n\n        while (true) {\n          _m = r.exec(self);\n          if (_m === null) {\n            break;\n          }\n          m = _m;\n          r.lastIndex = m.index + 1;\n        }\n\n        if (m === null) {\n          i = -1;\n        } else {\n          $$($nesting, 'MatchData').$new(r, m);\n          sep = m[0];\n          i = m.index;\n        }\n\n      } else {\n        sep = $$($nesting, 'Opal').$coerce_to(sep, $$($nesting, 'String'), \"to_str\");\n        i = self.lastIndexOf(sep);\n      }\n\n      if (i === -1) {\n        return ['', '', self];\n      }\n\n      return [\n        self.slice(0, i),\n        self.slice(i, i + sep.length),\n        self.slice(i + sep.length)\n      ];\n    \n    }, $String_rpartition$54.$$arity = 1);\n    \n    Opal.def(self, '$rstrip', $String_rstrip$55 = function $$rstrip() {\n      var self = this;\n\n      return self.replace(/[\\s\\u0000]*$/, '');\n    }, $String_rstrip$55.$$arity = 0);\n    \n    Opal.def(self, '$scan', $String_scan$56 = function $$scan(pattern) {\n      var $iter = $String_scan$56.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_scan$56.$$p = null;\n      \n      \n      if ($iter) $String_scan$56.$$p = null;;\n      \n      var result = [],\n          match_data = nil,\n          match;\n\n      if (pattern.$$is_regexp) {\n        pattern = Opal.global_multiline_regexp(pattern);\n      } else {\n        pattern = $$($nesting, 'Opal').$coerce_to(pattern, $$($nesting, 'String'), \"to_str\");\n        pattern = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gm');\n      }\n\n      while ((match = pattern.exec(self)) != null) {\n        match_data = $$($nesting, 'MatchData').$new(pattern, match);\n        if (block === nil) {\n          match.length == 1 ? result.push(match[0]) : result.push((match_data).$captures());\n        } else {\n          match.length == 1 ? block(match[0]) : block.call(self, (match_data).$captures());\n        }\n        if (pattern.lastIndex === match.index) {\n          pattern.lastIndex += 1;\n        }\n      }\n\n      ($gvars[\"~\"] = match_data)\n\n      return (block !== nil ? self : result);\n    ;\n    }, $String_scan$56.$$arity = 1);\n    Opal.alias(self, \"size\", \"length\");\n    Opal.alias(self, \"slice\", \"[]\");\n    \n    Opal.def(self, '$split', $String_split$57 = function $$split(pattern, limit) {\n      var $a, self = this;\n      if ($gvars[\";\"] == null) $gvars[\";\"] = nil;\n\n      \n      ;\n      ;\n      \n      if (self.length === 0) {\n        return [];\n      }\n\n      if (limit === undefined) {\n        limit = 0;\n      } else {\n        limit = $$($nesting, 'Opal')['$coerce_to!'](limit, $$($nesting, 'Integer'), \"to_int\");\n        if (limit === 1) {\n          return [self];\n        }\n      }\n\n      if (pattern === undefined || pattern === nil) {\n        pattern = ($truthy($a = $gvars[\";\"]) ? $a : \" \");\n      }\n\n      var result = [],\n          string = self.toString(),\n          index = 0,\n          match,\n          i, ii;\n\n      if (pattern.$$is_regexp) {\n        pattern = Opal.global_multiline_regexp(pattern);\n      } else {\n        pattern = $$($nesting, 'Opal').$coerce_to(pattern, $$($nesting, 'String'), \"to_str\").$to_s();\n        if (pattern === ' ') {\n          pattern = /\\s+/gm;\n          string = string.replace(/^\\s+/, '');\n        } else {\n          pattern = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gm');\n        }\n      }\n\n      result = string.split(pattern);\n\n      if (result.length === 1 && result[0] === string) {\n        return [self.$$cast(result[0])];\n      }\n\n      while ((i = result.indexOf(undefined)) !== -1) {\n        result.splice(i, 1);\n      }\n\n      function castResult() {\n        for (i = 0; i < result.length; i++) {\n          result[i] = self.$$cast(result[i]);\n        }\n      }\n\n      if (limit === 0) {\n        while (result[result.length - 1] === '') {\n          result.length -= 1;\n        }\n        castResult();\n        return result;\n      }\n\n      match = pattern.exec(string);\n\n      if (limit < 0) {\n        if (match !== null && match[0] === '' && pattern.source.indexOf('(?=') === -1) {\n          for (i = 0, ii = match.length; i < ii; i++) {\n            result.push('');\n          }\n        }\n        castResult();\n        return result;\n      }\n\n      if (match !== null && match[0] === '') {\n        result.splice(limit - 1, result.length - 1, result.slice(limit - 1).join(''));\n        castResult();\n        return result;\n      }\n\n      if (limit >= result.length) {\n        castResult();\n        return result;\n      }\n\n      i = 0;\n      while (match !== null) {\n        i++;\n        index = pattern.lastIndex;\n        if (i + 1 === limit) {\n          break;\n        }\n        match = pattern.exec(string);\n      }\n      result.splice(limit - 1, result.length - 1, string.slice(index));\n      castResult();\n      return result;\n    ;\n    }, $String_split$57.$$arity = -1);\n    \n    Opal.def(self, '$squeeze', $String_squeeze$58 = function $$squeeze($a) {\n      var $post_args, sets, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      sets = $post_args;;\n      \n      if (sets.length === 0) {\n        return self.$$cast(self.replace(/(.)\\1+/g, '$1'));\n      }\n      var char_class = char_class_from_char_sets(sets);\n      if (char_class === null) {\n        return self;\n      }\n      return self.$$cast(self.replace(new RegExp('(' + char_class + ')\\\\1+', 'g'), '$1'));\n    ;\n    }, $String_squeeze$58.$$arity = -1);\n    \n    Opal.def(self, '$start_with?', $String_start_with$ques$59 = function($a) {\n      var $post_args, prefixes, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      prefixes = $post_args;;\n      \n      for (var i = 0, length = prefixes.length; i < length; i++) {\n        var prefix = $$($nesting, 'Opal').$coerce_to(prefixes[i], $$($nesting, 'String'), \"to_str\").$to_s();\n\n        if (self.indexOf(prefix) === 0) {\n          return true;\n        }\n      }\n\n      return false;\n    ;\n    }, $String_start_with$ques$59.$$arity = -1);\n    \n    Opal.def(self, '$strip', $String_strip$60 = function $$strip() {\n      var self = this;\n\n      return self.replace(/^\\s*/, '').replace(/[\\s\\u0000]*$/, '');\n    }, $String_strip$60.$$arity = 0);\n    \n    Opal.def(self, '$sub', $String_sub$61 = function $$sub(pattern, replacement) {\n      var $iter = $String_sub$61.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_sub$61.$$p = null;\n      \n      \n      if ($iter) $String_sub$61.$$p = null;;\n      ;\n      \n      if (!pattern.$$is_regexp) {\n        pattern = $$($nesting, 'Opal').$coerce_to(pattern, $$($nesting, 'String'), \"to_str\");\n        pattern = new RegExp(pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n      }\n\n      var result, match = pattern.exec(self);\n\n      if (match === null) {\n        ($gvars[\"~\"] = nil)\n        result = self.toString();\n      } else {\n        $$($nesting, 'MatchData').$new(pattern, match)\n\n        if (replacement === undefined) {\n\n          if (block === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (1 for 2)\")\n          }\n          result = self.slice(0, match.index) + block(match[0]) + self.slice(match.index + match[0].length);\n\n        } else if (replacement.$$is_hash) {\n\n          result = self.slice(0, match.index) + (replacement)['$[]'](match[0]).$to_s() + self.slice(match.index + match[0].length);\n\n        } else {\n\n          replacement = $$($nesting, 'Opal').$coerce_to(replacement, $$($nesting, 'String'), \"to_str\");\n\n          replacement = replacement.replace(/([\\\\]+)([0-9+&`'])/g, function (original, slashes, command) {\n            if (slashes.length % 2 === 0) {\n              return original;\n            }\n            switch (command) {\n            case \"+\":\n              for (var i = match.length - 1; i > 0; i--) {\n                if (match[i] !== undefined) {\n                  return slashes.slice(1) + match[i];\n                }\n              }\n              return '';\n            case \"&\": return slashes.slice(1) + match[0];\n            case \"`\": return slashes.slice(1) + self.slice(0, match.index);\n            case \"'\": return slashes.slice(1) + self.slice(match.index + match[0].length);\n            default:  return slashes.slice(1) + (match[command] || '');\n            }\n          }).replace(/\\\\\\\\/g, '\\\\');\n\n          result = self.slice(0, match.index) + replacement + self.slice(match.index + match[0].length);\n        }\n      }\n\n      return self.$$cast(result);\n    ;\n    }, $String_sub$61.$$arity = -2);\n    Opal.alias(self, \"succ\", \"next\");\n    \n    Opal.def(self, '$sum', $String_sum$62 = function $$sum(n) {\n      var self = this;\n\n      \n      \n      if (n == null) {\n        n = 16;\n      };\n      \n      n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n\n      var result = 0,\n          length = self.length,\n          i = 0;\n\n      for (; i < length; i++) {\n        result += self.charCodeAt(i);\n      }\n\n      if (n <= 0) {\n        return result;\n      }\n\n      return result & (Math.pow(2, n) - 1);\n    ;\n    }, $String_sum$62.$$arity = -1);\n    \n    Opal.def(self, '$swapcase', $String_swapcase$63 = function $$swapcase() {\n      var self = this;\n\n      \n      var str = self.replace(/([a-z]+)|([A-Z]+)/g, function($0,$1,$2) {\n        return $1 ? $0.toUpperCase() : $0.toLowerCase();\n      });\n\n      if (self.constructor === String) {\n        return str;\n      }\n\n      return self.$class().$new(str);\n    \n    }, $String_swapcase$63.$$arity = 0);\n    \n    Opal.def(self, '$to_f', $String_to_f$64 = function $$to_f() {\n      var self = this;\n\n      \n      if (self.charAt(0) === '_') {\n        return 0;\n      }\n\n      var result = parseFloat(self.replace(/_/g, ''));\n\n      if (isNaN(result) || result == Infinity || result == -Infinity) {\n        return 0;\n      }\n      else {\n        return result;\n      }\n    \n    }, $String_to_f$64.$$arity = 0);\n    \n    Opal.def(self, '$to_i', $String_to_i$65 = function $$to_i(base) {\n      var self = this;\n\n      \n      \n      if (base == null) {\n        base = 10;\n      };\n      \n      var result,\n          string = self.toLowerCase(),\n          radix = $$($nesting, 'Opal').$coerce_to(base, $$($nesting, 'Integer'), \"to_int\");\n\n      if (radix === 1 || radix < 0 || radix > 36) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid radix \" + (radix))\n      }\n\n      if (/^\\s*_/.test(string)) {\n        return 0;\n      }\n\n      string = string.replace(/^(\\s*[+-]?)(0[bodx]?)(.+)$/, function (original, head, flag, tail) {\n        switch (tail.charAt(0)) {\n        case '+':\n        case '-':\n          return original;\n        case '0':\n          if (tail.charAt(1) === 'x' && flag === '0x' && (radix === 0 || radix === 16)) {\n            return original;\n          }\n        }\n        switch (flag) {\n        case '0b':\n          if (radix === 0 || radix === 2) {\n            radix = 2;\n            return head + tail;\n          }\n          break;\n        case '0':\n        case '0o':\n          if (radix === 0 || radix === 8) {\n            radix = 8;\n            return head + tail;\n          }\n          break;\n        case '0d':\n          if (radix === 0 || radix === 10) {\n            radix = 10;\n            return head + tail;\n          }\n          break;\n        case '0x':\n          if (radix === 0 || radix === 16) {\n            radix = 16;\n            return head + tail;\n          }\n          break;\n        }\n        return original\n      });\n\n      result = parseInt(string.replace(/_(?!_)/g, ''), radix);\n      return isNaN(result) ? 0 : result;\n    ;\n    }, $String_to_i$65.$$arity = -1);\n    \n    Opal.def(self, '$to_proc', $String_to_proc$66 = function $$to_proc() {\n      var $$67, $iter = $String_to_proc$66.$$p, $yield = $iter || nil, self = this, method_name = nil;\n\n      if ($iter) $String_to_proc$66.$$p = null;\n      \n      method_name = $rb_plus(\"$\", self.valueOf());\n      return $send(self, 'proc', [], ($$67 = function($a){var self = $$67.$$s || this, $iter = $$67.$$p, block = $iter || nil, $post_args, args;\n\n      \n        \n        if ($iter) $$67.$$p = null;;\n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        \n        if (args.length === 0) {\n          self.$raise($$($nesting, 'ArgumentError'), \"no receiver given\")\n        }\n\n        var recv = args[0];\n\n        if (recv == null) recv = nil;\n\n        var body = recv[method_name];\n\n        if (!body) {\n          return recv.$method_missing.apply(recv, args);\n        }\n\n        if (typeof block === 'function') {\n          body.$$p = block;\n        }\n\n        if (args.length === 1) {\n          return body.call(recv);\n        } else {\n          return body.apply(recv, args.slice(1));\n        }\n      ;}, $$67.$$s = self, $$67.$$arity = -1, $$67));\n    }, $String_to_proc$66.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $String_to_s$68 = function $$to_s() {\n      var self = this;\n\n      return self.toString();\n    }, $String_to_s$68.$$arity = 0);\n    Opal.alias(self, \"to_str\", \"to_s\");\n    Opal.alias(self, \"to_sym\", \"intern\");\n    \n    Opal.def(self, '$tr', $String_tr$69 = function $$tr(from, to) {\n      var self = this;\n\n      \n      from = $$($nesting, 'Opal').$coerce_to(from, $$($nesting, 'String'), \"to_str\").$to_s();\n      to = $$($nesting, 'Opal').$coerce_to(to, $$($nesting, 'String'), \"to_str\").$to_s();\n      \n      if (from.length == 0 || from === to) {\n        return self;\n      }\n\n      var i, in_range, c, ch, start, end, length;\n      var subs = {};\n      var from_chars = from.split('');\n      var from_length = from_chars.length;\n      var to_chars = to.split('');\n      var to_length = to_chars.length;\n\n      var inverse = false;\n      var global_sub = null;\n      if (from_chars[0] === '^' && from_chars.length > 1) {\n        inverse = true;\n        from_chars.shift();\n        global_sub = to_chars[to_length - 1]\n        from_length -= 1;\n      }\n\n      var from_chars_expanded = [];\n      var last_from = null;\n      in_range = false;\n      for (i = 0; i < from_length; i++) {\n        ch = from_chars[i];\n        if (last_from == null) {\n          last_from = ch;\n          from_chars_expanded.push(ch);\n        }\n        else if (ch === '-') {\n          if (last_from === '-') {\n            from_chars_expanded.push('-');\n            from_chars_expanded.push('-');\n          }\n          else if (i == from_length - 1) {\n            from_chars_expanded.push('-');\n          }\n          else {\n            in_range = true;\n          }\n        }\n        else if (in_range) {\n          start = last_from.charCodeAt(0);\n          end = ch.charCodeAt(0);\n          if (start > end) {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (String.fromCharCode(start)) + \"-\" + (String.fromCharCode(end)) + \"\\\" in string transliteration\")\n          }\n          for (c = start + 1; c < end; c++) {\n            from_chars_expanded.push(String.fromCharCode(c));\n          }\n          from_chars_expanded.push(ch);\n          in_range = null;\n          last_from = null;\n        }\n        else {\n          from_chars_expanded.push(ch);\n        }\n      }\n\n      from_chars = from_chars_expanded;\n      from_length = from_chars.length;\n\n      if (inverse) {\n        for (i = 0; i < from_length; i++) {\n          subs[from_chars[i]] = true;\n        }\n      }\n      else {\n        if (to_length > 0) {\n          var to_chars_expanded = [];\n          var last_to = null;\n          in_range = false;\n          for (i = 0; i < to_length; i++) {\n            ch = to_chars[i];\n            if (last_to == null) {\n              last_to = ch;\n              to_chars_expanded.push(ch);\n            }\n            else if (ch === '-') {\n              if (last_to === '-') {\n                to_chars_expanded.push('-');\n                to_chars_expanded.push('-');\n              }\n              else if (i == to_length - 1) {\n                to_chars_expanded.push('-');\n              }\n              else {\n                in_range = true;\n              }\n            }\n            else if (in_range) {\n              start = last_to.charCodeAt(0);\n              end = ch.charCodeAt(0);\n              if (start > end) {\n                self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (String.fromCharCode(start)) + \"-\" + (String.fromCharCode(end)) + \"\\\" in string transliteration\")\n              }\n              for (c = start + 1; c < end; c++) {\n                to_chars_expanded.push(String.fromCharCode(c));\n              }\n              to_chars_expanded.push(ch);\n              in_range = null;\n              last_to = null;\n            }\n            else {\n              to_chars_expanded.push(ch);\n            }\n          }\n\n          to_chars = to_chars_expanded;\n          to_length = to_chars.length;\n        }\n\n        var length_diff = from_length - to_length;\n        if (length_diff > 0) {\n          var pad_char = (to_length > 0 ? to_chars[to_length - 1] : '');\n          for (i = 0; i < length_diff; i++) {\n            to_chars.push(pad_char);\n          }\n        }\n\n        for (i = 0; i < from_length; i++) {\n          subs[from_chars[i]] = to_chars[i];\n        }\n      }\n\n      var new_str = ''\n      for (i = 0, length = self.length; i < length; i++) {\n        ch = self.charAt(i);\n        var sub = subs[ch];\n        if (inverse) {\n          new_str += (sub == null ? global_sub : ch);\n        }\n        else {\n          new_str += (sub != null ? sub : ch);\n        }\n      }\n      return self.$$cast(new_str);\n    ;\n    }, $String_tr$69.$$arity = 2);\n    \n    Opal.def(self, '$tr_s', $String_tr_s$70 = function $$tr_s(from, to) {\n      var self = this;\n\n      \n      from = $$($nesting, 'Opal').$coerce_to(from, $$($nesting, 'String'), \"to_str\").$to_s();\n      to = $$($nesting, 'Opal').$coerce_to(to, $$($nesting, 'String'), \"to_str\").$to_s();\n      \n      if (from.length == 0) {\n        return self;\n      }\n\n      var i, in_range, c, ch, start, end, length;\n      var subs = {};\n      var from_chars = from.split('');\n      var from_length = from_chars.length;\n      var to_chars = to.split('');\n      var to_length = to_chars.length;\n\n      var inverse = false;\n      var global_sub = null;\n      if (from_chars[0] === '^' && from_chars.length > 1) {\n        inverse = true;\n        from_chars.shift();\n        global_sub = to_chars[to_length - 1]\n        from_length -= 1;\n      }\n\n      var from_chars_expanded = [];\n      var last_from = null;\n      in_range = false;\n      for (i = 0; i < from_length; i++) {\n        ch = from_chars[i];\n        if (last_from == null) {\n          last_from = ch;\n          from_chars_expanded.push(ch);\n        }\n        else if (ch === '-') {\n          if (last_from === '-') {\n            from_chars_expanded.push('-');\n            from_chars_expanded.push('-');\n          }\n          else if (i == from_length - 1) {\n            from_chars_expanded.push('-');\n          }\n          else {\n            in_range = true;\n          }\n        }\n        else if (in_range) {\n          start = last_from.charCodeAt(0);\n          end = ch.charCodeAt(0);\n          if (start > end) {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (String.fromCharCode(start)) + \"-\" + (String.fromCharCode(end)) + \"\\\" in string transliteration\")\n          }\n          for (c = start + 1; c < end; c++) {\n            from_chars_expanded.push(String.fromCharCode(c));\n          }\n          from_chars_expanded.push(ch);\n          in_range = null;\n          last_from = null;\n        }\n        else {\n          from_chars_expanded.push(ch);\n        }\n      }\n\n      from_chars = from_chars_expanded;\n      from_length = from_chars.length;\n\n      if (inverse) {\n        for (i = 0; i < from_length; i++) {\n          subs[from_chars[i]] = true;\n        }\n      }\n      else {\n        if (to_length > 0) {\n          var to_chars_expanded = [];\n          var last_to = null;\n          in_range = false;\n          for (i = 0; i < to_length; i++) {\n            ch = to_chars[i];\n            if (last_from == null) {\n              last_from = ch;\n              to_chars_expanded.push(ch);\n            }\n            else if (ch === '-') {\n              if (last_to === '-') {\n                to_chars_expanded.push('-');\n                to_chars_expanded.push('-');\n              }\n              else if (i == to_length - 1) {\n                to_chars_expanded.push('-');\n              }\n              else {\n                in_range = true;\n              }\n            }\n            else if (in_range) {\n              start = last_from.charCodeAt(0);\n              end = ch.charCodeAt(0);\n              if (start > end) {\n                self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (String.fromCharCode(start)) + \"-\" + (String.fromCharCode(end)) + \"\\\" in string transliteration\")\n              }\n              for (c = start + 1; c < end; c++) {\n                to_chars_expanded.push(String.fromCharCode(c));\n              }\n              to_chars_expanded.push(ch);\n              in_range = null;\n              last_from = null;\n            }\n            else {\n              to_chars_expanded.push(ch);\n            }\n          }\n\n          to_chars = to_chars_expanded;\n          to_length = to_chars.length;\n        }\n\n        var length_diff = from_length - to_length;\n        if (length_diff > 0) {\n          var pad_char = (to_length > 0 ? to_chars[to_length - 1] : '');\n          for (i = 0; i < length_diff; i++) {\n            to_chars.push(pad_char);\n          }\n        }\n\n        for (i = 0; i < from_length; i++) {\n          subs[from_chars[i]] = to_chars[i];\n        }\n      }\n      var new_str = ''\n      var last_substitute = null\n      for (i = 0, length = self.length; i < length; i++) {\n        ch = self.charAt(i);\n        var sub = subs[ch]\n        if (inverse) {\n          if (sub == null) {\n            if (last_substitute == null) {\n              new_str += global_sub;\n              last_substitute = true;\n            }\n          }\n          else {\n            new_str += ch;\n            last_substitute = null;\n          }\n        }\n        else {\n          if (sub != null) {\n            if (last_substitute == null || last_substitute !== sub) {\n              new_str += sub;\n              last_substitute = sub;\n            }\n          }\n          else {\n            new_str += ch;\n            last_substitute = null;\n          }\n        }\n      }\n      return self.$$cast(new_str);\n    ;\n    }, $String_tr_s$70.$$arity = 2);\n    \n    Opal.def(self, '$upcase', $String_upcase$71 = function $$upcase() {\n      var self = this;\n\n      return self.$$cast(self.toUpperCase());\n    }, $String_upcase$71.$$arity = 0);\n    \n    Opal.def(self, '$upto', $String_upto$72 = function $$upto(stop, excl) {\n      var $iter = $String_upto$72.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_upto$72.$$p = null;\n      \n      \n      if ($iter) $String_upto$72.$$p = null;;\n      \n      if (excl == null) {\n        excl = false;\n      };\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"upto\", stop, excl)\n      };\n      stop = $$($nesting, 'Opal').$coerce_to(stop, $$($nesting, 'String'), \"to_str\");\n      \n      var a, b, s = self.toString();\n\n      if (s.length === 1 && stop.length === 1) {\n\n        a = s.charCodeAt(0);\n        b = stop.charCodeAt(0);\n\n        while (a <= b) {\n          if (excl && a === b) {\n            break;\n          }\n\n          block(String.fromCharCode(a));\n\n          a += 1;\n        }\n\n      } else if (parseInt(s, 10).toString() === s && parseInt(stop, 10).toString() === stop) {\n\n        a = parseInt(s, 10);\n        b = parseInt(stop, 10);\n\n        while (a <= b) {\n          if (excl && a === b) {\n            break;\n          }\n\n          block(a.toString());\n\n          a += 1;\n        }\n\n      } else {\n\n        while (s.length <= stop.length && s <= stop) {\n          if (excl && s === stop) {\n            break;\n          }\n\n          block(s);\n\n          s = (s).$succ();\n        }\n\n      }\n      return self;\n    ;\n    }, $String_upto$72.$$arity = -2);\n    \n    function char_class_from_char_sets(sets) {\n      function explode_sequences_in_character_set(set) {\n        var result = '',\n            i, len = set.length,\n            curr_char,\n            skip_next_dash,\n            char_code_from,\n            char_code_upto,\n            char_code;\n        for (i = 0; i < len; i++) {\n          curr_char = set.charAt(i);\n          if (curr_char === '-' && i > 0 && i < (len - 1) && !skip_next_dash) {\n            char_code_from = set.charCodeAt(i - 1);\n            char_code_upto = set.charCodeAt(i + 1);\n            if (char_code_from > char_code_upto) {\n              self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid range \\\"\" + (char_code_from) + \"-\" + (char_code_upto) + \"\\\" in string transliteration\")\n            }\n            for (char_code = char_code_from + 1; char_code < char_code_upto + 1; char_code++) {\n              result += String.fromCharCode(char_code);\n            }\n            skip_next_dash = true;\n            i++;\n          } else {\n            skip_next_dash = (curr_char === '\\\\');\n            result += curr_char;\n          }\n        }\n        return result;\n      }\n\n      function intersection(setA, setB) {\n        if (setA.length === 0) {\n          return setB;\n        }\n        var result = '',\n            i, len = setA.length,\n            chr;\n        for (i = 0; i < len; i++) {\n          chr = setA.charAt(i);\n          if (setB.indexOf(chr) !== -1) {\n            result += chr;\n          }\n        }\n        return result;\n      }\n\n      var i, len, set, neg, chr, tmp,\n          pos_intersection = '',\n          neg_intersection = '';\n\n      for (i = 0, len = sets.length; i < len; i++) {\n        set = $$($nesting, 'Opal').$coerce_to(sets[i], $$($nesting, 'String'), \"to_str\");\n        neg = (set.charAt(0) === '^' && set.length > 1);\n        set = explode_sequences_in_character_set(neg ? set.slice(1) : set);\n        if (neg) {\n          neg_intersection = intersection(neg_intersection, set);\n        } else {\n          pos_intersection = intersection(pos_intersection, set);\n        }\n      }\n\n      if (pos_intersection.length > 0 && neg_intersection.length > 0) {\n        tmp = '';\n        for (i = 0, len = pos_intersection.length; i < len; i++) {\n          chr = pos_intersection.charAt(i);\n          if (neg_intersection.indexOf(chr) === -1) {\n            tmp += chr;\n          }\n        }\n        pos_intersection = tmp;\n        neg_intersection = '';\n      }\n\n      if (pos_intersection.length > 0) {\n        return '[' + $$($nesting, 'Regexp').$escape(pos_intersection) + ']';\n      }\n\n      if (neg_intersection.length > 0) {\n        return '[^' + $$($nesting, 'Regexp').$escape(neg_intersection) + ']';\n      }\n\n      return null;\n    }\n  ;\n    \n    Opal.def(self, '$instance_variables', $String_instance_variables$73 = function $$instance_variables() {\n      var self = this;\n\n      return []\n    }, $String_instance_variables$73.$$arity = 0);\n    Opal.defs(self, '$_load', $String__load$74 = function $$_load($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return $send(self, 'new', Opal.to_a(args));\n    }, $String__load$74.$$arity = -1);\n    \n    Opal.def(self, '$unicode_normalize', $String_unicode_normalize$75 = function $$unicode_normalize(form) {\n      var self = this;\n\n      \n      ;\n      return self.toString();;\n    }, $String_unicode_normalize$75.$$arity = -1);\n    \n    Opal.def(self, '$unicode_normalized?', $String_unicode_normalized$ques$76 = function(form) {\n      var self = this;\n\n      \n      ;\n      return true;\n    }, $String_unicode_normalized$ques$76.$$arity = -1);\n    \n    Opal.def(self, '$unpack', $String_unpack$77 = function $$unpack(format) {\n      var self = this;\n\n      return self.$raise(\"To use String#unpack, you must first require 'corelib/string/unpack'.\")\n    }, $String_unpack$77.$$arity = 1);\n    return (Opal.def(self, '$unpack1', $String_unpack1$78 = function $$unpack1(format) {\n      var self = this;\n\n      return self.$raise(\"To use String#unpack1, you must first require 'corelib/string/unpack'.\")\n    }, $String_unpack1$78.$$arity = 1), nil) && 'unpack1';\n  })($nesting[0], String, $nesting);\n  return Opal.const_set($nesting[0], 'Symbol', $$($nesting, 'String'));\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/enumerable\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy, $send = Opal.send, $falsy = Opal.falsy, $hash2 = Opal.hash2, $lambda = Opal.lambda;\n\n  Opal.add_stubs(['$each', '$public_send', '$destructure', '$to_enum', '$enumerator_size', '$new', '$yield', '$raise', '$slice_when', '$!', '$enum_for', '$flatten', '$map', '$warn', '$proc', '$==', '$nil?', '$respond_to?', '$coerce_to!', '$>', '$*', '$coerce_to', '$try_convert', '$<', '$+', '$-', '$ceil', '$/', '$size', '$__send__', '$length', '$<=', '$[]', '$push', '$<<', '$[]=', '$===', '$inspect', '$<=>', '$first', '$reverse', '$sort', '$to_proc', '$compare', '$call', '$dup', '$to_a', '$sort!', '$map!', '$key?', '$values', '$zip']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Enumerable');\n\n    var $nesting = [self].concat($parent_nesting), $Enumerable_all$ques$1, $Enumerable_any$ques$5, $Enumerable_chunk$9, $Enumerable_chunk_while$12, $Enumerable_collect$14, $Enumerable_collect_concat$16, $Enumerable_count$19, $Enumerable_cycle$23, $Enumerable_detect$25, $Enumerable_drop$27, $Enumerable_drop_while$28, $Enumerable_each_cons$29, $Enumerable_each_entry$31, $Enumerable_each_slice$33, $Enumerable_each_with_index$35, $Enumerable_each_with_object$37, $Enumerable_entries$39, $Enumerable_find_all$40, $Enumerable_find_index$42, $Enumerable_first$45, $Enumerable_grep$48, $Enumerable_grep_v$50, $Enumerable_group_by$52, $Enumerable_include$ques$54, $Enumerable_inject$56, $Enumerable_lazy$57, $Enumerable_enumerator_size$59, $Enumerable_max$60, $Enumerable_max_by$61, $Enumerable_min$63, $Enumerable_min_by$64, $Enumerable_minmax$66, $Enumerable_minmax_by$68, $Enumerable_none$ques$69, $Enumerable_one$ques$73, $Enumerable_partition$77, $Enumerable_reject$79, $Enumerable_reverse_each$81, $Enumerable_slice_before$83, $Enumerable_slice_after$85, $Enumerable_slice_when$88, $Enumerable_sort$90, $Enumerable_sort_by$92, $Enumerable_sum$97, $Enumerable_take$99, $Enumerable_take_while$100, $Enumerable_uniq$102, $Enumerable_zip$104;\n\n    \n    \n    function comparableForPattern(value) {\n      if (value.length === 0) {\n        value = [nil];\n      }\n\n      if (value.length > 1) {\n        value = [value];\n      }\n\n      return value;\n    }\n  ;\n    \n    Opal.def(self, '$all?', $Enumerable_all$ques$1 = function(pattern) {try {\n\n      var $iter = $Enumerable_all$ques$1.$$p, block = $iter || nil, $$2, $$3, $$4, self = this;\n\n      if ($iter) $Enumerable_all$ques$1.$$p = null;\n      \n      \n      if ($iter) $Enumerable_all$ques$1.$$p = null;;\n      ;\n      if ($truthy(pattern !== undefined)) {\n        $send(self, 'each', [], ($$2 = function($a){var self = $$2.$$s || this, $post_args, value, comparable = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          comparable = comparableForPattern(value);\n          if ($truthy($send(pattern, 'public_send', [\"===\"].concat(Opal.to_a(comparable))))) {\n            return nil\n          } else {\n            Opal.ret(false)\n          };}, $$2.$$s = self, $$2.$$arity = -1, $$2))\n      } else if ((block !== nil)) {\n        $send(self, 'each', [], ($$3 = function($a){var self = $$3.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n            return nil\n          } else {\n            Opal.ret(false)\n          };}, $$3.$$s = self, $$3.$$arity = -1, $$3))\n      } else {\n        $send(self, 'each', [], ($$4 = function($a){var self = $$4.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy($$($nesting, 'Opal').$destructure(value))) {\n            return nil\n          } else {\n            Opal.ret(false)\n          };}, $$4.$$s = self, $$4.$$arity = -1, $$4))\n      };\n      return true;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_all$ques$1.$$arity = -1);\n    \n    Opal.def(self, '$any?', $Enumerable_any$ques$5 = function(pattern) {try {\n\n      var $iter = $Enumerable_any$ques$5.$$p, block = $iter || nil, $$6, $$7, $$8, self = this;\n\n      if ($iter) $Enumerable_any$ques$5.$$p = null;\n      \n      \n      if ($iter) $Enumerable_any$ques$5.$$p = null;;\n      ;\n      if ($truthy(pattern !== undefined)) {\n        $send(self, 'each', [], ($$6 = function($a){var self = $$6.$$s || this, $post_args, value, comparable = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          comparable = comparableForPattern(value);\n          if ($truthy($send(pattern, 'public_send', [\"===\"].concat(Opal.to_a(comparable))))) {\n            Opal.ret(true)\n          } else {\n            return nil\n          };}, $$6.$$s = self, $$6.$$arity = -1, $$6))\n      } else if ((block !== nil)) {\n        $send(self, 'each', [], ($$7 = function($a){var self = $$7.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n            Opal.ret(true)\n          } else {\n            return nil\n          };}, $$7.$$s = self, $$7.$$arity = -1, $$7))\n      } else {\n        $send(self, 'each', [], ($$8 = function($a){var self = $$8.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy($$($nesting, 'Opal').$destructure(value))) {\n            Opal.ret(true)\n          } else {\n            return nil\n          };}, $$8.$$s = self, $$8.$$arity = -1, $$8))\n      };\n      return false;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_any$ques$5.$$arity = -1);\n    \n    Opal.def(self, '$chunk', $Enumerable_chunk$9 = function $$chunk() {\n      var $iter = $Enumerable_chunk$9.$$p, block = $iter || nil, $$10, $$11, self = this;\n\n      if ($iter) $Enumerable_chunk$9.$$p = null;\n      \n      \n      if ($iter) $Enumerable_chunk$9.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'to_enum', [\"chunk\"], ($$10 = function(){var self = $$10.$$s || this;\n\n        return self.$enumerator_size()}, $$10.$$s = self, $$10.$$arity = 0, $$10))\n      };\n      return $send($$$('::', 'Enumerator'), 'new', [], ($$11 = function(yielder){var self = $$11.$$s || this;\n\n      \n        \n        if (yielder == null) {\n          yielder = nil;\n        };\n        \n        var previous = nil, accumulate = [];\n\n        function releaseAccumulate() {\n          if (accumulate.length > 0) {\n            yielder.$yield(previous, accumulate)\n          }\n        }\n\n        self.$each.$$p = function(value) {\n          var key = Opal.yield1(block, value);\n\n          if (key === nil) {\n            releaseAccumulate();\n            accumulate = [];\n            previous = nil;\n          } else {\n            if (previous === nil || previous === key) {\n              accumulate.push(value);\n            } else {\n              releaseAccumulate();\n              accumulate = [value];\n            }\n\n            previous = key;\n          }\n        }\n\n        self.$each();\n\n        releaseAccumulate();\n      ;}, $$11.$$s = self, $$11.$$arity = 1, $$11));\n    }, $Enumerable_chunk$9.$$arity = 0);\n    \n    Opal.def(self, '$chunk_while', $Enumerable_chunk_while$12 = function $$chunk_while() {\n      var $iter = $Enumerable_chunk_while$12.$$p, block = $iter || nil, $$13, self = this;\n\n      if ($iter) $Enumerable_chunk_while$12.$$p = null;\n      \n      \n      if ($iter) $Enumerable_chunk_while$12.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"no block given\")\n      };\n      return $send(self, 'slice_when', [], ($$13 = function(before, after){var self = $$13.$$s || this;\n\n      \n        \n        if (before == null) {\n          before = nil;\n        };\n        \n        if (after == null) {\n          after = nil;\n        };\n        return Opal.yieldX(block, [before, after])['$!']();}, $$13.$$s = self, $$13.$$arity = 2, $$13));\n    }, $Enumerable_chunk_while$12.$$arity = 0);\n    \n    Opal.def(self, '$collect', $Enumerable_collect$14 = function $$collect() {\n      var $iter = $Enumerable_collect$14.$$p, block = $iter || nil, $$15, self = this;\n\n      if ($iter) $Enumerable_collect$14.$$p = null;\n      \n      \n      if ($iter) $Enumerable_collect$14.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"collect\"], ($$15 = function(){var self = $$15.$$s || this;\n\n        return self.$enumerator_size()}, $$15.$$s = self, $$15.$$arity = 0, $$15))\n      };\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        var value = Opal.yieldX(block, arguments);\n\n        result.push(value);\n      };\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_collect$14.$$arity = 0);\n    \n    Opal.def(self, '$collect_concat', $Enumerable_collect_concat$16 = function $$collect_concat() {\n      var $iter = $Enumerable_collect_concat$16.$$p, block = $iter || nil, $$17, $$18, self = this;\n\n      if ($iter) $Enumerable_collect_concat$16.$$p = null;\n      \n      \n      if ($iter) $Enumerable_collect_concat$16.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"collect_concat\"], ($$17 = function(){var self = $$17.$$s || this;\n\n        return self.$enumerator_size()}, $$17.$$s = self, $$17.$$arity = 0, $$17))\n      };\n      return $send(self, 'map', [], ($$18 = function(item){var self = $$18.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return Opal.yield1(block, item);;}, $$18.$$s = self, $$18.$$arity = 1, $$18)).$flatten(1);\n    }, $Enumerable_collect_concat$16.$$arity = 0);\n    \n    Opal.def(self, '$count', $Enumerable_count$19 = function $$count(object) {\n      var $iter = $Enumerable_count$19.$$p, block = $iter || nil, $$20, $$21, $$22, self = this, result = nil;\n\n      if ($iter) $Enumerable_count$19.$$p = null;\n      \n      \n      if ($iter) $Enumerable_count$19.$$p = null;;\n      ;\n      result = 0;\n      \n      if (object != null && block !== nil) {\n        self.$warn(\"warning: given block not used\")\n      }\n    ;\n      if ($truthy(object != null)) {\n        block = $send(self, 'proc', [], ($$20 = function($a){var self = $$20.$$s || this, $post_args, args;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $$($nesting, 'Opal').$destructure(args)['$=='](object);}, $$20.$$s = self, $$20.$$arity = -1, $$20))\n      } else if ($truthy(block['$nil?']())) {\n        block = $send(self, 'proc', [], ($$21 = function(){var self = $$21.$$s || this;\n\n        return true}, $$21.$$s = self, $$21.$$arity = 0, $$21))};\n      $send(self, 'each', [], ($$22 = function($a){var self = $$22.$$s || this, $post_args, args;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        if ($truthy(Opal.yieldX(block, args))) {\n          return result++;\n        } else {\n          return nil\n        };}, $$22.$$s = self, $$22.$$arity = -1, $$22));\n      return result;\n    }, $Enumerable_count$19.$$arity = -1);\n    \n    Opal.def(self, '$cycle', $Enumerable_cycle$23 = function $$cycle(n) {\n      var $iter = $Enumerable_cycle$23.$$p, block = $iter || nil, $$24, self = this;\n\n      if ($iter) $Enumerable_cycle$23.$$p = null;\n      \n      \n      if ($iter) $Enumerable_cycle$23.$$p = null;;\n      \n      if (n == null) {\n        n = nil;\n      };\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"cycle\", n], ($$24 = function(){var self = $$24.$$s || this;\n\n        if ($truthy(n['$nil?']())) {\n            if ($truthy(self['$respond_to?'](\"size\"))) {\n              return $$$($$($nesting, 'Float'), 'INFINITY')\n            } else {\n              return nil\n            }\n          } else {\n            \n            n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n            if ($truthy($rb_gt(n, 0))) {\n              return $rb_times(self.$enumerator_size(), n)\n            } else {\n              return 0\n            };\n          }}, $$24.$$s = self, $$24.$$arity = 0, $$24))\n      };\n      if ($truthy(n['$nil?']())) {\n      } else {\n        \n        n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(n <= 0)) {\n          return nil};\n      };\n      \n      var result,\n          all = [], i, length, value;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        all.push(param);\n      }\n\n      self.$each();\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      if (all.length === 0) {\n        return nil;\n      }\n\n      if (n === nil) {\n        while (true) {\n          for (i = 0, length = all.length; i < length; i++) {\n            value = Opal.yield1(block, all[i]);\n          }\n        }\n      }\n      else {\n        while (n > 1) {\n          for (i = 0, length = all.length; i < length; i++) {\n            value = Opal.yield1(block, all[i]);\n          }\n\n          n--;\n        }\n      }\n    ;\n    }, $Enumerable_cycle$23.$$arity = -1);\n    \n    Opal.def(self, '$detect', $Enumerable_detect$25 = function $$detect(ifnone) {try {\n\n      var $iter = $Enumerable_detect$25.$$p, block = $iter || nil, $$26, self = this;\n\n      if ($iter) $Enumerable_detect$25.$$p = null;\n      \n      \n      if ($iter) $Enumerable_detect$25.$$p = null;;\n      ;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"detect\", ifnone)\n      };\n      $send(self, 'each', [], ($$26 = function($a){var self = $$26.$$s || this, $post_args, args, value = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        value = $$($nesting, 'Opal').$destructure(args);\n        if ($truthy(Opal.yield1(block, value))) {\n          Opal.ret(value)\n        } else {\n          return nil\n        };}, $$26.$$s = self, $$26.$$arity = -1, $$26));\n      \n      if (ifnone !== undefined) {\n        if (typeof(ifnone) === 'function') {\n          return ifnone();\n        } else {\n          return ifnone;\n        }\n      }\n    ;\n      return nil;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_detect$25.$$arity = -1);\n    \n    Opal.def(self, '$drop', $Enumerable_drop$27 = function $$drop(number) {\n      var self = this;\n\n      \n      number = $$($nesting, 'Opal').$coerce_to(number, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(number < 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"attempt to drop negative size\")};\n      \n      var result  = [],\n          current = 0;\n\n      self.$each.$$p = function() {\n        if (number <= current) {\n          result.push($$($nesting, 'Opal').$destructure(arguments));\n        }\n\n        current++;\n      };\n\n      self.$each()\n\n      return result;\n    ;\n    }, $Enumerable_drop$27.$$arity = 1);\n    \n    Opal.def(self, '$drop_while', $Enumerable_drop_while$28 = function $$drop_while() {\n      var $iter = $Enumerable_drop_while$28.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_drop_while$28.$$p = null;\n      \n      \n      if ($iter) $Enumerable_drop_while$28.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"drop_while\")\n      };\n      \n      var result   = [],\n          dropping = true;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments);\n\n        if (dropping) {\n          var value = Opal.yield1(block, param);\n\n          if ($falsy(value)) {\n            dropping = false;\n            result.push(param);\n          }\n        }\n        else {\n          result.push(param);\n        }\n      };\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_drop_while$28.$$arity = 0);\n    \n    Opal.def(self, '$each_cons', $Enumerable_each_cons$29 = function $$each_cons(n) {\n      var $iter = $Enumerable_each_cons$29.$$p, block = $iter || nil, $$30, self = this;\n\n      if ($iter) $Enumerable_each_cons$29.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_cons$29.$$p = null;;\n      if ($truthy(arguments.length != 1)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" for 1)\")};\n      n = $$($nesting, 'Opal').$try_convert(n, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(n <= 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"invalid size\")};\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_cons\", n], ($$30 = function(){var self = $$30.$$s || this, $a, enum_size = nil;\n\n        \n          enum_size = self.$enumerator_size();\n          if ($truthy(enum_size['$nil?']())) {\n            return nil\n          } else if ($truthy(($truthy($a = enum_size['$=='](0)) ? $a : $rb_lt(enum_size, n)))) {\n            return 0\n          } else {\n            return $rb_plus($rb_minus(enum_size, n), 1)\n          };}, $$30.$$s = self, $$30.$$arity = 0, $$30))\n      };\n      \n      var buffer = [], result = nil;\n\n      self.$each.$$p = function() {\n        var element = $$($nesting, 'Opal').$destructure(arguments);\n        buffer.push(element);\n        if (buffer.length > n) {\n          buffer.shift();\n        }\n        if (buffer.length == n) {\n          Opal.yield1(block, buffer.slice(0, n));\n        }\n      }\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_each_cons$29.$$arity = 1);\n    \n    Opal.def(self, '$each_entry', $Enumerable_each_entry$31 = function $$each_entry($a) {\n      var $iter = $Enumerable_each_entry$31.$$p, block = $iter || nil, $post_args, data, $$32, self = this;\n\n      if ($iter) $Enumerable_each_entry$31.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_entry$31.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      data = $post_args;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'to_enum', [\"each_entry\"].concat(Opal.to_a(data)), ($$32 = function(){var self = $$32.$$s || this;\n\n        return self.$enumerator_size()}, $$32.$$s = self, $$32.$$arity = 0, $$32))\n      };\n      \n      self.$each.$$p = function() {\n        var item = $$($nesting, 'Opal').$destructure(arguments);\n\n        Opal.yield1(block, item);\n      }\n\n      self.$each.apply(self, data);\n\n      return self;\n    ;\n    }, $Enumerable_each_entry$31.$$arity = -1);\n    \n    Opal.def(self, '$each_slice', $Enumerable_each_slice$33 = function $$each_slice(n) {\n      var $iter = $Enumerable_each_slice$33.$$p, block = $iter || nil, $$34, self = this;\n\n      if ($iter) $Enumerable_each_slice$33.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_slice$33.$$p = null;;\n      n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(n <= 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"invalid slice size\")};\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_slice\", n], ($$34 = function(){var self = $$34.$$s || this;\n\n        if ($truthy(self['$respond_to?'](\"size\"))) {\n            return $rb_divide(self.$size(), n).$ceil()\n          } else {\n            return nil\n          }}, $$34.$$s = self, $$34.$$arity = 0, $$34))\n      };\n      \n      var result,\n          slice = []\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments);\n\n        slice.push(param);\n\n        if (slice.length === n) {\n          Opal.yield1(block, slice);\n          slice = [];\n        }\n      };\n\n      self.$each();\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      // our \"last\" group, if smaller than n then won't have been yielded\n      if (slice.length > 0) {\n        Opal.yield1(block, slice);\n      }\n    ;\n      return nil;\n    }, $Enumerable_each_slice$33.$$arity = 1);\n    \n    Opal.def(self, '$each_with_index', $Enumerable_each_with_index$35 = function $$each_with_index($a) {\n      var $iter = $Enumerable_each_with_index$35.$$p, block = $iter || nil, $post_args, args, $$36, self = this;\n\n      if ($iter) $Enumerable_each_with_index$35.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_with_index$35.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_with_index\"].concat(Opal.to_a(args)), ($$36 = function(){var self = $$36.$$s || this;\n\n        return self.$enumerator_size()}, $$36.$$s = self, $$36.$$arity = 0, $$36))\n      };\n      \n      var result,\n          index = 0;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments);\n\n        block(param, index);\n\n        index++;\n      };\n\n      self.$each.apply(self, args);\n\n      if (result !== undefined) {\n        return result;\n      }\n    ;\n      return self;\n    }, $Enumerable_each_with_index$35.$$arity = -1);\n    \n    Opal.def(self, '$each_with_object', $Enumerable_each_with_object$37 = function $$each_with_object(object) {\n      var $iter = $Enumerable_each_with_object$37.$$p, block = $iter || nil, $$38, self = this;\n\n      if ($iter) $Enumerable_each_with_object$37.$$p = null;\n      \n      \n      if ($iter) $Enumerable_each_with_object$37.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_with_object\", object], ($$38 = function(){var self = $$38.$$s || this;\n\n        return self.$enumerator_size()}, $$38.$$s = self, $$38.$$arity = 0, $$38))\n      };\n      \n      var result;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments);\n\n        block(param, object);\n      };\n\n      self.$each();\n\n      if (result !== undefined) {\n        return result;\n      }\n    ;\n      return object;\n    }, $Enumerable_each_with_object$37.$$arity = 1);\n    \n    Opal.def(self, '$entries', $Enumerable_entries$39 = function $$entries($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        result.push($$($nesting, 'Opal').$destructure(arguments));\n      };\n\n      self.$each.apply(self, args);\n\n      return result;\n    ;\n    }, $Enumerable_entries$39.$$arity = -1);\n    Opal.alias(self, \"find\", \"detect\");\n    \n    Opal.def(self, '$find_all', $Enumerable_find_all$40 = function $$find_all() {\n      var $iter = $Enumerable_find_all$40.$$p, block = $iter || nil, $$41, self = this;\n\n      if ($iter) $Enumerable_find_all$40.$$p = null;\n      \n      \n      if ($iter) $Enumerable_find_all$40.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"find_all\"], ($$41 = function(){var self = $$41.$$s || this;\n\n        return self.$enumerator_size()}, $$41.$$s = self, $$41.$$arity = 0, $$41))\n      };\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if ($truthy(value)) {\n          result.push(param);\n        }\n      };\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_find_all$40.$$arity = 0);\n    \n    Opal.def(self, '$find_index', $Enumerable_find_index$42 = function $$find_index(object) {try {\n\n      var $iter = $Enumerable_find_index$42.$$p, block = $iter || nil, $$43, $$44, self = this, index = nil;\n\n      if ($iter) $Enumerable_find_index$42.$$p = null;\n      \n      \n      if ($iter) $Enumerable_find_index$42.$$p = null;;\n      ;\n      if ($truthy(object === undefined && block === nil)) {\n        return self.$enum_for(\"find_index\")};\n      \n      if (object != null && block !== nil) {\n        self.$warn(\"warning: given block not used\")\n      }\n    ;\n      index = 0;\n      if ($truthy(object != null)) {\n        $send(self, 'each', [], ($$43 = function($a){var self = $$43.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($$($nesting, 'Opal').$destructure(value)['$=='](object)) {\n            Opal.ret(index)};\n          return index += 1;;}, $$43.$$s = self, $$43.$$arity = -1, $$43))\n      } else {\n        $send(self, 'each', [], ($$44 = function($a){var self = $$44.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n            Opal.ret(index)};\n          return index += 1;;}, $$44.$$s = self, $$44.$$arity = -1, $$44))\n      };\n      return nil;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_find_index$42.$$arity = -1);\n    \n    Opal.def(self, '$first', $Enumerable_first$45 = function $$first(number) {try {\n\n      var $$46, $$47, self = this, result = nil, current = nil;\n\n      \n      ;\n      if ($truthy(number === undefined)) {\n        return $send(self, 'each', [], ($$46 = function(value){var self = $$46.$$s || this;\n\n        \n          \n          if (value == null) {\n            value = nil;\n          };\n          Opal.ret(value);}, $$46.$$s = self, $$46.$$arity = 1, $$46))\n      } else {\n        \n        result = [];\n        number = $$($nesting, 'Opal').$coerce_to(number, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(number < 0)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"attempt to take negative size\")};\n        if ($truthy(number == 0)) {\n          return []};\n        current = 0;\n        $send(self, 'each', [], ($$47 = function($a){var self = $$47.$$s || this, $post_args, args;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          result.push($$($nesting, 'Opal').$destructure(args));\n          if ($truthy(number <= ++current)) {\n            Opal.ret(result)\n          } else {\n            return nil\n          };}, $$47.$$s = self, $$47.$$arity = -1, $$47));\n        return result;\n      };\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_first$45.$$arity = -1);\n    Opal.alias(self, \"flat_map\", \"collect_concat\");\n    \n    Opal.def(self, '$grep', $Enumerable_grep$48 = function $$grep(pattern) {\n      var $iter = $Enumerable_grep$48.$$p, block = $iter || nil, $$49, self = this, result = nil;\n\n      if ($iter) $Enumerable_grep$48.$$p = null;\n      \n      \n      if ($iter) $Enumerable_grep$48.$$p = null;;\n      result = [];\n      $send(self, 'each', [], ($$49 = function($a){var self = $$49.$$s || this, $post_args, value, cmp = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        value = $post_args;;\n        cmp = comparableForPattern(value);\n        if ($truthy($send(pattern, '__send__', [\"===\"].concat(Opal.to_a(cmp))))) {\n        } else {\n          return nil;\n        };\n        if ((block !== nil)) {\n          \n          if ($truthy($rb_gt(value.$length(), 1))) {\n            value = [value]};\n          value = Opal.yieldX(block, Opal.to_a(value));\n        } else if ($truthy($rb_le(value.$length(), 1))) {\n          value = value['$[]'](0)};\n        return result.$push(value);}, $$49.$$s = self, $$49.$$arity = -1, $$49));\n      return result;\n    }, $Enumerable_grep$48.$$arity = 1);\n    \n    Opal.def(self, '$grep_v', $Enumerable_grep_v$50 = function $$grep_v(pattern) {\n      var $iter = $Enumerable_grep_v$50.$$p, block = $iter || nil, $$51, self = this, result = nil;\n\n      if ($iter) $Enumerable_grep_v$50.$$p = null;\n      \n      \n      if ($iter) $Enumerable_grep_v$50.$$p = null;;\n      result = [];\n      $send(self, 'each', [], ($$51 = function($a){var self = $$51.$$s || this, $post_args, value, cmp = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        value = $post_args;;\n        cmp = comparableForPattern(value);\n        if ($truthy($send(pattern, '__send__', [\"===\"].concat(Opal.to_a(cmp))))) {\n          return nil;};\n        if ((block !== nil)) {\n          \n          if ($truthy($rb_gt(value.$length(), 1))) {\n            value = [value]};\n          value = Opal.yieldX(block, Opal.to_a(value));\n        } else if ($truthy($rb_le(value.$length(), 1))) {\n          value = value['$[]'](0)};\n        return result.$push(value);}, $$51.$$s = self, $$51.$$arity = -1, $$51));\n      return result;\n    }, $Enumerable_grep_v$50.$$arity = 1);\n    \n    Opal.def(self, '$group_by', $Enumerable_group_by$52 = function $$group_by() {\n      var $iter = $Enumerable_group_by$52.$$p, block = $iter || nil, $$53, $a, self = this, hash = nil, $writer = nil;\n\n      if ($iter) $Enumerable_group_by$52.$$p = null;\n      \n      \n      if ($iter) $Enumerable_group_by$52.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"group_by\"], ($$53 = function(){var self = $$53.$$s || this;\n\n        return self.$enumerator_size()}, $$53.$$s = self, $$53.$$arity = 0, $$53))\n      };\n      hash = $hash2([], {});\n      \n      var result;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        ($truthy($a = hash['$[]'](value)) ? $a : (($writer = [value, []]), $send(hash, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$<<'](param);\n      }\n\n      self.$each();\n\n      if (result !== undefined) {\n        return result;\n      }\n    ;\n      return hash;\n    }, $Enumerable_group_by$52.$$arity = 0);\n    \n    Opal.def(self, '$include?', $Enumerable_include$ques$54 = function(obj) {try {\n\n      var $$55, self = this;\n\n      \n      $send(self, 'each', [], ($$55 = function($a){var self = $$55.$$s || this, $post_args, args;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        if ($$($nesting, 'Opal').$destructure(args)['$=='](obj)) {\n          Opal.ret(true)\n        } else {\n          return nil\n        };}, $$55.$$s = self, $$55.$$arity = -1, $$55));\n      return false;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_include$ques$54.$$arity = 1);\n    \n    Opal.def(self, '$inject', $Enumerable_inject$56 = function $$inject(object, sym) {\n      var $iter = $Enumerable_inject$56.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_inject$56.$$p = null;\n      \n      \n      if ($iter) $Enumerable_inject$56.$$p = null;;\n      ;\n      ;\n      \n      var result = object;\n\n      if (block !== nil && sym === undefined) {\n        self.$each.$$p = function() {\n          var value = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = value;\n            return;\n          }\n\n          value = Opal.yieldX(block, [result, value]);\n\n          result = value;\n        };\n      }\n      else {\n        if (sym === undefined) {\n          if (!$$($nesting, 'Symbol')['$==='](object)) {\n            self.$raise($$($nesting, 'TypeError'), \"\" + (object.$inspect()) + \" is not a Symbol\");\n          }\n\n          sym    = object;\n          result = undefined;\n        }\n\n        self.$each.$$p = function() {\n          var value = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = value;\n            return;\n          }\n\n          result = (result).$__send__(sym, value);\n        };\n      }\n\n      self.$each();\n\n      return result == undefined ? nil : result;\n    ;\n    }, $Enumerable_inject$56.$$arity = -1);\n    \n    Opal.def(self, '$lazy', $Enumerable_lazy$57 = function $$lazy() {\n      var $$58, self = this;\n\n      return $send($$$($$($nesting, 'Enumerator'), 'Lazy'), 'new', [self, self.$enumerator_size()], ($$58 = function(enum$, $a){var self = $$58.$$s || this, $post_args, args;\n\n      \n        \n        if (enum$ == null) {\n          enum$ = nil;\n        };\n        \n        $post_args = Opal.slice.call(arguments, 1, arguments.length);\n        \n        args = $post_args;;\n        return $send(enum$, 'yield', Opal.to_a(args));}, $$58.$$s = self, $$58.$$arity = -2, $$58))\n    }, $Enumerable_lazy$57.$$arity = 0);\n    \n    Opal.def(self, '$enumerator_size', $Enumerable_enumerator_size$59 = function $$enumerator_size() {\n      var self = this;\n\n      if ($truthy(self['$respond_to?'](\"size\"))) {\n        return self.$size()\n      } else {\n        return nil\n      }\n    }, $Enumerable_enumerator_size$59.$$arity = 0);\n    Opal.alias(self, \"map\", \"collect\");\n    \n    Opal.def(self, '$max', $Enumerable_max$60 = function $$max(n) {\n      var $iter = $Enumerable_max$60.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_max$60.$$p = null;\n      \n      \n      if ($iter) $Enumerable_max$60.$$p = null;;\n      ;\n      \n      if (n === undefined || n === nil) {\n        var result, value;\n\n        self.$each.$$p = function() {\n          var item = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = item;\n            return;\n          }\n\n          if (block !== nil) {\n            value = Opal.yieldX(block, [item, result]);\n          } else {\n            value = (item)['$<=>'](result);\n          }\n\n          if (value === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"comparison failed\");\n          }\n\n          if (value > 0) {\n            result = item;\n          }\n        }\n\n        self.$each();\n\n        if (result === undefined) {\n          return nil;\n        } else {\n          return result;\n        }\n      }\n    ;\n      n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n      return $send(self, 'sort', [], block.$to_proc()).$reverse().$first(n);\n    }, $Enumerable_max$60.$$arity = -1);\n    \n    Opal.def(self, '$max_by', $Enumerable_max_by$61 = function $$max_by() {\n      var $iter = $Enumerable_max_by$61.$$p, block = $iter || nil, $$62, self = this;\n\n      if ($iter) $Enumerable_max_by$61.$$p = null;\n      \n      \n      if ($iter) $Enumerable_max_by$61.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"max_by\"], ($$62 = function(){var self = $$62.$$s || this;\n\n        return self.$enumerator_size()}, $$62.$$s = self, $$62.$$arity = 0, $$62))\n      };\n      \n      var result,\n          by;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if (result === undefined) {\n          result = param;\n          by     = value;\n          return;\n        }\n\n        if ((value)['$<=>'](by) > 0) {\n          result = param\n          by     = value;\n        }\n      };\n\n      self.$each();\n\n      return result === undefined ? nil : result;\n    ;\n    }, $Enumerable_max_by$61.$$arity = 0);\n    Opal.alias(self, \"member?\", \"include?\");\n    \n    Opal.def(self, '$min', $Enumerable_min$63 = function $$min() {\n      var $iter = $Enumerable_min$63.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_min$63.$$p = null;\n      \n      \n      if ($iter) $Enumerable_min$63.$$p = null;;\n      \n      var result;\n\n      if (block !== nil) {\n        self.$each.$$p = function() {\n          var param = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = param;\n            return;\n          }\n\n          var value = block(param, result);\n\n          if (value === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"comparison failed\");\n          }\n\n          if (value < 0) {\n            result = param;\n          }\n        };\n      }\n      else {\n        self.$each.$$p = function() {\n          var param = $$($nesting, 'Opal').$destructure(arguments);\n\n          if (result === undefined) {\n            result = param;\n            return;\n          }\n\n          if ($$($nesting, 'Opal').$compare(param, result) < 0) {\n            result = param;\n          }\n        };\n      }\n\n      self.$each();\n\n      return result === undefined ? nil : result;\n    ;\n    }, $Enumerable_min$63.$$arity = 0);\n    \n    Opal.def(self, '$min_by', $Enumerable_min_by$64 = function $$min_by() {\n      var $iter = $Enumerable_min_by$64.$$p, block = $iter || nil, $$65, self = this;\n\n      if ($iter) $Enumerable_min_by$64.$$p = null;\n      \n      \n      if ($iter) $Enumerable_min_by$64.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"min_by\"], ($$65 = function(){var self = $$65.$$s || this;\n\n        return self.$enumerator_size()}, $$65.$$s = self, $$65.$$arity = 0, $$65))\n      };\n      \n      var result,\n          by;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if (result === undefined) {\n          result = param;\n          by     = value;\n          return;\n        }\n\n        if ((value)['$<=>'](by) < 0) {\n          result = param\n          by     = value;\n        }\n      };\n\n      self.$each();\n\n      return result === undefined ? nil : result;\n    ;\n    }, $Enumerable_min_by$64.$$arity = 0);\n    \n    Opal.def(self, '$minmax', $Enumerable_minmax$66 = function $$minmax() {\n      var $iter = $Enumerable_minmax$66.$$p, block = $iter || nil, $a, $$67, self = this;\n\n      if ($iter) $Enumerable_minmax$66.$$p = null;\n      \n      \n      if ($iter) $Enumerable_minmax$66.$$p = null;;\n      block = ($truthy($a = block) ? $a : $send(self, 'proc', [], ($$67 = function(a, b){var self = $$67.$$s || this;\n\n      \n        \n        if (a == null) {\n          a = nil;\n        };\n        \n        if (b == null) {\n          b = nil;\n        };\n        return a['$<=>'](b);}, $$67.$$s = self, $$67.$$arity = 2, $$67)));\n      \n      var min = nil, max = nil, first_time = true;\n\n      self.$each.$$p = function() {\n        var element = $$($nesting, 'Opal').$destructure(arguments);\n        if (first_time) {\n          min = max = element;\n          first_time = false;\n        } else {\n          var min_cmp = block.$call(min, element);\n\n          if (min_cmp === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"comparison failed\")\n          } else if (min_cmp > 0) {\n            min = element;\n          }\n\n          var max_cmp = block.$call(max, element);\n\n          if (max_cmp === nil) {\n            self.$raise($$($nesting, 'ArgumentError'), \"comparison failed\")\n          } else if (max_cmp < 0) {\n            max = element;\n          }\n        }\n      }\n\n      self.$each();\n\n      return [min, max];\n    ;\n    }, $Enumerable_minmax$66.$$arity = 0);\n    \n    Opal.def(self, '$minmax_by', $Enumerable_minmax_by$68 = function $$minmax_by() {\n      var $iter = $Enumerable_minmax_by$68.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Enumerable_minmax_by$68.$$p = null;\n      \n      \n      if ($iter) $Enumerable_minmax_by$68.$$p = null;;\n      return self.$raise($$($nesting, 'NotImplementedError'));\n    }, $Enumerable_minmax_by$68.$$arity = 0);\n    \n    Opal.def(self, '$none?', $Enumerable_none$ques$69 = function(pattern) {try {\n\n      var $iter = $Enumerable_none$ques$69.$$p, block = $iter || nil, $$70, $$71, $$72, self = this;\n\n      if ($iter) $Enumerable_none$ques$69.$$p = null;\n      \n      \n      if ($iter) $Enumerable_none$ques$69.$$p = null;;\n      ;\n      if ($truthy(pattern !== undefined)) {\n        $send(self, 'each', [], ($$70 = function($a){var self = $$70.$$s || this, $post_args, value, comparable = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          comparable = comparableForPattern(value);\n          if ($truthy($send(pattern, 'public_send', [\"===\"].concat(Opal.to_a(comparable))))) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$70.$$s = self, $$70.$$arity = -1, $$70))\n      } else if ((block !== nil)) {\n        $send(self, 'each', [], ($$71 = function($a){var self = $$71.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$71.$$s = self, $$71.$$arity = -1, $$71))\n      } else {\n        $send(self, 'each', [], ($$72 = function($a){var self = $$72.$$s || this, $post_args, value, item = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          item = $$($nesting, 'Opal').$destructure(value);\n          if ($truthy(item)) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$72.$$s = self, $$72.$$arity = -1, $$72))\n      };\n      return true;\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_none$ques$69.$$arity = -1);\n    \n    Opal.def(self, '$one?', $Enumerable_one$ques$73 = function(pattern) {try {\n\n      var $iter = $Enumerable_one$ques$73.$$p, block = $iter || nil, $$74, $$75, $$76, self = this, count = nil;\n\n      if ($iter) $Enumerable_one$ques$73.$$p = null;\n      \n      \n      if ($iter) $Enumerable_one$ques$73.$$p = null;;\n      ;\n      count = 0;\n      if ($truthy(pattern !== undefined)) {\n        $send(self, 'each', [], ($$74 = function($a){var self = $$74.$$s || this, $post_args, value, comparable = nil;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          comparable = comparableForPattern(value);\n          if ($truthy($send(pattern, 'public_send', [\"===\"].concat(Opal.to_a(comparable))))) {\n            \n            count = $rb_plus(count, 1);\n            if ($truthy($rb_gt(count, 1))) {\n              Opal.ret(false)\n            } else {\n              return nil\n            };\n          } else {\n            return nil\n          };}, $$74.$$s = self, $$74.$$arity = -1, $$74))\n      } else if ((block !== nil)) {\n        $send(self, 'each', [], ($$75 = function($a){var self = $$75.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy(Opal.yieldX(block, Opal.to_a(value)))) {\n          } else {\n            return nil;\n          };\n          count = $rb_plus(count, 1);\n          if ($truthy($rb_gt(count, 1))) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$75.$$s = self, $$75.$$arity = -1, $$75))\n      } else {\n        $send(self, 'each', [], ($$76 = function($a){var self = $$76.$$s || this, $post_args, value;\n\n        \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          if ($truthy($$($nesting, 'Opal').$destructure(value))) {\n          } else {\n            return nil;\n          };\n          count = $rb_plus(count, 1);\n          if ($truthy($rb_gt(count, 1))) {\n            Opal.ret(false)\n          } else {\n            return nil\n          };}, $$76.$$s = self, $$76.$$arity = -1, $$76))\n      };\n      return count['$=='](1);\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_one$ques$73.$$arity = -1);\n    \n    Opal.def(self, '$partition', $Enumerable_partition$77 = function $$partition() {\n      var $iter = $Enumerable_partition$77.$$p, block = $iter || nil, $$78, self = this;\n\n      if ($iter) $Enumerable_partition$77.$$p = null;\n      \n      \n      if ($iter) $Enumerable_partition$77.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"partition\"], ($$78 = function(){var self = $$78.$$s || this;\n\n        return self.$enumerator_size()}, $$78.$$s = self, $$78.$$arity = 0, $$78))\n      };\n      \n      var truthy = [], falsy = [], result;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if ($truthy(value)) {\n          truthy.push(param);\n        }\n        else {\n          falsy.push(param);\n        }\n      };\n\n      self.$each();\n\n      return [truthy, falsy];\n    ;\n    }, $Enumerable_partition$77.$$arity = 0);\n    Opal.alias(self, \"reduce\", \"inject\");\n    \n    Opal.def(self, '$reject', $Enumerable_reject$79 = function $$reject() {\n      var $iter = $Enumerable_reject$79.$$p, block = $iter || nil, $$80, self = this;\n\n      if ($iter) $Enumerable_reject$79.$$p = null;\n      \n      \n      if ($iter) $Enumerable_reject$79.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject\"], ($$80 = function(){var self = $$80.$$s || this;\n\n        return self.$enumerator_size()}, $$80.$$s = self, $$80.$$arity = 0, $$80))\n      };\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = Opal.yield1(block, param);\n\n        if ($falsy(value)) {\n          result.push(param);\n        }\n      };\n\n      self.$each();\n\n      return result;\n    ;\n    }, $Enumerable_reject$79.$$arity = 0);\n    \n    Opal.def(self, '$reverse_each', $Enumerable_reverse_each$81 = function $$reverse_each() {\n      var $iter = $Enumerable_reverse_each$81.$$p, block = $iter || nil, $$82, self = this;\n\n      if ($iter) $Enumerable_reverse_each$81.$$p = null;\n      \n      \n      if ($iter) $Enumerable_reverse_each$81.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reverse_each\"], ($$82 = function(){var self = $$82.$$s || this;\n\n        return self.$enumerator_size()}, $$82.$$s = self, $$82.$$arity = 0, $$82))\n      };\n      \n      var result = [];\n\n      self.$each.$$p = function() {\n        result.push(arguments);\n      };\n\n      self.$each();\n\n      for (var i = result.length - 1; i >= 0; i--) {\n        Opal.yieldX(block, result[i]);\n      }\n\n      return result;\n    ;\n    }, $Enumerable_reverse_each$81.$$arity = 0);\n    Opal.alias(self, \"select\", \"find_all\");\n    \n    Opal.def(self, '$slice_before', $Enumerable_slice_before$83 = function $$slice_before(pattern) {\n      var $iter = $Enumerable_slice_before$83.$$p, block = $iter || nil, $$84, self = this;\n\n      if ($iter) $Enumerable_slice_before$83.$$p = null;\n      \n      \n      if ($iter) $Enumerable_slice_before$83.$$p = null;;\n      ;\n      if ($truthy(pattern === undefined && block === nil)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"both pattern and block are given\")};\n      if ($truthy(pattern !== undefined && block !== nil || arguments.length > 1)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" expected 1)\")};\n      return $send($$($nesting, 'Enumerator'), 'new', [], ($$84 = function(e){var self = $$84.$$s || this;\n\n      \n        \n        if (e == null) {\n          e = nil;\n        };\n        \n        var slice = [];\n\n        if (block !== nil) {\n          if (pattern === undefined) {\n            self.$each.$$p = function() {\n              var param = $$($nesting, 'Opal').$destructure(arguments),\n                  value = Opal.yield1(block, param);\n\n              if ($truthy(value) && slice.length > 0) {\n                e['$<<'](slice);\n                slice = [];\n              }\n\n              slice.push(param);\n            };\n          }\n          else {\n            self.$each.$$p = function() {\n              var param = $$($nesting, 'Opal').$destructure(arguments),\n                  value = block(param, pattern.$dup());\n\n              if ($truthy(value) && slice.length > 0) {\n                e['$<<'](slice);\n                slice = [];\n              }\n\n              slice.push(param);\n            };\n          }\n        }\n        else {\n          self.$each.$$p = function() {\n            var param = $$($nesting, 'Opal').$destructure(arguments),\n                value = pattern['$==='](param);\n\n            if ($truthy(value) && slice.length > 0) {\n              e['$<<'](slice);\n              slice = [];\n            }\n\n            slice.push(param);\n          };\n        }\n\n        self.$each();\n\n        if (slice.length > 0) {\n          e['$<<'](slice);\n        }\n      ;}, $$84.$$s = self, $$84.$$arity = 1, $$84));\n    }, $Enumerable_slice_before$83.$$arity = -1);\n    \n    Opal.def(self, '$slice_after', $Enumerable_slice_after$85 = function $$slice_after(pattern) {\n      var $iter = $Enumerable_slice_after$85.$$p, block = $iter || nil, $$86, $$87, self = this;\n\n      if ($iter) $Enumerable_slice_after$85.$$p = null;\n      \n      \n      if ($iter) $Enumerable_slice_after$85.$$p = null;;\n      ;\n      if ($truthy(pattern === undefined && block === nil)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"both pattern and block are given\")};\n      if ($truthy(pattern !== undefined && block !== nil || arguments.length > 1)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" expected 1)\")};\n      if ($truthy(pattern !== undefined)) {\n        block = $send(self, 'proc', [], ($$86 = function(e){var self = $$86.$$s || this;\n\n        \n          \n          if (e == null) {\n            e = nil;\n          };\n          return pattern['$==='](e);}, $$86.$$s = self, $$86.$$arity = 1, $$86))};\n      return $send($$($nesting, 'Enumerator'), 'new', [], ($$87 = function(yielder){var self = $$87.$$s || this;\n\n      \n        \n        if (yielder == null) {\n          yielder = nil;\n        };\n        \n        var accumulate;\n\n        self.$each.$$p = function() {\n          var element = $$($nesting, 'Opal').$destructure(arguments),\n              end_chunk = Opal.yield1(block, element);\n\n          if (accumulate == null) {\n            accumulate = [];\n          }\n\n          if ($truthy(end_chunk)) {\n            accumulate.push(element);\n            yielder.$yield(accumulate);\n            accumulate = null;\n          } else {\n            accumulate.push(element)\n          }\n        }\n\n        self.$each();\n\n        if (accumulate != null) {\n          yielder.$yield(accumulate);\n        }\n      ;}, $$87.$$s = self, $$87.$$arity = 1, $$87));\n    }, $Enumerable_slice_after$85.$$arity = -1);\n    \n    Opal.def(self, '$slice_when', $Enumerable_slice_when$88 = function $$slice_when() {\n      var $iter = $Enumerable_slice_when$88.$$p, block = $iter || nil, $$89, self = this;\n\n      if ($iter) $Enumerable_slice_when$88.$$p = null;\n      \n      \n      if ($iter) $Enumerable_slice_when$88.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (0 for 1)\")\n      };\n      return $send($$($nesting, 'Enumerator'), 'new', [], ($$89 = function(yielder){var self = $$89.$$s || this;\n\n      \n        \n        if (yielder == null) {\n          yielder = nil;\n        };\n        \n        var slice = nil, last_after = nil;\n\n        self.$each_cons.$$p = function() {\n          var params = $$($nesting, 'Opal').$destructure(arguments),\n              before = params[0],\n              after = params[1],\n              match = Opal.yieldX(block, [before, after]);\n\n          last_after = after;\n\n          if (slice === nil) {\n            slice = [];\n          }\n\n          if ($truthy(match)) {\n            slice.push(before);\n            yielder.$yield(slice);\n            slice = [];\n          } else {\n            slice.push(before);\n          }\n        }\n\n        self.$each_cons(2);\n\n        if (slice !== nil) {\n          slice.push(last_after);\n          yielder.$yield(slice);\n        }\n      ;}, $$89.$$s = self, $$89.$$arity = 1, $$89));\n    }, $Enumerable_slice_when$88.$$arity = 0);\n    \n    Opal.def(self, '$sort', $Enumerable_sort$90 = function $$sort() {\n      var $iter = $Enumerable_sort$90.$$p, block = $iter || nil, $$91, self = this, ary = nil;\n\n      if ($iter) $Enumerable_sort$90.$$p = null;\n      \n      \n      if ($iter) $Enumerable_sort$90.$$p = null;;\n      ary = self.$to_a();\n      if ((block !== nil)) {\n      } else {\n        block = $lambda(($$91 = function(a, b){var self = $$91.$$s || this;\n\n        \n          \n          if (a == null) {\n            a = nil;\n          };\n          \n          if (b == null) {\n            b = nil;\n          };\n          return a['$<=>'](b);}, $$91.$$s = self, $$91.$$arity = 2, $$91))\n      };\n      return $send(ary, 'sort', [], block.$to_proc());\n    }, $Enumerable_sort$90.$$arity = 0);\n    \n    Opal.def(self, '$sort_by', $Enumerable_sort_by$92 = function $$sort_by() {\n      var $iter = $Enumerable_sort_by$92.$$p, block = $iter || nil, $$93, $$94, $$95, $$96, self = this, dup = nil;\n\n      if ($iter) $Enumerable_sort_by$92.$$p = null;\n      \n      \n      if ($iter) $Enumerable_sort_by$92.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"sort_by\"], ($$93 = function(){var self = $$93.$$s || this;\n\n        return self.$enumerator_size()}, $$93.$$s = self, $$93.$$arity = 0, $$93))\n      };\n      dup = $send(self, 'map', [], ($$94 = function(){var self = $$94.$$s || this, arg = nil;\n\n      \n        arg = $$($nesting, 'Opal').$destructure(arguments);\n        return [Opal.yield1(block, arg), arg];}, $$94.$$s = self, $$94.$$arity = 0, $$94));\n      $send(dup, 'sort!', [], ($$95 = function(a, b){var self = $$95.$$s || this;\n\n      \n        \n        if (a == null) {\n          a = nil;\n        };\n        \n        if (b == null) {\n          b = nil;\n        };\n        return (a[0])['$<=>'](b[0]);}, $$95.$$s = self, $$95.$$arity = 2, $$95));\n      return $send(dup, 'map!', [], ($$96 = function(i){var self = $$96.$$s || this;\n\n      \n        \n        if (i == null) {\n          i = nil;\n        };\n        return i[1];;}, $$96.$$s = self, $$96.$$arity = 1, $$96));\n    }, $Enumerable_sort_by$92.$$arity = 0);\n    \n    Opal.def(self, '$sum', $Enumerable_sum$97 = function $$sum(initial) {\n      var $$98, $iter = $Enumerable_sum$97.$$p, $yield = $iter || nil, self = this, result = nil;\n\n      if ($iter) $Enumerable_sum$97.$$p = null;\n      \n      \n      if (initial == null) {\n        initial = 0;\n      };\n      result = initial;\n      $send(self, 'each', [], ($$98 = function($a){var self = $$98.$$s || this, $post_args, args, item = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        item = (function() {if (($yield !== nil)) {\n          return Opal.yieldX($yield, Opal.to_a(args));\n        } else {\n          return $$($nesting, 'Opal').$destructure(args)\n        }; return nil; })();\n        return (result = $rb_plus(result, item));}, $$98.$$s = self, $$98.$$arity = -1, $$98));\n      return result;\n    }, $Enumerable_sum$97.$$arity = -1);\n    \n    Opal.def(self, '$take', $Enumerable_take$99 = function $$take(num) {\n      var self = this;\n\n      return self.$first(num)\n    }, $Enumerable_take$99.$$arity = 1);\n    \n    Opal.def(self, '$take_while', $Enumerable_take_while$100 = function $$take_while() {try {\n\n      var $iter = $Enumerable_take_while$100.$$p, block = $iter || nil, $$101, self = this, result = nil;\n\n      if ($iter) $Enumerable_take_while$100.$$p = null;\n      \n      \n      if ($iter) $Enumerable_take_while$100.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return self.$enum_for(\"take_while\")\n      };\n      result = [];\n      return $send(self, 'each', [], ($$101 = function($a){var self = $$101.$$s || this, $post_args, args, value = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        value = $$($nesting, 'Opal').$destructure(args);\n        if ($truthy(Opal.yield1(block, value))) {\n        } else {\n          Opal.ret(result)\n        };\n        return result.push(value);;}, $$101.$$s = self, $$101.$$arity = -1, $$101));\n      } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n    }, $Enumerable_take_while$100.$$arity = 0);\n    \n    Opal.def(self, '$uniq', $Enumerable_uniq$102 = function $$uniq() {\n      var $iter = $Enumerable_uniq$102.$$p, block = $iter || nil, $$103, self = this, hash = nil;\n\n      if ($iter) $Enumerable_uniq$102.$$p = null;\n      \n      \n      if ($iter) $Enumerable_uniq$102.$$p = null;;\n      hash = $hash2([], {});\n      $send(self, 'each', [], ($$103 = function($a){var self = $$103.$$s || this, $post_args, args, value = nil, produced = nil, $writer = nil;\n\n      \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        value = $$($nesting, 'Opal').$destructure(args);\n        produced = (function() {if ((block !== nil)) {\n          return Opal.yield1(block, value);\n        } else {\n          return value\n        }; return nil; })();\n        if ($truthy(hash['$key?'](produced))) {\n          return nil\n        } else {\n          \n          $writer = [produced, value];\n          $send(hash, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        };}, $$103.$$s = self, $$103.$$arity = -1, $$103));\n      return hash.$values();\n    }, $Enumerable_uniq$102.$$arity = 0);\n    Opal.alias(self, \"to_a\", \"entries\");\n    \n    Opal.def(self, '$zip', $Enumerable_zip$104 = function $$zip($a) {\n      var $iter = $Enumerable_zip$104.$$p, block = $iter || nil, $post_args, others, self = this;\n\n      if ($iter) $Enumerable_zip$104.$$p = null;\n      \n      \n      if ($iter) $Enumerable_zip$104.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      others = $post_args;;\n      return $send(self.$to_a(), 'zip', Opal.to_a(others));\n    }, $Enumerable_zip$104.$$arity = -1);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/enumerator\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $falsy = Opal.falsy;\n\n  Opal.add_stubs(['$require', '$include', '$allocate', '$new', '$to_proc', '$coerce_to', '$nil?', '$empty?', '$+', '$class', '$__send__', '$===', '$call', '$enum_for', '$size', '$destructure', '$inspect', '$any?', '$[]', '$raise', '$yield', '$each', '$enumerator_size', '$respond_to?', '$try_convert', '$<', '$for']);\n  \n  self.$require(\"corelib/enumerable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Enumerator');\n\n    var $nesting = [self].concat($parent_nesting), $Enumerator_for$1, $Enumerator_initialize$2, $Enumerator_each$3, $Enumerator_size$4, $Enumerator_with_index$5, $Enumerator_inspect$7;\n\n    self.$$prototype.size = self.$$prototype.args = self.$$prototype.object = self.$$prototype.method = nil;\n    \n    self.$include($$($nesting, 'Enumerable'));\n    self.$$prototype.$$is_enumerator = true;\n    Opal.defs(self, '$for', $Enumerator_for$1 = function(object, $a, $b) {\n      var $iter = $Enumerator_for$1.$$p, block = $iter || nil, $post_args, method, args, self = this;\n\n      if ($iter) $Enumerator_for$1.$$p = null;\n      \n      \n      if ($iter) $Enumerator_for$1.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      if ($post_args.length > 0) {\n        method = $post_args[0];\n        $post_args.splice(0, 1);\n      }\n      if (method == null) {\n        method = \"each\";\n      };\n      \n      args = $post_args;;\n      \n      var obj = self.$allocate();\n\n      obj.object = object;\n      obj.size   = block;\n      obj.method = method;\n      obj.args   = args;\n\n      return obj;\n    ;\n    }, $Enumerator_for$1.$$arity = -2);\n    \n    Opal.def(self, '$initialize', $Enumerator_initialize$2 = function $$initialize($a) {\n      var $iter = $Enumerator_initialize$2.$$p, block = $iter || nil, $post_args, self = this;\n\n      if ($iter) $Enumerator_initialize$2.$$p = null;\n      \n      \n      if ($iter) $Enumerator_initialize$2.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      if ($truthy(block)) {\n        \n        self.object = $send($$($nesting, 'Generator'), 'new', [], block.$to_proc());\n        self.method = \"each\";\n        self.args = [];\n        self.size = arguments[0] || nil;\n        if ($truthy(self.size)) {\n          return (self.size = $$($nesting, 'Opal').$coerce_to(self.size, $$($nesting, 'Integer'), \"to_int\"))\n        } else {\n          return nil\n        };\n      } else {\n        \n        self.object = arguments[0];\n        self.method = arguments[1] || \"each\";\n        self.args = $slice.call(arguments, 2);\n        return (self.size = nil);\n      };\n    }, $Enumerator_initialize$2.$$arity = -1);\n    \n    Opal.def(self, '$each', $Enumerator_each$3 = function $$each($a) {\n      var $iter = $Enumerator_each$3.$$p, block = $iter || nil, $post_args, args, $b, self = this;\n\n      if ($iter) $Enumerator_each$3.$$p = null;\n      \n      \n      if ($iter) $Enumerator_each$3.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(($truthy($b = block['$nil?']()) ? args['$empty?']() : $b))) {\n        return self};\n      args = $rb_plus(self.args, args);\n      if ($truthy(block['$nil?']())) {\n        return $send(self.$class(), 'new', [self.object, self.method].concat(Opal.to_a(args)))};\n      return $send(self.object, '__send__', [self.method].concat(Opal.to_a(args)), block.$to_proc());\n    }, $Enumerator_each$3.$$arity = -1);\n    \n    Opal.def(self, '$size', $Enumerator_size$4 = function $$size() {\n      var self = this;\n\n      if ($truthy($$($nesting, 'Proc')['$==='](self.size))) {\n        return $send(self.size, 'call', Opal.to_a(self.args))\n      } else {\n        return self.size\n      }\n    }, $Enumerator_size$4.$$arity = 0);\n    \n    Opal.def(self, '$with_index', $Enumerator_with_index$5 = function $$with_index(offset) {\n      var $iter = $Enumerator_with_index$5.$$p, block = $iter || nil, $$6, self = this;\n\n      if ($iter) $Enumerator_with_index$5.$$p = null;\n      \n      \n      if ($iter) $Enumerator_with_index$5.$$p = null;;\n      \n      if (offset == null) {\n        offset = 0;\n      };\n      offset = (function() {if ($truthy(offset)) {\n        return $$($nesting, 'Opal').$coerce_to(offset, $$($nesting, 'Integer'), \"to_int\")\n      } else {\n        return 0\n      }; return nil; })();\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"with_index\", offset], ($$6 = function(){var self = $$6.$$s || this;\n\n        return self.$size()}, $$6.$$s = self, $$6.$$arity = 0, $$6))\n      };\n      \n      var result, index = offset;\n\n      self.$each.$$p = function() {\n        var param = $$($nesting, 'Opal').$destructure(arguments),\n            value = block(param, index);\n\n        index++;\n\n        return value;\n      }\n\n      return self.$each();\n    ;\n    }, $Enumerator_with_index$5.$$arity = -1);\n    Opal.alias(self, \"with_object\", \"each_with_object\");\n    \n    Opal.def(self, '$inspect', $Enumerator_inspect$7 = function $$inspect() {\n      var self = this, result = nil;\n\n      \n      result = \"\" + \"#<\" + (self.$class()) + \": \" + (self.object.$inspect()) + \":\" + (self.method);\n      if ($truthy(self.args['$any?']())) {\n        result = $rb_plus(result, \"\" + \"(\" + (self.args.$inspect()['$[]']($$($nesting, 'Range').$new(1, -2))) + \")\")};\n      return $rb_plus(result, \">\");\n    }, $Enumerator_inspect$7.$$arity = 0);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Generator');\n\n      var $nesting = [self].concat($parent_nesting), $Generator_initialize$8, $Generator_each$9;\n\n      self.$$prototype.block = nil;\n      \n      self.$include($$($nesting, 'Enumerable'));\n      \n      Opal.def(self, '$initialize', $Generator_initialize$8 = function $$initialize() {\n        var $iter = $Generator_initialize$8.$$p, block = $iter || nil, self = this;\n\n        if ($iter) $Generator_initialize$8.$$p = null;\n        \n        \n        if ($iter) $Generator_initialize$8.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'LocalJumpError'), \"no block given\")\n        };\n        return (self.block = block);\n      }, $Generator_initialize$8.$$arity = 0);\n      return (Opal.def(self, '$each', $Generator_each$9 = function $$each($a) {\n        var $iter = $Generator_each$9.$$p, block = $iter || nil, $post_args, args, self = this, yielder = nil;\n\n        if ($iter) $Generator_each$9.$$p = null;\n        \n        \n        if ($iter) $Generator_each$9.$$p = null;;\n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        yielder = $send($$($nesting, 'Yielder'), 'new', [], block.$to_proc());\n        \n        try {\n          args.unshift(yielder);\n\n          Opal.yieldX(self.block, args);\n        }\n        catch (e) {\n          if (e === $breaker) {\n            return $breaker.$v;\n          }\n          else {\n            throw e;\n          }\n        }\n      ;\n        return self;\n      }, $Generator_each$9.$$arity = -1), nil) && 'each';\n    })($nesting[0], null, $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Yielder');\n\n      var $nesting = [self].concat($parent_nesting), $Yielder_initialize$10, $Yielder_yield$11, $Yielder_$lt$lt$12;\n\n      self.$$prototype.block = nil;\n      \n      \n      Opal.def(self, '$initialize', $Yielder_initialize$10 = function $$initialize() {\n        var $iter = $Yielder_initialize$10.$$p, block = $iter || nil, self = this;\n\n        if ($iter) $Yielder_initialize$10.$$p = null;\n        \n        \n        if ($iter) $Yielder_initialize$10.$$p = null;;\n        return (self.block = block);\n      }, $Yielder_initialize$10.$$arity = 0);\n      \n      Opal.def(self, '$yield', $Yielder_yield$11 = function($a) {\n        var $post_args, values, self = this;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        values = $post_args;;\n        \n        var value = Opal.yieldX(self.block, values);\n\n        if (value === $breaker) {\n          throw $breaker;\n        }\n\n        return value;\n      ;\n      }, $Yielder_yield$11.$$arity = -1);\n      return (Opal.def(self, '$<<', $Yielder_$lt$lt$12 = function($a) {\n        var $post_args, values, self = this;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        values = $post_args;;\n        $send(self, 'yield', Opal.to_a(values));\n        return self;\n      }, $Yielder_$lt$lt$12.$$arity = -1), nil) && '<<';\n    })($nesting[0], null, $nesting);\n    return (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Lazy');\n\n      var $nesting = [self].concat($parent_nesting), $Lazy_initialize$13, $Lazy_lazy$16, $Lazy_collect$17, $Lazy_collect_concat$19, $Lazy_drop$23, $Lazy_drop_while$25, $Lazy_enum_for$27, $Lazy_find_all$28, $Lazy_grep$30, $Lazy_reject$33, $Lazy_take$35, $Lazy_take_while$37, $Lazy_inspect$39;\n\n      self.$$prototype.enumerator = nil;\n      \n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'StopLazyError');\n\n        var $nesting = [self].concat($parent_nesting);\n\n        return nil\n      })($nesting[0], $$($nesting, 'Exception'), $nesting);\n      \n      Opal.def(self, '$initialize', $Lazy_initialize$13 = function $$initialize(object, size) {\n        var $iter = $Lazy_initialize$13.$$p, block = $iter || nil, $$14, self = this;\n\n        if ($iter) $Lazy_initialize$13.$$p = null;\n        \n        \n        if ($iter) $Lazy_initialize$13.$$p = null;;\n        \n        if (size == null) {\n          size = nil;\n        };\n        if ((block !== nil)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy new without a block\")\n        };\n        self.enumerator = object;\n        return $send(self, Opal.find_super_dispatcher(self, 'initialize', $Lazy_initialize$13, false), [size], ($$14 = function(yielder, $a){var self = $$14.$$s || this, $post_args, each_args, $$15;\n\n        \n          \n          if (yielder == null) {\n            yielder = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          each_args = $post_args;;\n          try {\n            return $send(object, 'each', Opal.to_a(each_args), ($$15 = function($b){var self = $$15.$$s || this, $post_args, args;\n\n            \n              \n              $post_args = Opal.slice.call(arguments, 0, arguments.length);\n              \n              args = $post_args;;\n              \n            args.unshift(yielder);\n\n            Opal.yieldX(block, args);\n          ;}, $$15.$$s = self, $$15.$$arity = -1, $$15))\n          } catch ($err) {\n            if (Opal.rescue($err, [$$($nesting, 'Exception')])) {\n              try {\n                return nil\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          };}, $$14.$$s = self, $$14.$$arity = -2, $$14));\n      }, $Lazy_initialize$13.$$arity = -2);\n      Opal.alias(self, \"force\", \"to_a\");\n      \n      Opal.def(self, '$lazy', $Lazy_lazy$16 = function $$lazy() {\n        var self = this;\n\n        return self\n      }, $Lazy_lazy$16.$$arity = 0);\n      \n      Opal.def(self, '$collect', $Lazy_collect$17 = function $$collect() {\n        var $iter = $Lazy_collect$17.$$p, block = $iter || nil, $$18, self = this;\n\n        if ($iter) $Lazy_collect$17.$$p = null;\n        \n        \n        if ($iter) $Lazy_collect$17.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy map without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, self.$enumerator_size()], ($$18 = function(enum$, $a){var self = $$18.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          enum$.$yield(value);\n        ;}, $$18.$$s = self, $$18.$$arity = -2, $$18));\n      }, $Lazy_collect$17.$$arity = 0);\n      \n      Opal.def(self, '$collect_concat', $Lazy_collect_concat$19 = function $$collect_concat() {\n        var $iter = $Lazy_collect_concat$19.$$p, block = $iter || nil, $$20, self = this;\n\n        if ($iter) $Lazy_collect_concat$19.$$p = null;\n        \n        \n        if ($iter) $Lazy_collect_concat$19.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy map without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$20 = function(enum$, $a){var self = $$20.$$s || this, $post_args, args, $$21, $$22;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          if ((value)['$respond_to?'](\"force\") && (value)['$respond_to?'](\"each\")) {\n            $send((value), 'each', [], ($$21 = function(v){var self = $$21.$$s || this;\n\n          \n            \n            if (v == null) {\n              v = nil;\n            };\n            return enum$.$yield(v);}, $$21.$$s = self, $$21.$$arity = 1, $$21))\n          }\n          else {\n            var array = $$($nesting, 'Opal').$try_convert(value, $$($nesting, 'Array'), \"to_ary\");\n\n            if (array === nil) {\n              enum$.$yield(value);\n            }\n            else {\n              $send((value), 'each', [], ($$22 = function(v){var self = $$22.$$s || this;\n\n          \n            \n            if (v == null) {\n              v = nil;\n            };\n            return enum$.$yield(v);}, $$22.$$s = self, $$22.$$arity = 1, $$22));\n            }\n          }\n        ;}, $$20.$$s = self, $$20.$$arity = -2, $$20));\n      }, $Lazy_collect_concat$19.$$arity = 0);\n      \n      Opal.def(self, '$drop', $Lazy_drop$23 = function $$drop(n) {\n        var $$24, self = this, current_size = nil, set_size = nil, dropped = nil;\n\n        \n        n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy($rb_lt(n, 0))) {\n          self.$raise($$($nesting, 'ArgumentError'), \"attempt to drop negative size\")};\n        current_size = self.$enumerator_size();\n        set_size = (function() {if ($truthy($$($nesting, 'Integer')['$==='](current_size))) {\n          if ($truthy($rb_lt(n, current_size))) {\n            return n\n          } else {\n            return current_size\n          }\n        } else {\n          return current_size\n        }; return nil; })();\n        dropped = 0;\n        return $send($$($nesting, 'Lazy'), 'new', [self, set_size], ($$24 = function(enum$, $a){var self = $$24.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy($rb_lt(dropped, n))) {\n            return (dropped = $rb_plus(dropped, 1))\n          } else {\n            return $send(enum$, 'yield', Opal.to_a(args))\n          };}, $$24.$$s = self, $$24.$$arity = -2, $$24));\n      }, $Lazy_drop$23.$$arity = 1);\n      \n      Opal.def(self, '$drop_while', $Lazy_drop_while$25 = function $$drop_while() {\n        var $iter = $Lazy_drop_while$25.$$p, block = $iter || nil, $$26, self = this, succeeding = nil;\n\n        if ($iter) $Lazy_drop_while$25.$$p = null;\n        \n        \n        if ($iter) $Lazy_drop_while$25.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy drop_while without a block\")\n        };\n        succeeding = true;\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$26 = function(enum$, $a){var self = $$26.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy(succeeding)) {\n            \n            var value = Opal.yieldX(block, args);\n\n            if ($falsy(value)) {\n              succeeding = false;\n\n              $send(enum$, 'yield', Opal.to_a(args));\n            }\n          \n          } else {\n            return $send(enum$, 'yield', Opal.to_a(args))\n          };}, $$26.$$s = self, $$26.$$arity = -2, $$26));\n      }, $Lazy_drop_while$25.$$arity = 0);\n      \n      Opal.def(self, '$enum_for', $Lazy_enum_for$27 = function $$enum_for($a, $b) {\n        var $iter = $Lazy_enum_for$27.$$p, block = $iter || nil, $post_args, method, args, self = this;\n\n        if ($iter) $Lazy_enum_for$27.$$p = null;\n        \n        \n        if ($iter) $Lazy_enum_for$27.$$p = null;;\n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        if ($post_args.length > 0) {\n          method = $post_args[0];\n          $post_args.splice(0, 1);\n        }\n        if (method == null) {\n          method = \"each\";\n        };\n        \n        args = $post_args;;\n        return $send(self.$class(), 'for', [self, method].concat(Opal.to_a(args)), block.$to_proc());\n      }, $Lazy_enum_for$27.$$arity = -1);\n      \n      Opal.def(self, '$find_all', $Lazy_find_all$28 = function $$find_all() {\n        var $iter = $Lazy_find_all$28.$$p, block = $iter || nil, $$29, self = this;\n\n        if ($iter) $Lazy_find_all$28.$$p = null;\n        \n        \n        if ($iter) $Lazy_find_all$28.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy select without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$29 = function(enum$, $a){var self = $$29.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          if ($truthy(value)) {\n            $send(enum$, 'yield', Opal.to_a(args));\n          }\n        ;}, $$29.$$s = self, $$29.$$arity = -2, $$29));\n      }, $Lazy_find_all$28.$$arity = 0);\n      Opal.alias(self, \"flat_map\", \"collect_concat\");\n      \n      Opal.def(self, '$grep', $Lazy_grep$30 = function $$grep(pattern) {\n        var $iter = $Lazy_grep$30.$$p, block = $iter || nil, $$31, $$32, self = this;\n\n        if ($iter) $Lazy_grep$30.$$p = null;\n        \n        \n        if ($iter) $Lazy_grep$30.$$p = null;;\n        if ($truthy(block)) {\n          return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$31 = function(enum$, $a){var self = $$31.$$s || this, $post_args, args;\n\n          \n            \n            if (enum$ == null) {\n              enum$ = nil;\n            };\n            \n            $post_args = Opal.slice.call(arguments, 1, arguments.length);\n            \n            args = $post_args;;\n            \n            var param = $$($nesting, 'Opal').$destructure(args),\n                value = pattern['$==='](param);\n\n            if ($truthy(value)) {\n              value = Opal.yield1(block, param);\n\n              enum$.$yield(Opal.yield1(block, param));\n            }\n          ;}, $$31.$$s = self, $$31.$$arity = -2, $$31))\n        } else {\n          return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$32 = function(enum$, $a){var self = $$32.$$s || this, $post_args, args;\n\n          \n            \n            if (enum$ == null) {\n              enum$ = nil;\n            };\n            \n            $post_args = Opal.slice.call(arguments, 1, arguments.length);\n            \n            args = $post_args;;\n            \n            var param = $$($nesting, 'Opal').$destructure(args),\n                value = pattern['$==='](param);\n\n            if ($truthy(value)) {\n              enum$.$yield(param);\n            }\n          ;}, $$32.$$s = self, $$32.$$arity = -2, $$32))\n        };\n      }, $Lazy_grep$30.$$arity = 1);\n      Opal.alias(self, \"map\", \"collect\");\n      Opal.alias(self, \"select\", \"find_all\");\n      \n      Opal.def(self, '$reject', $Lazy_reject$33 = function $$reject() {\n        var $iter = $Lazy_reject$33.$$p, block = $iter || nil, $$34, self = this;\n\n        if ($iter) $Lazy_reject$33.$$p = null;\n        \n        \n        if ($iter) $Lazy_reject$33.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy reject without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$34 = function(enum$, $a){var self = $$34.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          if ($falsy(value)) {\n            $send(enum$, 'yield', Opal.to_a(args));\n          }\n        ;}, $$34.$$s = self, $$34.$$arity = -2, $$34));\n      }, $Lazy_reject$33.$$arity = 0);\n      \n      Opal.def(self, '$take', $Lazy_take$35 = function $$take(n) {\n        var $$36, self = this, current_size = nil, set_size = nil, taken = nil;\n\n        \n        n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy($rb_lt(n, 0))) {\n          self.$raise($$($nesting, 'ArgumentError'), \"attempt to take negative size\")};\n        current_size = self.$enumerator_size();\n        set_size = (function() {if ($truthy($$($nesting, 'Integer')['$==='](current_size))) {\n          if ($truthy($rb_lt(n, current_size))) {\n            return n\n          } else {\n            return current_size\n          }\n        } else {\n          return current_size\n        }; return nil; })();\n        taken = 0;\n        return $send($$($nesting, 'Lazy'), 'new', [self, set_size], ($$36 = function(enum$, $a){var self = $$36.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy($rb_lt(taken, n))) {\n            \n            $send(enum$, 'yield', Opal.to_a(args));\n            return (taken = $rb_plus(taken, 1));\n          } else {\n            return self.$raise($$($nesting, 'StopLazyError'))\n          };}, $$36.$$s = self, $$36.$$arity = -2, $$36));\n      }, $Lazy_take$35.$$arity = 1);\n      \n      Opal.def(self, '$take_while', $Lazy_take_while$37 = function $$take_while() {\n        var $iter = $Lazy_take_while$37.$$p, block = $iter || nil, $$38, self = this;\n\n        if ($iter) $Lazy_take_while$37.$$p = null;\n        \n        \n        if ($iter) $Lazy_take_while$37.$$p = null;;\n        if ($truthy(block)) {\n        } else {\n          self.$raise($$($nesting, 'ArgumentError'), \"tried to call lazy take_while without a block\")\n        };\n        return $send($$($nesting, 'Lazy'), 'new', [self, nil], ($$38 = function(enum$, $a){var self = $$38.$$s || this, $post_args, args;\n\n        \n          \n          if (enum$ == null) {\n            enum$ = nil;\n          };\n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          args = $post_args;;\n          \n          var value = Opal.yieldX(block, args);\n\n          if ($truthy(value)) {\n            $send(enum$, 'yield', Opal.to_a(args));\n          }\n          else {\n            self.$raise($$($nesting, 'StopLazyError'));\n          }\n        ;}, $$38.$$s = self, $$38.$$arity = -2, $$38));\n      }, $Lazy_take_while$37.$$arity = 0);\n      Opal.alias(self, \"to_enum\", \"enum_for\");\n      return (Opal.def(self, '$inspect', $Lazy_inspect$39 = function $$inspect() {\n        var self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \": \" + (self.enumerator.$inspect()) + \">\"\n      }, $Lazy_inspect$39.$$arity = 0), nil) && 'inspect';\n    })($nesting[0], self, $nesting);\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/numeric\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$require', '$include', '$instance_of?', '$class', '$Float', '$respond_to?', '$coerce', '$__send__', '$===', '$raise', '$equal?', '$-', '$*', '$div', '$<', '$-@', '$ceil', '$to_f', '$denominator', '$to_r', '$==', '$floor', '$/', '$%', '$Complex', '$zero?', '$numerator', '$abs', '$arg', '$coerce_to!', '$round', '$to_i', '$truncate', '$>']);\n  \n  self.$require(\"corelib/comparable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Numeric');\n\n    var $nesting = [self].concat($parent_nesting), $Numeric_coerce$1, $Numeric___coerced__$2, $Numeric_$lt_eq_gt$3, $Numeric_$plus$$4, $Numeric_$minus$$5, $Numeric_$percent$6, $Numeric_abs$7, $Numeric_abs2$8, $Numeric_angle$9, $Numeric_ceil$10, $Numeric_conj$11, $Numeric_denominator$12, $Numeric_div$13, $Numeric_divmod$14, $Numeric_fdiv$15, $Numeric_floor$16, $Numeric_i$17, $Numeric_imag$18, $Numeric_integer$ques$19, $Numeric_nonzero$ques$20, $Numeric_numerator$21, $Numeric_polar$22, $Numeric_quo$23, $Numeric_real$24, $Numeric_real$ques$25, $Numeric_rect$26, $Numeric_round$27, $Numeric_to_c$28, $Numeric_to_int$29, $Numeric_truncate$30, $Numeric_zero$ques$31, $Numeric_positive$ques$32, $Numeric_negative$ques$33, $Numeric_dup$34, $Numeric_clone$35, $Numeric_finite$ques$36, $Numeric_infinite$ques$37;\n\n    \n    self.$include($$($nesting, 'Comparable'));\n    \n    Opal.def(self, '$coerce', $Numeric_coerce$1 = function $$coerce(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$instance_of?'](self.$class()))) {\n        return [other, self]};\n      return [self.$Float(other), self.$Float(self)];\n    }, $Numeric_coerce$1.$$arity = 1);\n    \n    Opal.def(self, '$__coerced__', $Numeric___coerced__$2 = function $$__coerced__(method, other) {\n      var $a, $b, self = this, a = nil, b = nil, $case = nil;\n\n      if ($truthy(other['$respond_to?'](\"coerce\"))) {\n        \n        $b = other.$coerce(self), $a = Opal.to_ary($b), (a = ($a[0] == null ? nil : $a[0])), (b = ($a[1] == null ? nil : $a[1])), $b;\n        return a.$__send__(method, b);\n      } else {\n        return (function() {$case = method;\n        if (\"+\"['$===']($case) || \"-\"['$===']($case) || \"*\"['$===']($case) || \"/\"['$===']($case) || \"%\"['$===']($case) || \"&\"['$===']($case) || \"|\"['$===']($case) || \"^\"['$===']($case) || \"**\"['$===']($case)) {return self.$raise($$($nesting, 'TypeError'), \"\" + (other.$class()) + \" can't be coerced into Numeric\")}\n        else if (\">\"['$===']($case) || \">=\"['$===']($case) || \"<\"['$===']($case) || \"<=\"['$===']($case) || \"<=>\"['$===']($case)) {return self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (other.$class()) + \" failed\")}\n        else { return nil }})()\n      }\n    }, $Numeric___coerced__$2.$$arity = 2);\n    \n    Opal.def(self, '$<=>', $Numeric_$lt_eq_gt$3 = function(other) {\n      var self = this;\n\n      \n      if ($truthy(self['$equal?'](other))) {\n        return 0};\n      return nil;\n    }, $Numeric_$lt_eq_gt$3.$$arity = 1);\n    \n    Opal.def(self, '$+@', $Numeric_$plus$$4 = function() {\n      var self = this;\n\n      return self\n    }, $Numeric_$plus$$4.$$arity = 0);\n    \n    Opal.def(self, '$-@', $Numeric_$minus$$5 = function() {\n      var self = this;\n\n      return $rb_minus(0, self)\n    }, $Numeric_$minus$$5.$$arity = 0);\n    \n    Opal.def(self, '$%', $Numeric_$percent$6 = function(other) {\n      var self = this;\n\n      return $rb_minus(self, $rb_times(other, self.$div(other)))\n    }, $Numeric_$percent$6.$$arity = 1);\n    \n    Opal.def(self, '$abs', $Numeric_abs$7 = function $$abs() {\n      var self = this;\n\n      if ($rb_lt(self, 0)) {\n        return self['$-@']()\n      } else {\n        return self\n      }\n    }, $Numeric_abs$7.$$arity = 0);\n    \n    Opal.def(self, '$abs2', $Numeric_abs2$8 = function $$abs2() {\n      var self = this;\n\n      return $rb_times(self, self)\n    }, $Numeric_abs2$8.$$arity = 0);\n    \n    Opal.def(self, '$angle', $Numeric_angle$9 = function $$angle() {\n      var self = this;\n\n      if ($rb_lt(self, 0)) {\n        return $$$($$($nesting, 'Math'), 'PI')\n      } else {\n        return 0\n      }\n    }, $Numeric_angle$9.$$arity = 0);\n    Opal.alias(self, \"arg\", \"angle\");\n    \n    Opal.def(self, '$ceil', $Numeric_ceil$10 = function $$ceil(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      return self.$to_f().$ceil(ndigits);\n    }, $Numeric_ceil$10.$$arity = -1);\n    \n    Opal.def(self, '$conj', $Numeric_conj$11 = function $$conj() {\n      var self = this;\n\n      return self\n    }, $Numeric_conj$11.$$arity = 0);\n    Opal.alias(self, \"conjugate\", \"conj\");\n    \n    Opal.def(self, '$denominator', $Numeric_denominator$12 = function $$denominator() {\n      var self = this;\n\n      return self.$to_r().$denominator()\n    }, $Numeric_denominator$12.$$arity = 0);\n    \n    Opal.def(self, '$div', $Numeric_div$13 = function $$div(other) {\n      var self = this;\n\n      \n      if (other['$=='](0)) {\n        self.$raise($$($nesting, 'ZeroDivisionError'), \"divided by o\")};\n      return $rb_divide(self, other).$floor();\n    }, $Numeric_div$13.$$arity = 1);\n    \n    Opal.def(self, '$divmod', $Numeric_divmod$14 = function $$divmod(other) {\n      var self = this;\n\n      return [self.$div(other), self['$%'](other)]\n    }, $Numeric_divmod$14.$$arity = 1);\n    \n    Opal.def(self, '$fdiv', $Numeric_fdiv$15 = function $$fdiv(other) {\n      var self = this;\n\n      return $rb_divide(self.$to_f(), other)\n    }, $Numeric_fdiv$15.$$arity = 1);\n    \n    Opal.def(self, '$floor', $Numeric_floor$16 = function $$floor(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      return self.$to_f().$floor(ndigits);\n    }, $Numeric_floor$16.$$arity = -1);\n    \n    Opal.def(self, '$i', $Numeric_i$17 = function $$i() {\n      var self = this;\n\n      return self.$Complex(0, self)\n    }, $Numeric_i$17.$$arity = 0);\n    \n    Opal.def(self, '$imag', $Numeric_imag$18 = function $$imag() {\n      var self = this;\n\n      return 0\n    }, $Numeric_imag$18.$$arity = 0);\n    Opal.alias(self, \"imaginary\", \"imag\");\n    \n    Opal.def(self, '$integer?', $Numeric_integer$ques$19 = function() {\n      var self = this;\n\n      return false\n    }, $Numeric_integer$ques$19.$$arity = 0);\n    Opal.alias(self, \"magnitude\", \"abs\");\n    Opal.alias(self, \"modulo\", \"%\");\n    \n    Opal.def(self, '$nonzero?', $Numeric_nonzero$ques$20 = function() {\n      var self = this;\n\n      if ($truthy(self['$zero?']())) {\n        return nil\n      } else {\n        return self\n      }\n    }, $Numeric_nonzero$ques$20.$$arity = 0);\n    \n    Opal.def(self, '$numerator', $Numeric_numerator$21 = function $$numerator() {\n      var self = this;\n\n      return self.$to_r().$numerator()\n    }, $Numeric_numerator$21.$$arity = 0);\n    Opal.alias(self, \"phase\", \"arg\");\n    \n    Opal.def(self, '$polar', $Numeric_polar$22 = function $$polar() {\n      var self = this;\n\n      return [self.$abs(), self.$arg()]\n    }, $Numeric_polar$22.$$arity = 0);\n    \n    Opal.def(self, '$quo', $Numeric_quo$23 = function $$quo(other) {\n      var self = this;\n\n      return $rb_divide($$($nesting, 'Opal')['$coerce_to!'](self, $$($nesting, 'Rational'), \"to_r\"), other)\n    }, $Numeric_quo$23.$$arity = 1);\n    \n    Opal.def(self, '$real', $Numeric_real$24 = function $$real() {\n      var self = this;\n\n      return self\n    }, $Numeric_real$24.$$arity = 0);\n    \n    Opal.def(self, '$real?', $Numeric_real$ques$25 = function() {\n      var self = this;\n\n      return true\n    }, $Numeric_real$ques$25.$$arity = 0);\n    \n    Opal.def(self, '$rect', $Numeric_rect$26 = function $$rect() {\n      var self = this;\n\n      return [self, 0]\n    }, $Numeric_rect$26.$$arity = 0);\n    Opal.alias(self, \"rectangular\", \"rect\");\n    \n    Opal.def(self, '$round', $Numeric_round$27 = function $$round(digits) {\n      var self = this;\n\n      \n      ;\n      return self.$to_f().$round(digits);\n    }, $Numeric_round$27.$$arity = -1);\n    \n    Opal.def(self, '$to_c', $Numeric_to_c$28 = function $$to_c() {\n      var self = this;\n\n      return self.$Complex(self, 0)\n    }, $Numeric_to_c$28.$$arity = 0);\n    \n    Opal.def(self, '$to_int', $Numeric_to_int$29 = function $$to_int() {\n      var self = this;\n\n      return self.$to_i()\n    }, $Numeric_to_int$29.$$arity = 0);\n    \n    Opal.def(self, '$truncate', $Numeric_truncate$30 = function $$truncate(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      return self.$to_f().$truncate(ndigits);\n    }, $Numeric_truncate$30.$$arity = -1);\n    \n    Opal.def(self, '$zero?', $Numeric_zero$ques$31 = function() {\n      var self = this;\n\n      return self['$=='](0)\n    }, $Numeric_zero$ques$31.$$arity = 0);\n    \n    Opal.def(self, '$positive?', $Numeric_positive$ques$32 = function() {\n      var self = this;\n\n      return $rb_gt(self, 0)\n    }, $Numeric_positive$ques$32.$$arity = 0);\n    \n    Opal.def(self, '$negative?', $Numeric_negative$ques$33 = function() {\n      var self = this;\n\n      return $rb_lt(self, 0)\n    }, $Numeric_negative$ques$33.$$arity = 0);\n    \n    Opal.def(self, '$dup', $Numeric_dup$34 = function $$dup() {\n      var self = this;\n\n      return self\n    }, $Numeric_dup$34.$$arity = 0);\n    \n    Opal.def(self, '$clone', $Numeric_clone$35 = function $$clone($kwargs) {\n      var freeze, self = this;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      freeze = $kwargs.$$smap[\"freeze\"];\n      if (freeze == null) {\n        freeze = true\n      };\n      return self;\n    }, $Numeric_clone$35.$$arity = -1);\n    \n    Opal.def(self, '$finite?', $Numeric_finite$ques$36 = function() {\n      var self = this;\n\n      return true\n    }, $Numeric_finite$ques$36.$$arity = 0);\n    return (Opal.def(self, '$infinite?', $Numeric_infinite$ques$37 = function() {\n      var self = this;\n\n      return nil\n    }, $Numeric_infinite$ques$37.$$arity = 0), nil) && 'infinite?';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/array\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$require', '$include', '$to_a', '$warn', '$raise', '$replace', '$respond_to?', '$to_ary', '$coerce_to', '$coerce_to?', '$===', '$join', '$to_str', '$class', '$hash', '$<=>', '$==', '$object_id', '$inspect', '$enum_for', '$bsearch_index', '$to_proc', '$nil?', '$coerce_to!', '$>', '$*', '$enumerator_size', '$empty?', '$size', '$map', '$equal?', '$dup', '$each', '$[]', '$dig', '$eql?', '$length', '$begin', '$end', '$exclude_end?', '$flatten', '$__id__', '$to_s', '$new', '$max', '$min', '$!', '$>=', '$**', '$delete_if', '$reverse', '$rotate', '$rand', '$at', '$keep_if', '$shuffle!', '$<', '$sort', '$sort_by', '$!=', '$times', '$[]=', '$-', '$<<', '$values', '$is_a?', '$last', '$first', '$upto', '$reject', '$pristine', '$singleton_class']);\n  \n  self.$require(\"corelib/enumerable\");\n  self.$require(\"corelib/numeric\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Array');\n\n    var $nesting = [self].concat($parent_nesting), $Array_$$$1, $Array_initialize$2, $Array_try_convert$3, $Array_$$4, $Array_$$5, $Array_$$6, $Array_$plus$7, $Array_$minus$8, $Array_$lt$lt$9, $Array_$lt_eq_gt$10, $Array_$eq_eq$11, $Array_$$$12, $Array_$$$eq$13, $Array_any$ques$14, $Array_assoc$15, $Array_at$16, $Array_bsearch_index$17, $Array_bsearch$18, $Array_cycle$19, $Array_clear$21, $Array_count$22, $Array_initialize_copy$23, $Array_collect$24, $Array_collect$excl$26, $Array_combination$28, $Array_repeated_combination$30, $Array_compact$32, $Array_compact$excl$33, $Array_concat$34, $Array_delete$37, $Array_delete_at$38, $Array_delete_if$39, $Array_dig$41, $Array_drop$42, $Array_dup$43, $Array_each$44, $Array_each_index$46, $Array_empty$ques$48, $Array_eql$ques$49, $Array_fetch$50, $Array_fill$51, $Array_first$52, $Array_flatten$53, $Array_flatten$excl$54, $Array_hash$55, $Array_include$ques$56, $Array_index$57, $Array_insert$58, $Array_inspect$59, $Array_join$60, $Array_keep_if$61, $Array_last$63, $Array_length$64, $Array_max$65, $Array_min$66, $Array_permutation$67, $Array_repeated_permutation$69, $Array_pop$71, $Array_product$72, $Array_push$73, $Array_rassoc$74, $Array_reject$75, $Array_reject$excl$77, $Array_replace$79, $Array_reverse$80, $Array_reverse$excl$81, $Array_reverse_each$82, $Array_rindex$84, $Array_rotate$85, $Array_rotate$excl$86, $Array_sample$89, $Array_select$90, $Array_select$excl$92, $Array_shift$94, $Array_shuffle$95, $Array_shuffle$excl$96, $Array_slice$excl$97, $Array_sort$98, $Array_sort$excl$99, $Array_sort_by$excl$100, $Array_take$102, $Array_take_while$103, $Array_to_a$104, $Array_to_h$105, $Array_transpose$106, $Array_uniq$109, $Array_uniq$excl$110, $Array_unshift$111, $Array_values_at$112, $Array_zip$115, $Array_inherited$116, $Array_instance_variables$117, $Array_pack$119;\n\n    \n    self.$include($$($nesting, 'Enumerable'));\n    Opal.defineProperty(self.$$prototype, '$$is_array', true);\n    \n    // Recent versions of V8 (> 7.1) only use an optimized implementation when Array.prototype is unmodified.\n    // For instance, \"array-splice.tq\" has a \"fast path\" (ExtractFastJSArray, defined in \"src/codegen/code-stub-assembler.cc\")\n    // but it's only enabled when \"IsPrototypeInitialArrayPrototype()\" is true.\n    //\n    // Older versions of V8 were using relatively fast JS-with-extensions code even when Array.prototype is modified:\n    // https://github.com/v8/v8/blob/7.0.1/src/js/array.js#L599-L642\n    //\n    // In short, Array operations are slow in recent versions of V8 when the Array.prototype has been tampered.\n    // So, when possible, we are using faster open-coded version to boost the performance.\n\n    // As of V8 8.4, depending on the size of the array, this is up to ~25x times faster than Array#shift()\n    // Implementation is heavily inspired by: https://github.com/nodejs/node/blob/ba684805b6c0eded76e5cd89ee00328ac7a59365/lib/internal/util.js#L341-L347\n    function shiftNoArg(list) {\n      var r = list[0];\n      var index = 1;\n      var length = list.length;\n      for (; index < length; index++) {\n        list[index - 1] = list[index];\n      }\n      list.pop();\n      return r;\n    }\n\n    function toArraySubclass(obj, klass) {\n      if (klass.$$name === Opal.Array) {\n        return obj;\n      } else {\n        return klass.$allocate().$replace((obj).$to_a());\n      }\n    }\n  ;\n    Opal.defs(self, '$[]', $Array_$$$1 = function($a) {\n      var $post_args, objects, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      objects = $post_args;;\n      return toArraySubclass(objects, self);;\n    }, $Array_$$$1.$$arity = -1);\n    \n    Opal.def(self, '$initialize', $Array_initialize$2 = function $$initialize(size, obj) {\n      var $iter = $Array_initialize$2.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_initialize$2.$$p = null;\n      \n      \n      if ($iter) $Array_initialize$2.$$p = null;;\n      \n      if (size == null) {\n        size = nil;\n      };\n      \n      if (obj == null) {\n        obj = nil;\n      };\n      \n      if (obj !== nil && block !== nil) {\n        self.$warn(\"warning: block supersedes default value argument\")\n      }\n\n      if (size > $$$($$($nesting, 'Integer'), 'MAX')) {\n        self.$raise($$($nesting, 'ArgumentError'), \"array size too big\")\n      }\n\n      if (arguments.length > 2) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" for 0..2)\")\n      }\n\n      if (arguments.length === 0) {\n        self.splice(0, self.length);\n        return self;\n      }\n\n      if (arguments.length === 1) {\n        if (size.$$is_array) {\n          self.$replace(size.$to_a())\n          return self;\n        } else if (size['$respond_to?'](\"to_ary\")) {\n          self.$replace(size.$to_ary())\n          return self;\n        }\n      }\n\n      size = $$($nesting, 'Opal').$coerce_to(size, $$($nesting, 'Integer'), \"to_int\")\n\n      if (size < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\")\n      }\n\n      self.splice(0, self.length);\n      var i, value;\n\n      if (block === nil) {\n        for (i = 0; i < size; i++) {\n          self.push(obj);\n        }\n      }\n      else {\n        for (i = 0, value; i < size; i++) {\n          value = block(i);\n          self[i] = value;\n        }\n      }\n\n      return self;\n    ;\n    }, $Array_initialize$2.$$arity = -1);\n    Opal.defs(self, '$try_convert', $Array_try_convert$3 = function $$try_convert(obj) {\n      var self = this;\n\n      return $$($nesting, 'Opal')['$coerce_to?'](obj, $$($nesting, 'Array'), \"to_ary\")\n    }, $Array_try_convert$3.$$arity = 1);\n    \n    Opal.def(self, '$&', $Array_$$4 = function(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      \n      var result = [], hash = $hash2([], {}), i, length, item;\n\n      for (i = 0, length = other.length; i < length; i++) {\n        Opal.hash_put(hash, other[i], true);\n      }\n\n      for (i = 0, length = self.length; i < length; i++) {\n        item = self[i];\n        if (Opal.hash_delete(hash, item) !== undefined) {\n          result.push(item);\n        }\n      }\n\n      return result;\n    ;\n    }, $Array_$$4.$$arity = 1);\n    \n    Opal.def(self, '$|', $Array_$$5 = function(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      \n      var hash = $hash2([], {}), i, length, item;\n\n      for (i = 0, length = self.length; i < length; i++) {\n        Opal.hash_put(hash, self[i], true);\n      }\n\n      for (i = 0, length = other.length; i < length; i++) {\n        Opal.hash_put(hash, other[i], true);\n      }\n\n      return hash.$keys();\n    ;\n    }, $Array_$$5.$$arity = 1);\n    \n    Opal.def(self, '$*', $Array_$$6 = function(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$respond_to?'](\"to_str\"))) {\n        return self.$join(other.$to_str())};\n      other = $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(other < 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative argument\")};\n      \n      var result = [],\n          converted = self.$to_a();\n\n      for (var i = 0; i < other; i++) {\n        result = result.concat(converted);\n      }\n\n      return toArraySubclass(result, self.$class());\n    ;\n    }, $Array_$$6.$$arity = 1);\n    \n    Opal.def(self, '$+', $Array_$plus$7 = function(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      return self.concat(other);;\n    }, $Array_$plus$7.$$arity = 1);\n    \n    Opal.def(self, '$-', $Array_$minus$8 = function(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      if ($truthy(self.length === 0)) {\n        return []};\n      if ($truthy(other.length === 0)) {\n        return self.slice()};\n      \n      var result = [], hash = $hash2([], {}), i, length, item;\n\n      for (i = 0, length = other.length; i < length; i++) {\n        Opal.hash_put(hash, other[i], true);\n      }\n\n      for (i = 0, length = self.length; i < length; i++) {\n        item = self[i];\n        if (Opal.hash_get(hash, item) === undefined) {\n          result.push(item);\n        }\n      }\n\n      return result;\n    ;\n    }, $Array_$minus$8.$$arity = 1);\n    \n    Opal.def(self, '$<<', $Array_$lt$lt$9 = function(object) {\n      var self = this;\n\n      \n      self.push(object);\n      return self;\n    }, $Array_$lt$lt$9.$$arity = 1);\n    \n    Opal.def(self, '$<=>', $Array_$lt_eq_gt$10 = function(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        other = other.$to_a()\n      } else if ($truthy(other['$respond_to?'](\"to_ary\"))) {\n        other = other.$to_ary().$to_a()\n      } else {\n        return nil\n      };\n      \n      if (self.$hash() === other.$hash()) {\n        return 0;\n      }\n\n      var count = Math.min(self.length, other.length);\n\n      for (var i = 0; i < count; i++) {\n        var tmp = (self[i])['$<=>'](other[i]);\n\n        if (tmp !== 0) {\n          return tmp;\n        }\n      }\n\n      return (self.length)['$<=>'](other.length);\n    ;\n    }, $Array_$lt_eq_gt$10.$$arity = 1);\n    \n    Opal.def(self, '$==', $Array_$eq_eq$11 = function(other) {\n      var self = this;\n\n      \n      var recursed = {};\n\n      function _eqeq(array, other) {\n        var i, length, a, b;\n\n        if (array === other)\n          return true;\n\n        if (!other.$$is_array) {\n          if ($$($nesting, 'Opal')['$respond_to?'](other, \"to_ary\")) {\n            return (other)['$=='](array);\n          } else {\n            return false;\n          }\n        }\n\n        if (array.$$constructor !== Array)\n          array = (array).$to_a();\n        if (other.$$constructor !== Array)\n          other = (other).$to_a();\n\n        if (array.length !== other.length) {\n          return false;\n        }\n\n        recursed[(array).$object_id()] = true;\n\n        for (i = 0, length = array.length; i < length; i++) {\n          a = array[i];\n          b = other[i];\n          if (a.$$is_array) {\n            if (b.$$is_array && b.length !== a.length) {\n              return false;\n            }\n            if (!recursed.hasOwnProperty((a).$object_id())) {\n              if (!_eqeq(a, b)) {\n                return false;\n              }\n            }\n          } else {\n            if (!(a)['$=='](b)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return _eqeq(self, other);\n    \n    }, $Array_$eq_eq$11.$$arity = 1);\n    \n    function $array_slice_range(self, index) {\n      var size = self.length,\n          exclude, from, to, result;\n\n      exclude = index.excl;\n      from    = Opal.Opal.$coerce_to(index.begin, Opal.Integer, 'to_int');\n      to      = Opal.Opal.$coerce_to(index.end, Opal.Integer, 'to_int');\n\n      if (from < 0) {\n        from += size;\n\n        if (from < 0) {\n          return nil;\n        }\n      }\n\n      if (from > size) {\n        return nil;\n      }\n\n      if (to < 0) {\n        to += size;\n\n        if (to < 0) {\n          return [];\n        }\n      }\n\n      if (!exclude) {\n        to += 1;\n      }\n\n      result = self.slice(from, to);\n      return toArraySubclass(result, self.$class());\n    }\n\n    function $array_slice_index_length(self, index, length) {\n      var size = self.length,\n          exclude, from, to, result;\n\n      index = Opal.Opal.$coerce_to(index, Opal.Integer, 'to_int');\n\n      if (index < 0) {\n        index += size;\n\n        if (index < 0) {\n          return nil;\n        }\n      }\n\n      if (length === undefined) {\n        if (index >= size || index < 0) {\n          return nil;\n        }\n\n        return self[index];\n      }\n      else {\n        length = Opal.Opal.$coerce_to(length, Opal.Integer, 'to_int');\n\n        if (length < 0 || index > size || index < 0) {\n          return nil;\n        }\n\n        result = self.slice(index, index + length);\n      }\n      return toArraySubclass(result, self.$class());\n    }\n  ;\n    \n    Opal.def(self, '$[]', $Array_$$$12 = function(index, length) {\n      var self = this;\n\n      \n      ;\n      \n      if (index.$$is_range) {\n        return $array_slice_range(self, index);\n      }\n      else {\n        return $array_slice_index_length(self, index, length);\n      }\n    ;\n    }, $Array_$$$12.$$arity = -2);\n    \n    Opal.def(self, '$[]=', $Array_$$$eq$13 = function(index, value, extra) {\n      var self = this, data = nil, length = nil;\n\n      \n      ;\n            var i, size = self.length;;\n      if ($truthy($$($nesting, 'Range')['$==='](index))) {\n        \n        data = (function() {if ($truthy($$($nesting, 'Array')['$==='](value))) {\n          return value.$to_a()\n        } else if ($truthy(value['$respond_to?'](\"to_ary\"))) {\n          return value.$to_ary().$to_a()\n        } else {\n          return [value]\n        }; return nil; })();\n        \n        var exclude = index.excl,\n            from    = $$($nesting, 'Opal').$coerce_to(index.begin, $$($nesting, 'Integer'), \"to_int\"),\n            to      = $$($nesting, 'Opal').$coerce_to(index.end, $$($nesting, 'Integer'), \"to_int\");\n\n        if (from < 0) {\n          from += size;\n\n          if (from < 0) {\n            self.$raise($$($nesting, 'RangeError'), \"\" + (index.$inspect()) + \" out of range\");\n          }\n        }\n\n        if (to < 0) {\n          to += size;\n        }\n\n        if (!exclude) {\n          to += 1;\n        }\n\n        if (from > size) {\n          for (i = size; i < from; i++) {\n            self[i] = nil;\n          }\n        }\n\n        if (to < 0) {\n          self.splice.apply(self, [from, 0].concat(data));\n        }\n        else {\n          self.splice.apply(self, [from, to - from].concat(data));\n        }\n\n        return value;\n      ;\n      } else {\n        \n        if ($truthy(extra === undefined)) {\n          length = 1\n        } else {\n          \n          length = value;\n          value = extra;\n          data = (function() {if ($truthy($$($nesting, 'Array')['$==='](value))) {\n            return value.$to_a()\n          } else if ($truthy(value['$respond_to?'](\"to_ary\"))) {\n            return value.$to_ary().$to_a()\n          } else {\n            return [value]\n          }; return nil; })();\n        };\n        \n        var old;\n\n        index  = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n        length = $$($nesting, 'Opal').$coerce_to(length, $$($nesting, 'Integer'), \"to_int\");\n\n        if (index < 0) {\n          old    = index;\n          index += size;\n\n          if (index < 0) {\n            self.$raise($$($nesting, 'IndexError'), \"\" + \"index \" + (old) + \" too small for array; minimum \" + (-self.length));\n          }\n        }\n\n        if (length < 0) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"negative length (\" + (length) + \")\")\n        }\n\n        if (index > size) {\n          for (i = size; i < index; i++) {\n            self[i] = nil;\n          }\n        }\n\n        if (extra === undefined) {\n          self[index] = value;\n        }\n        else {\n          self.splice.apply(self, [index, length].concat(data));\n        }\n\n        return value;\n      ;\n      };\n    }, $Array_$$$eq$13.$$arity = -3);\n    \n    Opal.def(self, '$any?', $Array_any$ques$14 = function(pattern) {\n      var $iter = $Array_any$ques$14.$$p, block = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Array_any$ques$14.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      \n      if ($iter) $Array_any$ques$14.$$p = null;;\n      ;\n      if (self.length === 0) return false;\n      return $send(self, Opal.find_super_dispatcher(self, 'any?', $Array_any$ques$14, false), $zuper, $iter);\n    }, $Array_any$ques$14.$$arity = -1);\n    \n    Opal.def(self, '$assoc', $Array_assoc$15 = function $$assoc(object) {\n      var self = this;\n\n      \n      for (var i = 0, length = self.length, item; i < length; i++) {\n        if (item = self[i], item.length && (item[0])['$=='](object)) {\n          return item;\n        }\n      }\n\n      return nil;\n    \n    }, $Array_assoc$15.$$arity = 1);\n    \n    Opal.def(self, '$at', $Array_at$16 = function $$at(index) {\n      var self = this;\n\n      \n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n      \n      if (index < 0) {\n        index += self.length;\n      }\n\n      if (index < 0 || index >= self.length) {\n        return nil;\n      }\n\n      return self[index];\n    ;\n    }, $Array_at$16.$$arity = 1);\n    \n    Opal.def(self, '$bsearch_index', $Array_bsearch_index$17 = function $$bsearch_index() {\n      var $iter = $Array_bsearch_index$17.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_bsearch_index$17.$$p = null;\n      \n      \n      if ($iter) $Array_bsearch_index$17.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"bsearch_index\")\n      };\n      \n      var min = 0,\n          max = self.length,\n          mid,\n          val,\n          ret,\n          smaller = false,\n          satisfied = nil;\n\n      while (min < max) {\n        mid = min + Math.floor((max - min) / 2);\n        val = self[mid];\n        ret = Opal.yield1(block, val);\n\n        if (ret === true) {\n          satisfied = mid;\n          smaller = true;\n        }\n        else if (ret === false || ret === nil) {\n          smaller = false;\n        }\n        else if (ret.$$is_number) {\n          if (ret === 0) { return mid; }\n          smaller = (ret < 0);\n        }\n        else {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong argument type \" + ((ret).$class()) + \" (must be numeric, true, false or nil)\")\n        }\n\n        if (smaller) { max = mid; } else { min = mid + 1; }\n      }\n\n      return satisfied;\n    ;\n    }, $Array_bsearch_index$17.$$arity = 0);\n    \n    Opal.def(self, '$bsearch', $Array_bsearch$18 = function $$bsearch() {\n      var $iter = $Array_bsearch$18.$$p, block = $iter || nil, self = this, index = nil;\n\n      if ($iter) $Array_bsearch$18.$$p = null;\n      \n      \n      if ($iter) $Array_bsearch$18.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"bsearch\")\n      };\n      index = $send(self, 'bsearch_index', [], block.$to_proc());\n      \n      if (index != null && index.$$is_number) {\n        return self[index];\n      } else {\n        return index;\n      }\n    ;\n    }, $Array_bsearch$18.$$arity = 0);\n    \n    Opal.def(self, '$cycle', $Array_cycle$19 = function $$cycle(n) {\n      var $iter = $Array_cycle$19.$$p, block = $iter || nil, $$20, $a, self = this;\n\n      if ($iter) $Array_cycle$19.$$p = null;\n      \n      \n      if ($iter) $Array_cycle$19.$$p = null;;\n      \n      if (n == null) {\n        n = nil;\n      };\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"cycle\", n], ($$20 = function(){var self = $$20.$$s || this;\n\n        if ($truthy(n['$nil?']())) {\n            return $$$($$($nesting, 'Float'), 'INFINITY')\n          } else {\n            \n            n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n            if ($truthy($rb_gt(n, 0))) {\n              return $rb_times(self.$enumerator_size(), n)\n            } else {\n              return 0\n            };\n          }}, $$20.$$s = self, $$20.$$arity = 0, $$20))\n      };\n      if ($truthy(($truthy($a = self['$empty?']()) ? $a : n['$=='](0)))) {\n        return nil};\n      \n      var i, length, value;\n\n      if (n === nil) {\n        while (true) {\n          for (i = 0, length = self.length; i < length; i++) {\n            value = Opal.yield1(block, self[i]);\n          }\n        }\n      }\n      else {\n        n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n        if (n <= 0) {\n          return self;\n        }\n\n        while (n > 0) {\n          for (i = 0, length = self.length; i < length; i++) {\n            value = Opal.yield1(block, self[i]);\n          }\n\n          n--;\n        }\n      }\n    ;\n      return self;\n    }, $Array_cycle$19.$$arity = -1);\n    \n    Opal.def(self, '$clear', $Array_clear$21 = function $$clear() {\n      var self = this;\n\n      \n      self.splice(0, self.length);\n      return self;\n    }, $Array_clear$21.$$arity = 0);\n    \n    Opal.def(self, '$count', $Array_count$22 = function $$count(object) {\n      var $iter = $Array_count$22.$$p, block = $iter || nil, $a, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Array_count$22.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      \n      if ($iter) $Array_count$22.$$p = null;;\n      \n      if (object == null) {\n        object = nil;\n      };\n      if ($truthy(($truthy($a = object) ? $a : block))) {\n        return $send(self, Opal.find_super_dispatcher(self, 'count', $Array_count$22, false), $zuper, $iter)\n      } else {\n        return self.$size()\n      };\n    }, $Array_count$22.$$arity = -1);\n    \n    Opal.def(self, '$initialize_copy', $Array_initialize_copy$23 = function $$initialize_copy(other) {\n      var self = this;\n\n      return self.$replace(other)\n    }, $Array_initialize_copy$23.$$arity = 1);\n    \n    Opal.def(self, '$collect', $Array_collect$24 = function $$collect() {\n      var $iter = $Array_collect$24.$$p, block = $iter || nil, $$25, self = this;\n\n      if ($iter) $Array_collect$24.$$p = null;\n      \n      \n      if ($iter) $Array_collect$24.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"collect\"], ($$25 = function(){var self = $$25.$$s || this;\n\n        return self.$size()}, $$25.$$s = self, $$25.$$arity = 0, $$25))\n      };\n      \n      var result = [];\n\n      for (var i = 0, length = self.length; i < length; i++) {\n        var value = Opal.yield1(block, self[i]);\n        result.push(value);\n      }\n\n      return result;\n    ;\n    }, $Array_collect$24.$$arity = 0);\n    \n    Opal.def(self, '$collect!', $Array_collect$excl$26 = function() {\n      var $iter = $Array_collect$excl$26.$$p, block = $iter || nil, $$27, self = this;\n\n      if ($iter) $Array_collect$excl$26.$$p = null;\n      \n      \n      if ($iter) $Array_collect$excl$26.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"collect!\"], ($$27 = function(){var self = $$27.$$s || this;\n\n        return self.$size()}, $$27.$$s = self, $$27.$$arity = 0, $$27))\n      };\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        var value = Opal.yield1(block, self[i]);\n        self[i] = value;\n      }\n    ;\n      return self;\n    }, $Array_collect$excl$26.$$arity = 0);\n    \n    function binomial_coefficient(n, k) {\n      if (n === k || k === 0) {\n        return 1;\n      }\n\n      if (k > 0 && n > k) {\n        return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k);\n      }\n\n      return 0;\n    }\n  ;\n    \n    Opal.def(self, '$combination', $Array_combination$28 = function $$combination(n) {\n      var $$29, $iter = $Array_combination$28.$$p, $yield = $iter || nil, self = this, num = nil;\n\n      if ($iter) $Array_combination$28.$$p = null;\n      \n      num = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"combination\", num], ($$29 = function(){var self = $$29.$$s || this;\n\n        return binomial_coefficient(self.length, num)}, $$29.$$s = self, $$29.$$arity = 0, $$29))\n      };\n      \n      var i, length, stack, chosen, lev, done, next;\n\n      if (num === 0) {\n        Opal.yield1($yield, [])\n      } else if (num === 1) {\n        for (i = 0, length = self.length; i < length; i++) {\n          Opal.yield1($yield, [self[i]])\n        }\n      }\n      else if (num === self.length) {\n        Opal.yield1($yield, self.slice())\n      }\n      else if (num >= 0 && num < self.length) {\n        stack = [];\n        for (i = 0; i <= num + 1; i++) {\n          stack.push(0);\n        }\n\n        chosen = [];\n        lev = 0;\n        done = false;\n        stack[0] = -1;\n\n        while (!done) {\n          chosen[lev] = self[stack[lev+1]];\n          while (lev < num - 1) {\n            lev++;\n            next = stack[lev+1] = stack[lev] + 1;\n            chosen[lev] = self[next];\n          }\n          Opal.yield1($yield, chosen.slice())\n          lev++;\n          do {\n            done = (lev === 0);\n            stack[lev]++;\n            lev--;\n          } while ( stack[lev+1] + num === self.length + lev + 1 );\n        }\n      }\n    ;\n      return self;\n    }, $Array_combination$28.$$arity = 1);\n    \n    Opal.def(self, '$repeated_combination', $Array_repeated_combination$30 = function $$repeated_combination(n) {\n      var $$31, $iter = $Array_repeated_combination$30.$$p, $yield = $iter || nil, self = this, num = nil;\n\n      if ($iter) $Array_repeated_combination$30.$$p = null;\n      \n      num = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"repeated_combination\", num], ($$31 = function(){var self = $$31.$$s || this;\n\n        return binomial_coefficient(self.length + num - 1, num);}, $$31.$$s = self, $$31.$$arity = 0, $$31))\n      };\n      \n      function iterate(max, from, buffer, self) {\n        if (buffer.length == max) {\n          var copy = buffer.slice();\n          Opal.yield1($yield, copy)\n          return;\n        }\n        for (var i = from; i < self.length; i++) {\n          buffer.push(self[i]);\n          iterate(max, i, buffer, self);\n          buffer.pop();\n        }\n      }\n\n      if (num >= 0) {\n        iterate(num, 0, [], self);\n      }\n    ;\n      return self;\n    }, $Array_repeated_combination$30.$$arity = 1);\n    \n    Opal.def(self, '$compact', $Array_compact$32 = function $$compact() {\n      var self = this;\n\n      \n      var result = [];\n\n      for (var i = 0, length = self.length, item; i < length; i++) {\n        if ((item = self[i]) !== nil) {\n          result.push(item);\n        }\n      }\n\n      return result;\n    \n    }, $Array_compact$32.$$arity = 0);\n    \n    Opal.def(self, '$compact!', $Array_compact$excl$33 = function() {\n      var self = this;\n\n      \n      var original = self.length;\n\n      for (var i = 0, length = self.length; i < length; i++) {\n        if (self[i] === nil) {\n          self.splice(i, 1);\n\n          length--;\n          i--;\n        }\n      }\n\n      return self.length === original ? nil : self;\n    \n    }, $Array_compact$excl$33.$$arity = 0);\n    \n    Opal.def(self, '$concat', $Array_concat$34 = function $$concat($a) {\n      var $post_args, others, $$35, $$36, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      others = $post_args;;\n      others = $send(others, 'map', [], ($$35 = function(other){var self = $$35.$$s || this;\n\n      \n        \n        if (other == null) {\n          other = nil;\n        };\n        other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n          return other.$to_a()\n        } else {\n          return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n        }; return nil; })();\n        if ($truthy(other['$equal?'](self))) {\n          other = other.$dup()};\n        return other;}, $$35.$$s = self, $$35.$$arity = 1, $$35));\n      $send(others, 'each', [], ($$36 = function(other){var self = $$36.$$s || this;\n\n      \n        \n        if (other == null) {\n          other = nil;\n        };\n        \n        for (var i = 0, length = other.length; i < length; i++) {\n          self.push(other[i]);\n        }\n      ;}, $$36.$$s = self, $$36.$$arity = 1, $$36));\n      return self;\n    }, $Array_concat$34.$$arity = -1);\n    \n    Opal.def(self, '$delete', $Array_delete$37 = function(object) {\n      var $iter = $Array_delete$37.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Array_delete$37.$$p = null;\n      \n      var original = self.length;\n\n      for (var i = 0, length = original; i < length; i++) {\n        if ((self[i])['$=='](object)) {\n          self.splice(i, 1);\n\n          length--;\n          i--;\n        }\n      }\n\n      if (self.length === original) {\n        if (($yield !== nil)) {\n          return Opal.yieldX($yield, []);\n        }\n        return nil;\n      }\n      return object;\n    \n    }, $Array_delete$37.$$arity = 1);\n    \n    Opal.def(self, '$delete_at', $Array_delete_at$38 = function $$delete_at(index) {\n      var self = this;\n\n      \n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n\n      if (index < 0) {\n        index += self.length;\n      }\n\n      if (index < 0 || index >= self.length) {\n        return nil;\n      }\n\n      var result = self[index];\n\n      self.splice(index, 1);\n\n      return result;\n    \n    }, $Array_delete_at$38.$$arity = 1);\n    \n    Opal.def(self, '$delete_if', $Array_delete_if$39 = function $$delete_if() {\n      var $iter = $Array_delete_if$39.$$p, block = $iter || nil, $$40, self = this;\n\n      if ($iter) $Array_delete_if$39.$$p = null;\n      \n      \n      if ($iter) $Array_delete_if$39.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"delete_if\"], ($$40 = function(){var self = $$40.$$s || this;\n\n        return self.$size()}, $$40.$$s = self, $$40.$$arity = 0, $$40))\n      };\n      \n      for (var i = 0, length = self.length, value; i < length; i++) {\n        value = block(self[i]);\n\n        if (value !== false && value !== nil) {\n          self.splice(i, 1);\n\n          length--;\n          i--;\n        }\n      }\n    ;\n      return self;\n    }, $Array_delete_if$39.$$arity = 0);\n    \n    Opal.def(self, '$dig', $Array_dig$41 = function $$dig(idx, $a) {\n      var $post_args, idxs, self = this, item = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      idxs = $post_args;;\n      item = self['$[]'](idx);\n      \n      if (item === nil || idxs.length === 0) {\n        return item;\n      }\n    ;\n      if ($truthy(item['$respond_to?'](\"dig\"))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + (item.$class()) + \" does not have #dig method\")\n      };\n      return $send(item, 'dig', Opal.to_a(idxs));\n    }, $Array_dig$41.$$arity = -2);\n    \n    Opal.def(self, '$drop', $Array_drop$42 = function $$drop(number) {\n      var self = this;\n\n      \n      if (number < 0) {\n        self.$raise($$($nesting, 'ArgumentError'))\n      }\n\n      return self.slice(number);\n    \n    }, $Array_drop$42.$$arity = 1);\n    \n    Opal.def(self, '$dup', $Array_dup$43 = function $$dup() {\n      var $iter = $Array_dup$43.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Array_dup$43.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      \n      if (self.$$class === Opal.Array &&\n          self.$$class.$allocate.$$pristine &&\n          self.$copy_instance_variables.$$pristine &&\n          self.$initialize_dup.$$pristine) {\n        return self.slice(0);\n      }\n    ;\n      return $send(self, Opal.find_super_dispatcher(self, 'dup', $Array_dup$43, false), $zuper, $iter);\n    }, $Array_dup$43.$$arity = 0);\n    \n    Opal.def(self, '$each', $Array_each$44 = function $$each() {\n      var $iter = $Array_each$44.$$p, block = $iter || nil, $$45, self = this;\n\n      if ($iter) $Array_each$44.$$p = null;\n      \n      \n      if ($iter) $Array_each$44.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each\"], ($$45 = function(){var self = $$45.$$s || this;\n\n        return self.$size()}, $$45.$$s = self, $$45.$$arity = 0, $$45))\n      };\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        var value = Opal.yield1(block, self[i]);\n      }\n    ;\n      return self;\n    }, $Array_each$44.$$arity = 0);\n    \n    Opal.def(self, '$each_index', $Array_each_index$46 = function $$each_index() {\n      var $iter = $Array_each_index$46.$$p, block = $iter || nil, $$47, self = this;\n\n      if ($iter) $Array_each_index$46.$$p = null;\n      \n      \n      if ($iter) $Array_each_index$46.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_index\"], ($$47 = function(){var self = $$47.$$s || this;\n\n        return self.$size()}, $$47.$$s = self, $$47.$$arity = 0, $$47))\n      };\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        var value = Opal.yield1(block, i);\n      }\n    ;\n      return self;\n    }, $Array_each_index$46.$$arity = 0);\n    \n    Opal.def(self, '$empty?', $Array_empty$ques$48 = function() {\n      var self = this;\n\n      return self.length === 0;\n    }, $Array_empty$ques$48.$$arity = 0);\n    \n    Opal.def(self, '$eql?', $Array_eql$ques$49 = function(other) {\n      var self = this;\n\n      \n      var recursed = {};\n\n      function _eql(array, other) {\n        var i, length, a, b;\n\n        if (!other.$$is_array) {\n          return false;\n        }\n\n        other = other.$to_a();\n\n        if (array.length !== other.length) {\n          return false;\n        }\n\n        recursed[(array).$object_id()] = true;\n\n        for (i = 0, length = array.length; i < length; i++) {\n          a = array[i];\n          b = other[i];\n          if (a.$$is_array) {\n            if (b.$$is_array && b.length !== a.length) {\n              return false;\n            }\n            if (!recursed.hasOwnProperty((a).$object_id())) {\n              if (!_eql(a, b)) {\n                return false;\n              }\n            }\n          } else {\n            if (!(a)['$eql?'](b)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return _eql(self, other);\n    \n    }, $Array_eql$ques$49.$$arity = 1);\n    \n    Opal.def(self, '$fetch', $Array_fetch$50 = function $$fetch(index, defaults) {\n      var $iter = $Array_fetch$50.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_fetch$50.$$p = null;\n      \n      \n      if ($iter) $Array_fetch$50.$$p = null;;\n      ;\n      \n      var original = index;\n\n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n\n      if (index < 0) {\n        index += self.length;\n      }\n\n      if (index >= 0 && index < self.length) {\n        return self[index];\n      }\n\n      if (block !== nil && defaults != null) {\n        self.$warn(\"warning: block supersedes default value argument\")\n      }\n\n      if (block !== nil) {\n        return block(original);\n      }\n\n      if (defaults != null) {\n        return defaults;\n      }\n\n      if (self.length === 0) {\n        self.$raise($$($nesting, 'IndexError'), \"\" + \"index \" + (original) + \" outside of array bounds: 0...0\")\n      }\n      else {\n        self.$raise($$($nesting, 'IndexError'), \"\" + \"index \" + (original) + \" outside of array bounds: -\" + (self.length) + \"...\" + (self.length));\n      }\n    ;\n    }, $Array_fetch$50.$$arity = -2);\n    \n    Opal.def(self, '$fill', $Array_fill$51 = function $$fill($a) {\n      var $iter = $Array_fill$51.$$p, block = $iter || nil, $post_args, args, $b, $c, self = this, one = nil, two = nil, obj = nil, left = nil, right = nil;\n\n      if ($iter) $Array_fill$51.$$p = null;\n      \n      \n      if ($iter) $Array_fill$51.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n            var i, length, value;;\n      if ($truthy(block)) {\n        \n        if ($truthy(args.length > 2)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (args.$length()) + \" for 0..2)\")};\n        $c = args, $b = Opal.to_ary($c), (one = ($b[0] == null ? nil : $b[0])), (two = ($b[1] == null ? nil : $b[1])), $c;\n      } else {\n        \n        if ($truthy(args.length == 0)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (0 for 1..3)\")\n        } else if ($truthy(args.length > 3)) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (args.$length()) + \" for 1..3)\")};\n        $c = args, $b = Opal.to_ary($c), (obj = ($b[0] == null ? nil : $b[0])), (one = ($b[1] == null ? nil : $b[1])), (two = ($b[2] == null ? nil : $b[2])), $c;\n      };\n      if ($truthy($$($nesting, 'Range')['$==='](one))) {\n        \n        if ($truthy(two)) {\n          self.$raise($$($nesting, 'TypeError'), \"length invalid with range\")};\n        left = $$($nesting, 'Opal').$coerce_to(one.$begin(), $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(left < 0)) {\n          left += this.length};\n        if ($truthy(left < 0)) {\n          self.$raise($$($nesting, 'RangeError'), \"\" + (one.$inspect()) + \" out of range\")};\n        right = $$($nesting, 'Opal').$coerce_to(one.$end(), $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(right < 0)) {\n          right += this.length};\n        if ($truthy(one['$exclude_end?']())) {\n        } else {\n          right += 1\n        };\n        if ($truthy(right <= left)) {\n          return self};\n      } else if ($truthy(one)) {\n        \n        left = $$($nesting, 'Opal').$coerce_to(one, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(left < 0)) {\n          left += this.length};\n        if ($truthy(left < 0)) {\n          left = 0};\n        if ($truthy(two)) {\n          \n          right = $$($nesting, 'Opal').$coerce_to(two, $$($nesting, 'Integer'), \"to_int\");\n          if ($truthy(right == 0)) {\n            return self};\n          right += left;\n        } else {\n          right = this.length\n        };\n      } else {\n        \n        left = 0;\n        right = this.length;\n      };\n      if ($truthy(left > this.length)) {\n        \n        for (i = this.length; i < right; i++) {\n          self[i] = nil;\n        }\n      };\n      if ($truthy(right > this.length)) {\n        this.length = right};\n      if ($truthy(block)) {\n        \n        for (length = this.length; left < right; left++) {\n          value = block(left);\n          self[left] = value;\n        }\n      \n      } else {\n        \n        for (length = this.length; left < right; left++) {\n          self[left] = obj;\n        }\n      \n      };\n      return self;\n    }, $Array_fill$51.$$arity = -1);\n    \n    Opal.def(self, '$first', $Array_first$52 = function $$first(count) {\n      var self = this;\n\n      \n      ;\n      \n      if (count == null) {\n        return self.length === 0 ? nil : self[0];\n      }\n\n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n\n      if (count < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\");\n      }\n\n      return self.slice(0, count);\n    ;\n    }, $Array_first$52.$$arity = -1);\n    \n    Opal.def(self, '$flatten', $Array_flatten$53 = function $$flatten(level) {\n      var self = this;\n\n      \n      ;\n      \n      function _flatten(array, level) {\n        var result = [],\n            i, length,\n            item, ary;\n\n        array = (array).$to_a();\n\n        for (i = 0, length = array.length; i < length; i++) {\n          item = array[i];\n\n          if (!$$($nesting, 'Opal')['$respond_to?'](item, \"to_ary\", true)) {\n            result.push(item);\n            continue;\n          }\n\n          ary = (item).$to_ary();\n\n          if (ary === nil) {\n            result.push(item);\n            continue;\n          }\n\n          if (!ary.$$is_array) {\n            self.$raise($$($nesting, 'TypeError'));\n          }\n\n          if (ary === self) {\n            self.$raise($$($nesting, 'ArgumentError'));\n          }\n\n          switch (level) {\n          case undefined:\n            result = result.concat(_flatten(ary));\n            break;\n          case 0:\n            result.push(ary);\n            break;\n          default:\n            result.push.apply(result, _flatten(ary, level - 1));\n          }\n        }\n        return result;\n      }\n\n      if (level !== undefined) {\n        level = $$($nesting, 'Opal').$coerce_to(level, $$($nesting, 'Integer'), \"to_int\");\n      }\n\n      return toArraySubclass(_flatten(self, level), self.$class());\n    ;\n    }, $Array_flatten$53.$$arity = -1);\n    \n    Opal.def(self, '$flatten!', $Array_flatten$excl$54 = function(level) {\n      var self = this;\n\n      \n      ;\n      \n      var flattened = self.$flatten(level);\n\n      if (self.length == flattened.length) {\n        for (var i = 0, length = self.length; i < length; i++) {\n          if (self[i] !== flattened[i]) {\n            break;\n          }\n        }\n\n        if (i == length) {\n          return nil;\n        }\n      }\n\n      self.$replace(flattened);\n    ;\n      return self;\n    }, $Array_flatten$excl$54.$$arity = -1);\n    \n    Opal.def(self, '$hash', $Array_hash$55 = function $$hash() {\n      var self = this;\n\n      \n      var top = (Opal.hash_ids === undefined),\n          result = ['A'],\n          hash_id = self.$object_id(),\n          item, i, key;\n\n      try {\n        if (top) {\n          Opal.hash_ids = Object.create(null);\n        }\n\n        // return early for recursive structures\n        if (Opal.hash_ids[hash_id]) {\n          return 'self';\n        }\n\n        for (key in Opal.hash_ids) {\n          item = Opal.hash_ids[key];\n          if (self['$eql?'](item)) {\n            return 'self';\n          }\n        }\n\n        Opal.hash_ids[hash_id] = self;\n\n        for (i = 0; i < self.length; i++) {\n          item = self[i];\n          result.push(item.$hash());\n        }\n\n        return result.join(',');\n      } finally {\n        if (top) {\n          Opal.hash_ids = undefined;\n        }\n      }\n    \n    }, $Array_hash$55.$$arity = 0);\n    \n    Opal.def(self, '$include?', $Array_include$ques$56 = function(member) {\n      var self = this;\n\n      \n      for (var i = 0, length = self.length; i < length; i++) {\n        if ((self[i])['$=='](member)) {\n          return true;\n        }\n      }\n\n      return false;\n    \n    }, $Array_include$ques$56.$$arity = 1);\n    \n    Opal.def(self, '$index', $Array_index$57 = function $$index(object) {\n      var $iter = $Array_index$57.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_index$57.$$p = null;\n      \n      \n      if ($iter) $Array_index$57.$$p = null;;\n      ;\n      \n      var i, length, value;\n\n      if (object != null && block !== nil) {\n        self.$warn(\"warning: given block not used\")\n      }\n\n      if (object != null) {\n        for (i = 0, length = self.length; i < length; i++) {\n          if ((self[i])['$=='](object)) {\n            return i;\n          }\n        }\n      }\n      else if (block !== nil) {\n        for (i = 0, length = self.length; i < length; i++) {\n          value = block(self[i]);\n\n          if (value !== false && value !== nil) {\n            return i;\n          }\n        }\n      }\n      else {\n        return self.$enum_for(\"index\");\n      }\n\n      return nil;\n    ;\n    }, $Array_index$57.$$arity = -1);\n    \n    Opal.def(self, '$insert', $Array_insert$58 = function $$insert(index, $a) {\n      var $post_args, objects, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      objects = $post_args;;\n      \n      index = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n\n      if (objects.length > 0) {\n        if (index < 0) {\n          index += self.length + 1;\n\n          if (index < 0) {\n            self.$raise($$($nesting, 'IndexError'), \"\" + (index) + \" is out of bounds\");\n          }\n        }\n        if (index > self.length) {\n          for (var i = self.length; i < index; i++) {\n            self.push(nil);\n          }\n        }\n\n        self.splice.apply(self, [index, 0].concat(objects));\n      }\n    ;\n      return self;\n    }, $Array_insert$58.$$arity = -2);\n    \n    Opal.def(self, '$inspect', $Array_inspect$59 = function $$inspect() {\n      var self = this;\n\n      \n      var result = [],\n          id     = self.$__id__();\n\n      for (var i = 0, length = self.length; i < length; i++) {\n        var item = self['$[]'](i);\n\n        if ((item).$__id__() === id) {\n          result.push('[...]');\n        }\n        else {\n          result.push((item).$inspect());\n        }\n      }\n\n      return '[' + result.join(', ') + ']';\n    \n    }, $Array_inspect$59.$$arity = 0);\n    \n    Opal.def(self, '$join', $Array_join$60 = function $$join(sep) {\n      var self = this;\n      if ($gvars[\",\"] == null) $gvars[\",\"] = nil;\n\n      \n      \n      if (sep == null) {\n        sep = nil;\n      };\n      if ($truthy(self.length === 0)) {\n        return \"\"};\n      if ($truthy(sep === nil)) {\n        sep = $gvars[\",\"]};\n      \n      var result = [];\n      var i, length, item, tmp;\n\n      for (i = 0, length = self.length; i < length; i++) {\n        item = self[i];\n\n        if ($$($nesting, 'Opal')['$respond_to?'](item, \"to_str\")) {\n          tmp = (item).$to_str();\n\n          if (tmp !== nil) {\n            result.push((tmp).$to_s());\n\n            continue;\n          }\n        }\n\n        if ($$($nesting, 'Opal')['$respond_to?'](item, \"to_ary\")) {\n          tmp = (item).$to_ary();\n\n          if (tmp === self) {\n            self.$raise($$($nesting, 'ArgumentError'));\n          }\n\n          if (tmp !== nil) {\n            result.push((tmp).$join(sep));\n\n            continue;\n          }\n        }\n\n        if ($$($nesting, 'Opal')['$respond_to?'](item, \"to_s\")) {\n          tmp = (item).$to_s();\n\n          if (tmp !== nil) {\n            result.push(tmp);\n\n            continue;\n          }\n        }\n\n        self.$raise($$($nesting, 'NoMethodError').$new(\"\" + (Opal.inspect(item)) + \" doesn't respond to #to_str, #to_ary or #to_s\", \"to_str\"));\n      }\n\n      if (sep === nil) {\n        return result.join('');\n      }\n      else {\n        return result.join($$($nesting, 'Opal')['$coerce_to!'](sep, $$($nesting, 'String'), \"to_str\").$to_s());\n      }\n    ;\n    }, $Array_join$60.$$arity = -1);\n    \n    Opal.def(self, '$keep_if', $Array_keep_if$61 = function $$keep_if() {\n      var $iter = $Array_keep_if$61.$$p, block = $iter || nil, $$62, self = this;\n\n      if ($iter) $Array_keep_if$61.$$p = null;\n      \n      \n      if ($iter) $Array_keep_if$61.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"keep_if\"], ($$62 = function(){var self = $$62.$$s || this;\n\n        return self.$size()}, $$62.$$s = self, $$62.$$arity = 0, $$62))\n      };\n      \n      for (var i = 0, length = self.length, value; i < length; i++) {\n        value = block(self[i]);\n\n        if (value === false || value === nil) {\n          self.splice(i, 1);\n\n          length--;\n          i--;\n        }\n      }\n    ;\n      return self;\n    }, $Array_keep_if$61.$$arity = 0);\n    \n    Opal.def(self, '$last', $Array_last$63 = function $$last(count) {\n      var self = this;\n\n      \n      ;\n      \n      if (count == null) {\n        return self.length === 0 ? nil : self[self.length - 1];\n      }\n\n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n\n      if (count < 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\");\n      }\n\n      if (count > self.length) {\n        count = self.length;\n      }\n\n      return self.slice(self.length - count, self.length);\n    ;\n    }, $Array_last$63.$$arity = -1);\n    \n    Opal.def(self, '$length', $Array_length$64 = function $$length() {\n      var self = this;\n\n      return self.length;\n    }, $Array_length$64.$$arity = 0);\n    Opal.alias(self, \"map\", \"collect\");\n    Opal.alias(self, \"map!\", \"collect!\");\n    \n    Opal.def(self, '$max', $Array_max$65 = function $$max(n) {\n      var $iter = $Array_max$65.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_max$65.$$p = null;\n      \n      \n      if ($iter) $Array_max$65.$$p = null;;\n      ;\n      return $send(self.$each(), 'max', [n], block.$to_proc());\n    }, $Array_max$65.$$arity = -1);\n    \n    Opal.def(self, '$min', $Array_min$66 = function $$min() {\n      var $iter = $Array_min$66.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_min$66.$$p = null;\n      \n      \n      if ($iter) $Array_min$66.$$p = null;;\n      return $send(self.$each(), 'min', [], block.$to_proc());\n    }, $Array_min$66.$$arity = 0);\n    \n    // Returns the product of from, from-1, ..., from - how_many + 1.\n    function descending_factorial(from, how_many) {\n      var count = how_many >= 0 ? 1 : 0;\n      while (how_many) {\n        count *= from;\n        from--;\n        how_many--;\n      }\n      return count;\n    }\n  ;\n    \n    Opal.def(self, '$permutation', $Array_permutation$67 = function $$permutation(num) {\n      var $iter = $Array_permutation$67.$$p, block = $iter || nil, $$68, self = this, perm = nil, used = nil;\n\n      if ($iter) $Array_permutation$67.$$p = null;\n      \n      \n      if ($iter) $Array_permutation$67.$$p = null;;\n      ;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"permutation\", num], ($$68 = function(){var self = $$68.$$s || this;\n\n        return descending_factorial(self.length, num === undefined ? self.length : num);}, $$68.$$s = self, $$68.$$arity = 0, $$68))\n      };\n      \n      var permute, offensive, output;\n\n      if (num === undefined) {\n        num = self.length;\n      }\n      else {\n        num = $$($nesting, 'Opal').$coerce_to(num, $$($nesting, 'Integer'), \"to_int\")\n      }\n\n      if (num < 0 || self.length < num) {\n        // no permutations, yield nothing\n      }\n      else if (num === 0) {\n        // exactly one permutation: the zero-length array\n        Opal.yield1(block, [])\n      }\n      else if (num === 1) {\n        // this is a special, easy case\n        for (var i = 0; i < self.length; i++) {\n          Opal.yield1(block, [self[i]])\n        }\n      }\n      else {\n        // this is the general case\n        (perm = $$($nesting, 'Array').$new(num));\n        (used = $$($nesting, 'Array').$new(self.length, false));\n\n        permute = function(num, perm, index, used, blk) {\n          self = this;\n          for(var i = 0; i < self.length; i++){\n            if(used['$[]'](i)['$!']()) {\n              perm[index] = i;\n              if(index < num - 1) {\n                used[i] = true;\n                permute.call(self, num, perm, index + 1, used, blk);\n                used[i] = false;\n              }\n              else {\n                output = [];\n                for (var j = 0; j < perm.length; j++) {\n                  output.push(self[perm[j]]);\n                }\n                Opal.yield1(blk, output);\n              }\n            }\n          }\n        }\n\n        if ((block !== nil)) {\n          // offensive (both definitions) copy.\n          offensive = self.slice();\n          permute.call(offensive, num, perm, 0, used, block);\n        }\n        else {\n          permute.call(self, num, perm, 0, used, block);\n        }\n      }\n    ;\n      return self;\n    }, $Array_permutation$67.$$arity = -1);\n    \n    Opal.def(self, '$repeated_permutation', $Array_repeated_permutation$69 = function $$repeated_permutation(n) {\n      var $$70, $iter = $Array_repeated_permutation$69.$$p, $yield = $iter || nil, self = this, num = nil;\n\n      if ($iter) $Array_repeated_permutation$69.$$p = null;\n      \n      num = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"repeated_permutation\", num], ($$70 = function(){var self = $$70.$$s || this;\n\n        if ($truthy($rb_ge(num, 0))) {\n            return self.$size()['$**'](num)\n          } else {\n            return 0\n          }}, $$70.$$s = self, $$70.$$arity = 0, $$70))\n      };\n      \n      function iterate(max, buffer, self) {\n        if (buffer.length == max) {\n          var copy = buffer.slice();\n          Opal.yield1($yield, copy)\n          return;\n        }\n        for (var i = 0; i < self.length; i++) {\n          buffer.push(self[i]);\n          iterate(max, buffer, self);\n          buffer.pop();\n        }\n      }\n\n      iterate(num, [], self.slice());\n    ;\n      return self;\n    }, $Array_repeated_permutation$69.$$arity = 1);\n    \n    Opal.def(self, '$pop', $Array_pop$71 = function $$pop(count) {\n      var self = this;\n\n      \n      ;\n      if ($truthy(count === undefined)) {\n        \n        if ($truthy(self.length === 0)) {\n          return nil};\n        return self.pop();};\n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(count < 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\")};\n      if ($truthy(self.length === 0)) {\n        return []};\n      if ($truthy(count > self.length)) {\n        return self.splice(0, self.length);\n      } else {\n        return self.splice(self.length - count, self.length);\n      };\n    }, $Array_pop$71.$$arity = -1);\n    \n    Opal.def(self, '$product', $Array_product$72 = function $$product($a) {\n      var $iter = $Array_product$72.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Array_product$72.$$p = null;\n      \n      \n      if ($iter) $Array_product$72.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var result = (block !== nil) ? null : [],\n          n = args.length + 1,\n          counters = new Array(n),\n          lengths  = new Array(n),\n          arrays   = new Array(n),\n          i, m, subarray, len, resultlen = 1;\n\n      arrays[0] = self;\n      for (i = 1; i < n; i++) {\n        arrays[i] = $$($nesting, 'Opal').$coerce_to(args[i - 1], $$($nesting, 'Array'), \"to_ary\");\n      }\n\n      for (i = 0; i < n; i++) {\n        len = arrays[i].length;\n        if (len === 0) {\n          return result || self;\n        }\n        resultlen *= len;\n        if (resultlen > 2147483647) {\n          self.$raise($$($nesting, 'RangeError'), \"too big to product\")\n        }\n        lengths[i] = len;\n        counters[i] = 0;\n      }\n\n      outer_loop: for (;;) {\n        subarray = [];\n        for (i = 0; i < n; i++) {\n          subarray.push(arrays[i][counters[i]]);\n        }\n        if (result) {\n          result.push(subarray);\n        } else {\n          Opal.yield1(block, subarray)\n        }\n        m = n - 1;\n        counters[m]++;\n        while (counters[m] === lengths[m]) {\n          counters[m] = 0;\n          if (--m < 0) break outer_loop;\n          counters[m]++;\n        }\n      }\n\n      return result || self;\n    ;\n    }, $Array_product$72.$$arity = -1);\n    \n    Opal.def(self, '$push', $Array_push$73 = function $$push($a) {\n      var $post_args, objects, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      objects = $post_args;;\n      \n      for (var i = 0, length = objects.length; i < length; i++) {\n        self.push(objects[i]);\n      }\n    ;\n      return self;\n    }, $Array_push$73.$$arity = -1);\n    Opal.alias(self, \"append\", \"push\");\n    \n    Opal.def(self, '$rassoc', $Array_rassoc$74 = function $$rassoc(object) {\n      var self = this;\n\n      \n      for (var i = 0, length = self.length, item; i < length; i++) {\n        item = self[i];\n\n        if (item.length && item[1] !== undefined) {\n          if ((item[1])['$=='](object)) {\n            return item;\n          }\n        }\n      }\n\n      return nil;\n    \n    }, $Array_rassoc$74.$$arity = 1);\n    \n    Opal.def(self, '$reject', $Array_reject$75 = function $$reject() {\n      var $iter = $Array_reject$75.$$p, block = $iter || nil, $$76, self = this;\n\n      if ($iter) $Array_reject$75.$$p = null;\n      \n      \n      if ($iter) $Array_reject$75.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject\"], ($$76 = function(){var self = $$76.$$s || this;\n\n        return self.$size()}, $$76.$$s = self, $$76.$$arity = 0, $$76))\n      };\n      \n      var result = [];\n\n      for (var i = 0, length = self.length, value; i < length; i++) {\n        value = block(self[i]);\n\n        if (value === false || value === nil) {\n          result.push(self[i]);\n        }\n      }\n      return result;\n    ;\n    }, $Array_reject$75.$$arity = 0);\n    \n    Opal.def(self, '$reject!', $Array_reject$excl$77 = function() {\n      var $iter = $Array_reject$excl$77.$$p, block = $iter || nil, $$78, self = this, original = nil;\n\n      if ($iter) $Array_reject$excl$77.$$p = null;\n      \n      \n      if ($iter) $Array_reject$excl$77.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject!\"], ($$78 = function(){var self = $$78.$$s || this;\n\n        return self.$size()}, $$78.$$s = self, $$78.$$arity = 0, $$78))\n      };\n      original = self.$length();\n      $send(self, 'delete_if', [], block.$to_proc());\n      if (self.$length()['$=='](original)) {\n        return nil\n      } else {\n        return self\n      };\n    }, $Array_reject$excl$77.$$arity = 0);\n    \n    Opal.def(self, '$replace', $Array_replace$79 = function $$replace(other) {\n      var self = this;\n\n      \n      other = (function() {if ($truthy($$($nesting, 'Array')['$==='](other))) {\n        return other.$to_a()\n      } else {\n        return $$($nesting, 'Opal').$coerce_to(other, $$($nesting, 'Array'), \"to_ary\").$to_a()\n      }; return nil; })();\n      \n      self.splice(0, self.length);\n      self.push.apply(self, other);\n    ;\n      return self;\n    }, $Array_replace$79.$$arity = 1);\n    \n    Opal.def(self, '$reverse', $Array_reverse$80 = function $$reverse() {\n      var self = this;\n\n      return self.slice(0).reverse();\n    }, $Array_reverse$80.$$arity = 0);\n    \n    Opal.def(self, '$reverse!', $Array_reverse$excl$81 = function() {\n      var self = this;\n\n      return self.reverse();\n    }, $Array_reverse$excl$81.$$arity = 0);\n    \n    Opal.def(self, '$reverse_each', $Array_reverse_each$82 = function $$reverse_each() {\n      var $iter = $Array_reverse_each$82.$$p, block = $iter || nil, $$83, self = this;\n\n      if ($iter) $Array_reverse_each$82.$$p = null;\n      \n      \n      if ($iter) $Array_reverse_each$82.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"reverse_each\"], ($$83 = function(){var self = $$83.$$s || this;\n\n        return self.$size()}, $$83.$$s = self, $$83.$$arity = 0, $$83))\n      };\n      $send(self.$reverse(), 'each', [], block.$to_proc());\n      return self;\n    }, $Array_reverse_each$82.$$arity = 0);\n    \n    Opal.def(self, '$rindex', $Array_rindex$84 = function $$rindex(object) {\n      var $iter = $Array_rindex$84.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_rindex$84.$$p = null;\n      \n      \n      if ($iter) $Array_rindex$84.$$p = null;;\n      ;\n      \n      var i, value;\n\n      if (object != null && block !== nil) {\n        self.$warn(\"warning: given block not used\")\n      }\n\n      if (object != null) {\n        for (i = self.length - 1; i >= 0; i--) {\n          if (i >= self.length) {\n            break;\n          }\n          if ((self[i])['$=='](object)) {\n            return i;\n          }\n        }\n      }\n      else if (block !== nil) {\n        for (i = self.length - 1; i >= 0; i--) {\n          if (i >= self.length) {\n            break;\n          }\n\n          value = block(self[i]);\n\n          if (value !== false && value !== nil) {\n            return i;\n          }\n        }\n      }\n      else if (object == null) {\n        return self.$enum_for(\"rindex\");\n      }\n\n      return nil;\n    ;\n    }, $Array_rindex$84.$$arity = -1);\n    \n    Opal.def(self, '$rotate', $Array_rotate$85 = function $$rotate(n) {\n      var self = this;\n\n      \n      \n      if (n == null) {\n        n = 1;\n      };\n      n = $$($nesting, 'Opal').$coerce_to(n, $$($nesting, 'Integer'), \"to_int\");\n      \n      var ary, idx, firstPart, lastPart;\n\n      if (self.length === 1) {\n        return self.slice();\n      }\n      if (self.length === 0) {\n        return [];\n      }\n\n      ary = self.slice();\n      idx = n % ary.length;\n\n      firstPart = ary.slice(idx);\n      lastPart = ary.slice(0, idx);\n      return firstPart.concat(lastPart);\n    ;\n    }, $Array_rotate$85.$$arity = -1);\n    \n    Opal.def(self, '$rotate!', $Array_rotate$excl$86 = function(cnt) {\n      var self = this, ary = nil;\n\n      \n      \n      if (cnt == null) {\n        cnt = 1;\n      };\n      \n      if (self.length === 0 || self.length === 1) {\n        return self;\n      }\n    ;\n      cnt = $$($nesting, 'Opal').$coerce_to(cnt, $$($nesting, 'Integer'), \"to_int\");\n      ary = self.$rotate(cnt);\n      return self.$replace(ary);\n    }, $Array_rotate$excl$86.$$arity = -1);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'SampleRandom');\n\n      var $nesting = [self].concat($parent_nesting), $SampleRandom_initialize$87, $SampleRandom_rand$88;\n\n      self.$$prototype.rng = nil;\n      \n      \n      Opal.def(self, '$initialize', $SampleRandom_initialize$87 = function $$initialize(rng) {\n        var self = this;\n\n        return (self.rng = rng)\n      }, $SampleRandom_initialize$87.$$arity = 1);\n      return (Opal.def(self, '$rand', $SampleRandom_rand$88 = function $$rand(size) {\n        var self = this, random = nil;\n\n        \n        random = $$($nesting, 'Opal').$coerce_to(self.rng.$rand(size), $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy(random < 0)) {\n          self.$raise($$($nesting, 'RangeError'), \"random value must be >= 0\")};\n        if ($truthy(random < size)) {\n        } else {\n          self.$raise($$($nesting, 'RangeError'), \"random value must be less than Array size\")\n        };\n        return random;\n      }, $SampleRandom_rand$88.$$arity = 1), nil) && 'rand';\n    })($nesting[0], null, $nesting);\n    \n    Opal.def(self, '$sample', $Array_sample$89 = function $$sample(count, options) {\n      var $a, self = this, o = nil, rng = nil;\n\n      \n      ;\n      ;\n      if ($truthy(count === undefined)) {\n        return self.$at($$($nesting, 'Kernel').$rand(self.length))};\n      if ($truthy(options === undefined)) {\n        if ($truthy((o = $$($nesting, 'Opal')['$coerce_to?'](count, $$($nesting, 'Hash'), \"to_hash\")))) {\n          \n          options = o;\n          count = nil;\n        } else {\n          \n          options = nil;\n          count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n        }\n      } else {\n        \n        count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n        options = $$($nesting, 'Opal').$coerce_to(options, $$($nesting, 'Hash'), \"to_hash\");\n      };\n      if ($truthy(($truthy($a = count) ? count < 0 : $a))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"count must be greater than 0\")};\n      if ($truthy(options)) {\n        rng = options['$[]'](\"random\")};\n      rng = (function() {if ($truthy(($truthy($a = rng) ? rng['$respond_to?'](\"rand\") : $a))) {\n        return $$($nesting, 'SampleRandom').$new(rng)\n      } else {\n        return $$($nesting, 'Kernel')\n      }; return nil; })();\n      if ($truthy(count)) {\n      } else {\n        return self[rng.$rand(self.length)]\n      };\n      \n\n      var abandon, spin, result, i, j, k, targetIndex, oldValue;\n\n      if (count > self.length) {\n        count = self.length;\n      }\n\n      switch (count) {\n        case 0:\n          return [];\n          break;\n        case 1:\n          return [self[rng.$rand(self.length)]];\n          break;\n        case 2:\n          i = rng.$rand(self.length);\n          j = rng.$rand(self.length);\n          if (i === j) {\n            j = i === 0 ? i + 1 : i - 1;\n          }\n          return [self[i], self[j]];\n          break;\n        default:\n          if (self.length / count > 3) {\n            abandon = false;\n            spin = 0;\n\n            result = $$($nesting, 'Array').$new(count);\n            i = 1;\n\n            result[0] = rng.$rand(self.length);\n            while (i < count) {\n              k = rng.$rand(self.length);\n              j = 0;\n\n              while (j < i) {\n                while (k === result[j]) {\n                  spin++;\n                  if (spin > 100) {\n                    abandon = true;\n                    break;\n                  }\n                  k = rng.$rand(self.length);\n                }\n                if (abandon) { break; }\n\n                j++;\n              }\n\n              if (abandon) { break; }\n\n              result[i] = k;\n\n              i++;\n            }\n\n            if (!abandon) {\n              i = 0;\n              while (i < count) {\n                result[i] = self[result[i]];\n                i++;\n              }\n\n              return result;\n            }\n          }\n\n          result = self.slice();\n\n          for (var c = 0; c < count; c++) {\n            targetIndex = rng.$rand(self.length);\n            oldValue = result[c];\n            result[c] = result[targetIndex];\n            result[targetIndex] = oldValue;\n          }\n\n          return count === self.length ? result : (result)['$[]'](0, count);\n      }\n    ;\n    }, $Array_sample$89.$$arity = -1);\n    \n    Opal.def(self, '$select', $Array_select$90 = function $$select() {\n      var $iter = $Array_select$90.$$p, block = $iter || nil, $$91, self = this;\n\n      if ($iter) $Array_select$90.$$p = null;\n      \n      \n      if ($iter) $Array_select$90.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"select\"], ($$91 = function(){var self = $$91.$$s || this;\n\n        return self.$size()}, $$91.$$s = self, $$91.$$arity = 0, $$91))\n      };\n      \n      var result = [];\n\n      for (var i = 0, length = self.length, item, value; i < length; i++) {\n        item = self[i];\n\n        value = Opal.yield1(block, item);\n\n        if (Opal.truthy(value)) {\n          result.push(item);\n        }\n      }\n\n      return result;\n    ;\n    }, $Array_select$90.$$arity = 0);\n    \n    Opal.def(self, '$select!', $Array_select$excl$92 = function() {\n      var $iter = $Array_select$excl$92.$$p, block = $iter || nil, $$93, self = this;\n\n      if ($iter) $Array_select$excl$92.$$p = null;\n      \n      \n      if ($iter) $Array_select$excl$92.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"select!\"], ($$93 = function(){var self = $$93.$$s || this;\n\n        return self.$size()}, $$93.$$s = self, $$93.$$arity = 0, $$93))\n      };\n      \n      var original = self.length;\n      $send(self, 'keep_if', [], block.$to_proc());\n      return self.length === original ? nil : self;\n    ;\n    }, $Array_select$excl$92.$$arity = 0);\n    \n    Opal.def(self, '$shift', $Array_shift$94 = function $$shift(count) {\n      var self = this;\n\n      \n      ;\n      if ($truthy(count === undefined)) {\n        \n        if ($truthy(self.length === 0)) {\n          return nil};\n        return shiftNoArg(self);};\n      count = $$($nesting, 'Opal').$coerce_to(count, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(count < 0)) {\n        self.$raise($$($nesting, 'ArgumentError'), \"negative array size\")};\n      if ($truthy(self.length === 0)) {\n        return []};\n      return self.splice(0, count);;\n    }, $Array_shift$94.$$arity = -1);\n    Opal.alias(self, \"size\", \"length\");\n    \n    Opal.def(self, '$shuffle', $Array_shuffle$95 = function $$shuffle(rng) {\n      var self = this;\n\n      \n      ;\n      return self.$dup().$to_a()['$shuffle!'](rng);\n    }, $Array_shuffle$95.$$arity = -1);\n    \n    Opal.def(self, '$shuffle!', $Array_shuffle$excl$96 = function(rng) {\n      var self = this;\n\n      \n      ;\n      \n      var randgen, i = self.length, j, tmp;\n\n      if (rng !== undefined) {\n        rng = $$($nesting, 'Opal')['$coerce_to?'](rng, $$($nesting, 'Hash'), \"to_hash\");\n\n        if (rng !== nil) {\n          rng = rng['$[]'](\"random\");\n\n          if (rng !== nil && rng['$respond_to?'](\"rand\")) {\n            randgen = rng;\n          }\n        }\n      }\n\n      while (i) {\n        if (randgen) {\n          j = randgen.$rand(i).$to_int();\n\n          if (j < 0) {\n            self.$raise($$($nesting, 'RangeError'), \"\" + \"random number too small \" + (j))\n          }\n\n          if (j >= i) {\n            self.$raise($$($nesting, 'RangeError'), \"\" + \"random number too big \" + (j))\n          }\n        }\n        else {\n          j = self.$rand(i);\n        }\n\n        tmp = self[--i];\n        self[i] = self[j];\n        self[j] = tmp;\n      }\n\n      return self;\n    ;\n    }, $Array_shuffle$excl$96.$$arity = -1);\n    Opal.alias(self, \"slice\", \"[]\");\n    \n    Opal.def(self, '$slice!', $Array_slice$excl$97 = function(index, length) {\n      var self = this, result = nil, range = nil, range_start = nil, range_end = nil, start = nil;\n\n      \n      ;\n      result = nil;\n      if ($truthy(length === undefined)) {\n        if ($truthy($$($nesting, 'Range')['$==='](index))) {\n          \n          range = index;\n          result = self['$[]'](range);\n          range_start = $$($nesting, 'Opal').$coerce_to(range.$begin(), $$($nesting, 'Integer'), \"to_int\");\n          range_end = $$($nesting, 'Opal').$coerce_to(range.$end(), $$($nesting, 'Integer'), \"to_int\");\n          \n          if (range_start < 0) {\n            range_start += self.length;\n          }\n\n          if (range_end < 0) {\n            range_end += self.length;\n          } else if (range_end >= self.length) {\n            range_end = self.length - 1;\n            if (range.excl) {\n              range_end += 1;\n            }\n          }\n\n          var range_length = range_end - range_start;\n          if (range.excl) {\n            range_end -= 1;\n          } else {\n            range_length += 1;\n          }\n\n          if (range_start < self.length && range_start >= 0 && range_end < self.length && range_end >= 0 && range_length > 0) {\n            self.splice(range_start, range_length);\n          }\n        ;\n        } else {\n          \n          start = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n          \n          if (start < 0) {\n            start += self.length;\n          }\n\n          if (start < 0 || start >= self.length) {\n            return nil;\n          }\n\n          result = self[start];\n\n          if (start === 0) {\n            self.shift();\n          } else {\n            self.splice(start, 1);\n          }\n        ;\n        }\n      } else {\n        \n        start = $$($nesting, 'Opal').$coerce_to(index, $$($nesting, 'Integer'), \"to_int\");\n        length = $$($nesting, 'Opal').$coerce_to(length, $$($nesting, 'Integer'), \"to_int\");\n        \n        if (length < 0) {\n          return nil;\n        }\n\n        var end = start + length;\n\n        result = self['$[]'](start, length);\n\n        if (start < 0) {\n          start += self.length;\n        }\n\n        if (start + length > self.length) {\n          length = self.length - start;\n        }\n\n        if (start < self.length && start >= 0) {\n          self.splice(start, length);\n        }\n      ;\n      };\n      return result;\n    }, $Array_slice$excl$97.$$arity = -2);\n    \n    Opal.def(self, '$sort', $Array_sort$98 = function $$sort() {\n      var $iter = $Array_sort$98.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_sort$98.$$p = null;\n      \n      \n      if ($iter) $Array_sort$98.$$p = null;;\n      if ($truthy(self.length > 1)) {\n      } else {\n        return self\n      };\n      \n      if (block === nil) {\n        block = function(a, b) {\n          return (a)['$<=>'](b);\n        };\n      }\n\n      return self.slice().sort(function(x, y) {\n        var ret = block(x, y);\n\n        if (ret === nil) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + ((x).$inspect()) + \" with \" + ((y).$inspect()) + \" failed\");\n        }\n\n        return $rb_gt(ret, 0) ? 1 : ($rb_lt(ret, 0) ? -1 : 0);\n      });\n    ;\n    }, $Array_sort$98.$$arity = 0);\n    \n    Opal.def(self, '$sort!', $Array_sort$excl$99 = function() {\n      var $iter = $Array_sort$excl$99.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_sort$excl$99.$$p = null;\n      \n      \n      if ($iter) $Array_sort$excl$99.$$p = null;;\n      \n      var result;\n\n      if ((block !== nil)) {\n        result = $send((self.slice()), 'sort', [], block.$to_proc());\n      }\n      else {\n        result = (self.slice()).$sort();\n      }\n\n      self.length = 0;\n      for(var i = 0, length = result.length; i < length; i++) {\n        self.push(result[i]);\n      }\n\n      return self;\n    ;\n    }, $Array_sort$excl$99.$$arity = 0);\n    \n    Opal.def(self, '$sort_by!', $Array_sort_by$excl$100 = function() {\n      var $iter = $Array_sort_by$excl$100.$$p, block = $iter || nil, $$101, self = this;\n\n      if ($iter) $Array_sort_by$excl$100.$$p = null;\n      \n      \n      if ($iter) $Array_sort_by$excl$100.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"sort_by!\"], ($$101 = function(){var self = $$101.$$s || this;\n\n        return self.$size()}, $$101.$$s = self, $$101.$$arity = 0, $$101))\n      };\n      return self.$replace($send(self, 'sort_by', [], block.$to_proc()));\n    }, $Array_sort_by$excl$100.$$arity = 0);\n    \n    Opal.def(self, '$take', $Array_take$102 = function $$take(count) {\n      var self = this;\n\n      \n      if (count < 0) {\n        self.$raise($$($nesting, 'ArgumentError'));\n      }\n\n      return self.slice(0, count);\n    \n    }, $Array_take$102.$$arity = 1);\n    \n    Opal.def(self, '$take_while', $Array_take_while$103 = function $$take_while() {\n      var $iter = $Array_take_while$103.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_take_while$103.$$p = null;\n      \n      \n      if ($iter) $Array_take_while$103.$$p = null;;\n      \n      var result = [];\n\n      for (var i = 0, length = self.length, item, value; i < length; i++) {\n        item = self[i];\n\n        value = block(item);\n\n        if (value === false || value === nil) {\n          return result;\n        }\n\n        result.push(item);\n      }\n\n      return result;\n    ;\n    }, $Array_take_while$103.$$arity = 0);\n    \n    Opal.def(self, '$to_a', $Array_to_a$104 = function $$to_a() {\n      var self = this;\n\n      return self\n    }, $Array_to_a$104.$$arity = 0);\n    Opal.alias(self, \"to_ary\", \"to_a\");\n    \n    Opal.def(self, '$to_h', $Array_to_h$105 = function $$to_h() {\n      var self = this;\n\n      \n      var i, len = self.length, ary, key, val, hash = $hash2([], {});\n\n      for (i = 0; i < len; i++) {\n        ary = $$($nesting, 'Opal')['$coerce_to?'](self[i], $$($nesting, 'Array'), \"to_ary\");\n        if (!ary.$$is_array) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"wrong element type \" + ((ary).$class()) + \" at \" + (i) + \" (expected array)\")\n        }\n        if (ary.length !== 2) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong array length at \" + (i) + \" (expected 2, was \" + ((ary).$length()) + \")\")\n        }\n        key = ary[0];\n        val = ary[1];\n        Opal.hash_put(hash, key, val);\n      }\n\n      return hash;\n    \n    }, $Array_to_h$105.$$arity = 0);\n    Opal.alias(self, \"to_s\", \"inspect\");\n    \n    Opal.def(self, '$transpose', $Array_transpose$106 = function $$transpose() {\n      var $$107, self = this, result = nil, max = nil;\n\n      \n      if ($truthy(self['$empty?']())) {\n        return []};\n      result = [];\n      max = nil;\n      $send(self, 'each', [], ($$107 = function(row){var self = $$107.$$s || this, $a, $$108;\n\n      \n        \n        if (row == null) {\n          row = nil;\n        };\n        row = (function() {if ($truthy($$($nesting, 'Array')['$==='](row))) {\n          return row.$to_a()\n        } else {\n          return $$($nesting, 'Opal').$coerce_to(row, $$($nesting, 'Array'), \"to_ary\").$to_a()\n        }; return nil; })();\n        max = ($truthy($a = max) ? $a : row.length);\n        if ($truthy((row.length)['$!='](max))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"element size differs (\" + (row.length) + \" should be \" + (max) + \")\")};\n        return $send((row.length), 'times', [], ($$108 = function(i){var self = $$108.$$s || this, $b, entry = nil, $writer = nil;\n\n        \n          \n          if (i == null) {\n            i = nil;\n          };\n          entry = ($truthy($b = result['$[]'](i)) ? $b : (($writer = [i, []]), $send(result, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          return entry['$<<'](row.$at(i));}, $$108.$$s = self, $$108.$$arity = 1, $$108));}, $$107.$$s = self, $$107.$$arity = 1, $$107));\n      return result;\n    }, $Array_transpose$106.$$arity = 0);\n    \n    Opal.def(self, '$uniq', $Array_uniq$109 = function $$uniq() {\n      var $iter = $Array_uniq$109.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_uniq$109.$$p = null;\n      \n      \n      if ($iter) $Array_uniq$109.$$p = null;;\n      \n      var hash = $hash2([], {}), i, length, item, key;\n\n      if (block === nil) {\n        for (i = 0, length = self.length; i < length; i++) {\n          item = self[i];\n          if (Opal.hash_get(hash, item) === undefined) {\n            Opal.hash_put(hash, item, item);\n          }\n        }\n      }\n      else {\n        for (i = 0, length = self.length; i < length; i++) {\n          item = self[i];\n          key = Opal.yield1(block, item);\n          if (Opal.hash_get(hash, key) === undefined) {\n            Opal.hash_put(hash, key, item);\n          }\n        }\n      }\n\n      return toArraySubclass((hash).$values(), self.$class());\n    ;\n    }, $Array_uniq$109.$$arity = 0);\n    \n    Opal.def(self, '$uniq!', $Array_uniq$excl$110 = function() {\n      var $iter = $Array_uniq$excl$110.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Array_uniq$excl$110.$$p = null;\n      \n      \n      if ($iter) $Array_uniq$excl$110.$$p = null;;\n      \n      var original_length = self.length, hash = $hash2([], {}), i, length, item, key;\n\n      for (i = 0, length = original_length; i < length; i++) {\n        item = self[i];\n        key = (block === nil ? item : Opal.yield1(block, item));\n\n        if (Opal.hash_get(hash, key) === undefined) {\n          Opal.hash_put(hash, key, item);\n          continue;\n        }\n\n        self.splice(i, 1);\n        length--;\n        i--;\n      }\n\n      return self.length === original_length ? nil : self;\n    ;\n    }, $Array_uniq$excl$110.$$arity = 0);\n    \n    Opal.def(self, '$unshift', $Array_unshift$111 = function $$unshift($a) {\n      var $post_args, objects, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      objects = $post_args;;\n      \n      for (var i = objects.length - 1; i >= 0; i--) {\n        self.unshift(objects[i]);\n      }\n    ;\n      return self;\n    }, $Array_unshift$111.$$arity = -1);\n    Opal.alias(self, \"prepend\", \"unshift\");\n    \n    Opal.def(self, '$values_at', $Array_values_at$112 = function $$values_at($a) {\n      var $post_args, args, $$113, self = this, out = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      out = [];\n      $send(args, 'each', [], ($$113 = function(elem){var self = $$113.$$s || this, $$114, finish = nil, start = nil, i = nil;\n\n      \n        \n        if (elem == null) {\n          elem = nil;\n        };\n        if ($truthy(elem['$is_a?']($$($nesting, 'Range')))) {\n          \n          finish = $$($nesting, 'Opal').$coerce_to(elem.$last(), $$($nesting, 'Integer'), \"to_int\");\n          start = $$($nesting, 'Opal').$coerce_to(elem.$first(), $$($nesting, 'Integer'), \"to_int\");\n          \n          if (start < 0) {\n            start = start + self.length;\n            return nil;;\n          }\n        ;\n          \n          if (finish < 0) {\n            finish = finish + self.length;\n          }\n          if (elem['$exclude_end?']()) {\n            finish--;\n          }\n          if (finish < start) {\n            return nil;;\n          }\n        ;\n          return $send(start, 'upto', [finish], ($$114 = function(i){var self = $$114.$$s || this;\n\n          \n            \n            if (i == null) {\n              i = nil;\n            };\n            return out['$<<'](self.$at(i));}, $$114.$$s = self, $$114.$$arity = 1, $$114));\n        } else {\n          \n          i = $$($nesting, 'Opal').$coerce_to(elem, $$($nesting, 'Integer'), \"to_int\");\n          return out['$<<'](self.$at(i));\n        };}, $$113.$$s = self, $$113.$$arity = 1, $$113));\n      return out;\n    }, $Array_values_at$112.$$arity = -1);\n    \n    Opal.def(self, '$zip', $Array_zip$115 = function $$zip($a) {\n      var $iter = $Array_zip$115.$$p, block = $iter || nil, $post_args, others, $b, self = this;\n\n      if ($iter) $Array_zip$115.$$p = null;\n      \n      \n      if ($iter) $Array_zip$115.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      others = $post_args;;\n      \n      var result = [], size = self.length, part, o, i, j, jj;\n\n      for (j = 0, jj = others.length; j < jj; j++) {\n        o = others[j];\n        if (o.$$is_array) {\n          continue;\n        }\n        if (o.$$is_enumerator) {\n          if (o.$size() === Infinity) {\n            others[j] = o.$take(size);\n          } else {\n            others[j] = o.$to_a();\n          }\n          continue;\n        }\n        others[j] = ($truthy($b = $$($nesting, 'Opal')['$coerce_to?'](o, $$($nesting, 'Array'), \"to_ary\")) ? $b : $$($nesting, 'Opal')['$coerce_to!'](o, $$($nesting, 'Enumerator'), \"each\")).$to_a();\n      }\n\n      for (i = 0; i < size; i++) {\n        part = [self[i]];\n\n        for (j = 0, jj = others.length; j < jj; j++) {\n          o = others[j][i];\n\n          if (o == null) {\n            o = nil;\n          }\n\n          part[j + 1] = o;\n        }\n\n        result[i] = part;\n      }\n\n      if (block !== nil) {\n        for (i = 0; i < size; i++) {\n          block(result[i]);\n        }\n\n        return nil;\n      }\n\n      return result;\n    ;\n    }, $Array_zip$115.$$arity = -1);\n    Opal.defs(self, '$inherited', $Array_inherited$116 = function $$inherited(klass) {\n      var self = this;\n\n      \n      klass.$$prototype.$to_a = function() {\n        return this.slice(0, this.length);\n      }\n    \n    }, $Array_inherited$116.$$arity = 1);\n    \n    Opal.def(self, '$instance_variables', $Array_instance_variables$117 = function $$instance_variables() {\n      var $$118, $iter = $Array_instance_variables$117.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Array_instance_variables$117.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      return $send($send(self, Opal.find_super_dispatcher(self, 'instance_variables', $Array_instance_variables$117, false), $zuper, $iter), 'reject', [], ($$118 = function(ivar){var self = $$118.$$s || this, $a;\n\n      \n        \n        if (ivar == null) {\n          ivar = nil;\n        };\n        return ($truthy($a = /^@\\d+$/.test(ivar)) ? $a : ivar['$=='](\"@length\"));}, $$118.$$s = self, $$118.$$arity = 1, $$118))\n    }, $Array_instance_variables$117.$$arity = 0);\n    $$($nesting, 'Opal').$pristine(self.$singleton_class(), \"allocate\");\n    $$($nesting, 'Opal').$pristine(self, \"copy_instance_variables\", \"initialize_dup\");\n    return (Opal.def(self, '$pack', $Array_pack$119 = function $$pack($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      return self.$raise(\"To use Array#pack, you must first require 'corelib/array/pack'.\");\n    }, $Array_pack$119.$$arity = -1), nil) && 'pack';\n  })($nesting[0], Array, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/hash\"] = function(Opal) {\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$require', '$include', '$coerce_to?', '$[]', '$merge!', '$allocate', '$raise', '$coerce_to!', '$each', '$fetch', '$>=', '$>', '$==', '$compare_by_identity', '$lambda?', '$abs', '$arity', '$enum_for', '$size', '$respond_to?', '$class', '$dig', '$new', '$inspect', '$map', '$to_proc', '$flatten', '$eql?', '$default', '$dup', '$default_proc', '$default_proc=', '$-', '$default=', '$proc']);\n  \n  self.$require(\"corelib/enumerable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Hash');\n\n    var $nesting = [self].concat($parent_nesting), $Hash_$$$1, $Hash_allocate$2, $Hash_try_convert$3, $Hash_initialize$4, $Hash_$eq_eq$5, $Hash_$gt_eq$6, $Hash_$gt$8, $Hash_$lt$9, $Hash_$lt_eq$10, $Hash_$$$11, $Hash_$$$eq$12, $Hash_assoc$13, $Hash_clear$14, $Hash_clone$15, $Hash_compact$16, $Hash_compact$excl$17, $Hash_compare_by_identity$18, $Hash_compare_by_identity$ques$19, $Hash_default$20, $Hash_default$eq$21, $Hash_default_proc$22, $Hash_default_proc$eq$23, $Hash_delete$24, $Hash_delete_if$25, $Hash_dig$27, $Hash_each$28, $Hash_each_key$30, $Hash_each_value$32, $Hash_empty$ques$34, $Hash_fetch$35, $Hash_fetch_values$36, $Hash_flatten$38, $Hash_has_key$ques$39, $Hash_has_value$ques$40, $Hash_hash$41, $Hash_index$42, $Hash_indexes$43, $Hash_inspect$44, $Hash_invert$45, $Hash_keep_if$46, $Hash_keys$48, $Hash_length$49, $Hash_merge$50, $Hash_merge$excl$51, $Hash_rassoc$52, $Hash_rehash$53, $Hash_reject$54, $Hash_reject$excl$56, $Hash_replace$58, $Hash_select$59, $Hash_select$excl$61, $Hash_shift$63, $Hash_slice$64, $Hash_to_a$65, $Hash_to_h$66, $Hash_to_hash$67, $Hash_to_proc$68, $Hash_transform_keys$70, $Hash_transform_keys$excl$72, $Hash_transform_values$74, $Hash_transform_values$excl$76, $Hash_values$78;\n\n    \n    self.$include($$($nesting, 'Enumerable'));\n    self.$$prototype.$$is_hash = true;\n    Opal.defs(self, '$[]', $Hash_$$$1 = function($a) {\n      var $post_args, argv, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      argv = $post_args;;\n      \n      var hash, argc = argv.length, i;\n\n      if (argc === 1) {\n        hash = $$($nesting, 'Opal')['$coerce_to?'](argv['$[]'](0), $$($nesting, 'Hash'), \"to_hash\");\n        if (hash !== nil) {\n          return self.$allocate()['$merge!'](hash);\n        }\n\n        argv = $$($nesting, 'Opal')['$coerce_to?'](argv['$[]'](0), $$($nesting, 'Array'), \"to_ary\");\n        if (argv === nil) {\n          self.$raise($$($nesting, 'ArgumentError'), \"odd number of arguments for Hash\")\n        }\n\n        argc = argv.length;\n        hash = self.$allocate();\n\n        for (i = 0; i < argc; i++) {\n          if (!argv[i].$$is_array) continue;\n          switch(argv[i].length) {\n          case 1:\n            hash.$store(argv[i][0], nil);\n            break;\n          case 2:\n            hash.$store(argv[i][0], argv[i][1]);\n            break;\n          default:\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid number of elements (\" + (argv[i].length) + \" for 1..2)\")\n          }\n        }\n\n        return hash;\n      }\n\n      if (argc % 2 !== 0) {\n        self.$raise($$($nesting, 'ArgumentError'), \"odd number of arguments for Hash\")\n      }\n\n      hash = self.$allocate();\n\n      for (i = 0; i < argc; i += 2) {\n        hash.$store(argv[i], argv[i + 1]);\n      }\n\n      return hash;\n    ;\n    }, $Hash_$$$1.$$arity = -1);\n    Opal.defs(self, '$allocate', $Hash_allocate$2 = function $$allocate() {\n      var self = this;\n\n      \n      var hash = new self.$$constructor();\n\n      Opal.hash_init(hash);\n\n      hash.$$none = nil;\n      hash.$$proc = nil;\n\n      return hash;\n    \n    }, $Hash_allocate$2.$$arity = 0);\n    Opal.defs(self, '$try_convert', $Hash_try_convert$3 = function $$try_convert(obj) {\n      var self = this;\n\n      return $$($nesting, 'Opal')['$coerce_to?'](obj, $$($nesting, 'Hash'), \"to_hash\")\n    }, $Hash_try_convert$3.$$arity = 1);\n    \n    Opal.def(self, '$initialize', $Hash_initialize$4 = function $$initialize(defaults) {\n      var $iter = $Hash_initialize$4.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_initialize$4.$$p = null;\n      \n      \n      if ($iter) $Hash_initialize$4.$$p = null;;\n      ;\n      \n      if (defaults !== undefined && block !== nil) {\n        self.$raise($$($nesting, 'ArgumentError'), \"wrong number of arguments (1 for 0)\")\n      }\n      self.$$none = (defaults === undefined ? nil : defaults);\n      self.$$proc = block;\n\n      return self;\n    ;\n    }, $Hash_initialize$4.$$arity = -1);\n    \n    Opal.def(self, '$==', $Hash_$eq_eq$5 = function(other) {\n      var self = this;\n\n      \n      if (self === other) {\n        return true;\n      }\n\n      if (!other.$$is_hash) {\n        return false;\n      }\n\n      if (self.$$keys.length !== other.$$keys.length) {\n        return false;\n      }\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, other_value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n          other_value = other.$$smap[key];\n        } else {\n          value = key.value;\n          other_value = Opal.hash_get(other, key.key);\n        }\n\n        if (other_value === undefined || !value['$eql?'](other_value)) {\n          return false;\n        }\n      }\n\n      return true;\n    \n    }, $Hash_$eq_eq$5.$$arity = 1);\n    \n    Opal.def(self, '$>=', $Hash_$gt_eq$6 = function(other) {\n      var $$7, self = this, result = nil;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      \n      if (self.$$keys.length < other.$$keys.length) {\n        return false\n      }\n    ;\n      result = true;\n      $send(other, 'each', [], ($$7 = function(other_key, other_val){var self = $$7.$$s || this, val = nil;\n\n      \n        \n        if (other_key == null) {\n          other_key = nil;\n        };\n        \n        if (other_val == null) {\n          other_val = nil;\n        };\n        val = self.$fetch(other_key, null);\n        \n        if (val == null || val !== other_val) {\n          result = false;\n          return;\n        }\n      ;}, $$7.$$s = self, $$7.$$arity = 2, $$7));\n      return result;\n    }, $Hash_$gt_eq$6.$$arity = 1);\n    \n    Opal.def(self, '$>', $Hash_$gt$8 = function(other) {\n      var self = this;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      \n      if (self.$$keys.length <= other.$$keys.length) {\n        return false\n      }\n    ;\n      return $rb_ge(self, other);\n    }, $Hash_$gt$8.$$arity = 1);\n    \n    Opal.def(self, '$<', $Hash_$lt$9 = function(other) {\n      var self = this;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      return $rb_gt(other, self);\n    }, $Hash_$lt$9.$$arity = 1);\n    \n    Opal.def(self, '$<=', $Hash_$lt_eq$10 = function(other) {\n      var self = this;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      return $rb_ge(other, self);\n    }, $Hash_$lt_eq$10.$$arity = 1);\n    \n    Opal.def(self, '$[]', $Hash_$$$11 = function(key) {\n      var self = this;\n\n      \n      var value = Opal.hash_get(self, key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      return self.$default(key);\n    \n    }, $Hash_$$$11.$$arity = 1);\n    \n    Opal.def(self, '$[]=', $Hash_$$$eq$12 = function(key, value) {\n      var self = this;\n\n      \n      Opal.hash_put(self, key, value);\n      return value;\n    \n    }, $Hash_$$$eq$12.$$arity = 2);\n    \n    Opal.def(self, '$assoc', $Hash_assoc$13 = function $$assoc(object) {\n      var self = this;\n\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          if ((key)['$=='](object)) {\n            return [key, self.$$smap[key]];\n          }\n        } else {\n          if ((key.key)['$=='](object)) {\n            return [key.key, key.value];\n          }\n        }\n      }\n\n      return nil;\n    \n    }, $Hash_assoc$13.$$arity = 1);\n    \n    Opal.def(self, '$clear', $Hash_clear$14 = function $$clear() {\n      var self = this;\n\n      \n      Opal.hash_init(self);\n      return self;\n    \n    }, $Hash_clear$14.$$arity = 0);\n    \n    Opal.def(self, '$clone', $Hash_clone$15 = function $$clone() {\n      var self = this;\n\n      \n      var hash = new self.$$class();\n\n      Opal.hash_init(hash);\n      Opal.hash_clone(self, hash);\n\n      return hash;\n    \n    }, $Hash_clone$15.$$arity = 0);\n    \n    Opal.def(self, '$compact', $Hash_compact$16 = function $$compact() {\n      var self = this;\n\n      \n      var hash = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        if (value !== nil) {\n          Opal.hash_put(hash, key, value);\n        }\n      }\n\n      return hash;\n    \n    }, $Hash_compact$16.$$arity = 0);\n    \n    Opal.def(self, '$compact!', $Hash_compact$excl$17 = function() {\n      var self = this;\n\n      \n      var changes_were_made = false;\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        if (value === nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            changes_were_made = true;\n            length--;\n            i--;\n          }\n        }\n      }\n\n      return changes_were_made ? self : nil;\n    \n    }, $Hash_compact$excl$17.$$arity = 0);\n    \n    Opal.def(self, '$compare_by_identity', $Hash_compare_by_identity$18 = function $$compare_by_identity() {\n      var self = this;\n\n      \n      var i, ii, key, keys = self.$$keys, identity_hash;\n\n      if (self.$$by_identity) return self;\n      if (self.$$keys.length === 0) {\n        self.$$by_identity = true\n        return self;\n      }\n\n      identity_hash = $hash2([], {}).$compare_by_identity();\n      for(i = 0, ii = keys.length; i < ii; i++) {\n        key = keys[i];\n        if (!key.$$is_string) key = key.key;\n        Opal.hash_put(identity_hash, key, Opal.hash_get(self, key));\n      }\n\n      self.$$by_identity = true;\n      self.$$map = identity_hash.$$map;\n      self.$$smap = identity_hash.$$smap;\n      return self;\n    \n    }, $Hash_compare_by_identity$18.$$arity = 0);\n    \n    Opal.def(self, '$compare_by_identity?', $Hash_compare_by_identity$ques$19 = function() {\n      var self = this;\n\n      return self.$$by_identity === true;\n    }, $Hash_compare_by_identity$ques$19.$$arity = 0);\n    \n    Opal.def(self, '$default', $Hash_default$20 = function(key) {\n      var self = this;\n\n      \n      ;\n      \n      if (key !== undefined && self.$$proc !== nil && self.$$proc !== undefined) {\n        return self.$$proc.$call(self, key);\n      }\n      if (self.$$none === undefined) {\n        return nil;\n      }\n      return self.$$none;\n    ;\n    }, $Hash_default$20.$$arity = -1);\n    \n    Opal.def(self, '$default=', $Hash_default$eq$21 = function(object) {\n      var self = this;\n\n      \n      self.$$proc = nil;\n      self.$$none = object;\n\n      return object;\n    \n    }, $Hash_default$eq$21.$$arity = 1);\n    \n    Opal.def(self, '$default_proc', $Hash_default_proc$22 = function $$default_proc() {\n      var self = this;\n\n      \n      if (self.$$proc !== undefined) {\n        return self.$$proc;\n      }\n      return nil;\n    \n    }, $Hash_default_proc$22.$$arity = 0);\n    \n    Opal.def(self, '$default_proc=', $Hash_default_proc$eq$23 = function(default_proc) {\n      var self = this;\n\n      \n      var proc = default_proc;\n\n      if (proc !== nil) {\n        proc = $$($nesting, 'Opal')['$coerce_to!'](proc, $$($nesting, 'Proc'), \"to_proc\");\n\n        if ((proc)['$lambda?']() && (proc).$arity().$abs() !== 2) {\n          self.$raise($$($nesting, 'TypeError'), \"default_proc takes two arguments\");\n        }\n      }\n\n      self.$$none = nil;\n      self.$$proc = proc;\n\n      return default_proc;\n    \n    }, $Hash_default_proc$eq$23.$$arity = 1);\n    \n    Opal.def(self, '$delete', $Hash_delete$24 = function(key) {\n      var $iter = $Hash_delete$24.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_delete$24.$$p = null;\n      \n      \n      if ($iter) $Hash_delete$24.$$p = null;;\n      \n      var value = Opal.hash_delete(self, key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if (block !== nil) {\n        return Opal.yield1(block, key);\n      }\n\n      return nil;\n    ;\n    }, $Hash_delete$24.$$arity = 1);\n    \n    Opal.def(self, '$delete_if', $Hash_delete_if$25 = function $$delete_if() {\n      var $iter = $Hash_delete_if$25.$$p, block = $iter || nil, $$26, self = this;\n\n      if ($iter) $Hash_delete_if$25.$$p = null;\n      \n      \n      if ($iter) $Hash_delete_if$25.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"delete_if\"], ($$26 = function(){var self = $$26.$$s || this;\n\n        return self.$size()}, $$26.$$s = self, $$26.$$arity = 0, $$26))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj !== false && obj !== nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            length--;\n            i--;\n          }\n        }\n      }\n\n      return self;\n    ;\n    }, $Hash_delete_if$25.$$arity = 0);\n    Opal.alias(self, \"dup\", \"clone\");\n    \n    Opal.def(self, '$dig', $Hash_dig$27 = function $$dig(key, $a) {\n      var $post_args, keys, self = this, item = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      keys = $post_args;;\n      item = self['$[]'](key);\n      \n      if (item === nil || keys.length === 0) {\n        return item;\n      }\n    ;\n      if ($truthy(item['$respond_to?'](\"dig\"))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + (item.$class()) + \" does not have #dig method\")\n      };\n      return $send(item, 'dig', Opal.to_a(keys));\n    }, $Hash_dig$27.$$arity = -2);\n    \n    Opal.def(self, '$each', $Hash_each$28 = function $$each() {\n      var $iter = $Hash_each$28.$$p, block = $iter || nil, $$29, self = this;\n\n      if ($iter) $Hash_each$28.$$p = null;\n      \n      \n      if ($iter) $Hash_each$28.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"each\"], ($$29 = function(){var self = $$29.$$s || this;\n\n        return self.$size()}, $$29.$$s = self, $$29.$$arity = 0, $$29))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        Opal.yield1(block, [key, value]);\n      }\n\n      return self;\n    ;\n    }, $Hash_each$28.$$arity = 0);\n    \n    Opal.def(self, '$each_key', $Hash_each_key$30 = function $$each_key() {\n      var $iter = $Hash_each_key$30.$$p, block = $iter || nil, $$31, self = this;\n\n      if ($iter) $Hash_each_key$30.$$p = null;\n      \n      \n      if ($iter) $Hash_each_key$30.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_key\"], ($$31 = function(){var self = $$31.$$s || this;\n\n        return self.$size()}, $$31.$$s = self, $$31.$$arity = 0, $$31))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        block(key.$$is_string ? key : key.key);\n      }\n\n      return self;\n    ;\n    }, $Hash_each_key$30.$$arity = 0);\n    Opal.alias(self, \"each_pair\", \"each\");\n    \n    Opal.def(self, '$each_value', $Hash_each_value$32 = function $$each_value() {\n      var $iter = $Hash_each_value$32.$$p, block = $iter || nil, $$33, self = this;\n\n      if ($iter) $Hash_each_value$32.$$p = null;\n      \n      \n      if ($iter) $Hash_each_value$32.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_value\"], ($$33 = function(){var self = $$33.$$s || this;\n\n        return self.$size()}, $$33.$$s = self, $$33.$$arity = 0, $$33))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        block(key.$$is_string ? self.$$smap[key] : key.value);\n      }\n\n      return self;\n    ;\n    }, $Hash_each_value$32.$$arity = 0);\n    \n    Opal.def(self, '$empty?', $Hash_empty$ques$34 = function() {\n      var self = this;\n\n      return self.$$keys.length === 0;\n    }, $Hash_empty$ques$34.$$arity = 0);\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$fetch', $Hash_fetch$35 = function $$fetch(key, defaults) {\n      var $iter = $Hash_fetch$35.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_fetch$35.$$p = null;\n      \n      \n      if ($iter) $Hash_fetch$35.$$p = null;;\n      ;\n      \n      var value = Opal.hash_get(self, key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if (block !== nil) {\n        return block(key);\n      }\n\n      if (defaults !== undefined) {\n        return defaults;\n      }\n    ;\n      return self.$raise($$($nesting, 'KeyError').$new(\"\" + \"key not found: \" + (key.$inspect()), $hash2([\"key\", \"receiver\"], {\"key\": key, \"receiver\": self})));\n    }, $Hash_fetch$35.$$arity = -2);\n    \n    Opal.def(self, '$fetch_values', $Hash_fetch_values$36 = function $$fetch_values($a) {\n      var $iter = $Hash_fetch_values$36.$$p, block = $iter || nil, $post_args, keys, $$37, self = this;\n\n      if ($iter) $Hash_fetch_values$36.$$p = null;\n      \n      \n      if ($iter) $Hash_fetch_values$36.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      keys = $post_args;;\n      return $send(keys, 'map', [], ($$37 = function(key){var self = $$37.$$s || this;\n\n      \n        \n        if (key == null) {\n          key = nil;\n        };\n        return $send(self, 'fetch', [key], block.$to_proc());}, $$37.$$s = self, $$37.$$arity = 1, $$37));\n    }, $Hash_fetch_values$36.$$arity = -1);\n    \n    Opal.def(self, '$flatten', $Hash_flatten$38 = function $$flatten(level) {\n      var self = this;\n\n      \n      \n      if (level == null) {\n        level = 1;\n      };\n      level = $$($nesting, 'Opal')['$coerce_to!'](level, $$($nesting, 'Integer'), \"to_int\");\n      \n      var result = [];\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        result.push(key);\n\n        if (value.$$is_array) {\n          if (level === 1) {\n            result.push(value);\n            continue;\n          }\n\n          result = result.concat((value).$flatten(level - 2));\n          continue;\n        }\n\n        result.push(value);\n      }\n\n      return result;\n    ;\n    }, $Hash_flatten$38.$$arity = -1);\n    \n    Opal.def(self, '$has_key?', $Hash_has_key$ques$39 = function(key) {\n      var self = this;\n\n      return Opal.hash_get(self, key) !== undefined;\n    }, $Hash_has_key$ques$39.$$arity = 1);\n    \n    Opal.def(self, '$has_value?', $Hash_has_value$ques$40 = function(value) {\n      var self = this;\n\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        if (((key.$$is_string ? self.$$smap[key] : key.value))['$=='](value)) {\n          return true;\n        }\n      }\n\n      return false;\n    \n    }, $Hash_has_value$ques$40.$$arity = 1);\n    \n    Opal.def(self, '$hash', $Hash_hash$41 = function $$hash() {\n      var self = this;\n\n      \n      var top = (Opal.hash_ids === undefined),\n          hash_id = self.$object_id(),\n          result = ['Hash'],\n          key, item;\n\n      try {\n        if (top) {\n          Opal.hash_ids = Object.create(null);\n        }\n\n        if (Opal[hash_id]) {\n          return 'self';\n        }\n\n        for (key in Opal.hash_ids) {\n          item = Opal.hash_ids[key];\n          if (self['$eql?'](item)) {\n            return 'self';\n          }\n        }\n\n        Opal.hash_ids[hash_id] = self;\n\n        for (var i = 0, keys = self.$$keys, length = keys.length; i < length; i++) {\n          key = keys[i];\n\n          if (key.$$is_string) {\n            result.push([key, self.$$smap[key].$hash()]);\n          } else {\n            result.push([key.key_hash, key.value.$hash()]);\n          }\n        }\n\n        return result.sort().join();\n\n      } finally {\n        if (top) {\n          Opal.hash_ids = undefined;\n        }\n      }\n    \n    }, $Hash_hash$41.$$arity = 0);\n    Opal.alias(self, \"include?\", \"has_key?\");\n    \n    Opal.def(self, '$index', $Hash_index$42 = function $$index(object) {\n      var self = this;\n\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        if ((value)['$=='](object)) {\n          return key;\n        }\n      }\n\n      return nil;\n    \n    }, $Hash_index$42.$$arity = 1);\n    \n    Opal.def(self, '$indexes', $Hash_indexes$43 = function $$indexes($a) {\n      var $post_args, args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      var result = [];\n\n      for (var i = 0, length = args.length, key, value; i < length; i++) {\n        key = args[i];\n        value = Opal.hash_get(self, key);\n\n        if (value === undefined) {\n          result.push(self.$default());\n          continue;\n        }\n\n        result.push(value);\n      }\n\n      return result;\n    ;\n    }, $Hash_indexes$43.$$arity = -1);\n    Opal.alias(self, \"indices\", \"indexes\");\n    var inspect_ids;\n    \n    Opal.def(self, '$inspect', $Hash_inspect$44 = function $$inspect() {\n      var self = this;\n\n      \n      var top = (inspect_ids === undefined),\n          hash_id = self.$object_id(),\n          result = [];\n\n      try {\n        if (top) {\n          inspect_ids = {};\n        }\n\n        if (inspect_ids.hasOwnProperty(hash_id)) {\n          return '{...}';\n        }\n\n        inspect_ids[hash_id] = true;\n\n        for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n          key = keys[i];\n\n          if (key.$$is_string) {\n            value = self.$$smap[key];\n          } else {\n            value = key.value;\n            key = key.key;\n          }\n\n          result.push(key.$inspect() + '=>' + value.$inspect());\n        }\n\n        return '{' + result.join(', ') + '}';\n\n      } finally {\n        if (top) {\n          inspect_ids = undefined;\n        }\n      }\n    \n    }, $Hash_inspect$44.$$arity = 0);\n    \n    Opal.def(self, '$invert', $Hash_invert$45 = function $$invert() {\n      var self = this;\n\n      \n      var hash = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        Opal.hash_put(hash, value, key);\n      }\n\n      return hash;\n    \n    }, $Hash_invert$45.$$arity = 0);\n    \n    Opal.def(self, '$keep_if', $Hash_keep_if$46 = function $$keep_if() {\n      var $iter = $Hash_keep_if$46.$$p, block = $iter || nil, $$47, self = this;\n\n      if ($iter) $Hash_keep_if$46.$$p = null;\n      \n      \n      if ($iter) $Hash_keep_if$46.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"keep_if\"], ($$47 = function(){var self = $$47.$$s || this;\n\n        return self.$size()}, $$47.$$s = self, $$47.$$arity = 0, $$47))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj === false || obj === nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            length--;\n            i--;\n          }\n        }\n      }\n\n      return self;\n    ;\n    }, $Hash_keep_if$46.$$arity = 0);\n    Opal.alias(self, \"key\", \"index\");\n    Opal.alias(self, \"key?\", \"has_key?\");\n    \n    Opal.def(self, '$keys', $Hash_keys$48 = function $$keys() {\n      var self = this;\n\n      \n      var result = [];\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          result.push(key);\n        } else {\n          result.push(key.key);\n        }\n      }\n\n      return result;\n    \n    }, $Hash_keys$48.$$arity = 0);\n    \n    Opal.def(self, '$length', $Hash_length$49 = function $$length() {\n      var self = this;\n\n      return self.$$keys.length;\n    }, $Hash_length$49.$$arity = 0);\n    Opal.alias(self, \"member?\", \"has_key?\");\n    \n    Opal.def(self, '$merge', $Hash_merge$50 = function $$merge(other) {\n      var $iter = $Hash_merge$50.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_merge$50.$$p = null;\n      \n      \n      if ($iter) $Hash_merge$50.$$p = null;;\n      return $send(self.$dup(), 'merge!', [other], block.$to_proc());\n    }, $Hash_merge$50.$$arity = 1);\n    \n    Opal.def(self, '$merge!', $Hash_merge$excl$51 = function(other) {\n      var $iter = $Hash_merge$excl$51.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Hash_merge$excl$51.$$p = null;\n      \n      \n      if ($iter) $Hash_merge$excl$51.$$p = null;;\n      \n      if (!other.$$is_hash) {\n        other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      }\n\n      var i, other_keys = other.$$keys, length = other_keys.length, key, value, other_value;\n\n      if (block === nil) {\n        for (i = 0; i < length; i++) {\n          key = other_keys[i];\n\n          if (key.$$is_string) {\n            other_value = other.$$smap[key];\n          } else {\n            other_value = key.value;\n            key = key.key;\n          }\n\n          Opal.hash_put(self, key, other_value);\n        }\n\n        return self;\n      }\n\n      for (i = 0; i < length; i++) {\n        key = other_keys[i];\n\n        if (key.$$is_string) {\n          other_value = other.$$smap[key];\n        } else {\n          other_value = key.value;\n          key = key.key;\n        }\n\n        value = Opal.hash_get(self, key);\n\n        if (value === undefined) {\n          Opal.hash_put(self, key, other_value);\n          continue;\n        }\n\n        Opal.hash_put(self, key, block(key, value, other_value));\n      }\n\n      return self;\n    ;\n    }, $Hash_merge$excl$51.$$arity = 1);\n    \n    Opal.def(self, '$rassoc', $Hash_rassoc$52 = function $$rassoc(object) {\n      var self = this;\n\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        if ((value)['$=='](object)) {\n          return [key, value];\n        }\n      }\n\n      return nil;\n    \n    }, $Hash_rassoc$52.$$arity = 1);\n    \n    Opal.def(self, '$rehash', $Hash_rehash$53 = function $$rehash() {\n      var self = this;\n\n      \n      Opal.hash_rehash(self);\n      return self;\n    \n    }, $Hash_rehash$53.$$arity = 0);\n    \n    Opal.def(self, '$reject', $Hash_reject$54 = function $$reject() {\n      var $iter = $Hash_reject$54.$$p, block = $iter || nil, $$55, self = this;\n\n      if ($iter) $Hash_reject$54.$$p = null;\n      \n      \n      if ($iter) $Hash_reject$54.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject\"], ($$55 = function(){var self = $$55.$$s || this;\n\n        return self.$size()}, $$55.$$s = self, $$55.$$arity = 0, $$55))\n      };\n      \n      var hash = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj === false || obj === nil) {\n          Opal.hash_put(hash, key, value);\n        }\n      }\n\n      return hash;\n    ;\n    }, $Hash_reject$54.$$arity = 0);\n    \n    Opal.def(self, '$reject!', $Hash_reject$excl$56 = function() {\n      var $iter = $Hash_reject$excl$56.$$p, block = $iter || nil, $$57, self = this;\n\n      if ($iter) $Hash_reject$excl$56.$$p = null;\n      \n      \n      if ($iter) $Hash_reject$excl$56.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"reject!\"], ($$57 = function(){var self = $$57.$$s || this;\n\n        return self.$size()}, $$57.$$s = self, $$57.$$arity = 0, $$57))\n      };\n      \n      var changes_were_made = false;\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj !== false && obj !== nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            changes_were_made = true;\n            length--;\n            i--;\n          }\n        }\n      }\n\n      return changes_were_made ? self : nil;\n    ;\n    }, $Hash_reject$excl$56.$$arity = 0);\n    \n    Opal.def(self, '$replace', $Hash_replace$58 = function $$replace(other) {\n      var self = this, $writer = nil;\n\n      \n      other = $$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Hash'), \"to_hash\");\n      \n      Opal.hash_init(self);\n\n      for (var i = 0, other_keys = other.$$keys, length = other_keys.length, key, value, other_value; i < length; i++) {\n        key = other_keys[i];\n\n        if (key.$$is_string) {\n          other_value = other.$$smap[key];\n        } else {\n          other_value = key.value;\n          key = key.key;\n        }\n\n        Opal.hash_put(self, key, other_value);\n      }\n    ;\n      if ($truthy(other.$default_proc())) {\n        \n        $writer = [other.$default_proc()];\n        $send(self, 'default_proc=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];\n      } else {\n        \n        $writer = [other.$default()];\n        $send(self, 'default=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];\n      };\n      return self;\n    }, $Hash_replace$58.$$arity = 1);\n    \n    Opal.def(self, '$select', $Hash_select$59 = function $$select() {\n      var $iter = $Hash_select$59.$$p, block = $iter || nil, $$60, self = this;\n\n      if ($iter) $Hash_select$59.$$p = null;\n      \n      \n      if ($iter) $Hash_select$59.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"select\"], ($$60 = function(){var self = $$60.$$s || this;\n\n        return self.$size()}, $$60.$$s = self, $$60.$$arity = 0, $$60))\n      };\n      \n      var hash = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj !== false && obj !== nil) {\n          Opal.hash_put(hash, key, value);\n        }\n      }\n\n      return hash;\n    ;\n    }, $Hash_select$59.$$arity = 0);\n    \n    Opal.def(self, '$select!', $Hash_select$excl$61 = function() {\n      var $iter = $Hash_select$excl$61.$$p, block = $iter || nil, $$62, self = this;\n\n      if ($iter) $Hash_select$excl$61.$$p = null;\n      \n      \n      if ($iter) $Hash_select$excl$61.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"select!\"], ($$62 = function(){var self = $$62.$$s || this;\n\n        return self.$size()}, $$62.$$s = self, $$62.$$arity = 0, $$62))\n      };\n      \n      var result = nil;\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value, obj; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        obj = block(key, value);\n\n        if (obj === false || obj === nil) {\n          if (Opal.hash_delete(self, key) !== undefined) {\n            length--;\n            i--;\n          }\n          result = self;\n        }\n      }\n\n      return result;\n    ;\n    }, $Hash_select$excl$61.$$arity = 0);\n    \n    Opal.def(self, '$shift', $Hash_shift$63 = function $$shift() {\n      var self = this;\n\n      \n      var keys = self.$$keys,\n          key;\n\n      if (keys.length > 0) {\n        key = keys[0];\n\n        key = key.$$is_string ? key : key.key;\n\n        return [key, Opal.hash_delete(self, key)];\n      }\n\n      return self.$default(nil);\n    \n    }, $Hash_shift$63.$$arity = 0);\n    Opal.alias(self, \"size\", \"length\");\n    \n    Opal.def(self, '$slice', $Hash_slice$64 = function $$slice($a) {\n      var $post_args, keys, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      keys = $post_args;;\n      \n      var result = Opal.hash();\n\n      for (var i = 0, length = keys.length; i < length; i++) {\n        var key = keys[i], value = Opal.hash_get(self, key);\n\n        if (value !== undefined) {\n          Opal.hash_put(result, key, value);\n        }\n      }\n\n      return result;\n    ;\n    }, $Hash_slice$64.$$arity = -1);\n    Opal.alias(self, \"store\", \"[]=\");\n    \n    Opal.def(self, '$to_a', $Hash_to_a$65 = function $$to_a() {\n      var self = this;\n\n      \n      var result = [];\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        result.push([key, value]);\n      }\n\n      return result;\n    \n    }, $Hash_to_a$65.$$arity = 0);\n    \n    Opal.def(self, '$to_h', $Hash_to_h$66 = function $$to_h() {\n      var self = this;\n\n      \n      if (self.$$class === Opal.Hash) {\n        return self;\n      }\n\n      var hash = new Opal.Hash();\n\n      Opal.hash_init(hash);\n      Opal.hash_clone(self, hash);\n\n      return hash;\n    \n    }, $Hash_to_h$66.$$arity = 0);\n    \n    Opal.def(self, '$to_hash', $Hash_to_hash$67 = function $$to_hash() {\n      var self = this;\n\n      return self\n    }, $Hash_to_hash$67.$$arity = 0);\n    \n    Opal.def(self, '$to_proc', $Hash_to_proc$68 = function $$to_proc() {\n      var $$69, self = this;\n\n      return $send(self, 'proc', [], ($$69 = function(key){var self = $$69.$$s || this;\n\n      \n        ;\n        \n        if (key == null) {\n          self.$raise($$($nesting, 'ArgumentError'), \"no key given\")\n        }\n      ;\n        return self['$[]'](key);}, $$69.$$s = self, $$69.$$arity = -1, $$69))\n    }, $Hash_to_proc$68.$$arity = 0);\n    Opal.alias(self, \"to_s\", \"inspect\");\n    \n    Opal.def(self, '$transform_keys', $Hash_transform_keys$70 = function $$transform_keys() {\n      var $iter = $Hash_transform_keys$70.$$p, block = $iter || nil, $$71, self = this;\n\n      if ($iter) $Hash_transform_keys$70.$$p = null;\n      \n      \n      if ($iter) $Hash_transform_keys$70.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"transform_keys\"], ($$71 = function(){var self = $$71.$$s || this;\n\n        return self.$size()}, $$71.$$s = self, $$71.$$arity = 0, $$71))\n      };\n      \n      var result = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        key = Opal.yield1(block, key);\n\n        Opal.hash_put(result, key, value);\n      }\n\n      return result;\n    ;\n    }, $Hash_transform_keys$70.$$arity = 0);\n    \n    Opal.def(self, '$transform_keys!', $Hash_transform_keys$excl$72 = function() {\n      var $iter = $Hash_transform_keys$excl$72.$$p, block = $iter || nil, $$73, self = this;\n\n      if ($iter) $Hash_transform_keys$excl$72.$$p = null;\n      \n      \n      if ($iter) $Hash_transform_keys$excl$72.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"transform_keys!\"], ($$73 = function(){var self = $$73.$$s || this;\n\n        return self.$size()}, $$73.$$s = self, $$73.$$arity = 0, $$73))\n      };\n      \n      var keys = Opal.slice.call(self.$$keys),\n          i, length = keys.length, key, value, new_key;\n\n      for (i = 0; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        new_key = Opal.yield1(block, key);\n\n        Opal.hash_delete(self, key);\n        Opal.hash_put(self, new_key, value);\n      }\n\n      return self;\n    ;\n    }, $Hash_transform_keys$excl$72.$$arity = 0);\n    \n    Opal.def(self, '$transform_values', $Hash_transform_values$74 = function $$transform_values() {\n      var $iter = $Hash_transform_values$74.$$p, block = $iter || nil, $$75, self = this;\n\n      if ($iter) $Hash_transform_values$74.$$p = null;\n      \n      \n      if ($iter) $Hash_transform_values$74.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"transform_values\"], ($$75 = function(){var self = $$75.$$s || this;\n\n        return self.$size()}, $$75.$$s = self, $$75.$$arity = 0, $$75))\n      };\n      \n      var result = Opal.hash();\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        value = Opal.yield1(block, value);\n\n        Opal.hash_put(result, key, value);\n      }\n\n      return result;\n    ;\n    }, $Hash_transform_values$74.$$arity = 0);\n    \n    Opal.def(self, '$transform_values!', $Hash_transform_values$excl$76 = function() {\n      var $iter = $Hash_transform_values$excl$76.$$p, block = $iter || nil, $$77, self = this;\n\n      if ($iter) $Hash_transform_values$excl$76.$$p = null;\n      \n      \n      if ($iter) $Hash_transform_values$excl$76.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"transform_values!\"], ($$77 = function(){var self = $$77.$$s || this;\n\n        return self.$size()}, $$77.$$s = self, $$77.$$arity = 0, $$77))\n      };\n      \n      for (var i = 0, keys = self.$$keys, length = keys.length, key, value; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          value = self.$$smap[key];\n        } else {\n          value = key.value;\n          key = key.key;\n        }\n\n        value = Opal.yield1(block, value);\n\n        Opal.hash_put(self, key, value);\n      }\n\n      return self;\n    ;\n    }, $Hash_transform_values$excl$76.$$arity = 0);\n    Opal.alias(self, \"update\", \"merge!\");\n    Opal.alias(self, \"value?\", \"has_value?\");\n    Opal.alias(self, \"values_at\", \"indexes\");\n    return (Opal.def(self, '$values', $Hash_values$78 = function $$values() {\n      var self = this;\n\n      \n      var result = [];\n\n      for (var i = 0, keys = self.$$keys, length = keys.length, key; i < length; i++) {\n        key = keys[i];\n\n        if (key.$$is_string) {\n          result.push(self.$$smap[key]);\n        } else {\n          result.push(key.value);\n        }\n      }\n\n      return result;\n    \n    }, $Hash_values$78.$$arity = 0), nil) && 'values';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/number\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$require', '$bridge', '$raise', '$name', '$class', '$Float', '$respond_to?', '$coerce_to!', '$__coerced__', '$===', '$!', '$>', '$**', '$new', '$<', '$to_f', '$==', '$nan?', '$infinite?', '$enum_for', '$+', '$-', '$gcd', '$lcm', '$%', '$/', '$frexp', '$to_i', '$ldexp', '$rationalize', '$*', '$<<', '$to_r', '$truncate', '$-@', '$size', '$<=', '$>=', '$<=>', '$compare', '$any?']);\n  \n  self.$require(\"corelib/numeric\");\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Number');\n\n    var $nesting = [self].concat($parent_nesting), $Number_coerce$2, $Number___id__$3, $Number_$plus$4, $Number_$minus$5, $Number_$$6, $Number_$slash$7, $Number_$percent$8, $Number_$$9, $Number_$$10, $Number_$$11, $Number_$lt$12, $Number_$lt_eq$13, $Number_$gt$14, $Number_$gt_eq$15, $Number_$lt_eq_gt$16, $Number_$lt$lt$17, $Number_$gt$gt$18, $Number_$$$19, $Number_$plus$$20, $Number_$minus$$21, $Number_$$22, $Number_$$$23, $Number_$eq_eq_eq$24, $Number_$eq_eq$25, $Number_abs$26, $Number_abs2$27, $Number_allbits$ques$28, $Number_anybits$ques$29, $Number_angle$30, $Number_bit_length$31, $Number_ceil$32, $Number_chr$33, $Number_denominator$34, $Number_downto$35, $Number_equal$ques$37, $Number_even$ques$38, $Number_floor$39, $Number_gcd$40, $Number_gcdlcm$41, $Number_integer$ques$42, $Number_is_a$ques$43, $Number_instance_of$ques$44, $Number_lcm$45, $Number_next$46, $Number_nobits$ques$47, $Number_nonzero$ques$48, $Number_numerator$49, $Number_odd$ques$50, $Number_ord$51, $Number_pow$52, $Number_pred$53, $Number_quo$54, $Number_rationalize$55, $Number_remainder$56, $Number_round$57, $Number_step$58, $Number_times$60, $Number_to_f$62, $Number_to_i$63, $Number_to_r$64, $Number_to_s$65, $Number_truncate$66, $Number_digits$67, $Number_divmod$68, $Number_upto$69, $Number_zero$ques$71, $Number_size$72, $Number_nan$ques$73, $Number_finite$ques$74, $Number_infinite$ques$75, $Number_positive$ques$76, $Number_negative$ques$77;\n\n    \n    $$($nesting, 'Opal').$bridge(Number, self);\n    Opal.defineProperty(self.$$prototype, '$$is_number', true);\n    self.$$is_number_class = true;\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$1;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$1 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$1.$$arity = 0);\n      \n      \n      Opal.udef(self, '$' + \"new\");;\n      return nil;;\n    })(Opal.get_singleton_class(self), $nesting);\n    \n    Opal.def(self, '$coerce', $Number_coerce$2 = function $$coerce(other) {\n      var self = this;\n\n      \n      if (other === nil) {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't convert \" + (other.$class()) + \" into Float\");\n      }\n      else if (other.$$is_string) {\n        return [self.$Float(other), self];\n      }\n      else if (other['$respond_to?'](\"to_f\")) {\n        return [$$($nesting, 'Opal')['$coerce_to!'](other, $$($nesting, 'Float'), \"to_f\"), self];\n      }\n      else if (other.$$is_number) {\n        return [other, self];\n      }\n      else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't convert \" + (other.$class()) + \" into Float\");\n      }\n    \n    }, $Number_coerce$2.$$arity = 1);\n    \n    Opal.def(self, '$__id__', $Number___id__$3 = function $$__id__() {\n      var self = this;\n\n      return (self * 2) + 1;\n    }, $Number___id__$3.$$arity = 0);\n    Opal.alias(self, \"object_id\", \"__id__\");\n    \n    Opal.def(self, '$+', $Number_$plus$4 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self + other;\n      }\n      else {\n        return self.$__coerced__(\"+\", other);\n      }\n    \n    }, $Number_$plus$4.$$arity = 1);\n    \n    Opal.def(self, '$-', $Number_$minus$5 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self - other;\n      }\n      else {\n        return self.$__coerced__(\"-\", other);\n      }\n    \n    }, $Number_$minus$5.$$arity = 1);\n    \n    Opal.def(self, '$*', $Number_$$6 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self * other;\n      }\n      else {\n        return self.$__coerced__(\"*\", other);\n      }\n    \n    }, $Number_$$6.$$arity = 1);\n    \n    Opal.def(self, '$/', $Number_$slash$7 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self / other;\n      }\n      else {\n        return self.$__coerced__(\"/\", other);\n      }\n    \n    }, $Number_$slash$7.$$arity = 1);\n    Opal.alias(self, \"fdiv\", \"/\");\n    \n    Opal.def(self, '$%', $Number_$percent$8 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        if (other == -Infinity) {\n          return other;\n        }\n        else if (other == 0) {\n          self.$raise($$($nesting, 'ZeroDivisionError'), \"divided by 0\");\n        }\n        else if (other < 0 || self < 0) {\n          return (self % other + other) % other;\n        }\n        else {\n          return self % other;\n        }\n      }\n      else {\n        return self.$__coerced__(\"%\", other);\n      }\n    \n    }, $Number_$percent$8.$$arity = 1);\n    \n    Opal.def(self, '$&', $Number_$$9 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self & other;\n      }\n      else {\n        return self.$__coerced__(\"&\", other);\n      }\n    \n    }, $Number_$$9.$$arity = 1);\n    \n    Opal.def(self, '$|', $Number_$$10 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self | other;\n      }\n      else {\n        return self.$__coerced__(\"|\", other);\n      }\n    \n    }, $Number_$$10.$$arity = 1);\n    \n    Opal.def(self, '$^', $Number_$$11 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self ^ other;\n      }\n      else {\n        return self.$__coerced__(\"^\", other);\n      }\n    \n    }, $Number_$$11.$$arity = 1);\n    \n    Opal.def(self, '$<', $Number_$lt$12 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self < other;\n      }\n      else {\n        return self.$__coerced__(\"<\", other);\n      }\n    \n    }, $Number_$lt$12.$$arity = 1);\n    \n    Opal.def(self, '$<=', $Number_$lt_eq$13 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self <= other;\n      }\n      else {\n        return self.$__coerced__(\"<=\", other);\n      }\n    \n    }, $Number_$lt_eq$13.$$arity = 1);\n    \n    Opal.def(self, '$>', $Number_$gt$14 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self > other;\n      }\n      else {\n        return self.$__coerced__(\">\", other);\n      }\n    \n    }, $Number_$gt$14.$$arity = 1);\n    \n    Opal.def(self, '$>=', $Number_$gt_eq$15 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self >= other;\n      }\n      else {\n        return self.$__coerced__(\">=\", other);\n      }\n    \n    }, $Number_$gt_eq$15.$$arity = 1);\n    \n    var spaceship_operator = function(self, other) {\n      if (other.$$is_number) {\n        if (isNaN(self) || isNaN(other)) {\n          return nil;\n        }\n\n        if (self > other) {\n          return 1;\n        } else if (self < other) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }\n      else {\n        return self.$__coerced__(\"<=>\", other);\n      }\n    }\n  ;\n    \n    Opal.def(self, '$<=>', $Number_$lt_eq_gt$16 = function(other) {\n      var self = this;\n\n      try {\n        return spaceship_operator(self, other);\n      } catch ($err) {\n        if (Opal.rescue($err, [$$($nesting, 'ArgumentError')])) {\n          try {\n            return nil\n          } finally { Opal.pop_exception() }\n        } else { throw $err; }\n      }\n    }, $Number_$lt_eq_gt$16.$$arity = 1);\n    \n    Opal.def(self, '$<<', $Number_$lt$lt$17 = function(count) {\n      var self = this;\n\n      \n      count = $$($nesting, 'Opal')['$coerce_to!'](count, $$($nesting, 'Integer'), \"to_int\");\n      return count > 0 ? self << count : self >> -count;\n    }, $Number_$lt$lt$17.$$arity = 1);\n    \n    Opal.def(self, '$>>', $Number_$gt$gt$18 = function(count) {\n      var self = this;\n\n      \n      count = $$($nesting, 'Opal')['$coerce_to!'](count, $$($nesting, 'Integer'), \"to_int\");\n      return count > 0 ? self >> count : self << -count;\n    }, $Number_$gt$gt$18.$$arity = 1);\n    \n    Opal.def(self, '$[]', $Number_$$$19 = function(bit) {\n      var self = this;\n\n      \n      bit = $$($nesting, 'Opal')['$coerce_to!'](bit, $$($nesting, 'Integer'), \"to_int\");\n      \n      if (bit < 0) {\n        return 0;\n      }\n      if (bit >= 32) {\n        return self < 0 ? 1 : 0;\n      }\n      return (self >> bit) & 1;\n    ;\n    }, $Number_$$$19.$$arity = 1);\n    \n    Opal.def(self, '$+@', $Number_$plus$$20 = function() {\n      var self = this;\n\n      return +self;\n    }, $Number_$plus$$20.$$arity = 0);\n    \n    Opal.def(self, '$-@', $Number_$minus$$21 = function() {\n      var self = this;\n\n      return -self;\n    }, $Number_$minus$$21.$$arity = 0);\n    \n    Opal.def(self, '$~', $Number_$$22 = function() {\n      var self = this;\n\n      return ~self;\n    }, $Number_$$22.$$arity = 0);\n    \n    Opal.def(self, '$**', $Number_$$$23 = function(other) {\n      var $a, $b, self = this;\n\n      if ($truthy($$($nesting, 'Integer')['$==='](other))) {\n        if ($truthy(($truthy($a = $$($nesting, 'Integer')['$==='](self)['$!']()) ? $a : $rb_gt(other, 0)))) {\n          return Math.pow(self, other);\n        } else {\n          return $$($nesting, 'Rational').$new(self, 1)['$**'](other)\n        }\n      } else if ($truthy((($a = $rb_lt(self, 0)) ? ($truthy($b = $$($nesting, 'Float')['$==='](other)) ? $b : $$($nesting, 'Rational')['$==='](other)) : $rb_lt(self, 0)))) {\n        return $$($nesting, 'Complex').$new(self, 0)['$**'](other.$to_f())\n      } else if ($truthy(other.$$is_number != null)) {\n        return Math.pow(self, other);\n      } else {\n        return self.$__coerced__(\"**\", other)\n      }\n    }, $Number_$$$23.$$arity = 1);\n    \n    Opal.def(self, '$===', $Number_$eq_eq_eq$24 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self.valueOf() === other.valueOf();\n      }\n      else if (other['$respond_to?'](\"==\")) {\n        return other['$=='](self);\n      }\n      else {\n        return false;\n      }\n    \n    }, $Number_$eq_eq_eq$24.$$arity = 1);\n    \n    Opal.def(self, '$==', $Number_$eq_eq$25 = function(other) {\n      var self = this;\n\n      \n      if (other.$$is_number) {\n        return self.valueOf() === other.valueOf();\n      }\n      else if (other['$respond_to?'](\"==\")) {\n        return other['$=='](self);\n      }\n      else {\n        return false;\n      }\n    \n    }, $Number_$eq_eq$25.$$arity = 1);\n    \n    Opal.def(self, '$abs', $Number_abs$26 = function $$abs() {\n      var self = this;\n\n      return Math.abs(self);\n    }, $Number_abs$26.$$arity = 0);\n    \n    Opal.def(self, '$abs2', $Number_abs2$27 = function $$abs2() {\n      var self = this;\n\n      return Math.abs(self * self);\n    }, $Number_abs2$27.$$arity = 0);\n    \n    Opal.def(self, '$allbits?', $Number_allbits$ques$28 = function(mask) {\n      var self = this;\n\n      \n      mask = $$($nesting, 'Opal')['$coerce_to!'](mask, $$($nesting, 'Integer'), \"to_int\");\n      return (self & mask) == mask;;\n    }, $Number_allbits$ques$28.$$arity = 1);\n    \n    Opal.def(self, '$anybits?', $Number_anybits$ques$29 = function(mask) {\n      var self = this;\n\n      \n      mask = $$($nesting, 'Opal')['$coerce_to!'](mask, $$($nesting, 'Integer'), \"to_int\");\n      return (self & mask) !== 0;;\n    }, $Number_anybits$ques$29.$$arity = 1);\n    \n    Opal.def(self, '$angle', $Number_angle$30 = function $$angle() {\n      var self = this;\n\n      \n      if ($truthy(self['$nan?']())) {\n        return self};\n      \n      if (self == 0) {\n        if (1 / self > 0) {\n          return 0;\n        }\n        else {\n          return Math.PI;\n        }\n      }\n      else if (self < 0) {\n        return Math.PI;\n      }\n      else {\n        return 0;\n      }\n    ;\n    }, $Number_angle$30.$$arity = 0);\n    Opal.alias(self, \"arg\", \"angle\");\n    Opal.alias(self, \"phase\", \"angle\");\n    \n    Opal.def(self, '$bit_length', $Number_bit_length$31 = function $$bit_length() {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n      } else {\n        self.$raise($$($nesting, 'NoMethodError').$new(\"\" + \"undefined method `bit_length` for \" + (self) + \":Float\", \"bit_length\"))\n      };\n      \n      if (self === 0 || self === -1) {\n        return 0;\n      }\n\n      var result = 0,\n          value  = self < 0 ? ~self : self;\n\n      while (value != 0) {\n        result   += 1;\n        value  >>>= 1;\n      }\n\n      return result;\n    ;\n    }, $Number_bit_length$31.$$arity = 0);\n    \n    Opal.def(self, '$ceil', $Number_ceil$32 = function $$ceil(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      \n      var f = self.$to_f();\n\n      if (f % 1 === 0 && ndigits >= 0) {\n        return f;\n      }\n\n      var factor = Math.pow(10, ndigits),\n          result = Math.ceil(f * factor) / factor;\n\n      if (f % 1 === 0) {\n        result = Math.round(result);\n      }\n\n      return result;\n    ;\n    }, $Number_ceil$32.$$arity = -1);\n    \n    Opal.def(self, '$chr', $Number_chr$33 = function $$chr(encoding) {\n      var self = this;\n\n      \n      ;\n      return String.fromCharCode(self);;\n    }, $Number_chr$33.$$arity = -1);\n    \n    Opal.def(self, '$denominator', $Number_denominator$34 = function $$denominator() {\n      var $a, $iter = $Number_denominator$34.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_denominator$34.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if ($truthy(($truthy($a = self['$nan?']()) ? $a : self['$infinite?']()))) {\n        return 1\n      } else {\n        return $send(self, Opal.find_super_dispatcher(self, 'denominator', $Number_denominator$34, false), $zuper, $iter)\n      }\n    }, $Number_denominator$34.$$arity = 0);\n    \n    Opal.def(self, '$downto', $Number_downto$35 = function $$downto(stop) {\n      var $iter = $Number_downto$35.$$p, block = $iter || nil, $$36, self = this;\n\n      if ($iter) $Number_downto$35.$$p = null;\n      \n      \n      if ($iter) $Number_downto$35.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"downto\", stop], ($$36 = function(){var self = $$36.$$s || this;\n\n        \n          if ($truthy($$($nesting, 'Numeric')['$==='](stop))) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (stop.$class()) + \" failed\")\n          };\n          if ($truthy($rb_gt(stop, self))) {\n            return 0\n          } else {\n            return $rb_plus($rb_minus(self, stop), 1)\n          };}, $$36.$$s = self, $$36.$$arity = 0, $$36))\n      };\n      \n      if (!stop.$$is_number) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (stop.$class()) + \" failed\")\n      }\n      for (var i = self; i >= stop; i--) {\n        block(i);\n      }\n    ;\n      return self;\n    }, $Number_downto$35.$$arity = 1);\n    Opal.alias(self, \"eql?\", \"==\");\n    \n    Opal.def(self, '$equal?', $Number_equal$ques$37 = function(other) {\n      var $a, self = this;\n\n      return ($truthy($a = self['$=='](other)) ? $a : isNaN(self) && isNaN(other))\n    }, $Number_equal$ques$37.$$arity = 1);\n    \n    Opal.def(self, '$even?', $Number_even$ques$38 = function() {\n      var self = this;\n\n      return self % 2 === 0;\n    }, $Number_even$ques$38.$$arity = 0);\n    \n    Opal.def(self, '$floor', $Number_floor$39 = function $$floor(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      \n      var f = self.$to_f();\n\n      if (f % 1 === 0 && ndigits >= 0) {\n        return f;\n      }\n\n      var factor = Math.pow(10, ndigits),\n          result = Math.floor(f * factor) / factor;\n\n      if (f % 1 === 0) {\n        result = Math.round(result);\n      }\n\n      return result;\n    ;\n    }, $Number_floor$39.$$arity = -1);\n    \n    Opal.def(self, '$gcd', $Number_gcd$40 = function $$gcd(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](other))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"not an integer\")\n      };\n      \n      var min = Math.abs(self),\n          max = Math.abs(other);\n\n      while (min > 0) {\n        var tmp = min;\n\n        min = max % min;\n        max = tmp;\n      }\n\n      return max;\n    ;\n    }, $Number_gcd$40.$$arity = 1);\n    \n    Opal.def(self, '$gcdlcm', $Number_gcdlcm$41 = function $$gcdlcm(other) {\n      var self = this;\n\n      return [self.$gcd(), self.$lcm()]\n    }, $Number_gcdlcm$41.$$arity = 1);\n    \n    Opal.def(self, '$integer?', $Number_integer$ques$42 = function() {\n      var self = this;\n\n      return self % 1 === 0;\n    }, $Number_integer$ques$42.$$arity = 0);\n    \n    Opal.def(self, '$is_a?', $Number_is_a$ques$43 = function(klass) {\n      var $a, $iter = $Number_is_a$ques$43.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_is_a$ques$43.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      if ($truthy((($a = klass['$==']($$($nesting, 'Integer'))) ? $$($nesting, 'Integer')['$==='](self) : klass['$==']($$($nesting, 'Integer'))))) {\n        return true};\n      if ($truthy((($a = klass['$==']($$($nesting, 'Integer'))) ? $$($nesting, 'Integer')['$==='](self) : klass['$==']($$($nesting, 'Integer'))))) {\n        return true};\n      if ($truthy((($a = klass['$==']($$($nesting, 'Float'))) ? $$($nesting, 'Float')['$==='](self) : klass['$==']($$($nesting, 'Float'))))) {\n        return true};\n      return $send(self, Opal.find_super_dispatcher(self, 'is_a?', $Number_is_a$ques$43, false), $zuper, $iter);\n    }, $Number_is_a$ques$43.$$arity = 1);\n    Opal.alias(self, \"kind_of?\", \"is_a?\");\n    \n    Opal.def(self, '$instance_of?', $Number_instance_of$ques$44 = function(klass) {\n      var $a, $iter = $Number_instance_of$ques$44.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_instance_of$ques$44.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      if ($truthy((($a = klass['$==']($$($nesting, 'Integer'))) ? $$($nesting, 'Integer')['$==='](self) : klass['$==']($$($nesting, 'Integer'))))) {\n        return true};\n      if ($truthy((($a = klass['$==']($$($nesting, 'Integer'))) ? $$($nesting, 'Integer')['$==='](self) : klass['$==']($$($nesting, 'Integer'))))) {\n        return true};\n      if ($truthy((($a = klass['$==']($$($nesting, 'Float'))) ? $$($nesting, 'Float')['$==='](self) : klass['$==']($$($nesting, 'Float'))))) {\n        return true};\n      return $send(self, Opal.find_super_dispatcher(self, 'instance_of?', $Number_instance_of$ques$44, false), $zuper, $iter);\n    }, $Number_instance_of$ques$44.$$arity = 1);\n    \n    Opal.def(self, '$lcm', $Number_lcm$45 = function $$lcm(other) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](other))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"not an integer\")\n      };\n      \n      if (self == 0 || other == 0) {\n        return 0;\n      }\n      else {\n        return Math.abs(self * other / self.$gcd(other));\n      }\n    ;\n    }, $Number_lcm$45.$$arity = 1);\n    Opal.alias(self, \"magnitude\", \"abs\");\n    Opal.alias(self, \"modulo\", \"%\");\n    \n    Opal.def(self, '$next', $Number_next$46 = function $$next() {\n      var self = this;\n\n      return self + 1;\n    }, $Number_next$46.$$arity = 0);\n    \n    Opal.def(self, '$nobits?', $Number_nobits$ques$47 = function(mask) {\n      var self = this;\n\n      \n      mask = $$($nesting, 'Opal')['$coerce_to!'](mask, $$($nesting, 'Integer'), \"to_int\");\n      return (self & mask) == 0;;\n    }, $Number_nobits$ques$47.$$arity = 1);\n    \n    Opal.def(self, '$nonzero?', $Number_nonzero$ques$48 = function() {\n      var self = this;\n\n      return self == 0 ? nil : self;\n    }, $Number_nonzero$ques$48.$$arity = 0);\n    \n    Opal.def(self, '$numerator', $Number_numerator$49 = function $$numerator() {\n      var $a, $iter = $Number_numerator$49.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_numerator$49.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if ($truthy(($truthy($a = self['$nan?']()) ? $a : self['$infinite?']()))) {\n        return self\n      } else {\n        return $send(self, Opal.find_super_dispatcher(self, 'numerator', $Number_numerator$49, false), $zuper, $iter)\n      }\n    }, $Number_numerator$49.$$arity = 0);\n    \n    Opal.def(self, '$odd?', $Number_odd$ques$50 = function() {\n      var self = this;\n\n      return self % 2 !== 0;\n    }, $Number_odd$ques$50.$$arity = 0);\n    \n    Opal.def(self, '$ord', $Number_ord$51 = function $$ord() {\n      var self = this;\n\n      return self\n    }, $Number_ord$51.$$arity = 0);\n    \n    Opal.def(self, '$pow', $Number_pow$52 = function $$pow(b, m) {\n      var self = this;\n\n      \n      ;\n      \n      if (self == 0) {\n        self.$raise($$($nesting, 'ZeroDivisionError'), \"divided by 0\")\n      }\n\n      if (m === undefined) {\n        return self['$**'](b);\n      } else {\n        if (!($$($nesting, 'Integer')['$==='](b))) {\n          self.$raise($$($nesting, 'TypeError'), \"Integer#pow() 2nd argument not allowed unless a 1st argument is integer\")\n        }\n\n        if (b < 0) {\n          self.$raise($$($nesting, 'TypeError'), \"Integer#pow() 1st argument cannot be negative when 2nd argument specified\")\n        }\n\n        if (!($$($nesting, 'Integer')['$==='](m))) {\n          self.$raise($$($nesting, 'TypeError'), \"Integer#pow() 2nd argument not allowed unless all arguments are integers\")\n        }\n\n        if (m === 0) {\n          self.$raise($$($nesting, 'ZeroDivisionError'), \"divided by 0\")\n        }\n\n        return self['$**'](b)['$%'](m)\n      }\n    ;\n    }, $Number_pow$52.$$arity = -2);\n    \n    Opal.def(self, '$pred', $Number_pred$53 = function $$pred() {\n      var self = this;\n\n      return self - 1;\n    }, $Number_pred$53.$$arity = 0);\n    \n    Opal.def(self, '$quo', $Number_quo$54 = function $$quo(other) {\n      var $iter = $Number_quo$54.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_quo$54.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n        return $send(self, Opal.find_super_dispatcher(self, 'quo', $Number_quo$54, false), $zuper, $iter)\n      } else {\n        return $rb_divide(self, other)\n      }\n    }, $Number_quo$54.$$arity = 1);\n    \n    Opal.def(self, '$rationalize', $Number_rationalize$55 = function $$rationalize(eps) {\n      var $a, $b, self = this, f = nil, n = nil;\n\n      \n      ;\n      \n      if (arguments.length > 1) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arguments.length) + \" for 0..1)\");\n      }\n    ;\n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n        return $$($nesting, 'Rational').$new(self, 1)\n      } else if ($truthy(self['$infinite?']())) {\n        return self.$raise($$($nesting, 'FloatDomainError'), \"Infinity\")\n      } else if ($truthy(self['$nan?']())) {\n        return self.$raise($$($nesting, 'FloatDomainError'), \"NaN\")\n      } else if ($truthy(eps == null)) {\n        \n        $b = $$($nesting, 'Math').$frexp(self), $a = Opal.to_ary($b), (f = ($a[0] == null ? nil : $a[0])), (n = ($a[1] == null ? nil : $a[1])), $b;\n        f = $$($nesting, 'Math').$ldexp(f, $$$($$($nesting, 'Float'), 'MANT_DIG')).$to_i();\n        n = $rb_minus(n, $$$($$($nesting, 'Float'), 'MANT_DIG'));\n        return $$($nesting, 'Rational').$new($rb_times(2, f), (1)['$<<']($rb_minus(1, n))).$rationalize($$($nesting, 'Rational').$new(1, (1)['$<<']($rb_minus(1, n))));\n      } else {\n        return self.$to_r().$rationalize(eps)\n      };\n    }, $Number_rationalize$55.$$arity = -1);\n    \n    Opal.def(self, '$remainder', $Number_remainder$56 = function $$remainder(y) {\n      var self = this;\n\n      return $rb_minus(self, $rb_times(y, $rb_divide(self, y).$truncate()))\n    }, $Number_remainder$56.$$arity = 1);\n    \n    Opal.def(self, '$round', $Number_round$57 = function $$round(ndigits) {\n      var $a, $b, self = this, _ = nil, exp = nil;\n\n      \n      ;\n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n        \n        if ($truthy(ndigits == null)) {\n          return self};\n        if ($truthy(($truthy($a = $$($nesting, 'Float')['$==='](ndigits)) ? ndigits['$infinite?']() : $a))) {\n          self.$raise($$($nesting, 'RangeError'), \"Infinity\")};\n        ndigits = $$($nesting, 'Opal')['$coerce_to!'](ndigits, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy($rb_lt(ndigits, $$$($$($nesting, 'Integer'), 'MIN')))) {\n          self.$raise($$($nesting, 'RangeError'), \"out of bounds\")};\n        if ($truthy(ndigits >= 0)) {\n          return self};\n        ndigits = ndigits['$-@']();\n        \n        if (0.415241 * ndigits - 0.125 > self.$size()) {\n          return 0;\n        }\n\n        var f = Math.pow(10, ndigits),\n            x = Math.floor((Math.abs(x) + f / 2) / f) * f;\n\n        return self < 0 ? -x : x;\n      ;\n      } else {\n        \n        if ($truthy(($truthy($a = self['$nan?']()) ? ndigits == null : $a))) {\n          self.$raise($$($nesting, 'FloatDomainError'), \"NaN\")};\n        ndigits = $$($nesting, 'Opal')['$coerce_to!'](ndigits || 0, $$($nesting, 'Integer'), \"to_int\");\n        if ($truthy($rb_le(ndigits, 0))) {\n          if ($truthy(self['$nan?']())) {\n            self.$raise($$($nesting, 'RangeError'), \"NaN\")\n          } else if ($truthy(self['$infinite?']())) {\n            self.$raise($$($nesting, 'FloatDomainError'), \"Infinity\")}\n        } else if (ndigits['$=='](0)) {\n          return Math.round(self)\n        } else if ($truthy(($truthy($a = self['$nan?']()) ? $a : self['$infinite?']()))) {\n          return self};\n        $b = $$($nesting, 'Math').$frexp(self), $a = Opal.to_ary($b), (_ = ($a[0] == null ? nil : $a[0])), (exp = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy($rb_ge(ndigits, $rb_minus($rb_plus($$$($$($nesting, 'Float'), 'DIG'), 2), (function() {if ($truthy($rb_gt(exp, 0))) {\n          return $rb_divide(exp, 4)\n        } else {\n          return $rb_minus($rb_divide(exp, 3), 1)\n        }; return nil; })())))) {\n          return self};\n        if ($truthy($rb_lt(ndigits, (function() {if ($truthy($rb_gt(exp, 0))) {\n          return $rb_plus($rb_divide(exp, 3), 1)\n        } else {\n          return $rb_divide(exp, 4)\n        }; return nil; })()['$-@']()))) {\n          return 0};\n        return Math.round(self * Math.pow(10, ndigits)) / Math.pow(10, ndigits);;\n      };\n    }, $Number_round$57.$$arity = -1);\n    \n    Opal.def(self, '$step', $Number_step$58 = function $$step($a, $b, $c) {\n      var $iter = $Number_step$58.$$p, block = $iter || nil, $post_args, $kwargs, limit, step, to, by, $$59, self = this, positional_args = nil, keyword_args = nil;\n\n      if ($iter) $Number_step$58.$$p = null;\n      \n      \n      if ($iter) $Number_step$58.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      $kwargs = Opal.extract_kwargs($post_args);\n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      if ($post_args.length > 0) {\n        limit = $post_args[0];\n        $post_args.splice(0, 1);\n      };\n      \n      if ($post_args.length > 0) {\n        step = $post_args[0];\n        $post_args.splice(0, 1);\n      };\n      \n      to = $kwargs.$$smap[\"to\"];;\n      \n      by = $kwargs.$$smap[\"by\"];;\n      \n      if (limit !== undefined && to !== undefined) {\n        self.$raise($$($nesting, 'ArgumentError'), \"to is given twice\")\n      }\n\n      if (step !== undefined && by !== undefined) {\n        self.$raise($$($nesting, 'ArgumentError'), \"step is given twice\")\n      }\n\n      function validateParameters() {\n        if (to !== undefined) {\n          limit = to;\n        }\n\n        if (limit === undefined) {\n          limit = nil;\n        }\n\n        if (step === nil) {\n          self.$raise($$($nesting, 'TypeError'), \"step must be numeric\")\n        }\n\n        if (step === 0) {\n          self.$raise($$($nesting, 'ArgumentError'), \"step can't be 0\")\n        }\n\n        if (by !== undefined) {\n          step = by;\n        }\n\n        if (step === nil || step == null) {\n          step = 1;\n        }\n\n        var sign = step['$<=>'](0);\n\n        if (sign === nil) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"0 can't be coerced into \" + (step.$class()))\n        }\n\n        if (limit === nil || limit == null) {\n          limit = sign > 0 ? $$$($$($nesting, 'Float'), 'INFINITY') : $$$($$($nesting, 'Float'), 'INFINITY')['$-@']();\n        }\n\n        $$($nesting, 'Opal').$compare(self, limit)\n      }\n\n      function stepFloatSize() {\n        if ((step > 0 && self > limit) || (step < 0 && self < limit)) {\n          return 0;\n        } else if (step === Infinity || step === -Infinity) {\n          return 1;\n        } else {\n          var abs = Math.abs, floor = Math.floor,\n              err = (abs(self) + abs(limit) + abs(limit - self)) / abs(step) * $$$($$($nesting, 'Float'), 'EPSILON');\n\n          if (err === Infinity || err === -Infinity) {\n            return 0;\n          } else {\n            if (err > 0.5) {\n              err = 0.5;\n            }\n\n            return floor((limit - self) / step + err) + 1\n          }\n        }\n      }\n\n      function stepSize() {\n        validateParameters();\n\n        if (step === 0) {\n          return Infinity;\n        }\n\n        if (step % 1 !== 0) {\n          return stepFloatSize();\n        } else if ((step > 0 && self > limit) || (step < 0 && self < limit)) {\n          return 0;\n        } else {\n          var ceil = Math.ceil, abs = Math.abs,\n              lhs = abs(self - limit) + 1,\n              rhs = abs(step);\n\n          return ceil(lhs / rhs);\n        }\n      }\n    ;\n      if ((block !== nil)) {\n      } else {\n        \n        positional_args = [];\n        keyword_args = $hash2([], {});\n        \n        if (limit !== undefined) {\n          positional_args.push(limit);\n        }\n\n        if (step !== undefined) {\n          positional_args.push(step);\n        }\n\n        if (to !== undefined) {\n          Opal.hash_put(keyword_args, \"to\", to);\n        }\n\n        if (by !== undefined) {\n          Opal.hash_put(keyword_args, \"by\", by);\n        }\n\n        if (keyword_args['$any?']()) {\n          positional_args.push(keyword_args);\n        }\n      ;\n        return $send(self, 'enum_for', [\"step\"].concat(Opal.to_a(positional_args)), ($$59 = function(){var self = $$59.$$s || this;\n\n        return stepSize();}, $$59.$$s = self, $$59.$$arity = 0, $$59));\n      };\n      \n      validateParameters();\n\n      if (step === 0) {\n        while (true) {\n          block(self);\n        }\n      }\n\n      if (self % 1 !== 0 || limit % 1 !== 0 || step % 1 !== 0) {\n        var n = stepFloatSize();\n\n        if (n > 0) {\n          if (step === Infinity || step === -Infinity) {\n            block(self);\n          } else {\n            var i = 0, d;\n\n            if (step > 0) {\n              while (i < n) {\n                d = i * step + self;\n                if (limit < d) {\n                  d = limit;\n                }\n                block(d);\n                i += 1;\n              }\n            } else {\n              while (i < n) {\n                d = i * step + self;\n                if (limit > d) {\n                  d = limit;\n                }\n                block(d);\n                i += 1\n              }\n            }\n          }\n        }\n      } else {\n        var value = self;\n\n        if (step > 0) {\n          while (value <= limit) {\n            block(value);\n            value += step;\n          }\n        } else {\n          while (value >= limit) {\n            block(value);\n            value += step\n          }\n        }\n      }\n\n      return self;\n    ;\n    }, $Number_step$58.$$arity = -1);\n    Opal.alias(self, \"succ\", \"next\");\n    \n    Opal.def(self, '$times', $Number_times$60 = function $$times() {\n      var $iter = $Number_times$60.$$p, block = $iter || nil, $$61, self = this;\n\n      if ($iter) $Number_times$60.$$p = null;\n      \n      \n      if ($iter) $Number_times$60.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        return $send(self, 'enum_for', [\"times\"], ($$61 = function(){var self = $$61.$$s || this;\n\n        return self}, $$61.$$s = self, $$61.$$arity = 0, $$61))\n      };\n      \n      for (var i = 0; i < self; i++) {\n        block(i);\n      }\n    ;\n      return self;\n    }, $Number_times$60.$$arity = 0);\n    \n    Opal.def(self, '$to_f', $Number_to_f$62 = function $$to_f() {\n      var self = this;\n\n      return self\n    }, $Number_to_f$62.$$arity = 0);\n    \n    Opal.def(self, '$to_i', $Number_to_i$63 = function $$to_i() {\n      var self = this;\n\n      return parseInt(self, 10);\n    }, $Number_to_i$63.$$arity = 0);\n    Opal.alias(self, \"to_int\", \"to_i\");\n    \n    Opal.def(self, '$to_r', $Number_to_r$64 = function $$to_r() {\n      var $a, $b, self = this, f = nil, e = nil;\n\n      if ($truthy($$($nesting, 'Integer')['$==='](self))) {\n        return $$($nesting, 'Rational').$new(self, 1)\n      } else {\n        \n        $b = $$($nesting, 'Math').$frexp(self), $a = Opal.to_ary($b), (f = ($a[0] == null ? nil : $a[0])), (e = ($a[1] == null ? nil : $a[1])), $b;\n        f = $$($nesting, 'Math').$ldexp(f, $$$($$($nesting, 'Float'), 'MANT_DIG')).$to_i();\n        e = $rb_minus(e, $$$($$($nesting, 'Float'), 'MANT_DIG'));\n        return $rb_times(f, $$$($$($nesting, 'Float'), 'RADIX')['$**'](e)).$to_r();\n      }\n    }, $Number_to_r$64.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Number_to_s$65 = function $$to_s(base) {\n      var $a, self = this;\n\n      \n      \n      if (base == null) {\n        base = 10;\n      };\n      base = $$($nesting, 'Opal')['$coerce_to!'](base, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy(($truthy($a = $rb_lt(base, 2)) ? $a : $rb_gt(base, 36)))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid radix \" + (base))};\n      return self.toString(base);;\n    }, $Number_to_s$65.$$arity = -1);\n    \n    Opal.def(self, '$truncate', $Number_truncate$66 = function $$truncate(ndigits) {\n      var self = this;\n\n      \n      \n      if (ndigits == null) {\n        ndigits = 0;\n      };\n      \n      var f = self.$to_f();\n\n      if (f % 1 === 0 && ndigits >= 0) {\n        return f;\n      }\n\n      var factor = Math.pow(10, ndigits),\n          result = parseInt(f * factor, 10) / factor;\n\n      if (f % 1 === 0) {\n        result = Math.round(result);\n      }\n\n      return result;\n    ;\n    }, $Number_truncate$66.$$arity = -1);\n    Opal.alias(self, \"inspect\", \"to_s\");\n    \n    Opal.def(self, '$digits', $Number_digits$67 = function $$digits(base) {\n      var self = this;\n\n      \n      \n      if (base == null) {\n        base = 10;\n      };\n      if ($rb_lt(self, 0)) {\n        self.$raise($$$($$($nesting, 'Math'), 'DomainError'), \"out of domain\")};\n      base = $$($nesting, 'Opal')['$coerce_to!'](base, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy($rb_lt(base, 2))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid radix \" + (base))};\n      \n      var value = self, result = [];\n\n      while (value !== 0) {\n        result.push(value % base);\n        value = parseInt(value / base, 10);\n      }\n\n      return result;\n    ;\n    }, $Number_digits$67.$$arity = -1);\n    \n    Opal.def(self, '$divmod', $Number_divmod$68 = function $$divmod(other) {\n      var $a, $iter = $Number_divmod$68.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Number_divmod$68.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if ($truthy(($truthy($a = self['$nan?']()) ? $a : other['$nan?']()))) {\n        return self.$raise($$($nesting, 'FloatDomainError'), \"NaN\")\n      } else if ($truthy(self['$infinite?']())) {\n        return self.$raise($$($nesting, 'FloatDomainError'), \"Infinity\")\n      } else {\n        return $send(self, Opal.find_super_dispatcher(self, 'divmod', $Number_divmod$68, false), $zuper, $iter)\n      }\n    }, $Number_divmod$68.$$arity = 1);\n    \n    Opal.def(self, '$upto', $Number_upto$69 = function $$upto(stop) {\n      var $iter = $Number_upto$69.$$p, block = $iter || nil, $$70, self = this;\n\n      if ($iter) $Number_upto$69.$$p = null;\n      \n      \n      if ($iter) $Number_upto$69.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"upto\", stop], ($$70 = function(){var self = $$70.$$s || this;\n\n        \n          if ($truthy($$($nesting, 'Numeric')['$==='](stop))) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (stop.$class()) + \" failed\")\n          };\n          if ($truthy($rb_lt(stop, self))) {\n            return 0\n          } else {\n            return $rb_plus($rb_minus(stop, self), 1)\n          };}, $$70.$$s = self, $$70.$$arity = 0, $$70))\n      };\n      \n      if (!stop.$$is_number) {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"comparison of \" + (self.$class()) + \" with \" + (stop.$class()) + \" failed\")\n      }\n      for (var i = self; i <= stop; i++) {\n        block(i);\n      }\n    ;\n      return self;\n    }, $Number_upto$69.$$arity = 1);\n    \n    Opal.def(self, '$zero?', $Number_zero$ques$71 = function() {\n      var self = this;\n\n      return self == 0;\n    }, $Number_zero$ques$71.$$arity = 0);\n    \n    Opal.def(self, '$size', $Number_size$72 = function $$size() {\n      var self = this;\n\n      return 4\n    }, $Number_size$72.$$arity = 0);\n    \n    Opal.def(self, '$nan?', $Number_nan$ques$73 = function() {\n      var self = this;\n\n      return isNaN(self);\n    }, $Number_nan$ques$73.$$arity = 0);\n    \n    Opal.def(self, '$finite?', $Number_finite$ques$74 = function() {\n      var self = this;\n\n      return self != Infinity && self != -Infinity && !isNaN(self);\n    }, $Number_finite$ques$74.$$arity = 0);\n    \n    Opal.def(self, '$infinite?', $Number_infinite$ques$75 = function() {\n      var self = this;\n\n      \n      if (self == Infinity) {\n        return +1;\n      }\n      else if (self == -Infinity) {\n        return -1;\n      }\n      else {\n        return nil;\n      }\n    \n    }, $Number_infinite$ques$75.$$arity = 0);\n    \n    Opal.def(self, '$positive?', $Number_positive$ques$76 = function() {\n      var self = this;\n\n      return self != 0 && (self == Infinity || 1 / self > 0);\n    }, $Number_positive$ques$76.$$arity = 0);\n    return (Opal.def(self, '$negative?', $Number_negative$ques$77 = function() {\n      var self = this;\n\n      return self == -Infinity || 1 / self < 0;\n    }, $Number_negative$ques$77.$$arity = 0), nil) && 'negative?';\n  })($nesting[0], $$($nesting, 'Numeric'), $nesting);\n  Opal.const_set($nesting[0], 'Fixnum', $$($nesting, 'Number'));\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Integer');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    self.$$is_number_class = true;\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$78, $eq_eq_eq$79, $sqrt$80;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$78 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$78.$$arity = 0);\n      \n      Opal.udef(self, '$' + \"new\");;\n      \n      Opal.def(self, '$===', $eq_eq_eq$79 = function(other) {\n        var self = this;\n\n        \n        if (!other.$$is_number) {\n          return false;\n        }\n\n        return (other % 1) === 0;\n      \n      }, $eq_eq_eq$79.$$arity = 1);\n      return (Opal.def(self, '$sqrt', $sqrt$80 = function $$sqrt(n) {\n        var self = this;\n\n        \n        n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\");\n        \n        if (n < 0) {\n          self.$raise($$$($$($nesting, 'Math'), 'DomainError'), \"Numerical argument is out of domain - \\\"isqrt\\\"\")\n        }\n\n        return parseInt(Math.sqrt(n), 10);\n      ;\n      }, $sqrt$80.$$arity = 1), nil) && 'sqrt';\n    })(Opal.get_singleton_class(self), $nesting);\n    Opal.const_set($nesting[0], 'MAX', Math.pow(2, 30) - 1);\n    return Opal.const_set($nesting[0], 'MIN', -Math.pow(2, 30));\n  })($nesting[0], $$($nesting, 'Numeric'), $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Float');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    self.$$is_number_class = true;\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $allocate$81, $eq_eq_eq$82;\n\n      \n      \n      Opal.def(self, '$allocate', $allocate$81 = function $$allocate() {\n        var self = this;\n\n        return self.$raise($$($nesting, 'TypeError'), \"\" + \"allocator undefined for \" + (self.$name()))\n      }, $allocate$81.$$arity = 0);\n      \n      Opal.udef(self, '$' + \"new\");;\n      return (Opal.def(self, '$===', $eq_eq_eq$82 = function(other) {\n        var self = this;\n\n        return !!other.$$is_number;\n      }, $eq_eq_eq$82.$$arity = 1), nil) && '===';\n    })(Opal.get_singleton_class(self), $nesting);\n    Opal.const_set($nesting[0], 'INFINITY', Infinity);\n    Opal.const_set($nesting[0], 'MAX', Number.MAX_VALUE);\n    Opal.const_set($nesting[0], 'MIN', Number.MIN_VALUE);\n    Opal.const_set($nesting[0], 'NAN', NaN);\n    Opal.const_set($nesting[0], 'DIG', 15);\n    Opal.const_set($nesting[0], 'MANT_DIG', 53);\n    Opal.const_set($nesting[0], 'RADIX', 2);\n    return Opal.const_set($nesting[0], 'EPSILON', Number.EPSILON || 2.2204460492503130808472633361816E-16);\n  })($nesting[0], $$($nesting, 'Numeric'), $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/range\"] = function(Opal) {\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$require', '$include', '$attr_reader', '$raise', '$<=>', '$include?', '$<=', '$<', '$enum_for', '$upto', '$to_proc', '$respond_to?', '$class', '$succ', '$!', '$==', '$===', '$exclude_end?', '$eql?', '$begin', '$end', '$last', '$to_a', '$>', '$-', '$abs', '$to_i', '$coerce_to!', '$ceil', '$/', '$size', '$loop', '$+', '$*', '$>=', '$each_with_index', '$%', '$bsearch', '$inspect', '$[]', '$hash']);\n  \n  self.$require(\"corelib/enumerable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Range');\n\n    var $nesting = [self].concat($parent_nesting), $Range_initialize$1, $Range_$eq_eq$2, $Range_$eq_eq_eq$3, $Range_cover$ques$4, $Range_each$5, $Range_eql$ques$6, $Range_exclude_end$ques$7, $Range_first$8, $Range_last$9, $Range_max$10, $Range_min$11, $Range_size$12, $Range_step$13, $Range_bsearch$17, $Range_to_s$18, $Range_inspect$19, $Range_marshal_load$20, $Range_hash$21;\n\n    self.$$prototype.begin = self.$$prototype.end = self.$$prototype.excl = nil;\n    \n    self.$include($$($nesting, 'Enumerable'));\n    self.$$prototype.$$is_range = true;\n    self.$attr_reader(\"begin\", \"end\");\n    \n    Opal.def(self, '$initialize', $Range_initialize$1 = function $$initialize(first, last, exclude) {\n      var self = this;\n\n      \n      \n      if (exclude == null) {\n        exclude = false;\n      };\n      if ($truthy(self.begin)) {\n        self.$raise($$($nesting, 'NameError'), \"'initialize' called twice\")};\n      if ($truthy(first['$<=>'](last))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"bad value for range\")\n      };\n      self.begin = first;\n      self.end = last;\n      return (self.excl = exclude);\n    }, $Range_initialize$1.$$arity = -3);\n    \n    Opal.def(self, '$==', $Range_$eq_eq$2 = function(other) {\n      var self = this;\n\n      \n      if (!other.$$is_range) {\n        return false;\n      }\n\n      return self.excl  === other.excl &&\n             self.begin ==  other.begin &&\n             self.end   ==  other.end;\n    \n    }, $Range_$eq_eq$2.$$arity = 1);\n    \n    Opal.def(self, '$===', $Range_$eq_eq_eq$3 = function(value) {\n      var self = this;\n\n      return self['$include?'](value)\n    }, $Range_$eq_eq_eq$3.$$arity = 1);\n    \n    Opal.def(self, '$cover?', $Range_cover$ques$4 = function(value) {\n      var $a, self = this, beg_cmp = nil, end_cmp = nil;\n\n      \n      beg_cmp = self.begin['$<=>'](value);\n      if ($truthy(($truthy($a = beg_cmp) ? $rb_le(beg_cmp, 0) : $a))) {\n      } else {\n        return false\n      };\n      end_cmp = value['$<=>'](self.end);\n      if ($truthy(self.excl)) {\n        return ($truthy($a = end_cmp) ? $rb_lt(end_cmp, 0) : $a)\n      } else {\n        return ($truthy($a = end_cmp) ? $rb_le(end_cmp, 0) : $a)\n      };\n    }, $Range_cover$ques$4.$$arity = 1);\n    \n    Opal.def(self, '$each', $Range_each$5 = function $$each() {\n      var $iter = $Range_each$5.$$p, block = $iter || nil, $a, self = this, current = nil, last = nil;\n\n      if ($iter) $Range_each$5.$$p = null;\n      \n      \n      if ($iter) $Range_each$5.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"each\")\n      };\n      \n      var i, limit;\n\n      if (self.begin.$$is_number && self.end.$$is_number) {\n        if (self.begin % 1 !== 0 || self.end % 1 !== 0) {\n          self.$raise($$($nesting, 'TypeError'), \"can't iterate from Float\")\n        }\n\n        for (i = self.begin, limit = self.end + (function() {if ($truthy(self.excl)) {\n        return 0\n      } else {\n        return 1\n      }; return nil; })(); i < limit; i++) {\n          block(i);\n        }\n\n        return self;\n      }\n\n      if (self.begin.$$is_string && self.end.$$is_string) {\n        $send(self.begin, 'upto', [self.end, self.excl], block.$to_proc())\n        return self;\n      }\n    ;\n      current = self.begin;\n      last = self.end;\n      if ($truthy(current['$respond_to?'](\"succ\"))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't iterate from \" + (current.$class()))\n      };\n      while ($truthy($rb_lt(current['$<=>'](last), 0))) {\n        \n        Opal.yield1(block, current);\n        current = current.$succ();\n      };\n      if ($truthy(($truthy($a = self.excl['$!']()) ? current['$=='](last) : $a))) {\n        Opal.yield1(block, current)};\n      return self;\n    }, $Range_each$5.$$arity = 0);\n    \n    Opal.def(self, '$eql?', $Range_eql$ques$6 = function(other) {\n      var $a, $b, self = this;\n\n      \n      if ($truthy($$($nesting, 'Range')['$==='](other))) {\n      } else {\n        return false\n      };\n      return ($truthy($a = ($truthy($b = self.excl['$==='](other['$exclude_end?']())) ? self.begin['$eql?'](other.$begin()) : $b)) ? self.end['$eql?'](other.$end()) : $a);\n    }, $Range_eql$ques$6.$$arity = 1);\n    \n    Opal.def(self, '$exclude_end?', $Range_exclude_end$ques$7 = function() {\n      var self = this;\n\n      return self.excl\n    }, $Range_exclude_end$ques$7.$$arity = 0);\n    \n    Opal.def(self, '$first', $Range_first$8 = function $$first(n) {\n      var $iter = $Range_first$8.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Range_first$8.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      \n      ;\n      if ($truthy(n == null)) {\n        return self.begin};\n      return $send(self, Opal.find_super_dispatcher(self, 'first', $Range_first$8, false), $zuper, $iter);\n    }, $Range_first$8.$$arity = -1);\n    Opal.alias(self, \"include?\", \"cover?\");\n    \n    Opal.def(self, '$last', $Range_last$9 = function $$last(n) {\n      var self = this;\n\n      \n      ;\n      if ($truthy(n == null)) {\n        return self.end};\n      return self.$to_a().$last(n);\n    }, $Range_last$9.$$arity = -1);\n    \n    Opal.def(self, '$max', $Range_max$10 = function $$max() {\n      var $a, $iter = $Range_max$10.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Range_max$10.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if (($yield !== nil)) {\n        return $send(self, Opal.find_super_dispatcher(self, 'max', $Range_max$10, false), $zuper, $iter)\n      } else if ($truthy($rb_gt(self.begin, self.end))) {\n        return nil\n      } else if ($truthy(($truthy($a = self.excl) ? self.begin['$=='](self.end) : $a))) {\n        return nil\n      } else {\n        return self.excl ? self.end - 1 : self.end\n      }\n    }, $Range_max$10.$$arity = 0);\n    Opal.alias(self, \"member?\", \"cover?\");\n    \n    Opal.def(self, '$min', $Range_min$11 = function $$min() {\n      var $a, $iter = $Range_min$11.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n      if ($iter) $Range_min$11.$$p = null;\n      // Prepare super implicit arguments\n      for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n        $zuper[$zuper_i] = arguments[$zuper_i];\n      }\n      if (($yield !== nil)) {\n        return $send(self, Opal.find_super_dispatcher(self, 'min', $Range_min$11, false), $zuper, $iter)\n      } else if ($truthy($rb_gt(self.begin, self.end))) {\n        return nil\n      } else if ($truthy(($truthy($a = self.excl) ? self.begin['$=='](self.end) : $a))) {\n        return nil\n      } else {\n        return self.begin\n      }\n    }, $Range_min$11.$$arity = 0);\n    \n    Opal.def(self, '$size', $Range_size$12 = function $$size() {\n      var $a, self = this, range_begin = nil, range_end = nil, infinity = nil;\n\n      \n      range_begin = self.begin;\n      range_end = self.end;\n      if ($truthy(self.excl)) {\n        range_end = $rb_minus(range_end, 1)};\n      if ($truthy(($truthy($a = $$($nesting, 'Numeric')['$==='](range_begin)) ? $$($nesting, 'Numeric')['$==='](range_end) : $a))) {\n      } else {\n        return nil\n      };\n      if ($truthy($rb_lt(range_end, range_begin))) {\n        return 0};\n      infinity = $$$($$($nesting, 'Float'), 'INFINITY');\n      if ($truthy([range_begin.$abs(), range_end.$abs()]['$include?'](infinity))) {\n        return infinity};\n      return (Math.abs(range_end - range_begin) + 1).$to_i();\n    }, $Range_size$12.$$arity = 0);\n    \n    Opal.def(self, '$step', $Range_step$13 = function $$step(n) {\n      var $$14, $$15, $$16, $iter = $Range_step$13.$$p, $yield = $iter || nil, self = this, i = nil;\n\n      if ($iter) $Range_step$13.$$p = null;\n      \n      \n      if (n == null) {\n        n = 1;\n      };\n      \n      function coerceStepSize() {\n        if (!n.$$is_number) {\n          n = $$($nesting, 'Opal')['$coerce_to!'](n, $$($nesting, 'Integer'), \"to_int\")\n        }\n\n        if (n < 0) {\n          self.$raise($$($nesting, 'ArgumentError'), \"step can't be negative\")\n        } else if (n === 0) {\n          self.$raise($$($nesting, 'ArgumentError'), \"step can't be 0\")\n        }\n      }\n\n      function enumeratorSize() {\n        if (!self.begin['$respond_to?'](\"succ\")) {\n          return nil;\n        }\n\n        if (self.begin.$$is_string && self.end.$$is_string) {\n          return nil;\n        }\n\n        if (n % 1 === 0) {\n          return $rb_divide(self.$size(), n).$ceil();\n        } else {\n          // n is a float\n          var begin = self.begin, end = self.end,\n              abs = Math.abs, floor = Math.floor,\n              err = (abs(begin) + abs(end) + abs(end - begin)) / abs(n) * $$$($$($nesting, 'Float'), 'EPSILON'),\n              size;\n\n          if (err > 0.5) {\n            err = 0.5;\n          }\n\n          if (self.excl) {\n            size = floor((end - begin) / n - err);\n            if (size * n + begin < end) {\n              size++;\n            }\n          } else {\n            size = floor((end - begin) / n + err) + 1\n          }\n\n          return size;\n        }\n      }\n    ;\n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"step\", n], ($$14 = function(){var self = $$14.$$s || this;\n\n        \n          coerceStepSize();\n          return enumeratorSize();\n        }, $$14.$$s = self, $$14.$$arity = 0, $$14))\n      };\n      coerceStepSize();\n      if ($truthy(self.begin.$$is_number && self.end.$$is_number)) {\n        \n        i = 0;\n        (function(){var $brk = Opal.new_brk(); try {return $send(self, 'loop', [], ($$15 = function(){var self = $$15.$$s || this, current = nil;\n          if (self.begin == null) self.begin = nil;\n          if (self.excl == null) self.excl = nil;\n          if (self.end == null) self.end = nil;\n\n        \n          current = $rb_plus(self.begin, $rb_times(i, n));\n          if ($truthy(self.excl)) {\n            if ($truthy($rb_ge(current, self.end))) {\n              \n              Opal.brk(nil, $brk)}\n          } else if ($truthy($rb_gt(current, self.end))) {\n            \n            Opal.brk(nil, $brk)};\n          Opal.yield1($yield, current);\n          return (i = $rb_plus(i, 1));}, $$15.$$s = self, $$15.$$brk = $brk, $$15.$$arity = 0, $$15))\n        } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n      } else {\n        \n        \n        if (self.begin.$$is_string && self.end.$$is_string && n % 1 !== 0) {\n          self.$raise($$($nesting, 'TypeError'), \"no implicit conversion to float from string\")\n        }\n      ;\n        $send(self, 'each_with_index', [], ($$16 = function(value, idx){var self = $$16.$$s || this;\n\n        \n          \n          if (value == null) {\n            value = nil;\n          };\n          \n          if (idx == null) {\n            idx = nil;\n          };\n          if (idx['$%'](n)['$=='](0)) {\n            return Opal.yield1($yield, value);\n          } else {\n            return nil\n          };}, $$16.$$s = self, $$16.$$arity = 2, $$16));\n      };\n      return self;\n    }, $Range_step$13.$$arity = -1);\n    \n    Opal.def(self, '$bsearch', $Range_bsearch$17 = function $$bsearch() {\n      var $iter = $Range_bsearch$17.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Range_bsearch$17.$$p = null;\n      \n      \n      if ($iter) $Range_bsearch$17.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"bsearch\")\n      };\n      if ($truthy(self.begin.$$is_number && self.end.$$is_number)) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't do binary search for \" + (self.begin.$class()))\n      };\n      return $send(self.$to_a(), 'bsearch', [], block.$to_proc());\n    }, $Range_bsearch$17.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Range_to_s$18 = function $$to_s() {\n      var self = this;\n\n      return \"\" + (self.begin) + ((function() {if ($truthy(self.excl)) {\n        return \"...\"\n      } else {\n        return \"..\"\n      }; return nil; })()) + (self.end)\n    }, $Range_to_s$18.$$arity = 0);\n    \n    Opal.def(self, '$inspect', $Range_inspect$19 = function $$inspect() {\n      var self = this;\n\n      return \"\" + (self.begin.$inspect()) + ((function() {if ($truthy(self.excl)) {\n        return \"...\"\n      } else {\n        return \"..\"\n      }; return nil; })()) + (self.end.$inspect())\n    }, $Range_inspect$19.$$arity = 0);\n    \n    Opal.def(self, '$marshal_load', $Range_marshal_load$20 = function $$marshal_load(args) {\n      var self = this;\n\n      \n      self.begin = args['$[]'](\"begin\");\n      self.end = args['$[]'](\"end\");\n      return (self.excl = args['$[]'](\"excl\"));\n    }, $Range_marshal_load$20.$$arity = 1);\n    return (Opal.def(self, '$hash', $Range_hash$21 = function $$hash() {\n      var self = this;\n\n      return [self.begin, self.end, self.excl].$hash()\n    }, $Range_hash$21.$$arity = 0), nil) && 'hash';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/proc\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$raise', '$coerce_to!']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Proc');\n\n    var $nesting = [self].concat($parent_nesting), $Proc_new$1, $Proc_call$2, $Proc_to_proc$3, $Proc_lambda$ques$4, $Proc_arity$5, $Proc_source_location$6, $Proc_binding$7, $Proc_parameters$8, $Proc_curry$9, $Proc_dup$10;\n\n    \n    Opal.defineProperty(self.$$prototype, '$$is_proc', true);\n    Opal.defineProperty(self.$$prototype, '$$is_lambda', false);\n    Opal.defs(self, '$new', $Proc_new$1 = function() {\n      var $iter = $Proc_new$1.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Proc_new$1.$$p = null;\n      \n      \n      if ($iter) $Proc_new$1.$$p = null;;\n      if ($truthy(block)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"tried to create a Proc object without a block\")\n      };\n      return block;\n    }, $Proc_new$1.$$arity = 0);\n    \n    Opal.def(self, '$call', $Proc_call$2 = function $$call($a) {\n      var $iter = $Proc_call$2.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Proc_call$2.$$p = null;\n      \n      \n      if ($iter) $Proc_call$2.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      if (block !== nil) {\n        self.$$p = block;\n      }\n\n      var result, $brk = self.$$brk;\n\n      if ($brk) {\n        try {\n          if (self.$$is_lambda) {\n            result = self.apply(null, args);\n          }\n          else {\n            result = Opal.yieldX(self, args);\n          }\n        } catch (err) {\n          if (err === $brk) {\n            return $brk.$v\n          }\n          else {\n            throw err\n          }\n        }\n      }\n      else {\n        if (self.$$is_lambda) {\n          result = self.apply(null, args);\n        }\n        else {\n          result = Opal.yieldX(self, args);\n        }\n      }\n\n      return result;\n    ;\n    }, $Proc_call$2.$$arity = -1);\n    Opal.alias(self, \"[]\", \"call\");\n    Opal.alias(self, \"===\", \"call\");\n    Opal.alias(self, \"yield\", \"call\");\n    \n    Opal.def(self, '$to_proc', $Proc_to_proc$3 = function $$to_proc() {\n      var self = this;\n\n      return self\n    }, $Proc_to_proc$3.$$arity = 0);\n    \n    Opal.def(self, '$lambda?', $Proc_lambda$ques$4 = function() {\n      var self = this;\n\n      return !!self.$$is_lambda;\n    }, $Proc_lambda$ques$4.$$arity = 0);\n    \n    Opal.def(self, '$arity', $Proc_arity$5 = function $$arity() {\n      var self = this;\n\n      \n      if (self.$$is_curried) {\n        return -1;\n      } else {\n        return self.$$arity;\n      }\n    \n    }, $Proc_arity$5.$$arity = 0);\n    \n    Opal.def(self, '$source_location', $Proc_source_location$6 = function $$source_location() {\n      var self = this;\n\n      \n      if (self.$$is_curried) { return nil; };\n      return nil;\n    }, $Proc_source_location$6.$$arity = 0);\n    \n    Opal.def(self, '$binding', $Proc_binding$7 = function $$binding() {\n      var self = this;\n\n      \n      if (self.$$is_curried) { self.$raise($$($nesting, 'ArgumentError'), \"Can't create Binding\") };\n      return nil;\n    }, $Proc_binding$7.$$arity = 0);\n    \n    Opal.def(self, '$parameters', $Proc_parameters$8 = function $$parameters() {\n      var self = this;\n\n      \n      if (self.$$is_curried) {\n        return [[\"rest\"]];\n      } else if (self.$$parameters) {\n        if (self.$$is_lambda) {\n          return self.$$parameters;\n        } else {\n          var result = [], i, length;\n\n          for (i = 0, length = self.$$parameters.length; i < length; i++) {\n            var parameter = self.$$parameters[i];\n\n            if (parameter[0] === 'req') {\n              // required arguments always have name\n              parameter = ['opt', parameter[1]];\n            }\n\n            result.push(parameter);\n          }\n\n          return result;\n        }\n      } else {\n        return [];\n      }\n    \n    }, $Proc_parameters$8.$$arity = 0);\n    \n    Opal.def(self, '$curry', $Proc_curry$9 = function $$curry(arity) {\n      var self = this;\n\n      \n      ;\n      \n      if (arity === undefined) {\n        arity = self.length;\n      }\n      else {\n        arity = $$($nesting, 'Opal')['$coerce_to!'](arity, $$($nesting, 'Integer'), \"to_int\");\n        if (self.$$is_lambda && arity !== self.length) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (arity) + \" for \" + (self.length) + \")\")\n        }\n      }\n\n      function curried () {\n        var args = $slice.call(arguments),\n            length = args.length,\n            result;\n\n        if (length > arity && self.$$is_lambda && !self.$$is_curried) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (\" + (length) + \" for \" + (arity) + \")\")\n        }\n\n        if (length >= arity) {\n          return self.$call.apply(self, args);\n        }\n\n        result = function () {\n          return curried.apply(null,\n            args.concat($slice.call(arguments)));\n        }\n        result.$$is_lambda = self.$$is_lambda;\n        result.$$is_curried = true;\n\n        return result;\n      };\n\n      curried.$$is_lambda = self.$$is_lambda;\n      curried.$$is_curried = true;\n      return curried;\n    ;\n    }, $Proc_curry$9.$$arity = -1);\n    \n    Opal.def(self, '$dup', $Proc_dup$10 = function $$dup() {\n      var self = this;\n\n      \n      var original_proc = self.$$original_proc || self,\n          proc = function () {\n            return original_proc.apply(this, arguments);\n          };\n\n      for (var prop in self) {\n        if (self.hasOwnProperty(prop)) {\n          proc[prop] = self[prop];\n        }\n      }\n\n      return proc;\n    \n    }, $Proc_dup$10.$$arity = 0);\n    return Opal.alias(self, \"clone\", \"dup\");\n  })($nesting[0], Function, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/method\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_reader', '$arity', '$new', '$class', '$join', '$source_location', '$raise']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Method');\n\n    var $nesting = [self].concat($parent_nesting), $Method_initialize$1, $Method_arity$2, $Method_parameters$3, $Method_source_location$4, $Method_comments$5, $Method_call$6, $Method_unbind$7, $Method_to_proc$8, $Method_inspect$9;\n\n    self.$$prototype.method = self.$$prototype.receiver = self.$$prototype.owner = self.$$prototype.name = nil;\n    \n    self.$attr_reader(\"owner\", \"receiver\", \"name\");\n    \n    Opal.def(self, '$initialize', $Method_initialize$1 = function $$initialize(receiver, owner, method, name) {\n      var self = this;\n\n      \n      self.receiver = receiver;\n      self.owner = owner;\n      self.name = name;\n      return (self.method = method);\n    }, $Method_initialize$1.$$arity = 4);\n    \n    Opal.def(self, '$arity', $Method_arity$2 = function $$arity() {\n      var self = this;\n\n      return self.method.$arity()\n    }, $Method_arity$2.$$arity = 0);\n    \n    Opal.def(self, '$parameters', $Method_parameters$3 = function $$parameters() {\n      var self = this;\n\n      return self.method.$$parameters\n    }, $Method_parameters$3.$$arity = 0);\n    \n    Opal.def(self, '$source_location', $Method_source_location$4 = function $$source_location() {\n      var $a, self = this;\n\n      return ($truthy($a = self.method.$$source_location) ? $a : [\"(eval)\", 0])\n    }, $Method_source_location$4.$$arity = 0);\n    \n    Opal.def(self, '$comments', $Method_comments$5 = function $$comments() {\n      var $a, self = this;\n\n      return ($truthy($a = self.method.$$comments) ? $a : [])\n    }, $Method_comments$5.$$arity = 0);\n    \n    Opal.def(self, '$call', $Method_call$6 = function $$call($a) {\n      var $iter = $Method_call$6.$$p, block = $iter || nil, $post_args, args, self = this;\n\n      if ($iter) $Method_call$6.$$p = null;\n      \n      \n      if ($iter) $Method_call$6.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      \n      self.method.$$p = block;\n\n      return self.method.apply(self.receiver, args);\n    ;\n    }, $Method_call$6.$$arity = -1);\n    Opal.alias(self, \"[]\", \"call\");\n    \n    Opal.def(self, '$unbind', $Method_unbind$7 = function $$unbind() {\n      var self = this;\n\n      return $$($nesting, 'UnboundMethod').$new(self.receiver.$class(), self.owner, self.method, self.name)\n    }, $Method_unbind$7.$$arity = 0);\n    \n    Opal.def(self, '$to_proc', $Method_to_proc$8 = function $$to_proc() {\n      var self = this;\n\n      \n      var proc = self.$call.bind(self);\n      proc.$$unbound = self.method;\n      proc.$$is_lambda = true;\n      proc.$$arity = self.method.$$arity;\n      proc.$$parameters = self.method.$$parameters;\n      return proc;\n    \n    }, $Method_to_proc$8.$$arity = 0);\n    return (Opal.def(self, '$inspect', $Method_inspect$9 = function $$inspect() {\n      var self = this;\n\n      return \"\" + \"#<\" + (self.$class()) + \": \" + (self.receiver.$class()) + \"#\" + (self.name) + \" (defined in \" + (self.owner) + \" in \" + (self.$source_location().$join(\":\")) + \")>\"\n    }, $Method_inspect$9.$$arity = 0), nil) && 'inspect';\n  })($nesting[0], null, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'UnboundMethod');\n\n    var $nesting = [self].concat($parent_nesting), $UnboundMethod_initialize$10, $UnboundMethod_arity$11, $UnboundMethod_parameters$12, $UnboundMethod_source_location$13, $UnboundMethod_comments$14, $UnboundMethod_bind$15, $UnboundMethod_inspect$16;\n\n    self.$$prototype.method = self.$$prototype.owner = self.$$prototype.name = self.$$prototype.source = nil;\n    \n    self.$attr_reader(\"source\", \"owner\", \"name\");\n    \n    Opal.def(self, '$initialize', $UnboundMethod_initialize$10 = function $$initialize(source, owner, method, name) {\n      var self = this;\n\n      \n      self.source = source;\n      self.owner = owner;\n      self.method = method;\n      return (self.name = name);\n    }, $UnboundMethod_initialize$10.$$arity = 4);\n    \n    Opal.def(self, '$arity', $UnboundMethod_arity$11 = function $$arity() {\n      var self = this;\n\n      return self.method.$arity()\n    }, $UnboundMethod_arity$11.$$arity = 0);\n    \n    Opal.def(self, '$parameters', $UnboundMethod_parameters$12 = function $$parameters() {\n      var self = this;\n\n      return self.method.$$parameters\n    }, $UnboundMethod_parameters$12.$$arity = 0);\n    \n    Opal.def(self, '$source_location', $UnboundMethod_source_location$13 = function $$source_location() {\n      var $a, self = this;\n\n      return ($truthy($a = self.method.$$source_location) ? $a : [\"(eval)\", 0])\n    }, $UnboundMethod_source_location$13.$$arity = 0);\n    \n    Opal.def(self, '$comments', $UnboundMethod_comments$14 = function $$comments() {\n      var $a, self = this;\n\n      return ($truthy($a = self.method.$$comments) ? $a : [])\n    }, $UnboundMethod_comments$14.$$arity = 0);\n    \n    Opal.def(self, '$bind', $UnboundMethod_bind$15 = function $$bind(object) {\n      var self = this;\n\n      \n      if (self.owner.$$is_module || Opal.is_a(object, self.owner)) {\n        return $$($nesting, 'Method').$new(object, self.owner, self.method, self.name);\n      }\n      else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"can't bind singleton method to a different class (expected \" + (object) + \".kind_of?(\" + (self.owner) + \" to be true)\");\n      }\n    \n    }, $UnboundMethod_bind$15.$$arity = 1);\n    return (Opal.def(self, '$inspect', $UnboundMethod_inspect$16 = function $$inspect() {\n      var self = this;\n\n      return \"\" + \"#<\" + (self.$class()) + \": \" + (self.source) + \"#\" + (self.name) + \" (defined in \" + (self.owner) + \" in \" + (self.$source_location().$join(\":\")) + \")>\"\n    }, $UnboundMethod_inspect$16.$$arity = 0), nil) && 'inspect';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/variables\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $gvars = Opal.gvars, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$new']);\n  \n  $gvars['&'] = $gvars['~'] = $gvars['`'] = $gvars[\"'\"] = nil;\n  $gvars.LOADED_FEATURES = ($gvars[\"\\\"\"] = Opal.loaded_features);\n  $gvars.LOAD_PATH = ($gvars[\":\"] = []);\n  $gvars[\"/\"] = \"\\n\";\n  $gvars[\",\"] = nil;\n  Opal.const_set($nesting[0], 'ARGV', []);\n  Opal.const_set($nesting[0], 'ARGF', $$($nesting, 'Object').$new());\n  Opal.const_set($nesting[0], 'ENV', $hash2([], {}));\n  $gvars.VERBOSE = false;\n  $gvars.DEBUG = false;\n  return ($gvars.SAFE = 0);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"opal/regexp_anchors\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;\n\n  Opal.add_stubs(['$==', '$new']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Opal');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    Opal.const_set($nesting[0], 'REGEXP_START', (function() {if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      return \"^\"\n    } else {\n      return nil\n    }; return nil; })());\n    Opal.const_set($nesting[0], 'REGEXP_END', (function() {if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      return \"$\"\n    } else {\n      return nil\n    }; return nil; })());\n    Opal.const_set($nesting[0], 'FORBIDDEN_STARTING_IDENTIFIER_CHARS', \"\\\\u0001-\\\\u002F\\\\u003A-\\\\u0040\\\\u005B-\\\\u005E\\\\u0060\\\\u007B-\\\\u007F\");\n    Opal.const_set($nesting[0], 'FORBIDDEN_ENDING_IDENTIFIER_CHARS', \"\\\\u0001-\\\\u0020\\\\u0022-\\\\u002F\\\\u003A-\\\\u003E\\\\u0040\\\\u005B-\\\\u005E\\\\u0060\\\\u007B-\\\\u007F\");\n    Opal.const_set($nesting[0], 'INLINE_IDENTIFIER_REGEXP', $$($nesting, 'Regexp').$new(\"\" + \"[^\" + ($$($nesting, 'FORBIDDEN_STARTING_IDENTIFIER_CHARS')) + \"]*[^\" + ($$($nesting, 'FORBIDDEN_ENDING_IDENTIFIER_CHARS')) + \"]\"));\n    Opal.const_set($nesting[0], 'FORBIDDEN_CONST_NAME_CHARS', \"\\\\u0001-\\\\u0020\\\\u0021-\\\\u002F\\\\u003B-\\\\u003F\\\\u0040\\\\u005B-\\\\u005E\\\\u0060\\\\u007B-\\\\u007F\");\n    Opal.const_set($nesting[0], 'CONST_NAME_REGEXP', $$($nesting, 'Regexp').$new(\"\" + ($$($nesting, 'REGEXP_START')) + \"(::)?[A-Z][^\" + ($$($nesting, 'FORBIDDEN_CONST_NAME_CHARS')) + \"]*\" + ($$($nesting, 'REGEXP_END'))));\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"opal/mini\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"opal/base\");\n  self.$require(\"corelib/nil\");\n  self.$require(\"corelib/boolean\");\n  self.$require(\"corelib/string\");\n  self.$require(\"corelib/comparable\");\n  self.$require(\"corelib/enumerable\");\n  self.$require(\"corelib/enumerator\");\n  self.$require(\"corelib/array\");\n  self.$require(\"corelib/hash\");\n  self.$require(\"corelib/number\");\n  self.$require(\"corelib/range\");\n  self.$require(\"corelib/proc\");\n  self.$require(\"corelib/method\");\n  self.$require(\"corelib/regexp\");\n  self.$require(\"corelib/variables\");\n  return self.$require(\"opal/regexp_anchors\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/string/encoding\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var $$11, $$14, $$17, $$20, $$23, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$require', '$+', '$[]', '$new', '$to_proc', '$each', '$const_set', '$sub', '$==', '$default_external', '$upcase', '$raise', '$attr_accessor', '$attr_reader', '$register', '$length', '$bytes', '$to_a', '$each_byte', '$dup', '$bytesize', '$enum_for', '$coerce_to!', '$find', '$<']);\n  \n  self.$require(\"corelib/string\");\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Encoding');\n\n    var $nesting = [self].concat($parent_nesting), $Encoding_register$1, $Encoding_find$3, $Encoding_initialize$4, $Encoding_ascii_compatible$ques$5, $Encoding_dummy$ques$6, $Encoding_to_s$7, $Encoding_inspect$8, $Encoding_each_byte$9, $Encoding_bytesize$10;\n\n    self.$$prototype.ascii = self.$$prototype.dummy = self.$$prototype.name = nil;\n    \n    Opal.defineProperty(self, '$$register', {});\n    Opal.defs(self, '$register', $Encoding_register$1 = function $$register(name, options) {\n      var $iter = $Encoding_register$1.$$p, block = $iter || nil, $a, $$2, self = this, names = nil, encoding = nil, register = nil;\n\n      if ($iter) $Encoding_register$1.$$p = null;\n      \n      \n      if ($iter) $Encoding_register$1.$$p = null;;\n      \n      if (options == null) {\n        options = $hash2([], {});\n      };\n      names = $rb_plus([name], ($truthy($a = options['$[]'](\"aliases\")) ? $a : []));\n      encoding = $send($$($nesting, 'Class'), 'new', [self], block.$to_proc()).$new(name, names, ($truthy($a = options['$[]'](\"ascii\")) ? $a : false), ($truthy($a = options['$[]'](\"dummy\")) ? $a : false));\n      register = self[\"$$register\"];\n      return $send(names, 'each', [], ($$2 = function(encoding_name){var self = $$2.$$s || this;\n\n      \n        \n        if (encoding_name == null) {\n          encoding_name = nil;\n        };\n        self.$const_set(encoding_name.$sub(\"-\", \"_\"), encoding);\n        return register[\"\" + \"$$\" + (encoding_name)] = encoding;}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n    }, $Encoding_register$1.$$arity = -2);\n    Opal.defs(self, '$find', $Encoding_find$3 = function $$find(name) {\n      var $a, self = this, register = nil, encoding = nil;\n\n      \n      if (name['$=='](\"default_external\")) {\n        return self.$default_external()};\n      register = self[\"$$register\"];\n      encoding = ($truthy($a = register[\"\" + \"$$\" + (name)]) ? $a : register[\"\" + \"$$\" + (name.$upcase())]);\n      if ($truthy(encoding)) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"\" + \"unknown encoding name - \" + (name))\n      };\n      return encoding;\n    }, $Encoding_find$3.$$arity = 1);\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting);\n\n      return self.$attr_accessor(\"default_external\")\n    })(Opal.get_singleton_class(self), $nesting);\n    self.$attr_reader(\"name\", \"names\");\n    \n    Opal.def(self, '$initialize', $Encoding_initialize$4 = function $$initialize(name, names, ascii, dummy) {\n      var self = this;\n\n      \n      self.name = name;\n      self.names = names;\n      self.ascii = ascii;\n      return (self.dummy = dummy);\n    }, $Encoding_initialize$4.$$arity = 4);\n    \n    Opal.def(self, '$ascii_compatible?', $Encoding_ascii_compatible$ques$5 = function() {\n      var self = this;\n\n      return self.ascii\n    }, $Encoding_ascii_compatible$ques$5.$$arity = 0);\n    \n    Opal.def(self, '$dummy?', $Encoding_dummy$ques$6 = function() {\n      var self = this;\n\n      return self.dummy\n    }, $Encoding_dummy$ques$6.$$arity = 0);\n    \n    Opal.def(self, '$to_s', $Encoding_to_s$7 = function $$to_s() {\n      var self = this;\n\n      return self.name\n    }, $Encoding_to_s$7.$$arity = 0);\n    \n    Opal.def(self, '$inspect', $Encoding_inspect$8 = function $$inspect() {\n      var self = this;\n\n      return \"\" + \"#<Encoding:\" + (self.name) + ((function() {if ($truthy(self.dummy)) {\n        return \" (dummy)\"\n      } else {\n        return nil\n      }; return nil; })()) + \">\"\n    }, $Encoding_inspect$8.$$arity = 0);\n    \n    Opal.def(self, '$each_byte', $Encoding_each_byte$9 = function $$each_byte($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'));\n    }, $Encoding_each_byte$9.$$arity = -1);\n    \n    Opal.def(self, '$bytesize', $Encoding_bytesize$10 = function $$bytesize($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'));\n    }, $Encoding_bytesize$10.$$arity = -1);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'EncodingError');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      return nil\n    })($nesting[0], $$($nesting, 'StandardError'), $nesting);\n    return (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'CompatibilityError');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      return nil\n    })($nesting[0], $$($nesting, 'EncodingError'), $nesting);\n  })($nesting[0], null, $nesting);\n  $send($$($nesting, 'Encoding'), 'register', [\"UTF-8\", $hash2([\"aliases\", \"ascii\"], {\"aliases\": [\"CP65001\"], \"ascii\": true})], ($$11 = function(){var self = $$11.$$s || this, $each_byte$12, $bytesize$13;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$12 = function $$each_byte(string) {\n      var $iter = $each_byte$12.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$12.$$p = null;\n      \n      \n      if ($iter) $each_byte$12.$$p = null;;\n      \n      var units = Infinity\n      var codePoint\n      var length = string.length\n      var leadSurrogate = null\n\n      for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i)\n\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n          // last char was a lead\n          if (!leadSurrogate) {\n            // no lead yet\n            if (codePoint > 0xDBFF) {\n              // unexpected trail\n              if ((units -= 3) > -1) {\n                Opal.yield1(block, 0xEF);\n                Opal.yield1(block, 0xBF);\n                Opal.yield1(block, 0xBD);\n              }\n              continue\n            } else if (i + 1 === length) {\n              // unpaired lead\n              if ((units -= 3) > -1) {\n                Opal.yield1(block, 0xEF);\n                Opal.yield1(block, 0xBF);\n                Opal.yield1(block, 0xBD);\n              }\n              continue\n            }\n\n            // valid lead\n            leadSurrogate = codePoint\n\n            continue\n          }\n\n          // 2 leads in a row\n          if (codePoint < 0xDC00) {\n            if ((units -= 3) > -1) {\n              Opal.yield1(block, 0xEF);\n              Opal.yield1(block, 0xBF);\n              Opal.yield1(block, 0xBD);\n            }\n            leadSurrogate = codePoint\n            continue\n          }\n\n          // valid surrogate pair\n          codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n        } else if (leadSurrogate) {\n          // valid bmp char, but last char was a lead\n          if ((units -= 3) > -1) {\n            Opal.yield1(block, 0xEF);\n            Opal.yield1(block, 0xBF);\n            Opal.yield1(block, 0xBD);\n          }\n        }\n\n        leadSurrogate = null\n\n        // encode utf8\n        if (codePoint < 0x80) {\n          if ((units -= 1) < 0) break\n          Opal.yield1(block, codePoint);\n        } else if (codePoint < 0x800) {\n          if ((units -= 2) < 0) break\n          Opal.yield1(block, codePoint >> 0x6 | 0xC0);\n          Opal.yield1(block, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n          if ((units -= 3) < 0) break\n          Opal.yield1(block, codePoint >> 0xC | 0xE0);\n          Opal.yield1(block, codePoint >> 0x6 & 0x3F | 0x80);\n          Opal.yield1(block, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n          if ((units -= 4) < 0) break\n          Opal.yield1(block, codePoint >> 0x12 | 0xF0);\n          Opal.yield1(block, codePoint >> 0xC & 0x3F | 0x80);\n          Opal.yield1(block, codePoint >> 0x6 & 0x3F | 0x80);\n          Opal.yield1(block, codePoint & 0x3F | 0x80);\n        } else {\n          // Invalid code point\n        }\n      }\n    ;\n    }, $each_byte$12.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$13 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$13.$$arity = 1), nil) && 'bytesize';}, $$11.$$s = self, $$11.$$arity = 0, $$11));\n  $send($$($nesting, 'Encoding'), 'register', [\"UTF-16LE\"], ($$14 = function(){var self = $$14.$$s || this, $each_byte$15, $bytesize$16;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$15 = function $$each_byte(string) {\n      var $iter = $each_byte$15.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$15.$$p = null;\n      \n      \n      if ($iter) $each_byte$15.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n\n        Opal.yield1(block, code & 0xff);\n        Opal.yield1(block, code >> 8);\n      }\n    ;\n    }, $each_byte$15.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$16 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$16.$$arity = 1), nil) && 'bytesize';}, $$14.$$s = self, $$14.$$arity = 0, $$14));\n  $send($$($nesting, 'Encoding'), 'register', [\"UTF-16BE\"], ($$17 = function(){var self = $$17.$$s || this, $each_byte$18, $bytesize$19;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$18 = function $$each_byte(string) {\n      var $iter = $each_byte$18.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$18.$$p = null;\n      \n      \n      if ($iter) $each_byte$18.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n\n        Opal.yield1(block, code >> 8);\n        Opal.yield1(block, code & 0xff);\n      }\n    ;\n    }, $each_byte$18.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$19 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$19.$$arity = 1), nil) && 'bytesize';}, $$17.$$s = self, $$17.$$arity = 0, $$17));\n  $send($$($nesting, 'Encoding'), 'register', [\"UTF-32LE\"], ($$20 = function(){var self = $$20.$$s || this, $each_byte$21, $bytesize$22;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$21 = function $$each_byte(string) {\n      var $iter = $each_byte$21.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$21.$$p = null;\n      \n      \n      if ($iter) $each_byte$21.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n\n        Opal.yield1(block, code & 0xff);\n        Opal.yield1(block, code >> 8);\n      }\n    ;\n    }, $each_byte$21.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$22 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$22.$$arity = 1), nil) && 'bytesize';}, $$20.$$s = self, $$20.$$arity = 0, $$20));\n  $send($$($nesting, 'Encoding'), 'register', [\"ASCII-8BIT\", $hash2([\"aliases\", \"ascii\", \"dummy\"], {\"aliases\": [\"BINARY\", \"US-ASCII\", \"ASCII\"], \"ascii\": true, \"dummy\": true})], ($$23 = function(){var self = $$23.$$s || this, $each_byte$24, $bytesize$25;\n\n  \n    \n    Opal.def(self, '$each_byte', $each_byte$24 = function $$each_byte(string) {\n      var $iter = $each_byte$24.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $each_byte$24.$$p = null;\n      \n      \n      if ($iter) $each_byte$24.$$p = null;;\n      \n      for (var i = 0, length = string.length; i < length; i++) {\n        var code = string.charCodeAt(i);\n        Opal.yield1(block, code & 0xff);\n        Opal.yield1(block, code >> 8);\n      }\n    ;\n    }, $each_byte$24.$$arity = 1);\n    return (Opal.def(self, '$bytesize', $bytesize$25 = function $$bytesize(string) {\n      var self = this;\n\n      return string.$bytes().$length()\n    }, $bytesize$25.$$arity = 1), nil) && 'bytesize';}, $$23.$$s = self, $$23.$$arity = 0, $$23));\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting), $String_bytes$26, $String_bytesize$27, $String_each_byte$28, $String_encode$29, $String_force_encoding$30, $String_getbyte$31, $String_valid_encoding$ques$32;\n\n    self.$$prototype.bytes = self.$$prototype.internal_encoding = nil;\n    \n    self.$attr_reader(\"encoding\");\n    self.$attr_reader(\"internal_encoding\");\n    Opal.defineProperty(String.prototype, 'bytes', nil);\n    Opal.defineProperty(String.prototype, 'encoding', $$$($$($nesting, 'Encoding'), 'UTF_8'));\n    Opal.defineProperty(String.prototype, 'internal_encoding', $$$($$($nesting, 'Encoding'), 'UTF_8'));\n    \n    Opal.def(self, '$bytes', $String_bytes$26 = function $$bytes() {\n      var $a, self = this;\n\n      \n      self.bytes = ($truthy($a = self.bytes) ? $a : self.$each_byte().$to_a());\n      return self.bytes.$dup();\n    }, $String_bytes$26.$$arity = 0);\n    \n    Opal.def(self, '$bytesize', $String_bytesize$27 = function $$bytesize() {\n      var self = this;\n\n      return self.internal_encoding.$bytesize(self)\n    }, $String_bytesize$27.$$arity = 0);\n    \n    Opal.def(self, '$each_byte', $String_each_byte$28 = function $$each_byte() {\n      var $iter = $String_each_byte$28.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $String_each_byte$28.$$p = null;\n      \n      \n      if ($iter) $String_each_byte$28.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"each_byte\")\n      };\n      $send(self.internal_encoding, 'each_byte', [self], block.$to_proc());\n      return self;\n    }, $String_each_byte$28.$$arity = 0);\n    \n    Opal.def(self, '$encode', $String_encode$29 = function $$encode(encoding) {\n      var self = this;\n\n      return Opal.enc(self, encoding);\n    }, $String_encode$29.$$arity = 1);\n    \n    Opal.def(self, '$force_encoding', $String_force_encoding$30 = function $$force_encoding(encoding) {\n      var self = this;\n\n      \n      if (encoding === self.encoding) { return self; }\n\n      encoding = $$($nesting, 'Opal')['$coerce_to!'](encoding, $$($nesting, 'String'), \"to_s\");\n      encoding = $$($nesting, 'Encoding').$find(encoding);\n\n      if (encoding === self.encoding) { return self; }\n\n      self.encoding = encoding;\n      return self;\n    \n    }, $String_force_encoding$30.$$arity = 1);\n    \n    Opal.def(self, '$getbyte', $String_getbyte$31 = function $$getbyte(idx) {\n      var self = this, string_bytes = nil;\n\n      \n      string_bytes = self.$bytes();\n      idx = $$($nesting, 'Opal')['$coerce_to!'](idx, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy($rb_lt(string_bytes.$length(), idx))) {\n        return nil};\n      return string_bytes['$[]'](idx);\n    }, $String_getbyte$31.$$arity = 1);\n    return (Opal.def(self, '$valid_encoding?', $String_valid_encoding$ques$32 = function() {\n      var self = this;\n\n      return true\n    }, $String_valid_encoding$ques$32.$$arity = 0), nil) && 'valid_encoding?';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/struct\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$require', '$include', '$const_name!', '$unshift', '$map', '$coerce_to!', '$new', '$each', '$define_struct_attribute', '$allocate', '$initialize', '$alias_method', '$module_eval', '$to_proc', '$const_set', '$==', '$raise', '$<<', '$members', '$define_method', '$instance_eval', '$class', '$last', '$>', '$length', '$-', '$keys', '$any?', '$join', '$[]', '$[]=', '$each_with_index', '$hash', '$===', '$<', '$-@', '$size', '$>=', '$include?', '$to_sym', '$instance_of?', '$__id__', '$eql?', '$enum_for', '$name', '$+', '$each_pair', '$inspect', '$each_with_object', '$flatten', '$to_a', '$respond_to?', '$dig']);\n  \n  self.$require(\"corelib/enumerable\");\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Struct');\n\n    var $nesting = [self].concat($parent_nesting), $Struct_new$1, $Struct_define_struct_attribute$6, $Struct_members$9, $Struct_inherited$10, $Struct_initialize$12, $Struct_members$15, $Struct_hash$16, $Struct_$$$17, $Struct_$$$eq$18, $Struct_$eq_eq$19, $Struct_eql$ques$20, $Struct_each$21, $Struct_each_pair$24, $Struct_length$27, $Struct_to_a$28, $Struct_inspect$30, $Struct_to_h$32, $Struct_values_at$34, $Struct_dig$36;\n\n    \n    self.$include($$($nesting, 'Enumerable'));\n    Opal.defs(self, '$new', $Struct_new$1 = function(const_name, $a, $b) {\n      var $iter = $Struct_new$1.$$p, block = $iter || nil, $post_args, $kwargs, args, keyword_init, $$2, $$3, self = this, klass = nil;\n\n      if ($iter) $Struct_new$1.$$p = null;\n      \n      \n      if ($iter) $Struct_new$1.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      $kwargs = Opal.extract_kwargs($post_args);\n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      args = $post_args;;\n      \n      keyword_init = $kwargs.$$smap[\"keyword_init\"];\n      if (keyword_init == null) {\n        keyword_init = false\n      };\n      if ($truthy(const_name)) {\n        \n        try {\n          const_name = $$($nesting, 'Opal')['$const_name!'](const_name)\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'TypeError'), $$($nesting, 'NameError')])) {\n            try {\n              \n              args.$unshift(const_name);\n              const_name = nil;\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };};\n      $send(args, 'map', [], ($$2 = function(arg){var self = $$2.$$s || this;\n\n      \n        \n        if (arg == null) {\n          arg = nil;\n        };\n        return $$($nesting, 'Opal')['$coerce_to!'](arg, $$($nesting, 'String'), \"to_str\");}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n      klass = $send($$($nesting, 'Class'), 'new', [self], ($$3 = function(){var self = $$3.$$s || this, $$4;\n\n      \n        $send(args, 'each', [], ($$4 = function(arg){var self = $$4.$$s || this;\n\n        \n          \n          if (arg == null) {\n            arg = nil;\n          };\n          return self.$define_struct_attribute(arg);}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n        return (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $new$5;\n\n          \n          \n          Opal.def(self, '$new', $new$5 = function($a) {\n            var $post_args, args, self = this, instance = nil;\n\n            \n            \n            $post_args = Opal.slice.call(arguments, 0, arguments.length);\n            \n            args = $post_args;;\n            instance = self.$allocate();\n            instance.$$data = {};\n            $send(instance, 'initialize', Opal.to_a(args));\n            return instance;\n          }, $new$5.$$arity = -1);\n          return self.$alias_method(\"[]\", \"new\");\n        })(Opal.get_singleton_class(self), $nesting);}, $$3.$$s = self, $$3.$$arity = 0, $$3));\n      if ($truthy(block)) {\n        $send(klass, 'module_eval', [], block.$to_proc())};\n      klass.$$keyword_init = keyword_init;\n      if ($truthy(const_name)) {\n        $$($nesting, 'Struct').$const_set(const_name, klass)};\n      return klass;\n    }, $Struct_new$1.$$arity = -2);\n    Opal.defs(self, '$define_struct_attribute', $Struct_define_struct_attribute$6 = function $$define_struct_attribute(name) {\n      var $$7, $$8, self = this;\n\n      \n      if (self['$==']($$($nesting, 'Struct'))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"you cannot define attributes to the Struct class\")};\n      self.$members()['$<<'](name);\n      $send(self, 'define_method', [name], ($$7 = function(){var self = $$7.$$s || this;\n\n      return self.$$data[name];}, $$7.$$s = self, $$7.$$arity = 0, $$7));\n      return $send(self, 'define_method', [\"\" + (name) + \"=\"], ($$8 = function(value){var self = $$8.$$s || this;\n\n      \n        \n        if (value == null) {\n          value = nil;\n        };\n        return self.$$data[name] = value;;}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n    }, $Struct_define_struct_attribute$6.$$arity = 1);\n    Opal.defs(self, '$members', $Struct_members$9 = function $$members() {\n      var $a, self = this;\n      if (self.members == null) self.members = nil;\n\n      \n      if (self['$==']($$($nesting, 'Struct'))) {\n        self.$raise($$($nesting, 'ArgumentError'), \"the Struct class has no members\")};\n      return (self.members = ($truthy($a = self.members) ? $a : []));\n    }, $Struct_members$9.$$arity = 0);\n    Opal.defs(self, '$inherited', $Struct_inherited$10 = function $$inherited(klass) {\n      var $$11, self = this, members = nil;\n      if (self.members == null) self.members = nil;\n\n      \n      members = self.members;\n      return $send(klass, 'instance_eval', [], ($$11 = function(){var self = $$11.$$s || this;\n\n      return (self.members = members)}, $$11.$$s = self, $$11.$$arity = 0, $$11));\n    }, $Struct_inherited$10.$$arity = 1);\n    \n    Opal.def(self, '$initialize', $Struct_initialize$12 = function $$initialize($a) {\n      var $post_args, args, $b, $$13, $$14, self = this, kwargs = nil, extra = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      if ($truthy(self.$class().$$keyword_init)) {\n        \n        kwargs = ($truthy($b = args.$last()) ? $b : $hash2([], {}));\n        if ($truthy(($truthy($b = $rb_gt(args.$length(), 1)) ? $b : (args.length === 1 && !kwargs.$$is_hash)))) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"wrong number of arguments (given \" + (args.$length()) + \", expected 0)\")};\n        extra = $rb_minus(kwargs.$keys(), self.$class().$members());\n        if ($truthy(extra['$any?']())) {\n          self.$raise($$($nesting, 'ArgumentError'), \"\" + \"unknown keywords: \" + (extra.$join(\", \")))};\n        return $send(self.$class().$members(), 'each', [], ($$13 = function(name){var self = $$13.$$s || this, $writer = nil;\n\n        \n          \n          if (name == null) {\n            name = nil;\n          };\n          $writer = [name, kwargs['$[]'](name)];\n          $send(self, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$13.$$s = self, $$13.$$arity = 1, $$13));\n      } else {\n        \n        if ($truthy($rb_gt(args.$length(), self.$class().$members().$length()))) {\n          self.$raise($$($nesting, 'ArgumentError'), \"struct size differs\")};\n        return $send(self.$class().$members(), 'each_with_index', [], ($$14 = function(name, index){var self = $$14.$$s || this, $writer = nil;\n\n        \n          \n          if (name == null) {\n            name = nil;\n          };\n          \n          if (index == null) {\n            index = nil;\n          };\n          $writer = [name, args['$[]'](index)];\n          $send(self, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$14.$$s = self, $$14.$$arity = 2, $$14));\n      };\n    }, $Struct_initialize$12.$$arity = -1);\n    \n    Opal.def(self, '$members', $Struct_members$15 = function $$members() {\n      var self = this;\n\n      return self.$class().$members()\n    }, $Struct_members$15.$$arity = 0);\n    \n    Opal.def(self, '$hash', $Struct_hash$16 = function $$hash() {\n      var self = this;\n\n      return $$($nesting, 'Hash').$new(self.$$data).$hash()\n    }, $Struct_hash$16.$$arity = 0);\n    \n    Opal.def(self, '$[]', $Struct_$$$17 = function(name) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](name))) {\n        \n        if ($truthy($rb_lt(name, self.$class().$members().$size()['$-@']()))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"offset \" + (name) + \" too small for struct(size:\" + (self.$class().$members().$size()) + \")\")};\n        if ($truthy($rb_ge(name, self.$class().$members().$size()))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"offset \" + (name) + \" too large for struct(size:\" + (self.$class().$members().$size()) + \")\")};\n        name = self.$class().$members()['$[]'](name);\n      } else if ($truthy($$($nesting, 'String')['$==='](name))) {\n        \n        if(!self.$$data.hasOwnProperty(name)) {\n          self.$raise($$($nesting, 'NameError').$new(\"\" + \"no member '\" + (name) + \"' in struct\", name))\n        }\n      \n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"no implicit conversion of \" + (name.$class()) + \" into Integer\")\n      };\n      name = $$($nesting, 'Opal')['$coerce_to!'](name, $$($nesting, 'String'), \"to_str\");\n      return self.$$data[name];;\n    }, $Struct_$$$17.$$arity = 1);\n    \n    Opal.def(self, '$[]=', $Struct_$$$eq$18 = function(name, value) {\n      var self = this;\n\n      \n      if ($truthy($$($nesting, 'Integer')['$==='](name))) {\n        \n        if ($truthy($rb_lt(name, self.$class().$members().$size()['$-@']()))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"offset \" + (name) + \" too small for struct(size:\" + (self.$class().$members().$size()) + \")\")};\n        if ($truthy($rb_ge(name, self.$class().$members().$size()))) {\n          self.$raise($$($nesting, 'IndexError'), \"\" + \"offset \" + (name) + \" too large for struct(size:\" + (self.$class().$members().$size()) + \")\")};\n        name = self.$class().$members()['$[]'](name);\n      } else if ($truthy($$($nesting, 'String')['$==='](name))) {\n        if ($truthy(self.$class().$members()['$include?'](name.$to_sym()))) {\n        } else {\n          self.$raise($$($nesting, 'NameError').$new(\"\" + \"no member '\" + (name) + \"' in struct\", name))\n        }\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + \"no implicit conversion of \" + (name.$class()) + \" into Integer\")\n      };\n      name = $$($nesting, 'Opal')['$coerce_to!'](name, $$($nesting, 'String'), \"to_str\");\n      return self.$$data[name] = value;;\n    }, $Struct_$$$eq$18.$$arity = 2);\n    \n    Opal.def(self, '$==', $Struct_$eq_eq$19 = function(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$instance_of?'](self.$class()))) {\n      } else {\n        return false\n      };\n      \n      var recursed1 = {}, recursed2 = {};\n\n      function _eqeq(struct, other) {\n        var key, a, b;\n\n        recursed1[(struct).$__id__()] = true;\n        recursed2[(other).$__id__()] = true;\n\n        for (key in struct.$$data) {\n          a = struct.$$data[key];\n          b = other.$$data[key];\n\n          if ($$($nesting, 'Struct')['$==='](a)) {\n            if (!recursed1.hasOwnProperty((a).$__id__()) || !recursed2.hasOwnProperty((b).$__id__())) {\n              if (!_eqeq(a, b)) {\n                return false;\n              }\n            }\n          } else {\n            if (!(a)['$=='](b)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return _eqeq(self, other);\n    ;\n    }, $Struct_$eq_eq$19.$$arity = 1);\n    \n    Opal.def(self, '$eql?', $Struct_eql$ques$20 = function(other) {\n      var self = this;\n\n      \n      if ($truthy(other['$instance_of?'](self.$class()))) {\n      } else {\n        return false\n      };\n      \n      var recursed1 = {}, recursed2 = {};\n\n      function _eqeq(struct, other) {\n        var key, a, b;\n\n        recursed1[(struct).$__id__()] = true;\n        recursed2[(other).$__id__()] = true;\n\n        for (key in struct.$$data) {\n          a = struct.$$data[key];\n          b = other.$$data[key];\n\n          if ($$($nesting, 'Struct')['$==='](a)) {\n            if (!recursed1.hasOwnProperty((a).$__id__()) || !recursed2.hasOwnProperty((b).$__id__())) {\n              if (!_eqeq(a, b)) {\n                return false;\n              }\n            }\n          } else {\n            if (!(a)['$eql?'](b)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      }\n\n      return _eqeq(self, other);\n    ;\n    }, $Struct_eql$ques$20.$$arity = 1);\n    \n    Opal.def(self, '$each', $Struct_each$21 = function $$each() {\n      var $$22, $$23, $iter = $Struct_each$21.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Struct_each$21.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each\"], ($$22 = function(){var self = $$22.$$s || this;\n\n        return self.$size()}, $$22.$$s = self, $$22.$$arity = 0, $$22))\n      };\n      $send(self.$class().$members(), 'each', [], ($$23 = function(name){var self = $$23.$$s || this;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        return Opal.yield1($yield, self['$[]'](name));;}, $$23.$$s = self, $$23.$$arity = 1, $$23));\n      return self;\n    }, $Struct_each$21.$$arity = 0);\n    \n    Opal.def(self, '$each_pair', $Struct_each_pair$24 = function $$each_pair() {\n      var $$25, $$26, $iter = $Struct_each_pair$24.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Struct_each_pair$24.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return $send(self, 'enum_for', [\"each_pair\"], ($$25 = function(){var self = $$25.$$s || this;\n\n        return self.$size()}, $$25.$$s = self, $$25.$$arity = 0, $$25))\n      };\n      $send(self.$class().$members(), 'each', [], ($$26 = function(name){var self = $$26.$$s || this;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        return Opal.yield1($yield, [name, self['$[]'](name)]);;}, $$26.$$s = self, $$26.$$arity = 1, $$26));\n      return self;\n    }, $Struct_each_pair$24.$$arity = 0);\n    \n    Opal.def(self, '$length', $Struct_length$27 = function $$length() {\n      var self = this;\n\n      return self.$class().$members().$length()\n    }, $Struct_length$27.$$arity = 0);\n    Opal.alias(self, \"size\", \"length\");\n    \n    Opal.def(self, '$to_a', $Struct_to_a$28 = function $$to_a() {\n      var $$29, self = this;\n\n      return $send(self.$class().$members(), 'map', [], ($$29 = function(name){var self = $$29.$$s || this;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        return self['$[]'](name);}, $$29.$$s = self, $$29.$$arity = 1, $$29))\n    }, $Struct_to_a$28.$$arity = 0);\n    Opal.alias(self, \"values\", \"to_a\");\n    \n    Opal.def(self, '$inspect', $Struct_inspect$30 = function $$inspect() {\n      var $a, $$31, self = this, result = nil;\n\n      \n      result = \"#<struct \";\n      if ($truthy(($truthy($a = $$($nesting, 'Struct')['$==='](self)) ? self.$class().$name() : $a))) {\n        result = $rb_plus(result, \"\" + (self.$class()) + \" \")};\n      result = $rb_plus(result, $send(self.$each_pair(), 'map', [], ($$31 = function(name, value){var self = $$31.$$s || this;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        \n        if (value == null) {\n          value = nil;\n        };\n        return \"\" + (name) + \"=\" + (value.$inspect());}, $$31.$$s = self, $$31.$$arity = 2, $$31)).$join(\", \"));\n      result = $rb_plus(result, \">\");\n      return result;\n    }, $Struct_inspect$30.$$arity = 0);\n    Opal.alias(self, \"to_s\", \"inspect\");\n    \n    Opal.def(self, '$to_h', $Struct_to_h$32 = function $$to_h() {\n      var $$33, self = this;\n\n      return $send(self.$class().$members(), 'each_with_object', [$hash2([], {})], ($$33 = function(name, h){var self = $$33.$$s || this, $writer = nil;\n\n      \n        \n        if (name == null) {\n          name = nil;\n        };\n        \n        if (h == null) {\n          h = nil;\n        };\n        $writer = [name, self['$[]'](name)];\n        $send(h, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];}, $$33.$$s = self, $$33.$$arity = 2, $$33))\n    }, $Struct_to_h$32.$$arity = 0);\n    \n    Opal.def(self, '$values_at', $Struct_values_at$34 = function $$values_at($a) {\n      var $post_args, args, $$35, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      args = $post_args;;\n      args = $send(args, 'map', [], ($$35 = function(arg){var self = $$35.$$s || this;\n\n      \n        \n        if (arg == null) {\n          arg = nil;\n        };\n        return arg.$$is_range ? arg.$to_a() : arg;}, $$35.$$s = self, $$35.$$arity = 1, $$35)).$flatten();\n      \n      var result = [];\n      for (var i = 0, len = args.length; i < len; i++) {\n        if (!args[i].$$is_number) {\n          self.$raise($$($nesting, 'TypeError'), \"\" + \"no implicit conversion of \" + ((args[i]).$class()) + \" into Integer\")\n        }\n        result.push(self['$[]'](args[i]));\n      }\n      return result;\n    ;\n    }, $Struct_values_at$34.$$arity = -1);\n    return (Opal.def(self, '$dig', $Struct_dig$36 = function $$dig(key, $a) {\n      var $post_args, keys, self = this, item = nil;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      keys = $post_args;;\n      item = (function() {if ($truthy(key.$$is_string && self.$$data.hasOwnProperty(key))) {\n        return self.$$data[key] || nil;\n      } else {\n        return nil\n      }; return nil; })();\n      \n      if (item === nil || keys.length === 0) {\n        return item;\n      }\n    ;\n      if ($truthy(item['$respond_to?'](\"dig\"))) {\n      } else {\n        self.$raise($$($nesting, 'TypeError'), \"\" + (item.$class()) + \" does not have #dig method\")\n      };\n      return $send(item, 'dig', Opal.to_a(keys));\n    }, $Struct_dig$36.$$arity = -2), nil) && 'dig';\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/io\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $module = Opal.module, $send = Opal.send, $gvars = Opal.gvars, $truthy = Opal.truthy, $writer = nil;\n\n  Opal.add_stubs(['$attr_accessor', '$size', '$write', '$join', '$map', '$String', '$empty?', '$concat', '$chomp', '$getbyte', '$getc', '$raise', '$new', '$write_proc=', '$-', '$extend']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'IO');\n\n    var $nesting = [self].concat($parent_nesting), $IO_tty$ques$1, $IO_closed$ques$2, $IO_write$3, $IO_flush$4;\n\n    self.$$prototype.tty = self.$$prototype.closed = nil;\n    \n    Opal.const_set($nesting[0], 'SEEK_SET', 0);\n    Opal.const_set($nesting[0], 'SEEK_CUR', 1);\n    Opal.const_set($nesting[0], 'SEEK_END', 2);\n    \n    Opal.def(self, '$tty?', $IO_tty$ques$1 = function() {\n      var self = this;\n\n      return self.tty\n    }, $IO_tty$ques$1.$$arity = 0);\n    \n    Opal.def(self, '$closed?', $IO_closed$ques$2 = function() {\n      var self = this;\n\n      return self.closed\n    }, $IO_closed$ques$2.$$arity = 0);\n    self.$attr_accessor(\"write_proc\");\n    \n    Opal.def(self, '$write', $IO_write$3 = function $$write(string) {\n      var self = this;\n\n      \n      self.write_proc(string);\n      return string.$size();\n    }, $IO_write$3.$$arity = 1);\n    self.$attr_accessor(\"sync\", \"tty\");\n    \n    Opal.def(self, '$flush', $IO_flush$4 = function $$flush() {\n      var self = this;\n\n      return nil\n    }, $IO_flush$4.$$arity = 0);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Writable');\n\n      var $nesting = [self].concat($parent_nesting), $Writable_$lt$lt$5, $Writable_print$6, $Writable_puts$8;\n\n      \n      \n      Opal.def(self, '$<<', $Writable_$lt$lt$5 = function(string) {\n        var self = this;\n\n        \n        self.$write(string);\n        return self;\n      }, $Writable_$lt$lt$5.$$arity = 1);\n      \n      Opal.def(self, '$print', $Writable_print$6 = function $$print($a) {\n        var $post_args, args, $$7, self = this;\n        if ($gvars[\",\"] == null) $gvars[\",\"] = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        self.$write($send(args, 'map', [], ($$7 = function(arg){var self = $$7.$$s || this;\n\n        \n          \n          if (arg == null) {\n            arg = nil;\n          };\n          return self.$String(arg);}, $$7.$$s = self, $$7.$$arity = 1, $$7)).$join($gvars[\",\"]));\n        return nil;\n      }, $Writable_print$6.$$arity = -1);\n      \n      Opal.def(self, '$puts', $Writable_puts$8 = function $$puts($a) {\n        var $post_args, args, $$9, self = this, newline = nil;\n        if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        newline = $gvars[\"/\"];\n        if ($truthy(args['$empty?']())) {\n          self.$write($gvars[\"/\"])\n        } else {\n          self.$write($send(args, 'map', [], ($$9 = function(arg){var self = $$9.$$s || this;\n\n          \n            \n            if (arg == null) {\n              arg = nil;\n            };\n            return self.$String(arg).$chomp();}, $$9.$$s = self, $$9.$$arity = 1, $$9)).$concat([nil]).$join(newline))\n        };\n        return nil;\n      }, $Writable_puts$8.$$arity = -1);\n    })($nesting[0], $nesting);\n    return (function($base, $parent_nesting) {\n      var self = $module($base, 'Readable');\n\n      var $nesting = [self].concat($parent_nesting), $Readable_readbyte$10, $Readable_readchar$11, $Readable_readline$12, $Readable_readpartial$13;\n\n      \n      \n      Opal.def(self, '$readbyte', $Readable_readbyte$10 = function $$readbyte() {\n        var self = this;\n\n        return self.$getbyte()\n      }, $Readable_readbyte$10.$$arity = 0);\n      \n      Opal.def(self, '$readchar', $Readable_readchar$11 = function $$readchar() {\n        var self = this;\n\n        return self.$getc()\n      }, $Readable_readchar$11.$$arity = 0);\n      \n      Opal.def(self, '$readline', $Readable_readline$12 = function $$readline(sep) {\n        var self = this;\n        if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n        \n        \n        if (sep == null) {\n          sep = $gvars[\"/\"];\n        };\n        return self.$raise($$($nesting, 'NotImplementedError'));\n      }, $Readable_readline$12.$$arity = -1);\n      \n      Opal.def(self, '$readpartial', $Readable_readpartial$13 = function $$readpartial(integer, outbuf) {\n        var self = this;\n\n        \n        \n        if (outbuf == null) {\n          outbuf = nil;\n        };\n        return self.$raise($$($nesting, 'NotImplementedError'));\n      }, $Readable_readpartial$13.$$arity = -2);\n    })($nesting[0], $nesting);\n  })($nesting[0], null, $nesting);\n  Opal.const_set($nesting[0], 'STDERR', ($gvars.stderr = $$($nesting, 'IO').$new()));\n  Opal.const_set($nesting[0], 'STDIN', ($gvars.stdin = $$($nesting, 'IO').$new()));\n  Opal.const_set($nesting[0], 'STDOUT', ($gvars.stdout = $$($nesting, 'IO').$new()));\n  var console = Opal.global.console;\n  \n  $writer = [typeof(process) === 'object' && typeof(process.stdout) === 'object' ? function(s){process.stdout.write(s)} : function(s){console.log(s)}];\n  $send($$($nesting, 'STDOUT'), 'write_proc=', Opal.to_a($writer));\n  $writer[$rb_minus($writer[\"length\"], 1)];;\n  \n  $writer = [typeof(process) === 'object' && typeof(process.stderr) === 'object' ? function(s){process.stderr.write(s)} : function(s){console.warn(s)}];\n  $send($$($nesting, 'STDERR'), 'write_proc=', Opal.to_a($writer));\n  $writer[$rb_minus($writer[\"length\"], 1)];;\n  $$($nesting, 'STDOUT').$extend($$$($$($nesting, 'IO'), 'Writable'));\n  return $$($nesting, 'STDERR').$extend($$$($$($nesting, 'IO'), 'Writable'));\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/main\"] = function(Opal) {\n  var $to_s$1, $include$2, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$include']);\n  \n  Opal.defs(self, '$to_s', $to_s$1 = function $$to_s() {\n    var self = this;\n\n    return \"main\"\n  }, $to_s$1.$$arity = 0);\n  return (Opal.defs(self, '$include', $include$2 = function $$include(mod) {\n    var self = this;\n\n    return $$($nesting, 'Object').$include(mod)\n  }, $include$2.$$arity = 1), nil) && 'include';\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/dir\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$[]']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Dir');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    return (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $chdir$1, $pwd$2, $home$3;\n\n      \n      \n      Opal.def(self, '$chdir', $chdir$1 = function $$chdir(dir) {\n        var $iter = $chdir$1.$$p, $yield = $iter || nil, self = this, prev_cwd = nil;\n\n        if ($iter) $chdir$1.$$p = null;\n        return (function() { try {\n        \n        prev_cwd = Opal.current_dir;\n        Opal.current_dir = dir;\n        return Opal.yieldX($yield, []);;\n        } finally {\n          Opal.current_dir = prev_cwd\n        }; })()\n      }, $chdir$1.$$arity = 1);\n      \n      Opal.def(self, '$pwd', $pwd$2 = function $$pwd() {\n        var self = this;\n\n        return Opal.current_dir || '.';\n      }, $pwd$2.$$arity = 0);\n      Opal.alias(self, \"getwd\", \"pwd\");\n      return (Opal.def(self, '$home', $home$3 = function $$home() {\n        var $a, self = this;\n\n        return ($truthy($a = $$($nesting, 'ENV')['$[]'](\"HOME\")) ? $a : \".\")\n      }, $home$3.$$arity = 0), nil) && 'home';\n    })(Opal.get_singleton_class(self), $nesting)\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/file\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $range = Opal.range, $send = Opal.send;\n\n  Opal.add_stubs(['$respond_to?', '$to_path', '$pwd', '$split', '$sub', '$+', '$unshift', '$join', '$home', '$raise', '$start_with?', '$absolute_path', '$coerce_to!', '$basename', '$empty?', '$rindex', '$[]', '$nil?', '$==', '$-', '$length', '$gsub', '$find', '$=~', '$map', '$each_with_index', '$flatten', '$reject', '$to_proc', '$end_with?']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'File');\n\n    var $nesting = [self].concat($parent_nesting), windows_root_rx = nil;\n\n    \n    Opal.const_set($nesting[0], 'Separator', Opal.const_set($nesting[0], 'SEPARATOR', \"/\"));\n    Opal.const_set($nesting[0], 'ALT_SEPARATOR', nil);\n    Opal.const_set($nesting[0], 'PATH_SEPARATOR', \":\");\n    Opal.const_set($nesting[0], 'FNM_SYSCASE', 0);\n    windows_root_rx = /^[a-zA-Z]:(?:\\\\|\\/)/;\n    return (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $absolute_path$1, $expand_path$2, $dirname$3, $basename$4, $extname$5, $exist$ques$6, $directory$ques$7, $join$9, $split$12;\n\n      \n      \n      Opal.def(self, '$absolute_path', $absolute_path$1 = function $$absolute_path(path, basedir) {\n        var $a, self = this, sep = nil, sep_chars = nil, new_parts = nil, path_abs = nil, basedir_abs = nil, parts = nil, leading_sep = nil, abs = nil, new_path = nil;\n\n        \n        \n        if (basedir == null) {\n          basedir = nil;\n        };\n        sep = $$($nesting, 'SEPARATOR');\n        sep_chars = $sep_chars();\n        new_parts = [];\n        path = (function() {if ($truthy(path['$respond_to?'](\"to_path\"))) {\n          return path.$to_path()\n        } else {\n          return path\n        }; return nil; })();\n        basedir = ($truthy($a = basedir) ? $a : $$($nesting, 'Dir').$pwd());\n        path_abs = path.substr(0, sep.length) === sep || windows_root_rx.test(path);\n        basedir_abs = basedir.substr(0, sep.length) === sep || windows_root_rx.test(basedir);\n        if ($truthy(path_abs)) {\n          \n          parts = path.$split(new RegExp(\"\" + \"[\" + (sep_chars) + \"]\"));\n          leading_sep = windows_root_rx.test(path) ? '' : path.$sub(new RegExp(\"\" + \"^([\" + (sep_chars) + \"]+).*$\"), \"\\\\1\");\n          abs = true;\n        } else {\n          \n          parts = $rb_plus(basedir.$split(new RegExp(\"\" + \"[\" + (sep_chars) + \"]\")), path.$split(new RegExp(\"\" + \"[\" + (sep_chars) + \"]\")));\n          leading_sep = windows_root_rx.test(basedir) ? '' : basedir.$sub(new RegExp(\"\" + \"^([\" + (sep_chars) + \"]+).*$\"), \"\\\\1\");\n          abs = basedir_abs;\n        };\n        \n        var part;\n        for (var i = 0, ii = parts.length; i < ii; i++) {\n          part = parts[i];\n\n          if (\n            (part === nil) ||\n            (part === ''  && ((new_parts.length === 0) || abs)) ||\n            (part === '.' && ((new_parts.length === 0) || abs))\n          ) {\n            continue;\n          }\n          if (part === '..') {\n            new_parts.pop();\n          } else {\n            new_parts.push(part);\n          }\n        }\n\n        if (!abs && parts[0] !== '.') {\n          new_parts.$unshift(\".\")\n        }\n      ;\n        new_path = new_parts.$join(sep);\n        if ($truthy(abs)) {\n          new_path = $rb_plus(leading_sep, new_path)};\n        return new_path;\n      }, $absolute_path$1.$$arity = -2);\n      \n      Opal.def(self, '$expand_path', $expand_path$2 = function $$expand_path(path, basedir) {\n        var self = this, sep = nil, sep_chars = nil, home = nil, leading_sep = nil, home_path_regexp = nil;\n\n        \n        \n        if (basedir == null) {\n          basedir = nil;\n        };\n        sep = $$($nesting, 'SEPARATOR');\n        sep_chars = $sep_chars();\n        if ($truthy(path[0] === '~' || (basedir && basedir[0] === '~'))) {\n          \n          home = $$($nesting, 'Dir').$home();\n          if ($truthy(home)) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"couldn't find HOME environment -- expanding `~'\")\n          };\n          leading_sep = windows_root_rx.test(home) ? '' : home.$sub(new RegExp(\"\" + \"^([\" + (sep_chars) + \"]+).*$\"), \"\\\\1\");\n          if ($truthy(home['$start_with?'](leading_sep))) {\n          } else {\n            self.$raise($$($nesting, 'ArgumentError'), \"non-absolute home\")\n          };\n          home = $rb_plus(home, sep);\n          home_path_regexp = new RegExp(\"\" + \"^\\\\~(?:\" + (sep) + \"|$)\");\n          path = path.$sub(home_path_regexp, home);\n          if ($truthy(basedir)) {\n            basedir = basedir.$sub(home_path_regexp, home)};};\n        return self.$absolute_path(path, basedir);\n      }, $expand_path$2.$$arity = -2);\n      Opal.alias(self, \"realpath\", \"expand_path\");\n      \n      // Coerce a given path to a path string using #to_path and #to_str\n      function $coerce_to_path(path) {\n        if ($truthy((path)['$respond_to?'](\"to_path\"))) {\n          path = path.$to_path();\n        }\n\n        path = $$($nesting, 'Opal')['$coerce_to!'](path, $$($nesting, 'String'), \"to_str\");\n\n        return path;\n      }\n\n      // Return a RegExp compatible char class\n      function $sep_chars() {\n        if ($$($nesting, 'ALT_SEPARATOR') === nil) {\n          return Opal.escape_regexp($$($nesting, 'SEPARATOR'));\n        } else {\n          return Opal.escape_regexp($rb_plus($$($nesting, 'SEPARATOR'), $$($nesting, 'ALT_SEPARATOR')));\n        }\n      }\n    ;\n      \n      Opal.def(self, '$dirname', $dirname$3 = function $$dirname(path) {\n        var self = this, sep_chars = nil;\n\n        \n        sep_chars = $sep_chars();\n        path = $coerce_to_path(path);\n        \n        var absolute = path.match(new RegExp(\"\" + \"^[\" + (sep_chars) + \"]\"));\n\n        path = path.replace(new RegExp(\"\" + \"[\" + (sep_chars) + \"]+$\"), ''); // remove trailing separators\n        path = path.replace(new RegExp(\"\" + \"[^\" + (sep_chars) + \"]+$\"), ''); // remove trailing basename\n        path = path.replace(new RegExp(\"\" + \"[\" + (sep_chars) + \"]+$\"), ''); // remove final trailing separators\n\n        if (path === '') {\n          return absolute ? '/' : '.';\n        }\n\n        return path;\n      ;\n      }, $dirname$3.$$arity = 1);\n      \n      Opal.def(self, '$basename', $basename$4 = function $$basename(name, suffix) {\n        var self = this, sep_chars = nil;\n\n        \n        \n        if (suffix == null) {\n          suffix = nil;\n        };\n        sep_chars = $sep_chars();\n        name = $coerce_to_path(name);\n        \n        if (name.length == 0) {\n          return name;\n        }\n\n        if (suffix !== nil) {\n          suffix = $$($nesting, 'Opal')['$coerce_to!'](suffix, $$($nesting, 'String'), \"to_str\")\n        } else {\n          suffix = null;\n        }\n\n        name = name.replace(new RegExp(\"\" + \"(.)[\" + (sep_chars) + \"]*$\"), '$1');\n        name = name.replace(new RegExp(\"\" + \"^(?:.*[\" + (sep_chars) + \"])?([^\" + (sep_chars) + \"]+)$\"), '$1');\n\n        if (suffix === \".*\") {\n          name = name.replace(/\\.[^\\.]+$/, '');\n        } else if(suffix !== null) {\n          suffix = Opal.escape_regexp(suffix);\n          name = name.replace(new RegExp(\"\" + (suffix) + \"$\"), '');\n        }\n\n        return name;\n      ;\n      }, $basename$4.$$arity = -2);\n      \n      Opal.def(self, '$extname', $extname$5 = function $$extname(path) {\n        var $a, self = this, filename = nil, last_dot_idx = nil;\n\n        \n        path = $coerce_to_path(path);\n        filename = self.$basename(path);\n        if ($truthy(filename['$empty?']())) {\n          return \"\"};\n        last_dot_idx = filename['$[]']($range(1, -1, false)).$rindex(\".\");\n        if ($truthy(($truthy($a = last_dot_idx['$nil?']()) ? $a : $rb_plus(last_dot_idx, 1)['$==']($rb_minus(filename.$length(), 1))))) {\n          return \"\"\n        } else {\n          return filename['$[]'](Opal.Range.$new($rb_plus(last_dot_idx, 1), -1, false))\n        };\n      }, $extname$5.$$arity = 1);\n      \n      Opal.def(self, '$exist?', $exist$ques$6 = function(path) {\n        var self = this;\n\n        return Opal.modules[path] != null\n      }, $exist$ques$6.$$arity = 1);\n      Opal.alias(self, \"exists?\", \"exist?\");\n      \n      Opal.def(self, '$directory?', $directory$ques$7 = function(path) {\n        var $$8, self = this, files = nil, file = nil;\n\n        \n        files = [];\n        \n        for (var key in Opal.modules) {\n          files.push(key)\n        }\n      ;\n        path = path.$gsub(new RegExp(\"\" + \"(^.\" + ($$($nesting, 'SEPARATOR')) + \"+|\" + ($$($nesting, 'SEPARATOR')) + \"+$)\"));\n        file = $send(files, 'find', [], ($$8 = function(f){var self = $$8.$$s || this;\n\n        \n          \n          if (f == null) {\n            f = nil;\n          };\n          return f['$=~'](new RegExp(\"\" + \"^\" + (path)));}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n        return file;\n      }, $directory$ques$7.$$arity = 1);\n      \n      Opal.def(self, '$join', $join$9 = function $$join($a) {\n        var $post_args, paths, $$10, $$11, self = this, result = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        paths = $post_args;;\n        if ($truthy(paths['$empty?']())) {\n          return \"\"};\n        result = \"\";\n        paths = $send(paths.$flatten().$each_with_index(), 'map', [], ($$10 = function(item, index){var self = $$10.$$s || this, $b;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          \n          if (index == null) {\n            index = nil;\n          };\n          if ($truthy((($b = index['$=='](0)) ? item['$empty?']() : index['$=='](0)))) {\n            return $$($nesting, 'SEPARATOR')\n          } else if ($truthy((($b = paths.$length()['$==']($rb_plus(index, 1))) ? item['$empty?']() : paths.$length()['$==']($rb_plus(index, 1))))) {\n            return $$($nesting, 'SEPARATOR')\n          } else {\n            return item\n          };}, $$10.$$s = self, $$10.$$arity = 2, $$10));\n        paths = $send(paths, 'reject', [], \"empty?\".$to_proc());\n        $send(paths, 'each_with_index', [], ($$11 = function(item, index){var self = $$11.$$s || this, $b, next_item = nil;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          \n          if (index == null) {\n            index = nil;\n          };\n          next_item = paths['$[]']($rb_plus(index, 1));\n          if ($truthy(next_item['$nil?']())) {\n            return (result = \"\" + (result) + (item))\n          } else {\n            \n            if ($truthy(($truthy($b = item['$end_with?']($$($nesting, 'SEPARATOR'))) ? next_item['$start_with?']($$($nesting, 'SEPARATOR')) : $b))) {\n              item = item.$sub(new RegExp(\"\" + ($$($nesting, 'SEPARATOR')) + \"+$\"), \"\")};\n            return (result = (function() {if ($truthy(($truthy($b = item['$end_with?']($$($nesting, 'SEPARATOR'))) ? $b : next_item['$start_with?']($$($nesting, 'SEPARATOR'))))) {\n              return \"\" + (result) + (item)\n            } else {\n              return \"\" + (result) + (item) + ($$($nesting, 'SEPARATOR'))\n            }; return nil; })());\n          };}, $$11.$$s = self, $$11.$$arity = 2, $$11));\n        return result;\n      }, $join$9.$$arity = -1);\n      return (Opal.def(self, '$split', $split$12 = function $$split(path) {\n        var self = this;\n\n        return path.$split($$($nesting, 'SEPARATOR'))\n      }, $split$12.$$arity = 1), nil) && 'split';\n    })(Opal.get_singleton_class(self), $nesting);\n  })($nesting[0], $$($nesting, 'IO'), $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/process\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$const_set', '$size', '$<<', '$__register_clock__', '$to_f', '$now', '$new', '$[]', '$raise']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Process');\n\n    var $nesting = [self].concat($parent_nesting), $Process___register_clock__$1, $Process_pid$2, $Process_times$3, $Process_clock_gettime$4, monotonic = nil;\n\n    \n    self.__clocks__ = [];\n    Opal.defs(self, '$__register_clock__', $Process___register_clock__$1 = function $$__register_clock__(name, func) {\n      var self = this;\n      if (self.__clocks__ == null) self.__clocks__ = nil;\n\n      \n      self.$const_set(name, self.__clocks__.$size());\n      return self.__clocks__['$<<'](func);\n    }, $Process___register_clock__$1.$$arity = 2);\n    self.$__register_clock__(\"CLOCK_REALTIME\", function() { return Date.now() });\n    monotonic = false;\n    \n    if (Opal.global.performance) {\n      monotonic = function() {\n        return performance.now()\n      };\n    }\n    else if (Opal.global.process && process.hrtime) {\n      // let now be the base to get smaller numbers\n      var hrtime_base = process.hrtime();\n\n      monotonic = function() {\n        var hrtime = process.hrtime(hrtime_base);\n        var us = (hrtime[1] / 1000) | 0; // cut below microsecs;\n        return ((hrtime[0] * 1000) + (us / 1000));\n      };\n    }\n  ;\n    if ($truthy(monotonic)) {\n      self.$__register_clock__(\"CLOCK_MONOTONIC\", monotonic)};\n    Opal.defs(self, '$pid', $Process_pid$2 = function $$pid() {\n      var self = this;\n\n      return 0\n    }, $Process_pid$2.$$arity = 0);\n    Opal.defs(self, '$times', $Process_times$3 = function $$times() {\n      var self = this, t = nil;\n\n      \n      t = $$($nesting, 'Time').$now().$to_f();\n      return $$$($$($nesting, 'Benchmark'), 'Tms').$new(t, t, t, t, t);\n    }, $Process_times$3.$$arity = 0);\n    return (Opal.defs(self, '$clock_gettime', $Process_clock_gettime$4 = function $$clock_gettime(clock_id, unit) {\n      var $a, self = this, clock = nil;\n      if (self.__clocks__ == null) self.__clocks__ = nil;\n\n      \n      \n      if (unit == null) {\n        unit = \"float_second\";\n      };\n      ($truthy($a = (clock = self.__clocks__['$[]'](clock_id))) ? $a : self.$raise($$$($$($nesting, 'Errno'), 'EINVAL'), \"\" + \"clock_gettime(\" + (clock_id) + \") \" + (self.__clocks__['$[]'](clock_id))));\n      \n      var ms = clock();\n      switch (unit) {\n        case 'float_second':      return  (ms / 1000);         // number of seconds as a float (default)\n        case 'float_millisecond': return  (ms / 1);            // number of milliseconds as a float\n        case 'float_microsecond': return  (ms * 1000);         // number of microseconds as a float\n        case 'second':            return ((ms / 1000)    | 0); // number of seconds as an integer\n        case 'millisecond':       return ((ms / 1)       | 0); // number of milliseconds as an integer\n        case 'microsecond':       return ((ms * 1000)    | 0); // number of microseconds as an integer\n        case 'nanosecond':        return ((ms * 1000000) | 0); // number of nanoseconds as an integer\n        default: self.$raise($$($nesting, 'ArgumentError'), \"\" + \"unexpected unit: \" + (unit))\n      }\n    ;\n    }, $Process_clock_gettime$4.$$arity = -2), nil) && 'clock_gettime';\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Signal');\n\n    var $nesting = [self].concat($parent_nesting), $Signal_trap$5;\n\n    return (Opal.defs(self, '$trap', $Signal_trap$5 = function $$trap($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Signal_trap$5.$$arity = -1), nil) && 'trap'\n  })($nesting[0], null, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'GC');\n\n    var $nesting = [self].concat($parent_nesting), $GC_start$6;\n\n    return (Opal.defs(self, '$start', $GC_start$6 = function $$start() {\n      var self = this;\n\n      return nil\n    }, $GC_start$6.$$arity = 0), nil) && 'start'\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"corelib/unsupported\"] = function(Opal) {\n  var $public$35, $private$36, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $module = Opal.module;\n\n  Opal.add_stubs(['$raise', '$warn', '$%']);\n  \n  \n  var warnings = {};\n\n  function handle_unsupported_feature(message) {\n    switch (Opal.config.unsupported_features_severity) {\n    case 'error':\n      $$($nesting, 'Kernel').$raise($$($nesting, 'NotImplementedError'), message)\n      break;\n    case 'warning':\n      warn(message)\n      break;\n    default: // ignore\n      // noop\n    }\n  }\n\n  function warn(string) {\n    if (warnings[string]) {\n      return;\n    }\n\n    warnings[string] = true;\n    self.$warn(string);\n  }\n;\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting), $String_$lt$lt$1, $String_capitalize$excl$2, $String_chomp$excl$3, $String_chop$excl$4, $String_downcase$excl$5, $String_gsub$excl$6, $String_lstrip$excl$7, $String_next$excl$8, $String_reverse$excl$9, $String_slice$excl$10, $String_squeeze$excl$11, $String_strip$excl$12, $String_sub$excl$13, $String_succ$excl$14, $String_swapcase$excl$15, $String_tr$excl$16, $String_tr_s$excl$17, $String_upcase$excl$18, $String_prepend$19, $String_$$$eq$20, $String_clear$21, $String_encode$excl$22, $String_unicode_normalize$excl$23;\n\n    \n    var ERROR = \"String#%s not supported. Mutable String methods are not supported in Opal.\";\n    \n    Opal.def(self, '$<<', $String_$lt$lt$1 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"<<\"));\n    }, $String_$lt$lt$1.$$arity = -1);\n    \n    Opal.def(self, '$capitalize!', $String_capitalize$excl$2 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"capitalize!\"));\n    }, $String_capitalize$excl$2.$$arity = -1);\n    \n    Opal.def(self, '$chomp!', $String_chomp$excl$3 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"chomp!\"));\n    }, $String_chomp$excl$3.$$arity = -1);\n    \n    Opal.def(self, '$chop!', $String_chop$excl$4 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"chop!\"));\n    }, $String_chop$excl$4.$$arity = -1);\n    \n    Opal.def(self, '$downcase!', $String_downcase$excl$5 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"downcase!\"));\n    }, $String_downcase$excl$5.$$arity = -1);\n    \n    Opal.def(self, '$gsub!', $String_gsub$excl$6 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"gsub!\"));\n    }, $String_gsub$excl$6.$$arity = -1);\n    \n    Opal.def(self, '$lstrip!', $String_lstrip$excl$7 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"lstrip!\"));\n    }, $String_lstrip$excl$7.$$arity = -1);\n    \n    Opal.def(self, '$next!', $String_next$excl$8 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"next!\"));\n    }, $String_next$excl$8.$$arity = -1);\n    \n    Opal.def(self, '$reverse!', $String_reverse$excl$9 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"reverse!\"));\n    }, $String_reverse$excl$9.$$arity = -1);\n    \n    Opal.def(self, '$slice!', $String_slice$excl$10 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"slice!\"));\n    }, $String_slice$excl$10.$$arity = -1);\n    \n    Opal.def(self, '$squeeze!', $String_squeeze$excl$11 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"squeeze!\"));\n    }, $String_squeeze$excl$11.$$arity = -1);\n    \n    Opal.def(self, '$strip!', $String_strip$excl$12 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"strip!\"));\n    }, $String_strip$excl$12.$$arity = -1);\n    \n    Opal.def(self, '$sub!', $String_sub$excl$13 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"sub!\"));\n    }, $String_sub$excl$13.$$arity = -1);\n    \n    Opal.def(self, '$succ!', $String_succ$excl$14 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"succ!\"));\n    }, $String_succ$excl$14.$$arity = -1);\n    \n    Opal.def(self, '$swapcase!', $String_swapcase$excl$15 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"swapcase!\"));\n    }, $String_swapcase$excl$15.$$arity = -1);\n    \n    Opal.def(self, '$tr!', $String_tr$excl$16 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"tr!\"));\n    }, $String_tr$excl$16.$$arity = -1);\n    \n    Opal.def(self, '$tr_s!', $String_tr_s$excl$17 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"tr_s!\"));\n    }, $String_tr_s$excl$17.$$arity = -1);\n    \n    Opal.def(self, '$upcase!', $String_upcase$excl$18 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"upcase!\"));\n    }, $String_upcase$excl$18.$$arity = -1);\n    \n    Opal.def(self, '$prepend', $String_prepend$19 = function $$prepend($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"prepend\"));\n    }, $String_prepend$19.$$arity = -1);\n    \n    Opal.def(self, '$[]=', $String_$$$eq$20 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"[]=\"));\n    }, $String_$$$eq$20.$$arity = -1);\n    \n    Opal.def(self, '$clear', $String_clear$21 = function $$clear($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"clear\"));\n    }, $String_clear$21.$$arity = -1);\n    \n    Opal.def(self, '$encode!', $String_encode$excl$22 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"encode!\"));\n    }, $String_encode$excl$22.$$arity = -1);\n    return (Opal.def(self, '$unicode_normalize!', $String_unicode_normalize$excl$23 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), (ERROR)['$%'](\"unicode_normalize!\"));\n    }, $String_unicode_normalize$excl$23.$$arity = -1), nil) && 'unicode_normalize!';\n  })($nesting[0], null, $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_freeze$24, $Kernel_frozen$ques$25;\n\n    \n    var ERROR = \"Object freezing is not supported by Opal\";\n    \n    Opal.def(self, '$freeze', $Kernel_freeze$24 = function $$freeze() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return self;\n    }, $Kernel_freeze$24.$$arity = 0);\n    \n    Opal.def(self, '$frozen?', $Kernel_frozen$ques$25 = function() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return false;\n    }, $Kernel_frozen$ques$25.$$arity = 0);\n  })($nesting[0], $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_taint$26, $Kernel_untaint$27, $Kernel_tainted$ques$28;\n\n    \n    var ERROR = \"Object tainting is not supported by Opal\";\n    \n    Opal.def(self, '$taint', $Kernel_taint$26 = function $$taint() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return self;\n    }, $Kernel_taint$26.$$arity = 0);\n    \n    Opal.def(self, '$untaint', $Kernel_untaint$27 = function $$untaint() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return self;\n    }, $Kernel_untaint$27.$$arity = 0);\n    \n    Opal.def(self, '$tainted?', $Kernel_tainted$ques$28 = function() {\n      var self = this;\n\n      \n      handle_unsupported_feature(ERROR);\n      return false;\n    }, $Kernel_tainted$ques$28.$$arity = 0);\n  })($nesting[0], $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Module');\n\n    var $nesting = [self].concat($parent_nesting), $Module_public$29, $Module_private_class_method$30, $Module_private_method_defined$ques$31, $Module_private_constant$32;\n\n    \n    \n    Opal.def(self, '$public', $Module_public$29 = function($a) {\n      var $post_args, methods, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      methods = $post_args;;\n      \n      if (methods.length === 0) {\n        self.$$module_function = false;\n      }\n\n      return nil;\n    ;\n    }, $Module_public$29.$$arity = -1);\n    Opal.alias(self, \"private\", \"public\");\n    Opal.alias(self, \"protected\", \"public\");\n    Opal.alias(self, \"nesting\", \"public\");\n    \n    Opal.def(self, '$private_class_method', $Module_private_class_method$30 = function $$private_class_method($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self;\n    }, $Module_private_class_method$30.$$arity = -1);\n    Opal.alias(self, \"public_class_method\", \"private_class_method\");\n    \n    Opal.def(self, '$private_method_defined?', $Module_private_method_defined$ques$31 = function(obj) {\n      var self = this;\n\n      return false\n    }, $Module_private_method_defined$ques$31.$$arity = 1);\n    \n    Opal.def(self, '$private_constant', $Module_private_constant$32 = function $$private_constant($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return nil;\n    }, $Module_private_constant$32.$$arity = -1);\n    Opal.alias(self, \"protected_method_defined?\", \"private_method_defined?\");\n    Opal.alias(self, \"public_instance_methods\", \"instance_methods\");\n    Opal.alias(self, \"public_instance_method\", \"instance_method\");\n    return Opal.alias(self, \"public_method_defined?\", \"method_defined?\");\n  })($nesting[0], null, $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_private_methods$33;\n\n    \n    \n    Opal.def(self, '$private_methods', $Kernel_private_methods$33 = function $$private_methods($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return [];\n    }, $Kernel_private_methods$33.$$arity = -1);\n    Opal.alias(self, \"private_instance_methods\", \"private_methods\");\n  })($nesting[0], $nesting);\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_eval$34;\n\n    \n    Opal.def(self, '$eval', $Kernel_eval$34 = function($a) {\n      var $post_args, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      ;\n      return self.$raise($$($nesting, 'NotImplementedError'), \"\" + \"To use Kernel#eval, you must first require 'opal-parser'. \" + (\"\" + \"See https://github.com/opal/opal/blob/\" + ($$($nesting, 'RUBY_ENGINE_VERSION')) + \"/docs/opal_parser.md for details.\"));\n    }, $Kernel_eval$34.$$arity = -1)\n  })($nesting[0], $nesting);\n  Opal.defs(self, '$public', $public$35 = function($a) {\n    var $post_args, self = this;\n\n    \n    \n    $post_args = Opal.slice.call(arguments, 0, arguments.length);\n    ;\n    return nil;\n  }, $public$35.$$arity = -1);\n  return (Opal.defs(self, '$private', $private$36 = function($a) {\n    var $post_args, self = this;\n\n    \n    \n    $post_args = Opal.slice.call(arguments, 0, arguments.length);\n    ;\n    return nil;\n  }, $private$36.$$arity = -1), nil) && 'private';\n};\n\n/* Generated by Opal 0.11.99.dev */\n(function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"opal/base\");\n  self.$require(\"opal/mini\");\n  self.$require(\"corelib/string/encoding\");\n  self.$require(\"corelib/struct\");\n  self.$require(\"corelib/io\");\n  self.$require(\"corelib/main\");\n  self.$require(\"corelib/dir\");\n  self.$require(\"corelib/file\");\n  self.$require(\"corelib/process\");\n  return self.$require(\"corelib/unsupported\");\n})(Opal);\n\n\n// UMD Module\n(function (root, factory) {\n  if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register a named module.\n    define('asciidoctor', ['module'], function (module) {\n      return factory(module.config())\n    })\n  } else {\n    // Browser globals (root is window)\n    root.Asciidoctor = factory\n  }\n}(this, function (moduleConfig) {\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/browser/file\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;\n\n  Opal.add_stubs(['$new']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'File');\n\n    var $nesting = [self].concat($parent_nesting), $File_read$1;\n\n    return (Opal.defs(self, '$read', $File_read$1 = function $$read(path) {\n      var self = this;\n\n      \n      var data = '';\n      var status = -1;\n      try {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', path, false);\n        xhr.addEventListener('load', function() {\n          status = this.status;\n          // status is 0 for local file mode (i.e., file://)\n          if (status === 0 || status === 200) {\n            data = this.responseText;\n          }\n        });\n        xhr.overrideMimeType('text/plain');\n        xhr.send();\n      }\n      catch (e) {\n        throw $$($nesting, 'IOError').$new('Error reading file or directory: ' + path + '; reason: ' + e.message);\n      }\n      // assume that no data in local file mode means it doesn't exist\n      if (status === 404 || (status === 0 && !data)) {\n        throw $$($nesting, 'IOError').$new('No such file or directory: ' + path);\n      }\n      return data;\n    \n    }, $File_read$1.$$arity = 1), nil) && 'read'\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/browser\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  \n  var platform, engine, framework, ioModule;\n\n  if (typeof moduleConfig === 'object' && typeof moduleConfig.runtime === 'object') {\n    var runtime = moduleConfig.runtime;\n    platform = runtime.platform;\n    engine = runtime.engine;\n    framework = runtime.framework;\n    ioModule = runtime.ioModule;\n  }\n  ioModule = ioModule || 'xmlhttprequest';\n  platform = platform || 'browser';\n  engine = engine || '';\n  framework = framework || '';\n;\n  Opal.const_set($nesting[0], 'JAVASCRIPT_IO_MODULE', ioModule);\n  Opal.const_set($nesting[0], 'JAVASCRIPT_PLATFORM', platform);\n  Opal.const_set($nesting[0], 'JAVASCRIPT_ENGINE', engine);\n  Opal.const_set($nesting[0], 'JAVASCRIPT_FRAMEWORK', framework);\n  return self.$require(\"asciidoctor/js/opal_ext/browser/file\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser/abstract_node\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$uriish?', '$[]', '$web_path', '$path_resolver', '$descends_from?', '$base_dir', '$start_with?', '$attr?', '$join', '$prepare_source_string', '$read', '$fetch', '$warn', '$logger', '$normalize_system_path', '$read_asset']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'AbstractNode');\n\n      var $nesting = [self].concat($parent_nesting), $AbstractNode_read_contents$1, $AbstractNode_generate_data_uri_from_uri$2;\n\n      self.$$prototype.document = nil;\n      \n      \n      Opal.def(self, '$read_contents', $AbstractNode_read_contents$1 = function $$read_contents(target, opts) {\n        var $a, $b, $c, self = this, doc = nil, start = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        doc = self.document;\n        if ($truthy(($truthy($a = $$($nesting, 'Helpers')['$uriish?'](target)) ? $a : ($truthy($b = ($truthy($c = (start = opts['$[]'](\"start\"))) ? $$($nesting, 'Helpers')['$uriish?'](start) : $c)) ? (target = doc.$path_resolver().$web_path(target, start)) : $b)))) {\n          if ($truthy(($truthy($a = ($truthy($b = doc.$path_resolver()['$descends_from?'](target, doc.$base_dir())) ? $b : target['$start_with?'](\"chrome://\"))) ? $a : doc['$attr?'](\"allow-uri-read\")))) {\n            \n            try {\n              if ($truthy(opts['$[]'](\"normalize\"))) {\n                return $$($nesting, 'Helpers').$prepare_source_string($$$('::', 'File').$read(target)).$join($$($nesting, 'LF'))\n              } else {\n                return $$$('::', 'File').$read(target)\n              }\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  if ($truthy(opts.$fetch(\"warn_on_failure\", true))) {\n                    self.$logger().$warn(\"\" + \"could not retrieve contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" at URI: \" + (target))};\n                  return nil;\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };\n          } else {\n            \n            if ($truthy(opts.$fetch(\"warn_on_failure\", true))) {\n              self.$logger().$warn(\"\" + \"cannot retrieve contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" at URI: \" + (target) + \" (allow-uri-read attribute not enabled)\")};\n            return nil;\n          }\n        } else {\n          \n          target = self.$normalize_system_path(target, opts['$[]'](\"start\"), nil, $hash2([\"target_name\"], {\"target_name\": ($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")}));\n          return self.$read_asset(target, $hash2([\"normalize\", \"warn_on_failure\", \"label\"], {\"normalize\": opts['$[]'](\"normalize\"), \"warn_on_failure\": opts.$fetch(\"warn_on_failure\", true), \"label\": opts['$[]'](\"label\")}));\n        };\n      }, $AbstractNode_read_contents$1.$$arity = -2);\n      return (Opal.def(self, '$generate_data_uri_from_uri', $AbstractNode_generate_data_uri_from_uri$2 = function $$generate_data_uri_from_uri(image_uri, cache_uri) {\n        var self = this;\n\n        \n        \n        if (cache_uri == null) {\n          cache_uri = false;\n        };\n        \n      var contentType = ''\n      var b64encoded = ''\n      var status = -1\n\n      try {\n        var xhr = new XMLHttpRequest()\n        xhr.open('GET', image_uri, false)\n        // the response type cannot be changed for synchronous requests made from a document\n        // xhr.responseType = 'arraybuffer'\n        xhr.overrideMimeType('text/plain; charset=x-user-defined')\n        xhr.addEventListener('load', function() {\n          status = this.status\n          // status is 0 for local file mode (i.e., file://)\n          if (status === 0 || status === 200) {\n            var binary = ''\n            var rawText = this.responseText\n            for (var i = 0, len = rawText.length; i < len; ++i) {\n              var c = rawText.charCodeAt(i)\n              var byteCode = c & 0xff // byte at offset i\n              binary += String.fromCharCode(byteCode)\n            }\n            b64encoded = btoa(binary)\n            contentType = this.getResponseHeader('content-type')\n          }\n        })\n        xhr.send(null)\n        // try to detect the MIME Type from the file extension\n        if (!contentType) {\n          if (image_uri.endsWith('.jpeg') || image_uri.endsWith('.jpg') || image_uri.endsWith('.jpe')) {\n            contentType = 'image/jpg'\n          } else if (image_uri.endsWith('.png')) {\n            contentType = 'image/png'\n          } else if (image_uri.endsWith('.svg')) {\n            contentType = 'image/svg+xml'\n          } else if (image_uri.endsWith('.bmp')) {\n            contentType = 'image/bmp'\n          } else if (image_uri.endsWith('.tif') || image_uri.endsWith('.tiff')) {\n            contentType = 'image/tiff'\n          }\n        }\n      }\n      catch (e) {\n        // something bad happened!\n        status = 0\n      }\n\n      // assume that no data in local file mode means it doesn't exist\n      if (status === 404 || (status === 0 && (!b64encoded || !contentType))) {\n        self.$logger().$warn('could not retrieve image data from URI: ' + image_uri)\n        return image_uri\n      }\n      return 'data:' + contentType + ';base64,' + b64encoded\n    ;\n      }, $AbstractNode_generate_data_uri_from_uri$2.$$arity = -2), nil) && 'generate_data_uri_from_uri';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser/open_uri\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $send = Opal.send;\n\n  Opal.add_stubs(['$new', '$path']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'OpenURI');\n\n    var $nesting = [self].concat($parent_nesting), $OpenURI_open_uri$1;\n\n    Opal.defs($$($nesting, 'OpenURI'), '$open_uri', $OpenURI_open_uri$1 = function $$open_uri(name, $a) {\n      var $post_args, rest, $iter = $OpenURI_open_uri$1.$$p, $yield = $iter || nil, self = this, file = nil;\n\n      if ($iter) $OpenURI_open_uri$1.$$p = null;\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      rest = $post_args;;\n      file = $send($$($nesting, 'File'), 'new', [self.$path()].concat(Opal.to_a(rest)));\n      if (($yield !== nil)) {\n        return Opal.yield1($yield, file);\n      } else {\n        return file\n      };\n    }, $OpenURI_open_uri$1.$$arity = -2)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser/path_resolver\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$absolute_path?', '$start_with?']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'PathResolver');\n\n      var $nesting = [self].concat($parent_nesting), $PathResolver_root$ques$1;\n\n      return (Opal.def(self, '$root?', $PathResolver_root$ques$1 = function(path) {\n        var $a, self = this;\n\n        return ($truthy($a = self['$absolute_path?'](path)) ? $a : path['$start_with?'](\"file://\", \"http://\", \"https://\", \"chrome://\"))\n      }, $PathResolver_root$ques$1.$$arity = 1), nil) && 'root?'\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser/reader\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$posixify', '$new', '$base_dir', '$start_with?', '$uriish?', '$descends_from?', '$key?', '$attributes', '$replace_next_line', '$absolute_path?', '$==', '$empty?', '$!', '$slice', '$length']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'PreprocessorReader');\n\n      var $nesting = [self].concat($parent_nesting), $PreprocessorReader_resolve_include_path$1;\n\n      self.$$prototype.path_resolver = self.$$prototype.document = self.$$prototype.include_stack = self.$$prototype.dir = nil;\n      return (Opal.def(self, '$resolve_include_path', $PreprocessorReader_resolve_include_path$1 = function $$resolve_include_path(target, attrlist, attributes) {\n        var $a, self = this, p_target = nil, target_type = nil, base_dir = nil, inc_path = nil, relpath = nil, ctx_dir = nil, top_level = nil, offset = nil;\n\n        \n        p_target = (self.path_resolver = ($truthy($a = self.path_resolver) ? $a : $$($nesting, 'PathResolver').$new(\"\\\\\"))).$posixify(target);\n        $a = [\"file\", self.document.$base_dir()], (target_type = $a[0]), (base_dir = $a[1]), $a;\n        if ($truthy(p_target['$start_with?'](\"file://\"))) {\n          inc_path = (relpath = p_target)\n        } else if ($truthy($$($nesting, 'Helpers')['$uriish?'](p_target))) {\n          \n          if ($truthy(($truthy($a = self.path_resolver['$descends_from?'](p_target, base_dir)) ? $a : self.document.$attributes()['$key?'](\"allow-uri-read\")))) {\n          } else {\n            return self.$replace_next_line(\"\" + \"link:\" + (target) + \"[\" + (attrlist) + \"]\")\n          };\n          inc_path = (relpath = p_target);\n        } else if ($truthy(self.path_resolver['$absolute_path?'](p_target))) {\n          inc_path = (relpath = \"\" + \"file://\" + ((function() {if ($truthy(p_target['$start_with?'](\"/\"))) {\n            return \"\"\n          } else {\n            return \"/\"\n          }; return nil; })()) + (p_target))\n        } else if ((ctx_dir = (function() {if ($truthy((top_level = self.include_stack['$empty?']()))) {\n          return base_dir\n        } else {\n          return self.dir\n        }; return nil; })())['$=='](\".\")) {\n          inc_path = (relpath = p_target)\n        } else if ($truthy(($truthy($a = ctx_dir['$start_with?'](\"file://\")) ? $a : $$($nesting, 'Helpers')['$uriish?'](ctx_dir)['$!']()))) {\n          \n          inc_path = \"\" + (ctx_dir) + \"/\" + (p_target);\n          if ($truthy(top_level)) {\n            relpath = p_target\n          } else if ($truthy(($truthy($a = base_dir['$=='](\".\")) ? $a : (offset = self.path_resolver['$descends_from?'](inc_path, base_dir))['$!']()))) {\n            relpath = inc_path\n          } else {\n            relpath = inc_path.$slice(offset, inc_path.$length())\n          };\n        } else if ($truthy(top_level)) {\n          inc_path = \"\" + (ctx_dir) + \"/\" + ((relpath = p_target))\n        } else if ($truthy(($truthy($a = (offset = self.path_resolver['$descends_from?'](ctx_dir, base_dir))) ? $a : self.document.$attributes()['$key?'](\"allow-uri-read\")))) {\n          \n          inc_path = \"\" + (ctx_dir) + \"/\" + (p_target);\n          relpath = (function() {if ($truthy(offset)) {\n            \n            return inc_path.$slice(offset, inc_path.$length());\n          } else {\n            return p_target\n          }; return nil; })();\n        } else {\n          return self.$replace_next_line(\"\" + \"link:\" + (target) + \"[\" + (attrlist) + \"]\")\n        };\n        return [inc_path, \"file\", relpath];\n      }, $PreprocessorReader_resolve_include_path$1.$$arity = 3), nil) && 'resolve_include_path'\n    })($nesting[0], $$($nesting, 'Reader'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/browser\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$==', '$require']);\n  if ($$($nesting, 'JAVASCRIPT_IO_MODULE')['$=='](\"xmlhttprequest\")) {\n    \n    self.$require(\"asciidoctor/js/asciidoctor_ext/browser/abstract_node\");\n    self.$require(\"asciidoctor/js/asciidoctor_ext/browser/open_uri\");\n    self.$require(\"asciidoctor/js/asciidoctor_ext/browser/path_resolver\");\n    return self.$require(\"asciidoctor/js/asciidoctor_ext/browser/reader\");\n  } else {\n    return nil\n  }\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"set\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send, $module = Opal.module;\n\n  Opal.add_stubs(['$include', '$new', '$nil?', '$===', '$raise', '$each', '$add', '$merge', '$class', '$respond_to?', '$subtract', '$dup', '$join', '$to_a', '$equal?', '$instance_of?', '$==', '$instance_variable_get', '$is_a?', '$size', '$all?', '$include?', '$[]=', '$-', '$enum_for', '$[]', '$<<', '$replace', '$delete', '$select', '$each_key', '$to_proc', '$empty?', '$eql?', '$instance_eval', '$clear', '$<', '$<=', '$keys']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Set');\n\n    var $nesting = [self].concat($parent_nesting), $Set_$$$1, $Set_initialize$2, $Set_dup$4, $Set_$minus$5, $Set_inspect$6, $Set_$eq_eq$7, $Set_add$9, $Set_classify$10, $Set_collect$excl$13, $Set_delete$15, $Set_delete$ques$16, $Set_delete_if$17, $Set_add$ques$20, $Set_each$21, $Set_empty$ques$22, $Set_eql$ques$23, $Set_clear$25, $Set_include$ques$26, $Set_merge$27, $Set_replace$29, $Set_size$30, $Set_subtract$31, $Set_$$33, $Set_superset$ques$34, $Set_proper_superset$ques$36, $Set_subset$ques$38, $Set_proper_subset$ques$40, $Set_to_a$42;\n\n    self.$$prototype.hash = nil;\n    \n    self.$include($$($nesting, 'Enumerable'));\n    Opal.defs(self, '$[]', $Set_$$$1 = function($a) {\n      var $post_args, ary, self = this;\n\n      \n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      ary = $post_args;;\n      return self.$new(ary);\n    }, $Set_$$$1.$$arity = -1);\n    \n    Opal.def(self, '$initialize', $Set_initialize$2 = function $$initialize(enum$) {\n      var $iter = $Set_initialize$2.$$p, block = $iter || nil, $$3, self = this;\n\n      if ($iter) $Set_initialize$2.$$p = null;\n      \n      \n      if ($iter) $Set_initialize$2.$$p = null;;\n      \n      if (enum$ == null) {\n        enum$ = nil;\n      };\n      self.hash = $hash2([], {});\n      if ($truthy(enum$['$nil?']())) {\n        return nil};\n      if ($truthy($$($nesting, 'Enumerable')['$==='](enum$))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"value must be enumerable\")\n      };\n      if ($truthy(block)) {\n        return $send(enum$, 'each', [], ($$3 = function(item){var self = $$3.$$s || this;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          return self.$add(Opal.yield1(block, item));}, $$3.$$s = self, $$3.$$arity = 1, $$3))\n      } else {\n        return self.$merge(enum$)\n      };\n    }, $Set_initialize$2.$$arity = -1);\n    \n    Opal.def(self, '$dup', $Set_dup$4 = function $$dup() {\n      var self = this, result = nil;\n\n      \n      result = self.$class().$new();\n      return result.$merge(self);\n    }, $Set_dup$4.$$arity = 0);\n    \n    Opal.def(self, '$-', $Set_$minus$5 = function(enum$) {\n      var self = this;\n\n      \n      if ($truthy(enum$['$respond_to?'](\"each\"))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"value must be enumerable\")\n      };\n      return self.$dup().$subtract(enum$);\n    }, $Set_$minus$5.$$arity = 1);\n    Opal.alias(self, \"difference\", \"-\");\n    \n    Opal.def(self, '$inspect', $Set_inspect$6 = function $$inspect() {\n      var self = this;\n\n      return \"\" + \"#<Set: {\" + (self.$to_a().$join(\",\")) + \"}>\"\n    }, $Set_inspect$6.$$arity = 0);\n    \n    Opal.def(self, '$==', $Set_$eq_eq$7 = function(other) {\n      var $a, $$8, self = this;\n\n      if ($truthy(self['$equal?'](other))) {\n        return true\n      } else if ($truthy(other['$instance_of?'](self.$class()))) {\n        return self.hash['$=='](other.$instance_variable_get(\"@hash\"))\n      } else if ($truthy(($truthy($a = other['$is_a?']($$($nesting, 'Set'))) ? self.$size()['$=='](other.$size()) : $a))) {\n        return $send(other, 'all?', [], ($$8 = function(o){var self = $$8.$$s || this;\n          if (self.hash == null) self.hash = nil;\n\n        \n          \n          if (o == null) {\n            o = nil;\n          };\n          return self.hash['$include?'](o);}, $$8.$$s = self, $$8.$$arity = 1, $$8))\n      } else {\n        return false\n      }\n    }, $Set_$eq_eq$7.$$arity = 1);\n    \n    Opal.def(self, '$add', $Set_add$9 = function $$add(o) {\n      var self = this, $writer = nil;\n\n      \n      \n      $writer = [o, true];\n      $send(self.hash, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      return self;\n    }, $Set_add$9.$$arity = 1);\n    Opal.alias(self, \"<<\", \"add\");\n    \n    Opal.def(self, '$classify', $Set_classify$10 = function $$classify() {\n      var $iter = $Set_classify$10.$$p, block = $iter || nil, $$11, $$12, self = this, result = nil;\n\n      if ($iter) $Set_classify$10.$$p = null;\n      \n      \n      if ($iter) $Set_classify$10.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"classify\")\n      };\n      result = $send($$($nesting, 'Hash'), 'new', [], ($$11 = function(h, k){var self = $$11.$$s || this, $writer = nil;\n\n      \n        \n        if (h == null) {\n          h = nil;\n        };\n        \n        if (k == null) {\n          k = nil;\n        };\n        $writer = [k, self.$class().$new()];\n        $send(h, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];}, $$11.$$s = self, $$11.$$arity = 2, $$11));\n      $send(self, 'each', [], ($$12 = function(item){var self = $$12.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return result['$[]'](Opal.yield1(block, item)).$add(item);}, $$12.$$s = self, $$12.$$arity = 1, $$12));\n      return result;\n    }, $Set_classify$10.$$arity = 0);\n    \n    Opal.def(self, '$collect!', $Set_collect$excl$13 = function() {\n      var $iter = $Set_collect$excl$13.$$p, block = $iter || nil, $$14, self = this, result = nil;\n\n      if ($iter) $Set_collect$excl$13.$$p = null;\n      \n      \n      if ($iter) $Set_collect$excl$13.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"collect!\")\n      };\n      result = self.$class().$new();\n      $send(self, 'each', [], ($$14 = function(item){var self = $$14.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return result['$<<'](Opal.yield1(block, item));}, $$14.$$s = self, $$14.$$arity = 1, $$14));\n      return self.$replace(result);\n    }, $Set_collect$excl$13.$$arity = 0);\n    Opal.alias(self, \"map!\", \"collect!\");\n    \n    Opal.def(self, '$delete', $Set_delete$15 = function(o) {\n      var self = this;\n\n      \n      self.hash.$delete(o);\n      return self;\n    }, $Set_delete$15.$$arity = 1);\n    \n    Opal.def(self, '$delete?', $Set_delete$ques$16 = function(o) {\n      var self = this;\n\n      if ($truthy(self['$include?'](o))) {\n        \n        self.$delete(o);\n        return self;\n      } else {\n        return nil\n      }\n    }, $Set_delete$ques$16.$$arity = 1);\n    \n    Opal.def(self, '$delete_if', $Set_delete_if$17 = function $$delete_if() {\n      var $$18, $$19, $iter = $Set_delete_if$17.$$p, $yield = $iter || nil, self = this;\n\n      if ($iter) $Set_delete_if$17.$$p = null;\n      \n      if (($yield !== nil)) {\n      } else {\n        return self.$enum_for(\"delete_if\")\n      };\n      $send($send(self, 'select', [], ($$18 = function(o){var self = $$18.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return Opal.yield1($yield, o);;}, $$18.$$s = self, $$18.$$arity = 1, $$18)), 'each', [], ($$19 = function(o){var self = $$19.$$s || this;\n        if (self.hash == null) self.hash = nil;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return self.hash.$delete(o);}, $$19.$$s = self, $$19.$$arity = 1, $$19));\n      return self;\n    }, $Set_delete_if$17.$$arity = 0);\n    \n    Opal.def(self, '$add?', $Set_add$ques$20 = function(o) {\n      var self = this;\n\n      if ($truthy(self['$include?'](o))) {\n        return nil\n      } else {\n        return self.$add(o)\n      }\n    }, $Set_add$ques$20.$$arity = 1);\n    \n    Opal.def(self, '$each', $Set_each$21 = function $$each() {\n      var $iter = $Set_each$21.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Set_each$21.$$p = null;\n      \n      \n      if ($iter) $Set_each$21.$$p = null;;\n      if ((block !== nil)) {\n      } else {\n        return self.$enum_for(\"each\")\n      };\n      $send(self.hash, 'each_key', [], block.$to_proc());\n      return self;\n    }, $Set_each$21.$$arity = 0);\n    \n    Opal.def(self, '$empty?', $Set_empty$ques$22 = function() {\n      var self = this;\n\n      return self.hash['$empty?']()\n    }, $Set_empty$ques$22.$$arity = 0);\n    \n    Opal.def(self, '$eql?', $Set_eql$ques$23 = function(other) {\n      var $$24, self = this;\n\n      return self.hash['$eql?']($send(other, 'instance_eval', [], ($$24 = function(){var self = $$24.$$s || this;\n        if (self.hash == null) self.hash = nil;\n\n      return self.hash}, $$24.$$s = self, $$24.$$arity = 0, $$24)))\n    }, $Set_eql$ques$23.$$arity = 1);\n    \n    Opal.def(self, '$clear', $Set_clear$25 = function $$clear() {\n      var self = this;\n\n      \n      self.hash.$clear();\n      return self;\n    }, $Set_clear$25.$$arity = 0);\n    \n    Opal.def(self, '$include?', $Set_include$ques$26 = function(o) {\n      var self = this;\n\n      return self.hash['$include?'](o)\n    }, $Set_include$ques$26.$$arity = 1);\n    Opal.alias(self, \"member?\", \"include?\");\n    \n    Opal.def(self, '$merge', $Set_merge$27 = function $$merge(enum$) {\n      var $$28, self = this;\n\n      \n      $send(enum$, 'each', [], ($$28 = function(item){var self = $$28.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return self.$add(item);}, $$28.$$s = self, $$28.$$arity = 1, $$28));\n      return self;\n    }, $Set_merge$27.$$arity = 1);\n    \n    Opal.def(self, '$replace', $Set_replace$29 = function $$replace(enum$) {\n      var self = this;\n\n      \n      self.$clear();\n      self.$merge(enum$);\n      return self;\n    }, $Set_replace$29.$$arity = 1);\n    \n    Opal.def(self, '$size', $Set_size$30 = function $$size() {\n      var self = this;\n\n      return self.hash.$size()\n    }, $Set_size$30.$$arity = 0);\n    Opal.alias(self, \"length\", \"size\");\n    \n    Opal.def(self, '$subtract', $Set_subtract$31 = function $$subtract(enum$) {\n      var $$32, self = this;\n\n      \n      $send(enum$, 'each', [], ($$32 = function(item){var self = $$32.$$s || this;\n\n      \n        \n        if (item == null) {\n          item = nil;\n        };\n        return self.$delete(item);}, $$32.$$s = self, $$32.$$arity = 1, $$32));\n      return self;\n    }, $Set_subtract$31.$$arity = 1);\n    \n    Opal.def(self, '$|', $Set_$$33 = function(enum$) {\n      var self = this;\n\n      \n      if ($truthy(enum$['$respond_to?'](\"each\"))) {\n      } else {\n        self.$raise($$($nesting, 'ArgumentError'), \"value must be enumerable\")\n      };\n      return self.$dup().$merge(enum$);\n    }, $Set_$$33.$$arity = 1);\n    \n    Opal.def(self, '$superset?', $Set_superset$ques$34 = function(set) {\n      var $a, $$35, self = this;\n\n      \n      ($truthy($a = set['$is_a?']($$($nesting, 'Set'))) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"value must be a set\"));\n      if ($truthy($rb_lt(self.$size(), set.$size()))) {\n        return false};\n      return $send(set, 'all?', [], ($$35 = function(o){var self = $$35.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return self['$include?'](o);}, $$35.$$s = self, $$35.$$arity = 1, $$35));\n    }, $Set_superset$ques$34.$$arity = 1);\n    Opal.alias(self, \">=\", \"superset?\");\n    \n    Opal.def(self, '$proper_superset?', $Set_proper_superset$ques$36 = function(set) {\n      var $a, $$37, self = this;\n\n      \n      ($truthy($a = set['$is_a?']($$($nesting, 'Set'))) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"value must be a set\"));\n      if ($truthy($rb_le(self.$size(), set.$size()))) {\n        return false};\n      return $send(set, 'all?', [], ($$37 = function(o){var self = $$37.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return self['$include?'](o);}, $$37.$$s = self, $$37.$$arity = 1, $$37));\n    }, $Set_proper_superset$ques$36.$$arity = 1);\n    Opal.alias(self, \">\", \"proper_superset?\");\n    \n    Opal.def(self, '$subset?', $Set_subset$ques$38 = function(set) {\n      var $a, $$39, self = this;\n\n      \n      ($truthy($a = set['$is_a?']($$($nesting, 'Set'))) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"value must be a set\"));\n      if ($truthy($rb_lt(set.$size(), self.$size()))) {\n        return false};\n      return $send(self, 'all?', [], ($$39 = function(o){var self = $$39.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return set['$include?'](o);}, $$39.$$s = self, $$39.$$arity = 1, $$39));\n    }, $Set_subset$ques$38.$$arity = 1);\n    Opal.alias(self, \"<=\", \"subset?\");\n    \n    Opal.def(self, '$proper_subset?', $Set_proper_subset$ques$40 = function(set) {\n      var $a, $$41, self = this;\n\n      \n      ($truthy($a = set['$is_a?']($$($nesting, 'Set'))) ? $a : self.$raise($$($nesting, 'ArgumentError'), \"value must be a set\"));\n      if ($truthy($rb_le(set.$size(), self.$size()))) {\n        return false};\n      return $send(self, 'all?', [], ($$41 = function(o){var self = $$41.$$s || this;\n\n      \n        \n        if (o == null) {\n          o = nil;\n        };\n        return set['$include?'](o);}, $$41.$$s = self, $$41.$$arity = 1, $$41));\n    }, $Set_proper_subset$ques$40.$$arity = 1);\n    Opal.alias(self, \"<\", \"proper_subset?\");\n    Opal.alias(self, \"+\", \"|\");\n    Opal.alias(self, \"union\", \"|\");\n    return (Opal.def(self, '$to_a', $Set_to_a$42 = function $$to_a() {\n      var self = this;\n\n      return self.hash.$keys()\n    }, $Set_to_a$42.$$arity = 0), nil) && 'to_a';\n  })($nesting[0], null, $nesting);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Enumerable');\n\n    var $nesting = [self].concat($parent_nesting), $Enumerable_to_set$43;\n\n    \n    Opal.def(self, '$to_set', $Enumerable_to_set$43 = function $$to_set($a, $b) {\n      var $iter = $Enumerable_to_set$43.$$p, block = $iter || nil, $post_args, klass, args, self = this;\n\n      if ($iter) $Enumerable_to_set$43.$$p = null;\n      \n      \n      if ($iter) $Enumerable_to_set$43.$$p = null;;\n      \n      $post_args = Opal.slice.call(arguments, 0, arguments.length);\n      \n      if ($post_args.length > 0) {\n        klass = $post_args[0];\n        $post_args.splice(0, 1);\n      }\n      if (klass == null) {\n        klass = $$($nesting, 'Set');\n      };\n      \n      args = $post_args;;\n      return $send(klass, 'new', [self].concat(Opal.to_a(args)), block.$to_proc());\n    }, $Enumerable_to_set$43.$$arity = -1)\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/kernel\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $send = Opal.send;\n\n  Opal.add_stubs(['$new']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Kernel');\n\n    var $nesting = [self].concat($parent_nesting), $Kernel_open$1, $Kernel___dir__$2;\n\n    \n    \n    Opal.def(self, '$open', $Kernel_open$1 = function $$open(path, $a) {\n      var $post_args, rest, $iter = $Kernel_open$1.$$p, $yield = $iter || nil, self = this, file = nil;\n\n      if ($iter) $Kernel_open$1.$$p = null;\n      \n      \n      $post_args = Opal.slice.call(arguments, 1, arguments.length);\n      \n      rest = $post_args;;\n      file = $send($$($nesting, 'File'), 'new', [path].concat(Opal.to_a(rest)));\n      if (($yield !== nil)) {\n        return Opal.yield1($yield, file);\n      } else {\n        return file\n      };\n    }, $Kernel_open$1.$$arity = -2);\n    \n    Opal.def(self, '$__dir__', $Kernel___dir__$2 = function $$__dir__() {\n      var self = this;\n\n      return \"\"\n    }, $Kernel___dir__$2.$$arity = 0);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/file\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$attr_reader', '$delete', '$gsub', '$read', '$size', '$to_enum', '$chomp', '$each_line', '$readlines', '$split']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'File');\n\n    var $nesting = [self].concat($parent_nesting), $File_initialize$1, $File_read$2, $File_each_line$3, $File_readlines$4;\n\n    self.$$prototype.eof = self.$$prototype.path = nil;\n    \n    self.$attr_reader(\"eof\");\n    self.$attr_reader(\"lineno\");\n    self.$attr_reader(\"path\");\n    \n    Opal.def(self, '$initialize', $File_initialize$1 = function $$initialize(path, flags) {\n      var self = this, encoding_flag_regexp = nil;\n\n      \n      \n      if (flags == null) {\n        flags = \"r\";\n      };\n      self.path = path;\n      self.contents = nil;\n      self.eof = false;\n      self.lineno = 0;\n      flags = flags.$delete(\"b\");\n      encoding_flag_regexp = /:(.*)/;\n      flags = flags.$gsub(encoding_flag_regexp, \"\");\n      return (self.flags = flags);\n    }, $File_initialize$1.$$arity = -2);\n    \n    Opal.def(self, '$read', $File_read$2 = function $$read() {\n      var self = this, res = nil;\n\n      if ($truthy(self.eof)) {\n        return \"\"\n      } else {\n        \n        res = $$($nesting, 'File').$read(self.path);\n        self.eof = true;\n        self.lineno = res.$size();\n        return res;\n      }\n    }, $File_read$2.$$arity = 0);\n    \n    Opal.def(self, '$each_line', $File_each_line$3 = function $$each_line(separator) {\n      var $iter = $File_each_line$3.$$p, block = $iter || nil, self = this, lines = nil;\n      if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n      if ($iter) $File_each_line$3.$$p = null;\n      \n      \n      if ($iter) $File_each_line$3.$$p = null;;\n      \n      if (separator == null) {\n        separator = $gvars[\"/\"];\n      };\n      if ($truthy(self.eof)) {\n        return (function() {if ((block !== nil)) {\n          return self\n        } else {\n          return [].$to_enum()\n        }; return nil; })()};\n      if ((block !== nil)) {\n        \n        lines = $$($nesting, 'File').$read(self.path);\n        \n        self.eof = false;\n        self.lineno = 0;\n        var chomped  = lines.$chomp(),\n            trailing = lines.length != chomped.length,\n            splitted = chomped.split(separator);\n        for (var i = 0, length = splitted.length; i < length; i++) {\n          self.lineno += 1;\n          if (i < length - 1 || trailing) {\n            Opal.yield1(block, splitted[i] + separator);\n          }\n          else {\n            Opal.yield1(block, splitted[i]);\n          }\n        }\n        self.eof = true;\n      ;\n        return self;\n      } else {\n        return self.$read().$each_line()\n      };\n    }, $File_each_line$3.$$arity = -1);\n    \n    Opal.def(self, '$readlines', $File_readlines$4 = function $$readlines() {\n      var self = this;\n\n      return $$($nesting, 'File').$readlines(self.path)\n    }, $File_readlines$4.$$arity = 0);\n    return (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $readlines$5, $file$ques$6, $readable$ques$7, $read$8;\n\n      \n      \n      Opal.def(self, '$readlines', $readlines$5 = function $$readlines(path, separator) {\n        var self = this, content = nil;\n        if ($gvars[\"/\"] == null) $gvars[\"/\"] = nil;\n\n        \n        \n        if (separator == null) {\n          separator = $gvars[\"/\"];\n        };\n        content = $$($nesting, 'File').$read(path);\n        return content.$split(separator);\n      }, $readlines$5.$$arity = -2);\n      \n      Opal.def(self, '$file?', $file$ques$6 = function(path) {\n        var self = this;\n\n        return true\n      }, $file$ques$6.$$arity = 1);\n      \n      Opal.def(self, '$readable?', $readable$ques$7 = function(path) {\n        var self = this;\n\n        return true\n      }, $readable$ques$7.$$arity = 1);\n      return (Opal.def(self, '$read', $read$8 = function $$read(path) {\n        var self = this;\n\n        return \"\"\n      }, $read$8.$$arity = 1), nil) && 'read';\n    })(Opal.get_singleton_class(self), $nesting);\n  })($nesting[0], null, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'IO');\n\n    var $nesting = [self].concat($parent_nesting), $IO_read$9;\n\n    return (Opal.defs(self, '$read', $IO_read$9 = function $$read(path) {\n      var self = this;\n\n      return $$($nesting, 'File').$read(path)\n    }, $IO_read$9.$$arity = 1), nil) && 'read'\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/match_data\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send;\n\n  Opal.add_stubs(['$[]=', '$-']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'MatchData');\n\n    var $nesting = [self].concat($parent_nesting), $MatchData_$$$eq$1;\n\n    self.$$prototype.matches = nil;\n    return (Opal.def(self, '$[]=', $MatchData_$$$eq$1 = function(idx, val) {\n      var self = this, $writer = nil;\n\n      \n      $writer = [idx, val];\n      $send(self.matches, '[]=', Opal.to_a($writer));\n      return $writer[$rb_minus($writer[\"length\"], 1)];\n    }, $MatchData_$$$eq$1.$$arity = 2), nil) && '[]='\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/string\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$method_defined?', '$<', '$length', '$bytes', '$to_s', '$byteslice', '$==', '$>=', '$-', '$_original_byteslice', '$_original_unpack']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting), $String_limit_bytesize$1, $String_byteslice$2, $String_unpack$3;\n\n    \n    if ($truthy(self['$method_defined?'](\"limit_bytesize\"))) {\n    } else {\n      \n      Opal.def(self, '$limit_bytesize', $String_limit_bytesize$1 = function $$limit_bytesize(size) {\n        var self = this, result = nil;\n\n        \n        if ($truthy($rb_lt(size, self.$bytes().$length()))) {\n        } else {\n          return self.$to_s()\n        };\n        result = self.$byteslice(0, size);\n        return result.$to_s();\n      }, $String_limit_bytesize$1.$$arity = 1)\n    };\n    if ($truthy(self['$method_defined?'](\"limit\"))) {\n    } else {\n      Opal.alias(self, \"limit\", \"limit_bytesize\")\n    };\n    Opal.alias(self, \"_original_byteslice\", \"byteslice\");\n    \n    Opal.def(self, '$byteslice', $String_byteslice$2 = function $$byteslice(index, length) {\n      var $a, $b, self = this;\n\n      \n      \n      if (length == null) {\n        length = 1;\n      };\n      if ($truthy(($truthy($a = (($b = index['$=='](3)) ? $rb_ge(length, index) : index['$=='](3))) ? self.charCodeAt() === 65279 : $a))) {\n        return (self.substr(1)).$byteslice(0, $rb_minus(length, 3))\n      } else {\n        return self.$_original_byteslice(index, length)\n      };\n    }, $String_byteslice$2.$$arity = -2);\n    Opal.alias(self, \"_original_unpack\", \"unpack\");\n    return (Opal.def(self, '$unpack', $String_unpack$3 = function $$unpack(format) {\n      var self = this;\n\n      if (format['$=='](\"C3\")) {\n        if ($truthy(self.charCodeAt() === 65279)) {\n          return [239, 187, 191]\n        } else {\n          \n          var bytes = []\n          for (var i=0; i < 3; i++) {\n            if (i < self.length) {\n              bytes.push(self.charCodeAt(i))\n            } else {\n              bytes.push(nil)\n            }\n          }\n          return bytes\n        \n        }\n      } else {\n        return self.$_original_unpack(format)\n      }\n    }, $String_unpack$3.$$arity = 1), nil) && 'unpack';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/uri\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;\n\n  Opal.add_stubs(['$extend']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'URI');\n\n    var $nesting = [self].concat($parent_nesting), $URI_parse$1, $URI_path$2;\n\n    \n    Opal.defs(self, '$parse', $URI_parse$1 = function $$parse(str) {\n      var self = this;\n\n      return str.$extend($$($nesting, 'URI'))\n    }, $URI_parse$1.$$arity = 1);\n    \n    Opal.def(self, '$path', $URI_path$2 = function $$path() {\n      var self = this;\n\n      return self\n    }, $URI_path$2.$$arity = 0);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/base64\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$delete']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Base64');\n\n    var $nesting = [self].concat($parent_nesting), $Base64_decode64$1, $Base64_encode64$2, $Base64_strict_decode64$3, $Base64_strict_encode64$4, $Base64_urlsafe_decode64$5, $Base64_urlsafe_encode64$6;\n\n    \n    \n    var encode, decode;\n    encode = Opal.global.btoa || function (input) {\n      var buffer;\n      if (input instanceof Buffer) {\n        buffer = input;\n      } else {\n        buffer = Buffer.from(input.toString(), 'binary');\n      }\n      return buffer.toString('base64');\n    };\n    decode = Opal.global.atob || function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  ;\n    Opal.defs(self, '$decode64', $Base64_decode64$1 = function $$decode64(string) {\n      var self = this;\n\n      return decode(string.replace(/\\r?\\n/g, ''));\n    }, $Base64_decode64$1.$$arity = 1);\n    Opal.defs(self, '$encode64', $Base64_encode64$2 = function $$encode64(string) {\n      var self = this;\n\n      return encode(string).replace(/(.{60})/g, \"$1\\n\").replace(/([^\\n])$/g, \"$1\\n\");\n    }, $Base64_encode64$2.$$arity = 1);\n    Opal.defs(self, '$strict_decode64', $Base64_strict_decode64$3 = function $$strict_decode64(string) {\n      var self = this;\n\n      return decode(string);\n    }, $Base64_strict_decode64$3.$$arity = 1);\n    Opal.defs(self, '$strict_encode64', $Base64_strict_encode64$4 = function $$strict_encode64(string) {\n      var self = this;\n\n      return encode(string);\n    }, $Base64_strict_encode64$4.$$arity = 1);\n    Opal.defs(self, '$urlsafe_decode64', $Base64_urlsafe_decode64$5 = function $$urlsafe_decode64(string) {\n      var self = this;\n\n      return decode(string.replace(/\\-/g, '+').replace(/_/g, '/'));\n    }, $Base64_urlsafe_decode64$5.$$arity = 1);\n    Opal.defs(self, '$urlsafe_encode64', $Base64_urlsafe_encode64$6 = function $$urlsafe_encode64(string, $kwargs) {\n      var padding, self = this, str = nil;\n\n      \n      \n      if ($kwargs == null) {\n        $kwargs = $hash2([], {});\n      } else if (!$kwargs.$$is_hash) {\n        throw Opal.ArgumentError.$new('expected kwargs');\n      };\n      \n      padding = $kwargs.$$smap[\"padding\"];\n      if (padding == null) {\n        padding = true\n      };\n      str = encode(string).replace(/\\+/g, '-').replace(/\\//g, '_');\n      if ($truthy(padding)) {\n      } else {\n        str = str.$delete(\"=\")\n      };\n      return str;\n    }, $Base64_urlsafe_encode64$6.$$arity = -2);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/number\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$coerce_to!', '$>']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Number');\n\n    var $nesting = [self].concat($parent_nesting), $Number_round$1;\n\n    return (Opal.def(self, '$round', $Number_round$1 = function $$round(ndigits) {\n      var self = this;\n\n      \n      ;\n      ndigits = $$($nesting, 'Opal')['$coerce_to!'](ndigits, $$($nesting, 'Integer'), \"to_int\");\n      if ($truthy($rb_gt(ndigits, 0))) {\n        return Number(self.toFixed(ndigits));\n      } else {\n        return Math.round(self);\n      };\n    }, $Number_round$1.$$arity = -1), nil) && 'round'\n  })($nesting[0], $$($nesting, 'Numeric'), $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"asciidoctor/js/opal_ext/kernel\");\n  self.$require(\"asciidoctor/js/opal_ext/file\");\n  self.$require(\"asciidoctor/js/opal_ext/match_data\");\n  self.$require(\"asciidoctor/js/opal_ext/string\");\n  self.$require(\"asciidoctor/js/opal_ext/uri\");\n  self.$require(\"asciidoctor/js/opal_ext/base64\");\n  self.$require(\"asciidoctor/js/opal_ext/number\");\n  \n// suppress \"not supported\" warning messages from Opal\nOpal.config.unsupported_features_severity = 'ignore'\n\n// Load specific runtime\nself.$require(\"asciidoctor/js/opal_ext/browser\");\n;\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/rx\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $send = Opal.send, $gvars = Opal.gvars, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$gsub', '$+', '$unpack_hex_range']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting), $Asciidoctor_unpack_hex_range$1;\n\n    \n    Opal.const_set($nesting[0], 'HEX_RANGE_RX', /([A-F0-9]{4})(?:-([A-F0-9]{4}))?/);\n    Opal.defs(self, '$unpack_hex_range', $Asciidoctor_unpack_hex_range$1 = function $$unpack_hex_range(str) {\n      var $$2, self = this;\n\n      return $send(str, 'gsub', [$$($nesting, 'HEX_RANGE_RX')], ($$2 = function(){var self = $$2.$$s || this, $a, $b;\n\n      return \"\" + \"\\\\u\" + ((($a = $gvars['~']) === nil ? nil : $a['$[]'](1))) + (($truthy($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2))) ? \"\" + \"-\\\\u\" + ((($b = $gvars['~']) === nil ? nil : $b['$[]'](2))) : $a))}, $$2.$$s = self, $$2.$$arity = 0, $$2))\n    }, $Asciidoctor_unpack_hex_range$1.$$arity = 1);\n    Opal.const_set($nesting[0], 'P_L', $rb_plus(\"A-Za-z\", self.$unpack_hex_range(\"00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE0370-037403760377037A-037D037F03860388-038A038C038E-03A103A3-03F503F7-0481048A-052F0531-055605590561-058705D0-05EA05F0-05F20620-064A066E066F0671-06D306D506E506E606EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA07F407F507FA0800-0815081A082408280840-085808A0-08B20904-0939093D09500958-09610971-09800985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E460E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EC60EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA16F1-16F81700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317D717DC1820-18771880-18A818AA18B0-18F51900-191E1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541AA71B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF11CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E218321842C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2E2F300530063031-3035303B303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA67F-A69DA6A0-A6E5A717-A71FA722-A788A78B-A78EA790-A7ADA7B0A7B1A7F7-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2A9CFA9E0-A9E4A9E6-A9EFA9FA-A9FEAA00-AA28AA40-AA42AA44-AA4BAA60-AA76AA7AAA7E-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADB-AADDAAE0-AAEAAAF2-AAF4AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EAB30-AB5AAB5C-AB5FAB64AB65ABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\")));\n    Opal.const_set($nesting[0], 'P_Nl', self.$unpack_hex_range(\"16EE-16F02160-21822185-218830073021-30293038-303AA6E6-A6EF\"));\n    Opal.const_set($nesting[0], 'P_Nd', $rb_plus(\"0-9\", self.$unpack_hex_range(\"0660-066906F0-06F907C0-07C90966-096F09E6-09EF0A66-0A6F0AE6-0AEF0B66-0B6F0BE6-0BEF0C66-0C6F0CE6-0CEF0D66-0D6F0DE6-0DEF0E50-0E590ED0-0ED90F20-0F291040-10491090-109917E0-17E91810-18191946-194F19D0-19D91A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C59A620-A629A8D0-A8D9A900-A909A9D0-A9D9A9F0-A9F9AA50-AA59ABF0-ABF9FF10-FF19\")));\n    Opal.const_set($nesting[0], 'P_Pc', self.$unpack_hex_range(\"005F203F20402054FE33FE34FE4D-FE4FFF3F\"));\n    Opal.const_set($nesting[0], 'CC_ALPHA', \"\" + ($$($nesting, 'P_L')) + ($$($nesting, 'P_Nl')));\n    Opal.const_set($nesting[0], 'CG_ALPHA', \"\" + \"[\" + ($$($nesting, 'CC_ALPHA')) + \"]\");\n    Opal.const_set($nesting[0], 'CC_ALNUM', \"\" + ($$($nesting, 'CC_ALPHA')) + ($$($nesting, 'P_Nd')));\n    Opal.const_set($nesting[0], 'CG_ALNUM', \"\" + \"[\" + ($$($nesting, 'CC_ALNUM')) + \"]\");\n    Opal.const_set($nesting[0], 'CC_WORD', \"\" + ($$($nesting, 'CC_ALNUM')) + ($$($nesting, 'P_Pc')));\n    Opal.const_set($nesting[0], 'CG_WORD', \"\" + \"[\" + ($$($nesting, 'CC_WORD')) + \"]\");\n    Opal.const_set($nesting[0], 'CG_BLANK', \"[ \\\\t]\");\n    Opal.const_set($nesting[0], 'CC_EOL', \"(?=\\\\n|$)\");\n    Opal.const_set($nesting[0], 'CG_GRAPH', \"[^\\\\s\\\\x00-\\\\x1F\\\\x7F]\");\n    Opal.const_set($nesting[0], 'CC_ALL', \"[\\\\s\\\\S]\");\n    Opal.const_set($nesting[0], 'CC_ANY', \"[^\\\\n]\");\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"strscan\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $send = Opal.send;\n\n  Opal.add_stubs(['$attr_reader', '$anchor', '$scan_until', '$length', '$size', '$rest', '$pos=', '$-', '$private']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'StringScanner');\n\n    var $nesting = [self].concat($parent_nesting), $StringScanner_initialize$1, $StringScanner_beginning_of_line$ques$2, $StringScanner_scan$3, $StringScanner_scan_until$4, $StringScanner_$$$5, $StringScanner_check$6, $StringScanner_check_until$7, $StringScanner_peek$8, $StringScanner_eos$ques$9, $StringScanner_exist$ques$10, $StringScanner_skip$11, $StringScanner_skip_until$12, $StringScanner_get_byte$13, $StringScanner_match$ques$14, $StringScanner_pos$eq$15, $StringScanner_matched_size$16, $StringScanner_post_match$17, $StringScanner_pre_match$18, $StringScanner_reset$19, $StringScanner_rest$20, $StringScanner_rest$ques$21, $StringScanner_rest_size$22, $StringScanner_terminate$23, $StringScanner_unscan$24, $StringScanner_anchor$25;\n\n    self.$$prototype.pos = self.$$prototype.string = self.$$prototype.working = self.$$prototype.matched = self.$$prototype.prev_pos = self.$$prototype.match = nil;\n    \n    self.$attr_reader(\"pos\");\n    self.$attr_reader(\"matched\");\n    \n    Opal.def(self, '$initialize', $StringScanner_initialize$1 = function $$initialize(string) {\n      var self = this;\n\n      \n      self.string = string;\n      self.pos = 0;\n      self.matched = nil;\n      self.working = string;\n      return (self.match = []);\n    }, $StringScanner_initialize$1.$$arity = 1);\n    self.$attr_reader(\"string\");\n    \n    Opal.def(self, '$beginning_of_line?', $StringScanner_beginning_of_line$ques$2 = function() {\n      var self = this;\n\n      return self.pos === 0 || self.string.charAt(self.pos - 1) === \"\\n\"\n    }, $StringScanner_beginning_of_line$ques$2.$$arity = 0);\n    Opal.alias(self, \"bol?\", \"beginning_of_line?\");\n    \n    Opal.def(self, '$scan', $StringScanner_scan$3 = function $$scan(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return self.matched = nil;\n      }\n      else if (typeof(result) === 'object') {\n        self.prev_pos = self.pos;\n        self.pos     += result[0].length;\n        self.working  = self.working.substring(result[0].length);\n        self.matched  = result[0];\n        self.match    = result;\n\n        return result[0];\n      }\n      else if (typeof(result) === 'string') {\n        self.pos     += result.length;\n        self.working  = self.working.substring(result.length);\n\n        return result;\n      }\n      else {\n        return nil;\n      }\n    ;\n    }, $StringScanner_scan$3.$$arity = 1);\n    \n    Opal.def(self, '$scan_until', $StringScanner_scan_until$4 = function $$scan_until(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var pos     = self.pos,\n          working = self.working,\n          result;\n\n      while (true) {\n        result   = pattern.exec(working);\n        pos     += 1;\n        working  = working.substr(1);\n\n        if (result == null) {\n          if (working.length === 0) {\n            return self.matched = nil;\n          }\n\n          continue;\n        }\n\n        self.matched  = self.string.substr(self.pos, pos - self.pos - 1 + result[0].length);\n        self.prev_pos = pos - 1;\n        self.pos      = pos;\n        self.working  = working.substr(result[0].length);\n\n        return self.matched;\n      }\n    ;\n    }, $StringScanner_scan_until$4.$$arity = 1);\n    \n    Opal.def(self, '$[]', $StringScanner_$$$5 = function(idx) {\n      var self = this;\n\n      \n      var match = self.match;\n\n      if (idx < 0) {\n        idx += match.length;\n      }\n\n      if (idx < 0 || idx >= match.length) {\n        return nil;\n      }\n\n      if (match[idx] == null) {\n        return nil;\n      }\n\n      return match[idx];\n    \n    }, $StringScanner_$$$5.$$arity = 1);\n    \n    Opal.def(self, '$check', $StringScanner_check$6 = function $$check(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return self.matched = nil;\n      }\n\n      return self.matched = result[0];\n    ;\n    }, $StringScanner_check$6.$$arity = 1);\n    \n    Opal.def(self, '$check_until', $StringScanner_check_until$7 = function $$check_until(pattern) {\n      var self = this;\n\n      \n      var prev_pos = self.prev_pos,\n          pos      = self.pos;\n\n      var result = self.$scan_until(pattern);\n\n      if (result !== nil) {\n        self.matched = result.substr(-1);\n        self.working = self.string.substr(pos);\n      }\n\n      self.prev_pos = prev_pos;\n      self.pos      = pos;\n\n      return result;\n    \n    }, $StringScanner_check_until$7.$$arity = 1);\n    \n    Opal.def(self, '$peek', $StringScanner_peek$8 = function $$peek(length) {\n      var self = this;\n\n      return self.working.substring(0, length)\n    }, $StringScanner_peek$8.$$arity = 1);\n    \n    Opal.def(self, '$eos?', $StringScanner_eos$ques$9 = function() {\n      var self = this;\n\n      return self.working.length === 0\n    }, $StringScanner_eos$ques$9.$$arity = 0);\n    \n    Opal.def(self, '$exist?', $StringScanner_exist$ques$10 = function(pattern) {\n      var self = this;\n\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return nil;\n      }\n      else if (result.index == 0) {\n        return 0;\n      }\n      else {\n        return result.index + 1;\n      }\n    \n    }, $StringScanner_exist$ques$10.$$arity = 1);\n    \n    Opal.def(self, '$skip', $StringScanner_skip$11 = function $$skip(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return self.matched = nil;\n      }\n      else {\n        var match_str = result[0];\n        var match_len = match_str.length;\n\n        self.matched   = match_str;\n        self.prev_pos  = self.pos;\n        self.pos      += match_len;\n        self.working   = self.working.substring(match_len);\n\n        return match_len;\n      }\n    ;\n    }, $StringScanner_skip$11.$$arity = 1);\n    \n    Opal.def(self, '$skip_until', $StringScanner_skip_until$12 = function $$skip_until(pattern) {\n      var self = this;\n\n      \n      var result = self.$scan_until(pattern);\n\n      if (result === nil) {\n        return nil;\n      }\n      else {\n        self.matched = result.substr(-1);\n\n        return result.length;\n      }\n    \n    }, $StringScanner_skip_until$12.$$arity = 1);\n    \n    Opal.def(self, '$get_byte', $StringScanner_get_byte$13 = function $$get_byte() {\n      var self = this;\n\n      \n      var result = nil;\n\n      if (self.pos < self.string.length) {\n        self.prev_pos  = self.pos;\n        self.pos      += 1;\n        result      = self.matched = self.working.substring(0, 1);\n        self.working   = self.working.substring(1);\n      }\n      else {\n        self.matched = nil;\n      }\n\n      return result;\n    \n    }, $StringScanner_get_byte$13.$$arity = 0);\n    Opal.alias(self, \"getch\", \"get_byte\");\n    \n    Opal.def(self, '$match?', $StringScanner_match$ques$14 = function(pattern) {\n      var self = this;\n\n      \n      pattern = self.$anchor(pattern);\n      \n      var result = pattern.exec(self.working);\n\n      if (result == null) {\n        return nil;\n      }\n      else {\n        self.prev_pos = self.pos;\n\n        return result[0].length;\n      }\n    ;\n    }, $StringScanner_match$ques$14.$$arity = 1);\n    \n    Opal.def(self, '$pos=', $StringScanner_pos$eq$15 = function(pos) {\n      var self = this;\n\n      \n      \n      if (pos < 0) {\n        pos += self.string.$length();\n      }\n    ;\n      self.pos = pos;\n      return (self.working = self.string.slice(pos));\n    }, $StringScanner_pos$eq$15.$$arity = 1);\n    \n    Opal.def(self, '$matched_size', $StringScanner_matched_size$16 = function $$matched_size() {\n      var self = this;\n\n      \n      if (self.matched === nil) {\n        return nil;\n      }\n\n      return self.matched.length\n    \n    }, $StringScanner_matched_size$16.$$arity = 0);\n    \n    Opal.def(self, '$post_match', $StringScanner_post_match$17 = function $$post_match() {\n      var self = this;\n\n      \n      if (self.matched === nil) {\n        return nil;\n      }\n\n      return self.string.substr(self.pos);\n    \n    }, $StringScanner_post_match$17.$$arity = 0);\n    \n    Opal.def(self, '$pre_match', $StringScanner_pre_match$18 = function $$pre_match() {\n      var self = this;\n\n      \n      if (self.matched === nil) {\n        return nil;\n      }\n\n      return self.string.substr(0, self.prev_pos);\n    \n    }, $StringScanner_pre_match$18.$$arity = 0);\n    \n    Opal.def(self, '$reset', $StringScanner_reset$19 = function $$reset() {\n      var self = this;\n\n      \n      self.working = self.string;\n      self.matched = nil;\n      return (self.pos = 0);\n    }, $StringScanner_reset$19.$$arity = 0);\n    \n    Opal.def(self, '$rest', $StringScanner_rest$20 = function $$rest() {\n      var self = this;\n\n      return self.working\n    }, $StringScanner_rest$20.$$arity = 0);\n    \n    Opal.def(self, '$rest?', $StringScanner_rest$ques$21 = function() {\n      var self = this;\n\n      return self.working.length !== 0\n    }, $StringScanner_rest$ques$21.$$arity = 0);\n    \n    Opal.def(self, '$rest_size', $StringScanner_rest_size$22 = function $$rest_size() {\n      var self = this;\n\n      return self.$rest().$size()\n    }, $StringScanner_rest_size$22.$$arity = 0);\n    \n    Opal.def(self, '$terminate', $StringScanner_terminate$23 = function $$terminate() {\n      var self = this, $writer = nil;\n\n      \n      self.match = nil;\n      \n      $writer = [self.string.$length()];\n      $send(self, 'pos=', Opal.to_a($writer));\n      return $writer[$rb_minus($writer[\"length\"], 1)];;\n    }, $StringScanner_terminate$23.$$arity = 0);\n    \n    Opal.def(self, '$unscan', $StringScanner_unscan$24 = function $$unscan() {\n      var self = this;\n\n      \n      self.pos = self.prev_pos;\n      self.prev_pos = nil;\n      self.match = nil;\n      return self;\n    }, $StringScanner_unscan$24.$$arity = 0);\n    self.$private();\n    return (Opal.def(self, '$anchor', $StringScanner_anchor$25 = function $$anchor(pattern) {\n      var self = this;\n\n      \n      var flags = pattern.toString().match(/\\/([^\\/]+)$/);\n      flags = flags ? flags[1] : undefined;\n      return new RegExp('^(?:' + pattern.source + ')', flags);\n    \n    }, $StringScanner_anchor$25.$$arity = 1), nil) && 'anchor';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"asciidoctor/js/opal_ext\");\n  self.$require(\"asciidoctor/js/rx\");\n  return self.$require(\"strscan\");\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/core_ext/nil_or_empty\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$method_defined?']);\n  \n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'NilClass');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"nil?\")\n    }\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'String');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"empty?\")\n    }\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Array');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"empty?\")\n    }\n  })($nesting[0], null, $nesting);\n  (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Hash');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"empty?\")\n    }\n  })($nesting[0], null, $nesting);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Numeric');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    if ($truthy(self['$method_defined?'](\"nil_or_empty?\"))) {\n      return nil\n    } else {\n      return Opal.alias(self, \"nil_or_empty?\", \"nil?\")\n    }\n  })($nesting[0], null, $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/core_ext/hash/merge\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var $$1, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$==', '$arity', '$instance_method', '$send', '$new', '$<', '$length', '$>', '$inject', '$merge', '$[]']);\n  if ($$($nesting, 'Hash').$instance_method(\"merge\").$arity()['$=='](1)) {\n    return $$($nesting, 'Hash').$send(\"prepend\", $send($$($nesting, 'Module'), 'new', [], ($$1 = function(){var self = $$1.$$s || this, $merge$2;\n\n    return (Opal.def(self, '$merge', $merge$2 = function $$merge($a) {\n        var $post_args, args, $$3, $iter = $merge$2.$$p, $yield = $iter || nil, self = this, len = nil;\n\n        if ($iter) $merge$2.$$p = null;\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        if ($truthy($rb_lt((len = args.$length()), 1))) {\n          return $send(self, Opal.find_super_dispatcher(self, 'merge', $merge$2, false), [$hash2([], {})], null)\n        } else {\n          \n          if ($truthy($rb_gt(len, 1))) {\n            return $send(args, 'inject', [self], ($$3 = function(acc, arg){var self = $$3.$$s || this;\n\n            \n              \n              if (acc == null) {\n                acc = nil;\n              };\n              \n              if (arg == null) {\n                arg = nil;\n              };\n              return acc.$merge(arg);}, $$3.$$s = self, $$3.$$arity = 2, $$3))\n          } else {\n            \n            return $send(self, Opal.find_super_dispatcher(self, 'merge', $merge$2, false), [args['$[]'](0)], null);\n          };\n        };\n      }, $merge$2.$$arity = -1), nil) && 'merge'}, $$1.$$s = self, $$1.$$arity = 0, $$1)))\n  } else {\n    return nil\n  }\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/core_ext/match_data/names\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $truthy = Opal.truthy, $klass = Opal.klass;\n\n  Opal.add_stubs(['$method_defined?']);\n  if ($truthy($$($nesting, 'MatchData')['$method_defined?'](\"names\"))) {\n    return nil\n  } else {\n    return (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'MatchData');\n\n      var $nesting = [self].concat($parent_nesting), $MatchData_names$1;\n\n      return (Opal.def(self, '$names', $MatchData_names$1 = function $$names() {\n        var self = this;\n\n        return []\n      }, $MatchData_names$1.$$arity = 0), nil) && 'names'\n    })($nesting[0], null, $nesting)\n  }\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/core_ext\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$==']);\n  \n  self.$require(\"asciidoctor/core_ext.rb\"+ '/../' + \"core_ext/nil_or_empty\");\n  self.$require(\"asciidoctor/core_ext.rb\"+ '/../' + \"core_ext/hash/merge\");\n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    return self.$require(\"asciidoctor/core_ext.rb\"+ '/../' + \"core_ext/match_data/names\")\n  } else {\n    return nil\n  };\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/helpers\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy, $gvars = Opal.gvars, $send = Opal.send, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$module_function', '$require', '$include?', '$include', '$==', '$===', '$path', '$message', '$raise', '$warn', '$logger', '$chomp', '$empty?', '$slice', '$unpack', '$[]', '$byteslice', '$bytesize', '$[]=', '$-', '$map', '$rstrip', '$encode', '$encoding', '$nil_or_empty?', '$!=', '$tap', '$each_line', '$<<', '$match?', '$gsub', '$rindex', '$index', '$basename', '$extname', '$!', '$length', '$directory?', '$dirname', '$mkdir_p', '$mkdir', '$private_constant', '$join', '$divmod', '$*', '$+', '$to_s', '$to_i', '$succ', '$class_for_name', '$const_get']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Helpers');\n\n      var $nesting = [self].concat($parent_nesting), $Helpers_require_library$1, $Helpers_prepare_source_array$2, $Helpers_prepare_source_string$11, $Helpers_uriish$ques$16, $Helpers_encode_uri_component$17, $Helpers_encode_spaces_in_uri$18, $Helpers_rootname$19, $Helpers_basename$20, $Helpers_extname$ques$21, $Helpers_extname$22, $Helpers_extname$23, $Helpers_mkdir_p$24, $Helpers_int_to_roman$25, $Helpers_nextval$27, $Helpers_resolve_class$28, $Helpers_class_for_name$29;\n\n      \n      self.$module_function();\n      \n      Opal.def(self, '$require_library', $Helpers_require_library$1 = function $$require_library(name, gem_name, on_failure) {\n        var self = this, $case = nil, details = nil;\n        if ($gvars[\"!\"] == null) $gvars[\"!\"] = nil;\n\n        \n        \n        if (gem_name == null) {\n          gem_name = true;\n        };\n        \n        if (on_failure == null) {\n          on_failure = \"abort\";\n        };\n        try {\n          return self.$require(name)\n        } catch ($err) {\n          if (Opal.rescue($err, [$$$('::', 'LoadError')])) {\n            try {\n              \n              if ($truthy(self['$include?']($$($nesting, 'Logging')))) {\n              } else {\n                self.$include($$($nesting, 'Logging'))\n              };\n              if ($truthy(gem_name)) {\n                \n                if (gem_name['$=='](true)) {\n                  gem_name = name};\n                $case = on_failure;\n                if (\"abort\"['$===']($case)) {\n                details = (function() {if ($gvars[\"!\"].$path()['$=='](gem_name)) {\n                  return \"\"\n                } else {\n                  return \"\" + \" (reason: \" + ((function() {if ($truthy($gvars[\"!\"].$path())) {\n                    return \"\" + \"cannot load '\" + ($gvars[\"!\"].$path()) + \"'\"\n                  } else {\n                    return $gvars[\"!\"].$message()\n                  }; return nil; })()) + \")\"\n                }; return nil; })();\n                self.$raise($$$('::', 'LoadError'), \"\" + \"asciidoctor: FAILED: required gem '\" + (gem_name) + \"' is not available\" + (details) + \". Processing aborted.\");}\n                else if (\"warn\"['$===']($case)) {\n                details = (function() {if ($gvars[\"!\"].$path()['$=='](gem_name)) {\n                  return \"\"\n                } else {\n                  return \"\" + \" (reason: \" + ((function() {if ($truthy($gvars[\"!\"].$path())) {\n                    return \"\" + \"cannot load '\" + ($gvars[\"!\"].$path()) + \"'\"\n                  } else {\n                    return $gvars[\"!\"].$message()\n                  }; return nil; })()) + \")\"\n                }; return nil; })();\n                self.$logger().$warn(\"\" + \"optional gem '\" + (gem_name) + \"' is not available\" + (details) + \". Functionality disabled.\");};\n              } else {\n                $case = on_failure;\n                if (\"abort\"['$===']($case)) {self.$raise($$$('::', 'LoadError'), \"\" + \"asciidoctor: FAILED: \" + ($gvars[\"!\"].$message().$chomp(\".\")) + \". Processing aborted.\")}\n                else if (\"warn\"['$===']($case)) {self.$logger().$warn(\"\" + ($gvars[\"!\"].$message().$chomp(\".\")) + \". Functionality disabled.\")}\n              };\n              return nil;\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      }, $Helpers_require_library$1.$$arity = -2);\n      \n      Opal.def(self, '$prepare_source_array', $Helpers_prepare_source_array$2 = function $$prepare_source_array(data, trim_end) {\n        var $$3, $$4, $$5, $$6, $$7, $$8, $$9, $$10, self = this, leading_2_bytes = nil, leading_bytes = nil, first = nil, $writer = nil;\n\n        \n        \n        if (trim_end == null) {\n          trim_end = true;\n        };\n        if ($truthy(data['$empty?']())) {\n          return []};\n        if ((leading_2_bytes = (leading_bytes = (first = data['$[]'](0)).$unpack(\"C3\")).$slice(0, 2))['$==']($$($nesting, 'BOM_BYTES_UTF_16LE'))) {\n          \n          \n          $writer = [0, first.$byteslice(2, first.$bytesize())];\n          $send(data, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return (function() {if ($truthy(trim_end)) {\n            return $send(data, 'map', [], ($$3 = function(line){var self = $$3.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return line.$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16LE')).$rstrip();}, $$3.$$s = self, $$3.$$arity = 1, $$3))\n          } else {\n            return $send(data, 'map', [], ($$4 = function(line){var self = $$4.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return line.$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16LE')).$chomp();}, $$4.$$s = self, $$4.$$arity = 1, $$4))\n          }; return nil; })();\n        } else if (leading_2_bytes['$==']($$($nesting, 'BOM_BYTES_UTF_16BE'))) {\n          \n          \n          $writer = [0, first.$byteslice(2, first.$bytesize())];\n          $send(data, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return (function() {if ($truthy(trim_end)) {\n            return $send(data, 'map', [], ($$5 = function(line){var self = $$5.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return line.$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16BE')).$rstrip();}, $$5.$$s = self, $$5.$$arity = 1, $$5))\n          } else {\n            return $send(data, 'map', [], ($$6 = function(line){var self = $$6.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return line.$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16BE')).$chomp();}, $$6.$$s = self, $$6.$$arity = 1, $$6))\n          }; return nil; })();\n        } else if (leading_bytes['$==']($$($nesting, 'BOM_BYTES_UTF_8'))) {\n          \n          $writer = [0, first.$byteslice(3, first.$bytesize())];\n          $send(data, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if (first.$encoding()['$==']($$($nesting, 'UTF_8'))) {\n          if ($truthy(trim_end)) {\n            return $send(data, 'map', [], ($$7 = function(line){var self = $$7.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return line.$rstrip();}, $$7.$$s = self, $$7.$$arity = 1, $$7))\n          } else {\n            return $send(data, 'map', [], ($$8 = function(line){var self = $$8.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return line.$chomp();}, $$8.$$s = self, $$8.$$arity = 1, $$8))\n          }\n        } else if ($truthy(trim_end)) {\n          return $send(data, 'map', [], ($$9 = function(line){var self = $$9.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return line.$encode($$($nesting, 'UTF_8')).$rstrip();}, $$9.$$s = self, $$9.$$arity = 1, $$9))\n        } else {\n          return $send(data, 'map', [], ($$10 = function(line){var self = $$10.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return line.$encode($$($nesting, 'UTF_8')).$chomp();}, $$10.$$s = self, $$10.$$arity = 1, $$10))\n        };\n      }, $Helpers_prepare_source_array$2.$$arity = -2);\n      \n      Opal.def(self, '$prepare_source_string', $Helpers_prepare_source_string$11 = function $$prepare_source_string(data, trim_end) {\n        var $$12, $$14, self = this, leading_2_bytes = nil, leading_bytes = nil;\n\n        \n        \n        if (trim_end == null) {\n          trim_end = true;\n        };\n        if ($truthy(data['$nil_or_empty?']())) {\n          return []};\n        if ((leading_2_bytes = (leading_bytes = data.$unpack(\"C3\")).$slice(0, 2))['$==']($$($nesting, 'BOM_BYTES_UTF_16LE'))) {\n          data = data.$byteslice(2, data.$bytesize()).$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16LE'))\n        } else if (leading_2_bytes['$==']($$($nesting, 'BOM_BYTES_UTF_16BE'))) {\n          data = data.$byteslice(2, data.$bytesize()).$encode($$($nesting, 'UTF_8'), $$$($$$('::', 'Encoding'), 'UTF_16BE'))\n        } else if (leading_bytes['$==']($$($nesting, 'BOM_BYTES_UTF_8'))) {\n          \n          data = data.$byteslice(3, data.$bytesize());\n          if (data.$encoding()['$==']($$($nesting, 'UTF_8'))) {\n          } else {\n            data = data.$encode($$($nesting, 'UTF_8'))\n          };\n        } else if ($truthy(data.$encoding()['$!=']($$($nesting, 'UTF_8')))) {\n          data = data.$encode($$($nesting, 'UTF_8'))};\n        if ($truthy(trim_end)) {\n          return $send([], 'tap', [], ($$12 = function(lines){var self = $$12.$$s || this, $$13;\n\n          \n            \n            if (lines == null) {\n              lines = nil;\n            };\n            return $send(data, 'each_line', [], ($$13 = function(line){var self = $$13.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return lines['$<<'](line.$rstrip());}, $$13.$$s = self, $$13.$$arity = 1, $$13));}, $$12.$$s = self, $$12.$$arity = 1, $$12))\n        } else {\n          return $send([], 'tap', [], ($$14 = function(lines){var self = $$14.$$s || this, $$15;\n\n          \n            \n            if (lines == null) {\n              lines = nil;\n            };\n            return $send(data, 'each_line', [], ($$15 = function(line){var self = $$15.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return lines['$<<'](line.$chomp());}, $$15.$$s = self, $$15.$$arity = 1, $$15));}, $$14.$$s = self, $$14.$$arity = 1, $$14))\n        };\n      }, $Helpers_prepare_source_string$11.$$arity = -2);\n      \n      Opal.def(self, '$uriish?', $Helpers_uriish$ques$16 = function(str) {\n        var $a, self = this;\n\n        return ($truthy($a = str['$include?'](\":\")) ? $$($nesting, 'UriSniffRx')['$match?'](str) : $a)\n      }, $Helpers_uriish$ques$16.$$arity = 1);\n      if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        \n        Opal.def(self, '$encode_uri_component', $Helpers_encode_uri_component$17 = function $$encode_uri_component(str) {\n          var self = this;\n\n          \n        return encodeURIComponent(str).replace(/%20|[!'()*]/g, function (m) {\n          return m === '%20' ? '+' : '%' + m.charCodeAt(0).toString(16)\n        })\n      \n        }, $Helpers_encode_uri_component$17.$$arity = 1)\n      } else {\n        nil\n      };\n      \n      Opal.def(self, '$encode_spaces_in_uri', $Helpers_encode_spaces_in_uri$18 = function $$encode_spaces_in_uri(str) {\n        var self = this;\n\n        if ($truthy(str['$include?'](\" \"))) {\n          \n          return str.$gsub(\" \", \"%20\");\n        } else {\n          return str\n        }\n      }, $Helpers_encode_spaces_in_uri$18.$$arity = 1);\n      \n      Opal.def(self, '$rootname', $Helpers_rootname$19 = function $$rootname(filename) {\n        var self = this, last_dot_idx = nil;\n\n        if ($truthy((last_dot_idx = filename.$rindex(\".\")))) {\n          if ($truthy(filename.$index(\"/\", last_dot_idx))) {\n            return filename\n          } else {\n            \n            return filename.$slice(0, last_dot_idx);\n          }\n        } else {\n          return filename\n        }\n      }, $Helpers_rootname$19.$$arity = 1);\n      \n      Opal.def(self, '$basename', $Helpers_basename$20 = function $$basename(filename, drop_ext) {\n        var self = this;\n\n        \n        \n        if (drop_ext == null) {\n          drop_ext = nil;\n        };\n        if ($truthy(drop_ext)) {\n          return $$$('::', 'File').$basename(filename, (function() {if (drop_ext['$=='](true)) {\n            \n            return self.$extname(filename);\n          } else {\n            return drop_ext\n          }; return nil; })())\n        } else {\n          return $$$('::', 'File').$basename(filename)\n        };\n      }, $Helpers_basename$20.$$arity = -2);\n      \n      Opal.def(self, '$extname?', $Helpers_extname$ques$21 = function(path) {\n        var $a, self = this, last_dot_idx = nil;\n\n        return ($truthy($a = (last_dot_idx = path.$rindex(\".\"))) ? path.$index(\"/\", last_dot_idx)['$!']() : $a)\n      }, $Helpers_extname$ques$21.$$arity = 1);\n      if ($truthy($$$($$$('::', 'File'), 'ALT_SEPARATOR'))) {\n        \n        Opal.def(self, '$extname', $Helpers_extname$22 = function $$extname(path, fallback) {\n          var $a, self = this, last_dot_idx = nil;\n\n          \n          \n          if (fallback == null) {\n            fallback = \"\";\n          };\n          if ($truthy((last_dot_idx = path.$rindex(\".\")))) {\n            if ($truthy(($truthy($a = path.$index(\"/\", last_dot_idx)) ? $a : path.$index($$$($$$('::', 'File'), 'ALT_SEPARATOR'), last_dot_idx)))) {\n              return fallback\n            } else {\n              \n              return path.$slice(last_dot_idx, path.$length());\n            }\n          } else {\n            return fallback\n          };\n        }, $Helpers_extname$22.$$arity = -2)\n      } else {\n        \n        Opal.def(self, '$extname', $Helpers_extname$23 = function $$extname(path, fallback) {\n          var self = this, last_dot_idx = nil;\n\n          \n          \n          if (fallback == null) {\n            fallback = \"\";\n          };\n          if ($truthy((last_dot_idx = path.$rindex(\".\")))) {\n            if ($truthy(path.$index(\"/\", last_dot_idx))) {\n              return fallback\n            } else {\n              \n              return path.$slice(last_dot_idx, path.$length());\n            }\n          } else {\n            return fallback\n          };\n        }, $Helpers_extname$23.$$arity = -2)\n      };\n      \n      Opal.def(self, '$mkdir_p', $Helpers_mkdir_p$24 = function $$mkdir_p(dir) {\n        var self = this, parent_dir = nil;\n\n        if ($truthy($$$('::', 'File')['$directory?'](dir))) {\n          return nil\n        } else {\n          \n          if ((parent_dir = $$$('::', 'File').$dirname(dir))['$=='](\".\")) {\n          } else {\n            self.$mkdir_p(parent_dir)\n          };\n          \n          try {\n            return $$$('::', 'Dir').$mkdir(dir)\n          } catch ($err) {\n            if (Opal.rescue($err, [$$$('::', 'SystemCallError')])) {\n              try {\n                if ($truthy($$$('::', 'File')['$directory?'](dir))) {\n                  return nil\n                } else {\n                  return self.$raise()\n                }\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          };;\n        }\n      }, $Helpers_mkdir_p$24.$$arity = 1);\n      Opal.const_set($nesting[0], 'ROMAN_NUMERALS', $hash2([\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"], {\"M\": 1000, \"CM\": 900, \"D\": 500, \"CD\": 400, \"C\": 100, \"XC\": 90, \"L\": 50, \"XL\": 40, \"X\": 10, \"IX\": 9, \"V\": 5, \"IV\": 4, \"I\": 1}));\n      self.$private_constant(\"ROMAN_NUMERALS\");\n      \n      Opal.def(self, '$int_to_roman', $Helpers_int_to_roman$25 = function $$int_to_roman(val) {\n        var $$26, self = this;\n\n        return $send($$($nesting, 'ROMAN_NUMERALS'), 'map', [], ($$26 = function(l, i){var self = $$26.$$s || this, $a, $b, repeat = nil;\n\n        \n          \n          if (l == null) {\n            l = nil;\n          };\n          \n          if (i == null) {\n            i = nil;\n          };\n          $b = val.$divmod(i), $a = Opal.to_ary($b), (repeat = ($a[0] == null ? nil : $a[0])), (val = ($a[1] == null ? nil : $a[1])), $b;\n          return $rb_times(l, repeat);}, $$26.$$s = self, $$26.$$arity = 2, $$26)).$join()\n      }, $Helpers_int_to_roman$25.$$arity = 1);\n      \n      Opal.def(self, '$nextval', $Helpers_nextval$27 = function $$nextval(current) {\n        var self = this, intval = nil;\n\n        if ($truthy($$$('::', 'Integer')['$==='](current))) {\n          return $rb_plus(current, 1)\n        } else if ((intval = current.$to_i()).$to_s()['$=='](current.$to_s())) {\n          return $rb_plus(intval, 1)\n        } else {\n          return current.$succ()\n        }\n      }, $Helpers_nextval$27.$$arity = 1);\n      \n      Opal.def(self, '$resolve_class', $Helpers_resolve_class$28 = function $$resolve_class(object) {\n        var self = this;\n\n        if ($truthy($$$('::', 'Class')['$==='](object))) {\n          return object\n        } else {\n          \n          if ($truthy($$$('::', 'String')['$==='](object))) {\n            \n            return self.$class_for_name(object);\n          } else {\n            return nil\n          };\n        }\n      }, $Helpers_resolve_class$28.$$arity = 1);\n      \n      Opal.def(self, '$class_for_name', $Helpers_class_for_name$29 = function $$class_for_name(qualified_name) {\n        var self = this, resolved = nil;\n\n        try {\n          \n          if ($truthy($$$('::', 'Class')['$===']((resolved = $$$('::', 'Object').$const_get(qualified_name, false))))) {\n          } else {\n            self.$raise()\n          };\n          return resolved;\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n            try {\n              return self.$raise($$$('::', 'NameError'), \"\" + \"Could not resolve class for name: \" + (qualified_name))\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        }\n      }, $Helpers_class_for_name$29.$$arity = 1);\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"logger\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $module = Opal.module, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$include', '$to_h', '$map', '$constants', '$const_get', '$to_s', '$format', '$chr', '$strftime', '$message_as_string', '$===', '$+', '$message', '$class', '$join', '$backtrace', '$inspect', '$attr_reader', '$attr_accessor', '$new', '$key', '$upcase', '$raise', '$add', '$to_proc', '$<=', '$<', '$write', '$call', '$[]', '$now']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Logger');\n\n    var $nesting = [self].concat($parent_nesting), $Logger$1, $Logger_initialize$4, $Logger_level$eq$5, $Logger_info$6, $Logger_debug$7, $Logger_warn$8, $Logger_error$9, $Logger_fatal$10, $Logger_unknown$11, $Logger_info$ques$12, $Logger_debug$ques$13, $Logger_warn$ques$14, $Logger_error$ques$15, $Logger_fatal$ques$16, $Logger_add$17;\n\n    self.$$prototype.level = self.$$prototype.progname = self.$$prototype.pipe = self.$$prototype.formatter = nil;\n    \n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Severity');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      \n      Opal.const_set($nesting[0], 'DEBUG', 0);\n      Opal.const_set($nesting[0], 'INFO', 1);\n      Opal.const_set($nesting[0], 'WARN', 2);\n      Opal.const_set($nesting[0], 'ERROR', 3);\n      Opal.const_set($nesting[0], 'FATAL', 4);\n      Opal.const_set($nesting[0], 'UNKNOWN', 5);\n    })($nesting[0], $nesting);\n    self.$include($$($nesting, 'Severity'));\n    Opal.const_set($nesting[0], 'SEVERITY_LABELS', $send($$($nesting, 'Severity').$constants(), 'map', [], ($Logger$1 = function(s){var self = $Logger$1.$$s || this;\n\n    \n      \n      if (s == null) {\n        s = nil;\n      };\n      return [$$($nesting, 'Severity').$const_get(s), s.$to_s()];}, $Logger$1.$$s = self, $Logger$1.$$arity = 1, $Logger$1)).$to_h());\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Formatter');\n\n      var $nesting = [self].concat($parent_nesting), $Formatter_call$2, $Formatter_message_as_string$3;\n\n      \n      Opal.const_set($nesting[0], 'MESSAGE_FORMAT', \"%s, [%s] %5s -- %s: %s\\n\");\n      Opal.const_set($nesting[0], 'DATE_TIME_FORMAT', \"%Y-%m-%dT%H:%M:%S.%6N\");\n      \n      Opal.def(self, '$call', $Formatter_call$2 = function $$call(severity, time, progname, msg) {\n        var self = this;\n\n        return self.$format($$($nesting, 'MESSAGE_FORMAT'), severity.$chr(), time.$strftime($$($nesting, 'DATE_TIME_FORMAT')), severity, progname, self.$message_as_string(msg))\n      }, $Formatter_call$2.$$arity = 4);\n      return (Opal.def(self, '$message_as_string', $Formatter_message_as_string$3 = function $$message_as_string(msg) {\n        var $a, self = this, $case = nil;\n\n        return (function() {$case = msg;\n        if ($$$('::', 'String')['$===']($case)) {return msg}\n        else if ($$$('::', 'Exception')['$===']($case)) {return $rb_plus(\"\" + (msg.$message()) + \" (\" + (msg.$class()) + \")\\n\", ($truthy($a = msg.$backtrace()) ? $a : []).$join(\"\\n\"))}\n        else {return msg.$inspect()}})()\n      }, $Formatter_message_as_string$3.$$arity = 1), nil) && 'message_as_string';\n    })($nesting[0], null, $nesting);\n    self.$attr_reader(\"level\");\n    self.$attr_accessor(\"progname\");\n    self.$attr_accessor(\"formatter\");\n    \n    Opal.def(self, '$initialize', $Logger_initialize$4 = function $$initialize(pipe) {\n      var self = this;\n\n      \n      self.pipe = pipe;\n      self.level = $$($nesting, 'DEBUG');\n      return (self.formatter = $$($nesting, 'Formatter').$new());\n    }, $Logger_initialize$4.$$arity = 1);\n    \n    Opal.def(self, '$level=', $Logger_level$eq$5 = function(severity) {\n      var self = this, level = nil;\n\n      if ($truthy($$$('::', 'Integer')['$==='](severity))) {\n        return (self.level = severity)\n      } else if ($truthy((level = $$($nesting, 'SEVERITY_LABELS').$key(severity.$to_s().$upcase())))) {\n        return (self.level = level)\n      } else {\n        return self.$raise($$($nesting, 'ArgumentError'), \"\" + \"invalid log level: \" + (severity))\n      }\n    }, $Logger_level$eq$5.$$arity = 1);\n    \n    Opal.def(self, '$info', $Logger_info$6 = function $$info(progname) {\n      var $iter = $Logger_info$6.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_info$6.$$p = null;\n      \n      \n      if ($iter) $Logger_info$6.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'INFO'), nil, progname], block.$to_proc());\n    }, $Logger_info$6.$$arity = -1);\n    \n    Opal.def(self, '$debug', $Logger_debug$7 = function $$debug(progname) {\n      var $iter = $Logger_debug$7.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_debug$7.$$p = null;\n      \n      \n      if ($iter) $Logger_debug$7.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'DEBUG'), nil, progname], block.$to_proc());\n    }, $Logger_debug$7.$$arity = -1);\n    \n    Opal.def(self, '$warn', $Logger_warn$8 = function $$warn(progname) {\n      var $iter = $Logger_warn$8.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_warn$8.$$p = null;\n      \n      \n      if ($iter) $Logger_warn$8.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'WARN'), nil, progname], block.$to_proc());\n    }, $Logger_warn$8.$$arity = -1);\n    \n    Opal.def(self, '$error', $Logger_error$9 = function $$error(progname) {\n      var $iter = $Logger_error$9.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_error$9.$$p = null;\n      \n      \n      if ($iter) $Logger_error$9.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'ERROR'), nil, progname], block.$to_proc());\n    }, $Logger_error$9.$$arity = -1);\n    \n    Opal.def(self, '$fatal', $Logger_fatal$10 = function $$fatal(progname) {\n      var $iter = $Logger_fatal$10.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_fatal$10.$$p = null;\n      \n      \n      if ($iter) $Logger_fatal$10.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'FATAL'), nil, progname], block.$to_proc());\n    }, $Logger_fatal$10.$$arity = -1);\n    \n    Opal.def(self, '$unknown', $Logger_unknown$11 = function $$unknown(progname) {\n      var $iter = $Logger_unknown$11.$$p, block = $iter || nil, self = this;\n\n      if ($iter) $Logger_unknown$11.$$p = null;\n      \n      \n      if ($iter) $Logger_unknown$11.$$p = null;;\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      return $send(self, 'add', [$$($nesting, 'UNKNOWN'), nil, progname], block.$to_proc());\n    }, $Logger_unknown$11.$$arity = -1);\n    \n    Opal.def(self, '$info?', $Logger_info$ques$12 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'INFO'))\n    }, $Logger_info$ques$12.$$arity = 0);\n    \n    Opal.def(self, '$debug?', $Logger_debug$ques$13 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'DEBUG'))\n    }, $Logger_debug$ques$13.$$arity = 0);\n    \n    Opal.def(self, '$warn?', $Logger_warn$ques$14 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'WARN'))\n    }, $Logger_warn$ques$14.$$arity = 0);\n    \n    Opal.def(self, '$error?', $Logger_error$ques$15 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'ERROR'))\n    }, $Logger_error$ques$15.$$arity = 0);\n    \n    Opal.def(self, '$fatal?', $Logger_fatal$ques$16 = function() {\n      var self = this;\n\n      return $rb_le(self.level, $$($nesting, 'FATAL'))\n    }, $Logger_fatal$ques$16.$$arity = 0);\n    return (Opal.def(self, '$add', $Logger_add$17 = function $$add(severity, message, progname) {\n      var $iter = $Logger_add$17.$$p, block = $iter || nil, $a, self = this;\n\n      if ($iter) $Logger_add$17.$$p = null;\n      \n      \n      if ($iter) $Logger_add$17.$$p = null;;\n      \n      if (message == null) {\n        message = nil;\n      };\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      if ($truthy($rb_lt((severity = ($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), self.level))) {\n        return true};\n      progname = ($truthy($a = progname) ? $a : self.progname);\n      if ($truthy(message)) {\n      } else if ((block !== nil)) {\n        message = Opal.yieldX(block, [])\n      } else {\n        \n        message = progname;\n        progname = self.progname;\n      };\n      self.pipe.$write(self.formatter.$call(($truthy($a = $$($nesting, 'SEVERITY_LABELS')['$[]'](severity)) ? $a : \"ANY\"), $$$('::', 'Time').$now(), progname, message));\n      return true;\n    }, $Logger_add$17.$$arity = -2), nil) && 'add';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/logging\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$require', '$attr_reader', '$progname=', '$-', '$new', '$formatter=', '$level=', '$>', '$[]', '$===', '$inspect', '$to_h', '$map', '$constants', '$const_get', '$<<', '$clear', '$empty?', '$max', '$attr_accessor', '$memoize_logger', '$private', '$extend', '$private_class_method', '$logger', '$merge']);\n  \n  self.$require(\"logger\");\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Logger');\n\n      var $nesting = [self].concat($parent_nesting), $Logger_initialize$1, $Logger_add$2;\n\n      self.$$prototype.max_severity = nil;\n      \n      self.$attr_reader(\"max_severity\");\n      \n      Opal.def(self, '$initialize', $Logger_initialize$1 = function $$initialize($a) {\n        var $post_args, args, $iter = $Logger_initialize$1.$$p, $yield = $iter || nil, self = this, $writer = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Logger_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Logger_initialize$1, false), $zuper, $iter);\n        \n        $writer = [\"asciidoctor\"];\n        $send(self, 'progname=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [$$($nesting, 'BasicFormatter').$new()];\n        $send(self, 'formatter=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [$$($nesting, 'WARN')];\n        $send(self, 'level=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];;\n      }, $Logger_initialize$1.$$arity = -1);\n      \n      Opal.def(self, '$add', $Logger_add$2 = function $$add(severity, message, progname) {\n        var $a, $iter = $Logger_add$2.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Logger_add$2.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (message == null) {\n          message = nil;\n        };\n        \n        if (progname == null) {\n          progname = nil;\n        };\n        if ($truthy($rb_gt((severity = ($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), (self.max_severity = ($truthy($a = self.max_severity) ? $a : severity))))) {\n          self.max_severity = severity};\n        return $send(self, Opal.find_super_dispatcher(self, 'add', $Logger_add$2, false), $zuper, $iter);\n      }, $Logger_add$2.$$arity = -2);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'BasicFormatter');\n\n        var $nesting = [self].concat($parent_nesting), $BasicFormatter_call$3;\n\n        \n        Opal.const_set($nesting[0], 'SEVERITY_LABEL_SUBSTITUTES', $hash2([\"WARN\", \"FATAL\"], {\"WARN\": \"WARNING\", \"FATAL\": \"FAILED\"}));\n        return (Opal.def(self, '$call', $BasicFormatter_call$3 = function $$call(severity, _, progname, msg) {\n          var $a, self = this;\n\n          return \"\" + (progname) + \": \" + (($truthy($a = $$($nesting, 'SEVERITY_LABEL_SUBSTITUTES')['$[]'](severity)) ? $a : severity)) + \": \" + ((function() {if ($truthy($$$('::', 'String')['$==='](msg))) {\n            return msg\n          } else {\n            return msg.$inspect()\n          }; return nil; })()) + ($$($nesting, 'LF'))\n        }, $BasicFormatter_call$3.$$arity = 4), nil) && 'call';\n      })($nesting[0], $$($nesting, 'Formatter'), $nesting);\n      return (function($base, $parent_nesting) {\n        var self = $module($base, 'AutoFormattingMessage');\n\n        var $nesting = [self].concat($parent_nesting), $AutoFormattingMessage_inspect$4;\n\n        \n        Opal.def(self, '$inspect', $AutoFormattingMessage_inspect$4 = function $$inspect() {\n          var self = this, sloc = nil;\n\n          if ($truthy((sloc = self['$[]'](\"source_location\")))) {\n            return \"\" + (sloc) + \": \" + (self['$[]'](\"text\"))\n          } else {\n            return self['$[]'](\"text\")\n          }\n        }, $AutoFormattingMessage_inspect$4.$$arity = 0)\n      })($nesting[0], $nesting);\n    })($nesting[0], $$$('::', 'Logger'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'MemoryLogger');\n\n      var $nesting = [self].concat($parent_nesting), $MemoryLogger$5, $MemoryLogger_initialize$6, $MemoryLogger_add$7, $MemoryLogger_clear$8, $MemoryLogger_empty$ques$9, $MemoryLogger_max_severity$10;\n\n      self.$$prototype.messages = nil;\n      \n      Opal.const_set($nesting[0], 'SEVERITY_SYMBOL_BY_VALUE', $send($$($nesting, 'Severity').$constants(false), 'map', [], ($MemoryLogger$5 = function(c){var self = $MemoryLogger$5.$$s || this;\n\n      \n        \n        if (c == null) {\n          c = nil;\n        };\n        return [$$($nesting, 'Severity').$const_get(c), c];}, $MemoryLogger$5.$$s = self, $MemoryLogger$5.$$arity = 1, $MemoryLogger$5)).$to_h());\n      self.$attr_reader(\"messages\");\n      \n      Opal.def(self, '$initialize', $MemoryLogger_initialize$6 = function $$initialize() {\n        var self = this, $writer = nil;\n\n        \n        \n        $writer = [$$($nesting, 'WARN')];\n        $send(self, 'level=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        return (self.messages = []);\n      }, $MemoryLogger_initialize$6.$$arity = 0);\n      \n      Opal.def(self, '$add', $MemoryLogger_add$7 = function $$add(severity, message, progname) {\n        var $a, $iter = $MemoryLogger_add$7.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $MemoryLogger_add$7.$$p = null;\n        \n        \n        if (message == null) {\n          message = nil;\n        };\n        \n        if (progname == null) {\n          progname = nil;\n        };\n        message = ($truthy($a = message) ? $a : (function() {if (($yield !== nil)) {\n          return Opal.yieldX($yield, []);\n        } else {\n          return progname\n        }; return nil; })());\n        self.messages['$<<']($hash2([\"severity\", \"message\"], {\"severity\": $$($nesting, 'SEVERITY_SYMBOL_BY_VALUE')['$[]'](($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), \"message\": message}));\n        return true;\n      }, $MemoryLogger_add$7.$$arity = -2);\n      \n      Opal.def(self, '$clear', $MemoryLogger_clear$8 = function $$clear() {\n        var self = this;\n\n        return self.messages.$clear()\n      }, $MemoryLogger_clear$8.$$arity = 0);\n      \n      Opal.def(self, '$empty?', $MemoryLogger_empty$ques$9 = function() {\n        var self = this;\n\n        return self.messages['$empty?']()\n      }, $MemoryLogger_empty$ques$9.$$arity = 0);\n      return (Opal.def(self, '$max_severity', $MemoryLogger_max_severity$10 = function $$max_severity() {\n        var $$11, self = this;\n\n        if ($truthy(self['$empty?']())) {\n          return nil\n        } else {\n          return $send(self.messages, 'map', [], ($$11 = function(m){var self = $$11.$$s || this;\n\n          \n            \n            if (m == null) {\n              m = nil;\n            };\n            return $$($nesting, 'Severity').$const_get(m['$[]'](\"severity\"));}, $$11.$$s = self, $$11.$$arity = 1, $$11)).$max()\n        }\n      }, $MemoryLogger_max_severity$10.$$arity = 0), nil) && 'max_severity';\n    })($nesting[0], $$$('::', 'Logger'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'NullLogger');\n\n      var $nesting = [self].concat($parent_nesting), $NullLogger_initialize$12, $NullLogger_add$13;\n\n      self.$$prototype.max_severity = nil;\n      \n      self.$attr_reader(\"max_severity\");\n      \n      Opal.def(self, '$initialize', $NullLogger_initialize$12 = function $$initialize() {\n        var self = this, $writer = nil;\n\n        \n        $writer = [$$($nesting, 'WARN')];\n        $send(self, 'level=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];\n      }, $NullLogger_initialize$12.$$arity = 0);\n      return (Opal.def(self, '$add', $NullLogger_add$13 = function $$add(severity, message, progname) {\n        var $a, self = this;\n\n        \n        \n        if (message == null) {\n          message = nil;\n        };\n        \n        if (progname == null) {\n          progname = nil;\n        };\n        if ($truthy($rb_gt((severity = ($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), (self.max_severity = ($truthy($a = self.max_severity) ? $a : severity))))) {\n          self.max_severity = severity};\n        return true;\n      }, $NullLogger_add$13.$$arity = -2), nil) && 'add';\n    })($nesting[0], $$$('::', 'Logger'), $nesting);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'LoggerManager');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      \n      self.logger_class = $$($nesting, 'Logger');\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $logger$14, $logger$eq$15, $memoize_logger$16;\n\n        \n        self.$attr_accessor(\"logger_class\");\n        \n        Opal.def(self, '$logger', $logger$14 = function $$logger(pipe) {\n          var $a, self = this;\n          if (self.logger == null) self.logger = nil;\n          if (self.logger_class == null) self.logger_class = nil;\n          if ($gvars.stderr == null) $gvars.stderr = nil;\n\n          \n          \n          if (pipe == null) {\n            pipe = $gvars.stderr;\n          };\n          self.$memoize_logger();\n          return (self.logger = ($truthy($a = self.logger) ? $a : self.logger_class.$new(pipe)));\n        }, $logger$14.$$arity = -1);\n        \n        Opal.def(self, '$logger=', $logger$eq$15 = function(new_logger) {\n          var $a, self = this;\n          if (self.logger_class == null) self.logger_class = nil;\n          if ($gvars.stderr == null) $gvars.stderr = nil;\n\n          return (self.logger = ($truthy($a = new_logger) ? $a : self.logger_class.$new($gvars.stderr)))\n        }, $logger$eq$15.$$arity = 1);\n        self.$private();\n        return (Opal.def(self, '$memoize_logger', $memoize_logger$16 = function $$memoize_logger() {\n          var self = this;\n\n          return (function(self, $parent_nesting) {\n            var $nesting = [self].concat($parent_nesting);\n\n            \n            Opal.alias(self, \"logger\", \"logger\");\n            return self.$attr_reader(\"logger\");\n          })(Opal.get_singleton_class(self), $nesting)\n        }, $memoize_logger$16.$$arity = 0), nil) && 'memoize_logger';\n      })(Opal.get_singleton_class(self), $nesting);\n    })($nesting[0], $nesting);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Logging');\n\n      var $nesting = [self].concat($parent_nesting), $Logging_included$17, $Logging_logger$18, $Logging_message_with_context$19;\n\n      \n      Opal.defs(self, '$included', $Logging_included$17 = function $$included(into) {\n        var self = this;\n\n        return into.$extend($$($nesting, 'Logging'))\n      }, $Logging_included$17.$$arity = 1);\n      self.$private_class_method(\"included\");\n      \n      Opal.def(self, '$logger', $Logging_logger$18 = function $$logger() {\n        var self = this;\n\n        return $$($nesting, 'LoggerManager').$logger()\n      }, $Logging_logger$18.$$arity = 0);\n      \n      Opal.def(self, '$message_with_context', $Logging_message_with_context$19 = function $$message_with_context(text, context) {\n        var self = this;\n\n        \n        \n        if (context == null) {\n          context = $hash2([], {});\n        };\n        return $hash2([\"text\"], {\"text\": text}).$merge(context).$extend($$$($$($nesting, 'Logger'), 'AutoFormattingMessage'));\n      }, $Logging_message_with_context$19.$$arity = -2);\n    })($nesting[0], $nesting);\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/rx\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy, $hash = Opal.hash;\n\n  Opal.add_stubs(['$==', '$join', '$to_a', '$new', '$empty?', '$escape', '$[]=', '$-']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting), $Asciidoctor$1, $Asciidoctor$2;\n\n    \n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Rx');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      nil\n    })($nesting[0], $nesting);\n    Opal.const_set($nesting[0], 'AuthorInfoLineRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-'.]*)(?: +(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-'.]*))?(?: +(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-'.]*))?(?: +<([^>]+)>)?$\"));\n    Opal.const_set($nesting[0], 'AuthorDelimiterRx', /;(?: |$)/);\n    Opal.const_set($nesting[0], 'RevisionInfoLineRx', new RegExp(\"\" + \"^(?:[^\\\\d{]*(\" + ($$($nesting, 'CC_ANY')) + \"*?),)? *(?!:)(\" + ($$($nesting, 'CC_ANY')) + \"*?)(?: *(?!^),?: *(\" + ($$($nesting, 'CC_ANY')) + \"*))?$\"));\n    Opal.const_set($nesting[0], 'ManpageTitleVolnumRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CC_ANY')) + \"+?) *\\\\( *(\" + ($$($nesting, 'CC_ANY')) + \"+?) *\\\\)$\"));\n    Opal.const_set($nesting[0], 'ManpageNamePurposeRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CC_ANY')) + \"+?) +- +(\" + ($$($nesting, 'CC_ANY')) + \"+)$\"));\n    Opal.const_set($nesting[0], 'ConditionalDirectiveRx', new RegExp(\"\" + \"^(\\\\\\\\)?(ifdef|ifndef|ifeval|endif)::(\\\\S*?(?:([,+])\\\\S*?)?)\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'EvalExpressionRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CC_ANY')) + \"+?) *([=!><]=|[><]) *(\" + ($$($nesting, 'CC_ANY')) + \"+)$\"));\n    Opal.const_set($nesting[0], 'IncludeDirectiveRx', new RegExp(\"\" + \"^(\\\\\\\\)?include::([^\\\\[][^\\\\[]*)\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'TagDirectiveRx', /\\b(?:tag|(e)nd)::(\\S+?)\\[\\](?=$|[ \\r])/m);\n    Opal.const_set($nesting[0], 'AttributeEntryRx', new RegExp(\"\" + \"^:(!?\" + ($$($nesting, 'CG_WORD')) + \"[^:]*):(?:[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*))?$\"));\n    Opal.const_set($nesting[0], 'InvalidAttributeNameCharsRx', new RegExp(\"\" + \"[^\" + ($$($nesting, 'CC_WORD')) + \"-]\"));\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      Opal.const_set($nesting[0], 'AttributeEntryPassMacroRx', new RegExp(\"\" + \"^pass:([a-z]+(?:,[a-z-]+)*)?\\\\[(\" + ($$($nesting, 'CC_ALL')) + \"*)\\\\]$\"))\n    } else {\n      nil\n    };\n    Opal.const_set($nesting[0], 'AttributeReferenceRx', new RegExp(\"\" + \"(\\\\\\\\)?\\\\{(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"-]*|(set|counter2?):\" + ($$($nesting, 'CC_ANY')) + \"+?)(\\\\\\\\)?\\\\}\"));\n    Opal.const_set($nesting[0], 'BlockAnchorRx', new RegExp(\"\" + \"^\\\\[\\\\[(?:|([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+))?)\\\\]\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockAttributeListRx', new RegExp(\"\" + \"^\\\\[(|[\" + ($$($nesting, 'CC_WORD')) + \".#%{,\\\"']\" + ($$($nesting, 'CC_ANY')) + \"*)\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockAttributeLineRx', new RegExp(\"\" + \"^\\\\[(?:|[\" + ($$($nesting, 'CC_WORD')) + \".#%{,\\\"']\" + ($$($nesting, 'CC_ANY')) + \"*|\\\\[(?:|[\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*(?:, *\" + ($$($nesting, 'CC_ANY')) + \"+)?)\\\\])\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockTitleRx', new RegExp(\"\" + \"^\\\\.(\\\\.?[^ \\\\t.]\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'AdmonitionParagraphRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'ADMONITION_STYLES').$to_a().$join(\"|\")) + \"):[ \\\\t]+\"));\n    Opal.const_set($nesting[0], 'LiteralParagraphRx', new RegExp(\"\" + \"^([ \\\\t]+\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'AtxSectionTitleRx', new RegExp(\"\" + \"^(=={0,5})[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"+?)(?:[ \\\\t]+\\\\1)?$\"));\n    Opal.const_set($nesting[0], 'ExtAtxSectionTitleRx', new RegExp(\"\" + \"^(=={0,5}|#\\\\\\#{0,5})[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"+?)(?:[ \\\\t]+\\\\1)?$\"));\n    Opal.const_set($nesting[0], 'SetextSectionTitleRx', new RegExp(\"\" + \"^((?!\\\\.)\" + ($$($nesting, 'CC_ANY')) + \"*?\" + ($$($nesting, 'CG_ALNUM')) + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'InlineSectionAnchorRx', new RegExp(\"\" + \" (\\\\\\\\)?\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+))?\\\\]\\\\]$\"));\n    Opal.const_set($nesting[0], 'InvalidSectionIdCharsRx', new RegExp(\"\" + \"<[^>]+>|&(?:[a-z][a-z]+\\\\d{0,2}|#\\\\d\\\\d\\\\d{0,4}|#x[\\\\da-f][\\\\da-f][\\\\da-f]{0,3});|[^ \" + ($$($nesting, 'CC_WORD')) + \"\\\\-.]+?\"));\n    Opal.const_set($nesting[0], 'SectionLevelStyleRx', /^sect\\d$/);\n    Opal.const_set($nesting[0], 'AnyListRx', new RegExp(\"\" + \"^(?:[ \\\\t]*(?:-|\\\\*\\\\**|\\\\.\\\\.*|\\\\u2022|\\\\d+\\\\.|[a-zA-Z]\\\\.|[IVXivx]+\\\\))[ \\\\t]|(?!//[^/])[ \\\\t]*[^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?(?::::{0,2}|;;)(?:$|[ \\\\t])|<(?:\\\\d+|\\\\.)>[ \\\\t])\"));\n    Opal.const_set($nesting[0], 'UnorderedListRx', new RegExp(\"\" + \"^[ \\\\t]*(-|\\\\*\\\\**|\\\\u2022)[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'OrderedListRx', new RegExp(\"\" + \"^[ \\\\t]*(\\\\.\\\\.*|\\\\d+\\\\.|[a-zA-Z]\\\\.|[IVXivx]+\\\\))[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'OrderedListMarkerRxMap', $hash2([\"arabic\", \"loweralpha\", \"lowerroman\", \"upperalpha\", \"upperroman\"], {\"arabic\": /\\d+\\./, \"loweralpha\": /[a-z]\\./, \"lowerroman\": /[ivx]+\\)/, \"upperalpha\": /[A-Z]\\./, \"upperroman\": /[IVX]+\\)/}));\n    Opal.const_set($nesting[0], 'DescriptionListRx', new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?)(:::{0,2}|;;)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\"));\n    Opal.const_set($nesting[0], 'DescriptionListSiblingRx', $hash2([\"::\", \":::\", \"::::\", \";;\"], {\"::\": new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?[^:]|[^ \\\\t:])(::)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\"), \":::\": new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?[^:]|[^ \\\\t:])(:::)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\"), \"::::\": new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?[^:]|[^ \\\\t:])(::::)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\"), \";;\": new RegExp(\"\" + \"^(?!//[^/])[ \\\\t]*([^ \\\\t]\" + ($$($nesting, 'CC_ANY')) + \"*?)(;;)(?:$|[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$)\")}));\n    Opal.const_set($nesting[0], 'CalloutListRx', new RegExp(\"\" + \"^<(\\\\d+|\\\\.)>[ \\\\t]+(\" + ($$($nesting, 'CC_ANY')) + \"*)$\"));\n    Opal.const_set($nesting[0], 'CalloutExtractRx', /((?:\\/\\/|#|--|;;) ?)?(\\\\)?<!?(|--)(\\d+|\\.)\\3>(?=(?: ?\\\\?<!?\\3(?:\\d+|\\.)\\3>)*$)/);\n    Opal.const_set($nesting[0], 'CalloutExtractRxt', \"(\\\\\\\\)?<()(\\\\d+|\\\\.)>(?=(?: ?\\\\\\\\?<(?:\\\\d+|\\\\.)>)*$)\");\n    Opal.const_set($nesting[0], 'CalloutExtractRxMap', $send($$$('::', 'Hash'), 'new', [], ($Asciidoctor$1 = function(h, k){var self = $Asciidoctor$1.$$s || this, $writer = nil;\n\n    \n      \n      if (h == null) {\n        h = nil;\n      };\n      \n      if (k == null) {\n        k = nil;\n      };\n      $writer = [k, new RegExp(\"\" + \"(\" + ((function() {if ($truthy(k['$empty?']())) {\n        return \"\"\n      } else {\n        return \"\" + ($$$('::', 'Regexp').$escape(k)) + \" ?\"\n      }; return nil; })()) + \")?\" + ($$($nesting, 'CalloutExtractRxt')))];\n      $send(h, '[]=', Opal.to_a($writer));\n      return $writer[$rb_minus($writer[\"length\"], 1)];}, $Asciidoctor$1.$$s = self, $Asciidoctor$1.$$arity = 2, $Asciidoctor$1)));\n    Opal.const_set($nesting[0], 'CalloutScanRx', new RegExp(\"\" + \"\\\\\\\\?<!?(|--)(\\\\d+|\\\\.)\\\\1>(?=(?: ?\\\\\\\\?<!?\\\\1(?:\\\\d+|\\\\.)\\\\1>)*\" + ($$($nesting, 'CC_EOL')) + \")\"));\n    Opal.const_set($nesting[0], 'CalloutSourceRx', new RegExp(\"\" + \"((?://|#|--|;;) ?)?(\\\\\\\\)?&lt;!?(|--)(\\\\d+|\\\\.)\\\\3&gt;(?=(?: ?\\\\\\\\?&lt;!?\\\\3(?:\\\\d+|\\\\.)\\\\3&gt;)*\" + ($$($nesting, 'CC_EOL')) + \")\"));\n    Opal.const_set($nesting[0], 'CalloutSourceRxt', \"\" + \"(\\\\\\\\)?&lt;()(\\\\d+|\\\\.)&gt;(?=(?: ?\\\\\\\\?&lt;(?:\\\\d+|\\\\.)&gt;)*\" + ($$($nesting, 'CC_EOL')) + \")\");\n    Opal.const_set($nesting[0], 'CalloutSourceRxMap', $send($$$('::', 'Hash'), 'new', [], ($Asciidoctor$2 = function(h, k){var self = $Asciidoctor$2.$$s || this, $writer = nil;\n\n    \n      \n      if (h == null) {\n        h = nil;\n      };\n      \n      if (k == null) {\n        k = nil;\n      };\n      $writer = [k, new RegExp(\"\" + \"(\" + ((function() {if ($truthy(k['$empty?']())) {\n        return \"\"\n      } else {\n        return \"\" + ($$$('::', 'Regexp').$escape(k)) + \" ?\"\n      }; return nil; })()) + \")?\" + ($$($nesting, 'CalloutSourceRxt')))];\n      $send(h, '[]=', Opal.to_a($writer));\n      return $writer[$rb_minus($writer[\"length\"], 1)];}, $Asciidoctor$2.$$s = self, $Asciidoctor$2.$$arity = 2, $Asciidoctor$2)));\n    Opal.const_set($nesting[0], 'ListRxMap', $hash2([\"ulist\", \"olist\", \"dlist\", \"colist\"], {\"ulist\": $$($nesting, 'UnorderedListRx'), \"olist\": $$($nesting, 'OrderedListRx'), \"dlist\": $$($nesting, 'DescriptionListRx'), \"colist\": $$($nesting, 'CalloutListRx')}));\n    Opal.const_set($nesting[0], 'ColumnSpecRx', /^(?:(\\d+)\\*)?([<^>](?:\\.[<^>]?)?|(?:[<^>]?\\.)?[<^>])?(\\d+%?|~)?([a-z])?$/);\n    Opal.const_set($nesting[0], 'CellSpecStartRx', /^[ \\t]*(?:(\\d+(?:\\.\\d*)?|(?:\\d*\\.)?\\d+)([*+]))?([<^>](?:\\.[<^>]?)?|(?:[<^>]?\\.)?[<^>])?([a-z])?$/);\n    Opal.const_set($nesting[0], 'CellSpecEndRx', /[ \\t]+(?:(\\d+(?:\\.\\d*)?|(?:\\d*\\.)?\\d+)([*+]))?([<^>](?:\\.[<^>]?)?|(?:[<^>]?\\.)?[<^>])?([a-z])?$/);\n    Opal.const_set($nesting[0], 'CustomBlockMacroRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"-]*)::(|\\\\S|\\\\S\" + ($$($nesting, 'CC_ANY')) + \"*?\\\\S)\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockMediaMacroRx', new RegExp(\"\" + \"^(image|video|audio)::(\\\\S|\\\\S\" + ($$($nesting, 'CC_ANY')) + \"*?\\\\S)\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'BlockTocMacroRx', new RegExp(\"\" + \"^toc::\\\\[(\" + ($$($nesting, 'CC_ANY')) + \"+)?\\\\]$\"));\n    Opal.const_set($nesting[0], 'InlineAnchorRx', new RegExp(\"\" + \"(\\\\\\\\)?(?:\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+?))?\\\\]\\\\]|anchor:([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)\\\\[(?:\\\\]|(\" + ($$($nesting, 'CC_ANY')) + \"*?[^\\\\\\\\])\\\\]))\"));\n    Opal.const_set($nesting[0], 'InlineAnchorScanRx', new RegExp(\"\" + \"(?:^|[^\\\\\\\\\\\\[])\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+?))?\\\\]\\\\]|(?:^|[^\\\\\\\\])anchor:([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)\\\\[(?:\\\\]|(\" + ($$($nesting, 'CC_ANY')) + \"*?[^\\\\\\\\])\\\\])\"));\n    Opal.const_set($nesting[0], 'LeadingInlineAnchorRx', new RegExp(\"\" + \"^\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+?))?\\\\]\\\\]\"));\n    Opal.const_set($nesting[0], 'InlineBiblioAnchorRx', new RegExp(\"\" + \"^\\\\[\\\\[\\\\[([\" + ($$($nesting, 'CC_ALPHA')) + \"_:][\" + ($$($nesting, 'CC_WORD')) + \"\\\\-:.]*)(?:, *(\" + ($$($nesting, 'CC_ANY')) + \"+?))?\\\\]\\\\]\\\\]\"));\n    Opal.const_set($nesting[0], 'InlineEmailRx', new RegExp(\"\" + \"([\\\\\\\\>:/])?\" + ($$($nesting, 'CG_WORD')) + \"(?:&amp;|[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-.%+])*@\" + ($$($nesting, 'CG_ALNUM')) + \"[\" + ($$($nesting, 'CC_ALNUM')) + \"_\\\\-.]*\\\\.[a-zA-Z]{2,5}\\\\b\"));\n    Opal.const_set($nesting[0], 'InlineFootnoteMacroRx', new RegExp(\"\" + \"\\\\\\\\?footnote(?:(ref):|:([\" + ($$($nesting, 'CC_WORD')) + \"-]+)?)\\\\[(?:|(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\]))\\\\](?!</a>)\", 'm'));\n    Opal.const_set($nesting[0], 'InlineImageMacroRx', new RegExp(\"\" + \"\\\\\\\\?i(?:mage|con):([^:\\\\s\\\\[](?:[^\\\\n\\\\[]*[^\\\\s\\\\[])?)\\\\[(|\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineIndextermMacroRx', new RegExp(\"\" + \"\\\\\\\\?(?:(indexterm2?):\\\\[(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]|\\\\(\\\\((\" + ($$($nesting, 'CC_ALL')) + \"+?)\\\\)\\\\)(?!\\\\)))\", 'm'));\n    Opal.const_set($nesting[0], 'InlineKbdBtnMacroRx', new RegExp(\"\" + \"(\\\\\\\\)?(kbd|btn):\\\\[(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineLinkRx', new RegExp(\"\" + \"(^|link:|\" + ($$($nesting, 'CG_BLANK')) + \"|&lt;|[>\\\\(\\\\)\\\\[\\\\];\\\"'])(\\\\\\\\?(?:https?|file|ftp|irc)://[^\\\\s\\\\[\\\\]<]*([^\\\\s.,\\\\[\\\\]<]))(?:\\\\[(|\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\])?\", 'm'));\n    Opal.const_set($nesting[0], 'InlineLinkMacroRx', new RegExp(\"\" + \"\\\\\\\\?(?:link|(mailto)):(|[^:\\\\s\\\\[][^\\\\s\\\\[]*)\\\\[(|\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'MacroNameRx', new RegExp(\"\" + \"^\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"-]*$\"));\n    Opal.const_set($nesting[0], 'InlineStemMacroRx', new RegExp(\"\" + \"\\\\\\\\?(stem|(?:latex|ascii)math):([a-z]+(?:,[a-z-]+)*)?\\\\[(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineMenuMacroRx', new RegExp(\"\" + \"\\\\\\\\?menu:(\" + ($$($nesting, 'CG_WORD')) + \"|[\" + ($$($nesting, 'CC_WORD')) + \"&][^\\\\n\\\\[]*[^\\\\s\\\\[])\\\\[ *(?:|(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\]))\\\\]\", 'm'));\n    Opal.const_set($nesting[0], 'InlineMenuRx', new RegExp(\"\" + \"\\\\\\\\?\\\"([\" + ($$($nesting, 'CC_WORD')) + \"&][^\\\"]*?[ \\\\n]+&gt;[ \\\\n]+[^\\\"]*)\\\"\"));\n    Opal.const_set($nesting[0], 'InlinePassRx', $hash(false, [\"+\", \"`\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:])(?:\\\\[([^\\\\]]+)\\\\])?(\\\\\\\\?(\\\\+|`)(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\4)(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], true, [\"`\", nil, new RegExp(\"\" + \"(^|[^`\" + ($$($nesting, 'CC_WORD')) + \"])(?:\\\\[([^\\\\]]+)\\\\])?(\\\\\\\\?(`)([^`\\\\s]|[^`\\\\s]\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\4)(?![`\" + ($$($nesting, 'CC_WORD')) + \"])\", 'm')]));\n    Opal.const_set($nesting[0], 'SinglePlusInlinePassRx', new RegExp(\"\" + \"^(\\\\\\\\)?\\\\+(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\+$\", 'm'));\n    Opal.const_set($nesting[0], 'InlinePassMacroRx', new RegExp(\"\" + \"(?:(?:(\\\\\\\\?)\\\\[([^\\\\]]+)\\\\])?(\\\\\\\\{0,2})(\\\\+\\\\+\\\\+?|\\\\$\\\\$)(\" + ($$($nesting, 'CC_ALL')) + \"*?)\\\\4|(\\\\\\\\?)pass:([a-z]+(?:,[a-z-]+)*)?\\\\[(|\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\])\", 'm'));\n    Opal.const_set($nesting[0], 'InlineXrefMacroRx', new RegExp(\"\" + \"\\\\\\\\?(?:&lt;&lt;([\" + ($$($nesting, 'CC_WORD')) + \"#/.:{]\" + ($$($nesting, 'CC_ALL')) + \"*?)&gt;&gt;|xref:([\" + ($$($nesting, 'CC_WORD')) + \"#/.:{]\" + ($$($nesting, 'CC_ALL')) + \"*?)\\\\[(?:\\\\]|(\" + ($$($nesting, 'CC_ALL')) + \"*?[^\\\\\\\\])\\\\]))\", 'm'));\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      Opal.const_set($nesting[0], 'HardLineBreakRx', new RegExp(\"\" + \"^(\" + ($$($nesting, 'CC_ANY')) + \"*) \\\\+$\", 'm'))\n    } else {\n      nil\n    };\n    Opal.const_set($nesting[0], 'MarkdownThematicBreakRx', /^ {0,3}([-*_])( *)\\1\\2\\1$/);\n    Opal.const_set($nesting[0], 'ExtLayoutBreakRx', /^(?:'{3,}|<{3,}|([-*_])( *)\\1\\2\\1)$/);\n    Opal.const_set($nesting[0], 'BlankLineRx', /\\n{2,}/);\n    Opal.const_set($nesting[0], 'EscapedSpaceRx', /\\\\([ \\t\\n])/);\n    Opal.const_set($nesting[0], 'ReplaceableTextRx', /[&']|--|\\.\\.\\.|\\([CRT]M?\\)/);\n    Opal.const_set($nesting[0], 'SpaceDelimiterRx', /([^\\\\])[ \\t\\n]+/);\n    Opal.const_set($nesting[0], 'SubModifierSniffRx', /[+-]/);\n    Opal.const_set($nesting[0], 'TrailingDigitsRx', /\\d+$/);\n    Opal.const_set($nesting[0], 'UriSniffRx', new RegExp(\"\" + \"^\" + ($$($nesting, 'CG_ALPHA')) + \"[\" + ($$($nesting, 'CC_ALNUM')) + \".+-]+:/{0,2}\"));\n    Opal.const_set($nesting[0], 'XmlSanitizeRx', /<[^>]+>/);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/substitutors\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $hash = Opal.hash, $truthy = Opal.truthy, $send = Opal.send, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$freeze', '$+', '$keys', '$empty?', '$!', '$===', '$[]', '$join', '$include?', '$extract_passthroughs', '$each', '$sub_specialchars', '$sub_quotes', '$sub_attributes', '$sub_replacements', '$sub_macros', '$highlight_source', '$sub_callouts', '$sub_post_replacements', '$warn', '$logger', '$restore_passthroughs', '$clear', '$split', '$apply_subs', '$==', '$gsub', '$match?', '$compat_mode', '$convert_quoted_text', '$attributes', '$shift', '$store_attribute', '$!=', '$attribute_undefined', '$counter', '$key?', '$downcase', '$attribute_missing', '$info', '$squeeze', '$delete', '$reject', '$start_with?', '$do_replacement', '$extensions', '$inline_macros?', '$inline_macros', '$regexp', '$instance', '$slice', '$length', '$names', '$config', '$merge', '$[]=', '$-', '$normalize_text', '$parse_attributes', '$process_method', '$expand_subs', '$text', '$text=', '$convert', '$class', '$strip', '$>', '$index', '$min', '$compact', '$end_with?', '$map', '$chop', '$new', '$pop', '$rstrip', '$register', '$tr', '$basename', '$parse', '$lstrip', '$split_simple_csv', '$partition', '$extract_attributes_from_text', '$sub', '$encode_uri_component', '$style', '$extname?', '$rindex', '$info?', '$catalog', '$fetch', '$outfilesuffix', '$natural_xrefs', '$resolve_id', '$find', '$footnotes', '$id', '$<', '$size', '$<<', '$attr?', '$attr', '$to_s', '$read_next_id', '$callouts', '$syntax_highlighter', '$highlight?', '$sub_source', '$extract_callouts', '$name', '$to_sym', '$to_i', '$resolve_lines_to_highlight', '$highlight', '$nil_or_empty?', '$restore_callouts', '$count', '$to_a', '$|', '$sort', '$*', '$parse_quoted_text_attributes', '$resolve_pass_subs', '$extract_inner_passthrough', '$basebackend?', '$error', '$chr', '$drop', '$&', '$resolve_subs', '$resolve_block_subs', '$parse_into', '$private', '$=~', '$shorthand_property_syntax', '$each_char']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Substitutors');\n\n      var $nesting = [self].concat($parent_nesting), $Substitutors_apply_subs$1, $Substitutors_apply_normal_subs$3, $Substitutors_apply_header_subs$4, $Substitutors_apply_reftext_subs$5, $Substitutors_sub_specialchars$6, $Substitutors_sub_quotes$7, $Substitutors_sub_attributes$10, $Substitutors_sub_replacements$16, $Substitutors_sub_macros$19, $Substitutors_sub_post_replacements$42, $Substitutors_sub_source$45, $Substitutors_sub_callouts$46, $Substitutors_highlight_source$48, $Substitutors_resolve_lines_to_highlight$49, $Substitutors_extract_passthroughs$52, $Substitutors_restore_passthroughs$56, $Substitutors_resolve_subs$58, $Substitutors_resolve_block_subs$60, $Substitutors_resolve_pass_subs$61, $Substitutors_expand_subs$62, $Substitutors_commit_subs$64, $Substitutors_parse_attributes$65, $Substitutors_extract_attributes_from_text$66, $Substitutors_extract_callouts$67, $Substitutors_restore_callouts$70, $Substitutors_extract_inner_passthrough$73, $Substitutors_convert_quoted_text$74, $Substitutors_do_replacement$75, $Substitutors_parse_quoted_text_attributes$76, $Substitutors_normalize_text$77, $Substitutors_split_simple_csv$78;\n\n      \n      Opal.const_set($nesting[0], 'SpecialCharsRx', /[<&>]/);\n      Opal.const_set($nesting[0], 'SpecialCharsTr', $hash2([\">\", \"<\", \"&\"], {\">\": \"&gt;\", \"<\": \"&lt;\", \"&\": \"&amp;\"}));\n      Opal.const_set($nesting[0], 'QuotedTextSniffRx', $hash(false, /[*_`#^~]/, true, /[*'_+#^~]/));\n      Opal.const_set($nesting[0], 'BASIC_SUBS', [\"specialcharacters\"]).$freeze();\n      Opal.const_set($nesting[0], 'HEADER_SUBS', [\"specialcharacters\", \"attributes\"]).$freeze();\n      Opal.const_set($nesting[0], 'NO_SUBS', []).$freeze();\n      Opal.const_set($nesting[0], 'NORMAL_SUBS', [\"specialcharacters\", \"quotes\", \"attributes\", \"replacements\", \"macros\", \"post_replacements\"]).$freeze();\n      Opal.const_set($nesting[0], 'REFTEXT_SUBS', [\"specialcharacters\", \"quotes\", \"replacements\"]).$freeze();\n      Opal.const_set($nesting[0], 'VERBATIM_SUBS', [\"specialcharacters\", \"callouts\"]).$freeze();\n      Opal.const_set($nesting[0], 'SUB_GROUPS', $hash2([\"none\", \"normal\", \"verbatim\", \"specialchars\"], {\"none\": $$($nesting, 'NO_SUBS'), \"normal\": $$($nesting, 'NORMAL_SUBS'), \"verbatim\": $$($nesting, 'VERBATIM_SUBS'), \"specialchars\": $$($nesting, 'BASIC_SUBS')}));\n      Opal.const_set($nesting[0], 'SUB_HINTS', $hash2([\"a\", \"m\", \"n\", \"p\", \"q\", \"r\", \"c\", \"v\"], {\"a\": \"attributes\", \"m\": \"macros\", \"n\": \"normal\", \"p\": \"post_replacements\", \"q\": \"quotes\", \"r\": \"replacements\", \"c\": \"specialcharacters\", \"v\": \"verbatim\"}));\n      Opal.const_set($nesting[0], 'SUB_OPTIONS', $hash2([\"block\", \"inline\"], {\"block\": $rb_plus($rb_plus($$($nesting, 'SUB_GROUPS').$keys(), $$($nesting, 'NORMAL_SUBS')), [\"callouts\"]), \"inline\": $rb_plus($$($nesting, 'SUB_GROUPS').$keys(), $$($nesting, 'NORMAL_SUBS'))}));\n      Opal.const_set($nesting[0], 'CAN', \"\\u0018\");\n      Opal.const_set($nesting[0], 'DEL', \"\\u007F\");\n      Opal.const_set($nesting[0], 'PASS_START', \"\\u0096\");\n      Opal.const_set($nesting[0], 'PASS_END', \"\\u0097\");\n      Opal.const_set($nesting[0], 'PassSlotRx', new RegExp(\"\" + ($$($nesting, 'PASS_START')) + \"(\\\\d+)\" + ($$($nesting, 'PASS_END'))));\n      Opal.const_set($nesting[0], 'HighlightedPassSlotRx', new RegExp(\"\" + \"<span\\\\b[^>]*>\" + ($$($nesting, 'PASS_START')) + \"</span>[^\\\\d]*(\\\\d+)[^\\\\d]*<span\\\\b[^>]*>\" + ($$($nesting, 'PASS_END')) + \"</span>\"));\n      Opal.const_set($nesting[0], 'RS', \"\\\\\");\n      Opal.const_set($nesting[0], 'R_SB', \"]\");\n      Opal.const_set($nesting[0], 'ESC_R_SB', \"\\\\]\");\n      Opal.const_set($nesting[0], 'PLUS', \"+\");\n      \n      Opal.def(self, '$apply_subs', $Substitutors_apply_subs$1 = function $$apply_subs(text, subs) {\n        var $a, $$2, self = this, is_multiline = nil, passthrus = nil, clear_passthrus = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n        if (self.passthroughs_locked == null) self.passthroughs_locked = nil;\n\n        \n        \n        if (subs == null) {\n          subs = $$($nesting, 'NORMAL_SUBS');\n        };\n        if ($truthy(($truthy($a = text['$empty?']()) ? $a : subs['$!']()))) {\n          return text};\n        if ($truthy((is_multiline = $$$('::', 'Array')['$==='](text)))) {\n          text = (function() {if ($truthy(text['$[]'](1))) {\n            \n            return text.$join($$($nesting, 'LF'));\n          } else {\n            return text['$[]'](0)\n          }; return nil; })()};\n        if ($truthy(subs['$include?'](\"macros\"))) {\n          \n          text = self.$extract_passthroughs(text);\n          if ($truthy(self.passthroughs['$empty?']())) {\n          } else {\n            \n            passthrus = self.passthroughs;\n            self.passthroughs_locked = ($truthy($a = self.passthroughs_locked) ? $a : (clear_passthrus = true));\n          };};\n        $send(subs, 'each', [], ($$2 = function(type){var self = $$2.$$s || this, $case = nil;\n\n        \n          \n          if (type == null) {\n            type = nil;\n          };\n          return (function() {$case = type;\n          if (\"specialcharacters\"['$===']($case)) {return (text = self.$sub_specialchars(text))}\n          else if (\"quotes\"['$===']($case)) {return (text = self.$sub_quotes(text))}\n          else if (\"attributes\"['$===']($case)) {if ($truthy(text['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n            return (text = self.$sub_attributes(text))\n          } else {\n            return nil\n          }}\n          else if (\"replacements\"['$===']($case)) {return (text = self.$sub_replacements(text))}\n          else if (\"macros\"['$===']($case)) {return (text = self.$sub_macros(text))}\n          else if (\"highlight\"['$===']($case)) {return (text = self.$highlight_source(text, subs['$include?'](\"callouts\")))}\n          else if (\"callouts\"['$===']($case)) {if ($truthy(subs['$include?'](\"highlight\"))) {\n            return nil\n          } else {\n            return (text = self.$sub_callouts(text))\n          }}\n          else if (\"post_replacements\"['$===']($case)) {return (text = self.$sub_post_replacements(text))}\n          else {return self.$logger().$warn(\"\" + \"unknown substitution type \" + (type))}})();}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n        if ($truthy(passthrus)) {\n          \n          text = self.$restore_passthroughs(text);\n          if ($truthy(clear_passthrus)) {\n            \n            passthrus.$clear();\n            self.passthroughs_locked = nil;};};\n        if ($truthy(is_multiline)) {\n          \n          return text.$split($$($nesting, 'LF'), -1);\n        } else {\n          return text\n        };\n      }, $Substitutors_apply_subs$1.$$arity = -2);\n      \n      Opal.def(self, '$apply_normal_subs', $Substitutors_apply_normal_subs$3 = function $$apply_normal_subs(text) {\n        var self = this;\n\n        return self.$apply_subs(text, $$($nesting, 'NORMAL_SUBS'))\n      }, $Substitutors_apply_normal_subs$3.$$arity = 1);\n      \n      Opal.def(self, '$apply_header_subs', $Substitutors_apply_header_subs$4 = function $$apply_header_subs(text) {\n        var self = this;\n\n        return self.$apply_subs(text, $$($nesting, 'HEADER_SUBS'))\n      }, $Substitutors_apply_header_subs$4.$$arity = 1);\n      Opal.alias(self, \"apply_title_subs\", \"apply_subs\");\n      \n      Opal.def(self, '$apply_reftext_subs', $Substitutors_apply_reftext_subs$5 = function $$apply_reftext_subs(text) {\n        var self = this;\n\n        return self.$apply_subs(text, $$($nesting, 'REFTEXT_SUBS'))\n      }, $Substitutors_apply_reftext_subs$5.$$arity = 1);\n      if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        \n        Opal.def(self, '$sub_specialchars', $Substitutors_sub_specialchars$6 = function $$sub_specialchars(text) {\n          var $a, $b, self = this;\n\n          if ($truthy(($truthy($a = ($truthy($b = text['$include?'](\">\")) ? $b : text['$include?'](\"&\"))) ? $a : text['$include?'](\"<\")))) {\n            \n            return text.$gsub($$($nesting, 'SpecialCharsRx'), $$($nesting, 'SpecialCharsTr'));\n          } else {\n            return text\n          }\n        }, $Substitutors_sub_specialchars$6.$$arity = 1)\n      } else {\n        nil\n      };\n      Opal.alias(self, \"sub_specialcharacters\", \"sub_specialchars\");\n      \n      Opal.def(self, '$sub_quotes', $Substitutors_sub_quotes$7 = function $$sub_quotes(text) {\n        var $$8, self = this, compat = nil;\n        if (self.document == null) self.document = nil;\n\n        \n        if ($truthy($$($nesting, 'QuotedTextSniffRx')['$[]']((compat = self.document.$compat_mode()))['$match?'](text))) {\n          $send($$($nesting, 'QUOTE_SUBS')['$[]'](compat), 'each', [], ($$8 = function(type, scope, pattern){var self = $$8.$$s || this, $$9;\n\n          \n            \n            if (type == null) {\n              type = nil;\n            };\n            \n            if (scope == null) {\n              scope = nil;\n            };\n            \n            if (pattern == null) {\n              pattern = nil;\n            };\n            return (text = $send(text, 'gsub', [pattern], ($$9 = function(){var self = $$9.$$s || this;\n              if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n            return self.$convert_quoted_text($gvars[\"~\"], type, scope)}, $$9.$$s = self, $$9.$$arity = 0, $$9)));}, $$8.$$s = self, $$8.$$arity = 3, $$8))};\n        return text;\n      }, $Substitutors_sub_quotes$7.$$arity = 1);\n      \n      Opal.def(self, '$sub_attributes', $Substitutors_sub_attributes$10 = function $$sub_attributes(text, opts) {\n        var $$11, $$13, $$14, $$15, self = this, doc_attrs = nil, drop = nil, drop_line = nil, drop_line_severity = nil, drop_empty_line = nil, attribute_undefined = nil, attribute_missing = nil, lines = nil;\n        if (self.document == null) self.document = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        doc_attrs = self.document.$attributes();\n        drop = (drop_line = (drop_line_severity = (drop_empty_line = (attribute_undefined = (attribute_missing = nil)))));\n        text = $send(text, 'gsub', [$$($nesting, 'AttributeReferenceRx')], ($$11 = function(){var self = $$11.$$s || this, $a, $b, $c, $$12, $case = nil, args = nil, _ = nil, value = nil, key = nil;\n          if (self.document == null) self.document = nil;\n\n        if ($truthy(($truthy($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))['$==']($$($nesting, 'RS'))) ? $a : (($b = $gvars['~']) === nil ? nil : $b['$[]'](4))['$==']($$($nesting, 'RS'))))) {\n            return \"\" + \"{\" + ((($a = $gvars['~']) === nil ? nil : $a['$[]'](2))) + \"}\"\n          } else if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](3)))) {\n            return (function() {$case = (args = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)).$split(\":\", 3)).$shift();\n            if (\"set\"['$===']($case)) {\n            $b = $$($nesting, 'Parser').$store_attribute(args['$[]'](0), ($truthy($c = args['$[]'](1)) ? $c : \"\"), self.document), $a = Opal.to_ary($b), (_ = ($a[0] == null ? nil : $a[0])), (value = ($a[1] == null ? nil : $a[1])), $b;\n            if ($truthy(($truthy($a = value) ? $a : (attribute_undefined = ($truthy($b = attribute_undefined) ? $b : ($truthy($c = doc_attrs['$[]'](\"attribute-undefined\")) ? $c : $$($nesting, 'Compliance').$attribute_undefined())))['$!='](\"drop-line\")))) {\n              return (drop = (drop_empty_line = $$($nesting, 'DEL')))\n            } else {\n              return (drop = (drop_line = $$($nesting, 'CAN')))\n            };}\n            else if (\"counter2\"['$===']($case)) {\n            $send(self.document, 'counter', Opal.to_a(args));\n            return (drop = (drop_empty_line = $$($nesting, 'DEL')));}\n            else {return $send(self.document, 'counter', Opal.to_a(args))}})()\n          } else if ($truthy(doc_attrs['$key?']((key = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)).$downcase())))) {\n            return doc_attrs['$[]'](key)\n          } else if ($truthy((value = $$($nesting, 'INTRINSIC_ATTRIBUTES')['$[]'](key)))) {\n            return value\n          } else {\n            return (function() {$case = (attribute_missing = ($truthy($a = attribute_missing) ? $a : ($truthy($b = ($truthy($c = opts['$[]'](\"attribute_missing\")) ? $c : doc_attrs['$[]'](\"attribute-missing\"))) ? $b : $$($nesting, 'Compliance').$attribute_missing())));\n            if (\"drop\"['$===']($case)) {return (drop = (drop_empty_line = $$($nesting, 'DEL')))}\n            else if (\"drop-line\"['$===']($case)) {\n            if ((drop_line_severity = ($truthy($a = drop_line_severity) ? $a : ($truthy($b = opts['$[]'](\"drop_line_severity\")) ? $b : \"info\")))['$=='](\"info\")) {\n              $send(self.$logger(), 'info', [], ($$12 = function(){var self = $$12.$$s || this;\n\n              return \"\" + \"dropping line containing reference to missing attribute: \" + (key)}, $$12.$$s = self, $$12.$$arity = 0, $$12))};\n            return (drop = (drop_line = $$($nesting, 'CAN')));}\n            else if (\"warn\"['$===']($case)) {\n            self.$logger().$warn(\"\" + \"skipping reference to missing attribute: \" + (key));\n            return (($a = $gvars['~']) === nil ? nil : $a['$[]'](0));}\n            else {return (($a = $gvars['~']) === nil ? nil : $a['$[]'](0))}})()\n          }}, $$11.$$s = self, $$11.$$arity = 0, $$11));\n        if ($truthy(drop)) {\n          if ($truthy(drop_empty_line)) {\n            \n            lines = text.$squeeze($$($nesting, 'DEL')).$split($$($nesting, 'LF'), -1);\n            if ($truthy(drop_line)) {\n              return $send(lines, 'reject', [], ($$13 = function(line){var self = $$13.$$s || this, $a, $b, $c;\n\n              \n                \n                if (line == null) {\n                  line = nil;\n                };\n                return ($truthy($a = ($truthy($b = ($truthy($c = line['$==']($$($nesting, 'DEL'))) ? $c : line['$==']($$($nesting, 'CAN')))) ? $b : line['$start_with?']($$($nesting, 'CAN')))) ? $a : line['$include?']($$($nesting, 'CAN')));}, $$13.$$s = self, $$13.$$arity = 1, $$13)).$join($$($nesting, 'LF')).$delete($$($nesting, 'DEL'))\n            } else {\n              return $send(lines, 'reject', [], ($$14 = function(line){var self = $$14.$$s || this;\n\n              \n                \n                if (line == null) {\n                  line = nil;\n                };\n                return line['$==']($$($nesting, 'DEL'));}, $$14.$$s = self, $$14.$$arity = 1, $$14)).$join($$($nesting, 'LF')).$delete($$($nesting, 'DEL'))\n            };\n          } else if ($truthy(text['$include?']($$($nesting, 'LF')))) {\n            return $send(text.$split($$($nesting, 'LF'), -1), 'reject', [], ($$15 = function(line){var self = $$15.$$s || this, $a, $b;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              return ($truthy($a = ($truthy($b = line['$==']($$($nesting, 'CAN'))) ? $b : line['$start_with?']($$($nesting, 'CAN')))) ? $a : line['$include?']($$($nesting, 'CAN')));}, $$15.$$s = self, $$15.$$arity = 1, $$15)).$join($$($nesting, 'LF'))\n          } else {\n            return \"\"\n          }\n        } else {\n          return text\n        };\n      }, $Substitutors_sub_attributes$10.$$arity = -2);\n      \n      Opal.def(self, '$sub_replacements', $Substitutors_sub_replacements$16 = function $$sub_replacements(text) {\n        var $$17, self = this;\n\n        \n        if ($truthy($$($nesting, 'ReplaceableTextRx')['$match?'](text))) {\n          $send($$($nesting, 'REPLACEMENTS'), 'each', [], ($$17 = function(pattern, replacement, restore){var self = $$17.$$s || this, $$18;\n\n          \n            \n            if (pattern == null) {\n              pattern = nil;\n            };\n            \n            if (replacement == null) {\n              replacement = nil;\n            };\n            \n            if (restore == null) {\n              restore = nil;\n            };\n            return (text = $send(text, 'gsub', [pattern], ($$18 = function(){var self = $$18.$$s || this;\n              if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n            return self.$do_replacement($gvars[\"~\"], replacement, restore)}, $$18.$$s = self, $$18.$$arity = 0, $$18)));}, $$17.$$s = self, $$17.$$arity = 3, $$17))};\n        return text;\n      }, $Substitutors_sub_replacements$16.$$arity = 1);\n      \n      Opal.def(self, '$sub_macros', $Substitutors_sub_macros$19 = function $$sub_macros(text) {\n        var $a, $$20, $b, $$23, $$26, $$28, $$30, $$31, $$34, $$35, $$36, $$37, $$38, $$39, $$40, self = this, found_square_bracket = nil, found_colon = nil, found_macroish = nil, found_macroish_short = nil, doc_attrs = nil, doc = nil, extensions = nil;\n        if (self.document == null) self.document = nil;\n        if (self.context == null) self.context = nil;\n        if (self.parent == null) self.parent = nil;\n\n        \n        found_square_bracket = text['$include?'](\"[\");\n        found_colon = text['$include?'](\":\");\n        found_macroish = ($truthy($a = found_square_bracket) ? found_colon : $a);\n        found_macroish_short = ($truthy($a = found_macroish) ? text['$include?'](\":[\") : $a);\n        doc_attrs = (doc = self.document).$attributes();\n        if ($truthy(($truthy($a = (extensions = doc.$extensions())) ? extensions['$inline_macros?']() : $a))) {\n          $send(extensions.$inline_macros(), 'each', [], ($$20 = function(extension){var self = $$20.$$s || this, $$21;\n\n          \n            \n            if (extension == null) {\n              extension = nil;\n            };\n            return (text = $send(text, 'gsub', [extension.$instance().$regexp()], ($$21 = function(){var self = $$21.$$s || this, $b, $c, $$22, match = nil, target = nil, content = nil, attributes = nil, default_attrs = nil, ext_config = nil, $writer = nil, replacement = nil, inline_subs = nil;\n              if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n            \n              if ($truthy((match = (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)))['$start_with?']($$($nesting, 'RS')))) {\n                return (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)).$slice(1, (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)).$length());};\n              if ($truthy($gvars[\"~\"].$names()['$empty?']())) {\n                $b = [(($c = $gvars['~']) === nil ? nil : $c['$[]'](1)), (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))], (target = $b[0]), (content = $b[1]), $b\n              } else {\n                $b = [(function() { try {\n                  return $gvars[\"~\"]['$[]'](\"target\")\n                } catch ($err) {\n                  if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                    try {\n                      return nil\n                    } finally { Opal.pop_exception() }\n                  } else { throw $err; }\n                }})(), (function() { try {\n                  return $gvars[\"~\"]['$[]'](\"content\")\n                } catch ($err) {\n                  if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                    try {\n                      return nil\n                    } finally { Opal.pop_exception() }\n                  } else { throw $err; }\n                }})()], (target = $b[0]), (content = $b[1]), $b\n              };\n              attributes = (function() {if ($truthy((default_attrs = (ext_config = extension.$config())['$[]'](\"default_attrs\")))) {\n                return default_attrs.$merge()\n              } else {\n                return $hash2([], {})\n              }; return nil; })();\n              if ($truthy(content)) {\n                \n                if ($truthy(content['$empty?']())) {\n                  if (ext_config['$[]'](\"content_model\")['$=='](\"attributes\")) {\n                  } else {\n                    \n                    $writer = [\"text\", content];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];\n                  }\n                } else {\n                  \n                  content = self.$normalize_text(content, true, true);\n                  if (ext_config['$[]'](\"content_model\")['$=='](\"attributes\")) {\n                    self.$parse_attributes(content, ($truthy($b = ($truthy($c = ext_config['$[]'](\"positional_attrs\")) ? $c : ext_config['$[]'](\"pos_attrs\"))) ? $b : []), $hash2([\"into\"], {\"into\": attributes}))\n                  } else {\n                    \n                    $writer = [\"text\", content];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];\n                  };\n                };\n                target = ($truthy($b = target) ? $b : (function() {if (ext_config['$[]'](\"format\")['$=='](\"short\")) {\n                  return content\n                } else {\n                  return target\n                }; return nil; })());};\n              if ($truthy($$($nesting, 'Inline')['$===']((replacement = extension.$process_method()['$[]'](self, target, attributes))))) {\n                \n                if ($truthy(($truthy($b = (inline_subs = replacement.$attributes().$delete(\"subs\"))) ? (inline_subs = self.$expand_subs(inline_subs, \"custom inline macro\")) : $b))) {\n                  \n                  $writer = [self.$apply_subs(replacement.$text(), inline_subs)];\n                  $send(replacement, 'text=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                return replacement.$convert();\n              } else if ($truthy(replacement)) {\n                \n                $send(self.$logger(), 'info', [], ($$22 = function(){var self = $$22.$$s || this;\n\n                return \"\" + \"expected substitution value for custom inline macro to be of type Inline; got \" + (replacement.$class()) + \": \" + (match)}, $$22.$$s = self, $$22.$$arity = 0, $$22));\n                return replacement;\n              } else {\n                return \"\"\n              };}, $$21.$$s = self, $$21.$$arity = 0, $$21)));}, $$20.$$s = self, $$20.$$arity = 1, $$20))};\n        if ($truthy(doc_attrs['$key?'](\"experimental\"))) {\n          \n          if ($truthy(($truthy($a = found_macroish_short) ? ($truthy($b = text['$include?'](\"kbd:\")) ? $b : text['$include?'](\"btn:\")) : $a))) {\n            text = $send(text, 'gsub', [$$($nesting, 'InlineKbdBtnMacroRx')], ($$23 = function(){var self = $$23.$$s || this, $c, $$24, $$25, keys = nil, delim_idx = nil, delim = nil, $writer = nil;\n\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](1)))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length())\n              } else if ((($c = $gvars['~']) === nil ? nil : $c['$[]'](2))['$=='](\"kbd\")) {\n                \n                if ($truthy((keys = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)).$strip())['$include?']($$($nesting, 'R_SB')))) {\n                  keys = keys.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n                if ($truthy(($truthy($c = $rb_gt(keys.$length(), 1)) ? (delim_idx = (function() {if ($truthy((delim_idx = keys.$index(\",\", 1)))) {\n                  return [delim_idx, keys.$index(\"+\", 1)].$compact().$min()\n                } else {\n                  \n                  return keys.$index(\"+\", 1);\n                }; return nil; })()) : $c))) {\n                  \n                  delim = keys.$slice(delim_idx, 1);\n                  if ($truthy(keys['$end_with?'](delim))) {\n                    \n                    keys = $send(keys.$chop().$split(delim, -1), 'map', [], ($$24 = function(key){var self = $$24.$$s || this;\n\n                    \n                      \n                      if (key == null) {\n                        key = nil;\n                      };\n                      return key.$strip();}, $$24.$$s = self, $$24.$$arity = 1, $$24));\n                    \n                    $writer = [-1, $rb_plus(keys['$[]'](-1), delim)];\n                    $send(keys, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];;\n                  } else {\n                    keys = $send(keys.$split(delim), 'map', [], ($$25 = function(key){var self = $$25.$$s || this;\n\n                    \n                      \n                      if (key == null) {\n                        key = nil;\n                      };\n                      return key.$strip();}, $$25.$$s = self, $$25.$$arity = 1, $$25))\n                  };\n                } else {\n                  keys = [keys]\n                };\n                return $$($nesting, 'Inline').$new(self, \"kbd\", nil, $hash2([\"attributes\"], {\"attributes\": $hash2([\"keys\"], {\"keys\": keys})})).$convert();\n              } else {\n                return $$($nesting, 'Inline').$new(self, \"button\", self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)), true, true)).$convert()\n              }}, $$23.$$s = self, $$23.$$arity = 0, $$23))};\n          if ($truthy(($truthy($a = found_macroish) ? text['$include?'](\"menu:\") : $a))) {\n            text = $send(text, 'gsub', [$$($nesting, 'InlineMenuMacroRx')], ($$26 = function(){var self = $$26.$$s || this, $c, $$27, menu = nil, items = nil, delim = nil, submenus = nil, menuitem = nil;\n\n            \n              if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n              menu = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1));\n              if ($truthy((items = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))))) {\n                \n                if ($truthy(items['$include?']($$($nesting, 'R_SB')))) {\n                  items = items.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n                if ($truthy((delim = (function() {if ($truthy(items['$include?'](\"&gt;\"))) {\n                  return \"&gt;\"\n                } else {\n                  \n                  if ($truthy(items['$include?'](\",\"))) {\n                    return \",\"\n                  } else {\n                    return nil\n                  };\n                }; return nil; })()))) {\n                  \n                  submenus = $send(items.$split(delim), 'map', [], ($$27 = function(it){var self = $$27.$$s || this;\n\n                  \n                    \n                    if (it == null) {\n                      it = nil;\n                    };\n                    return it.$strip();}, $$27.$$s = self, $$27.$$arity = 1, $$27));\n                  menuitem = submenus.$pop();\n                } else {\n                  $c = [[], items.$rstrip()], (submenus = $c[0]), (menuitem = $c[1]), $c\n                };\n              } else {\n                $c = [[], nil], (submenus = $c[0]), (menuitem = $c[1]), $c\n              };\n              return $$($nesting, 'Inline').$new(self, \"menu\", nil, $hash2([\"attributes\"], {\"attributes\": $hash2([\"menu\", \"submenus\", \"menuitem\"], {\"menu\": menu, \"submenus\": submenus, \"menuitem\": menuitem})})).$convert();}, $$26.$$s = self, $$26.$$arity = 0, $$26))};\n          if ($truthy(($truthy($a = text['$include?'](\"\\\"\")) ? text['$include?'](\"&gt;\") : $a))) {\n            text = $send(text, 'gsub', [$$($nesting, 'InlineMenuRx')], ($$28 = function(){var self = $$28.$$s || this, $c, $d, $e, $$29, menu = nil, submenus = nil, menuitem = nil;\n\n            \n              if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n              $d = $send((($e = $gvars['~']) === nil ? nil : $e['$[]'](1)).$split(\"&gt;\"), 'map', [], ($$29 = function(it){var self = $$29.$$s || this;\n\n              \n                \n                if (it == null) {\n                  it = nil;\n                };\n                return it.$strip();}, $$29.$$s = self, $$29.$$arity = 1, $$29)), $c = Opal.to_ary($d), (menu = ($c[0] == null ? nil : $c[0])), (submenus = $slice.call($c, 1)), $d;\n              menuitem = submenus.$pop();\n              return $$($nesting, 'Inline').$new(self, \"menu\", nil, $hash2([\"attributes\"], {\"attributes\": $hash2([\"menu\", \"submenus\", \"menuitem\"], {\"menu\": menu, \"submenus\": submenus, \"menuitem\": menuitem})})).$convert();}, $$28.$$s = self, $$28.$$arity = 0, $$28))};};\n        if ($truthy(($truthy($a = found_macroish) ? ($truthy($b = text['$include?'](\"image:\")) ? $b : text['$include?'](\"icon:\")) : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineImageMacroRx')], ($$30 = function(){var self = $$30.$$s || this, $c, type = nil, posattrs = nil, target = nil, attrs = nil, $writer = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());\n            } else if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?'](\"icon:\"))) {\n              $c = [\"icon\", [\"size\"]], (type = $c[0]), (posattrs = $c[1]), $c\n            } else {\n              $c = [\"image\", [\"alt\", \"width\", \"height\"]], (type = $c[0]), (posattrs = $c[1]), $c\n            };\n            target = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1));\n            attrs = self.$parse_attributes((($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), posattrs, $hash2([\"unescape_input\"], {\"unescape_input\": true}));\n            if (type['$=='](\"icon\")) {\n            } else {\n              \n              doc.$register(\"images\", target);\n              \n              $writer = [\"imagesdir\", doc_attrs['$[]'](\"imagesdir\")];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n            };\n            ($truthy($c = attrs['$[]'](\"alt\")) ? $c : (($writer = [\"alt\", (($writer = [\"default-alt\", $$($nesting, 'Helpers').$basename(target, true).$tr(\"_-\", \" \")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n            return $$($nesting, 'Inline').$new(self, \"image\", nil, $hash2([\"type\", \"target\", \"attributes\"], {\"type\": type, \"target\": target, \"attributes\": attrs})).$convert();}, $$30.$$s = self, $$30.$$arity = 0, $$30))};\n        if ($truthy(($truthy($a = ($truthy($b = text['$include?'](\"((\")) ? text['$include?'](\"))\") : $b)) ? $a : ($truthy($b = found_macroish_short) ? text['$include?'](\"dexterm\") : $b)))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineIndextermMacroRx')], ($$31 = function(){var self = $$31.$$s || this, $c, $$32, $d, $$33, $case = nil, attrlist = nil, primary = nil, attrs = nil, $writer = nil, see_also = nil, term = nil, encl_text = nil, visible = nil, before = nil, after = nil, _ = nil, see = nil, subbed_term = nil, terms = nil;\n\n          return (function() {$case = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1));\n            if (\"indexterm\"['$===']($case)) {\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ($truthy((attrlist = self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), true, true))['$include?'](\"=\"))) {\n              if ($truthy((primary = (attrs = $$($nesting, 'AttributeList').$new(attrlist, self).$parse())['$[]'](1)))) {\n                \n                \n                $writer = [\"terms\", [primary]];\n                $send(attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                if ($truthy((see_also = attrs['$[]'](\"see-also\")))) {\n                  \n                  $writer = [\"see-also\", (function() {if ($truthy(see_also['$include?'](\",\"))) {\n                    return $send(see_also.$split(\",\"), 'map', [], ($$32 = function(it){var self = $$32.$$s || this;\n\n                    \n                      \n                      if (it == null) {\n                        it = nil;\n                      };\n                      return it.$lstrip();}, $$32.$$s = self, $$32.$$arity = 1, $$32))\n                  } else {\n                    return [see_also]\n                  }; return nil; })()];\n                  $send(attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n              } else {\n                attrs = $hash2([\"terms\"], {\"terms\": attrlist})\n              }\n            } else {\n              attrs = $hash2([\"terms\"], {\"terms\": self.$split_simple_csv(attrlist)})\n            };\n            return $$($nesting, 'Inline').$new(self, \"indexterm\", nil, $hash2([\"attributes\"], {\"attributes\": attrs})).$convert();}\n            else if (\"indexterm2\"['$===']($case)) {\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ($truthy((term = self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), true, true))['$include?'](\"=\"))) {\n              \n              term = ($truthy($c = ($truthy($d = (attrs = $$($nesting, 'AttributeList').$new(term, self).$parse())['$[]'](1)) ? $d : (attrs = nil))) ? $c : term);\n              if ($truthy(($truthy($c = attrs) ? (see_also = attrs['$[]'](\"see-also\")) : $c))) {\n                \n                $writer = [\"see-also\", (function() {if ($truthy(see_also['$include?'](\",\"))) {\n                  return $send(see_also.$split(\",\"), 'map', [], ($$33 = function(it){var self = $$33.$$s || this;\n\n                  \n                    \n                    if (it == null) {\n                      it = nil;\n                    };\n                    return it.$lstrip();}, $$33.$$s = self, $$33.$$arity = 1, $$33))\n                } else {\n                  return [see_also]\n                }; return nil; })()];\n                $send(attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};};\n            return $$($nesting, 'Inline').$new(self, \"indexterm\", term, $hash2([\"attributes\", \"type\"], {\"attributes\": attrs, \"type\": \"visible\"})).$convert();}\n            else {\n            encl_text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3));\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              if ($truthy(($truthy($c = encl_text['$start_with?'](\"(\")) ? encl_text['$end_with?'](\")\") : $c))) {\n                \n                encl_text = encl_text.$slice(1, $rb_minus(encl_text.$length(), 2));\n                $c = [true, \"(\", \")\"], (visible = $c[0]), (before = $c[1]), (after = $c[2]), $c;\n              } else {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());\n              }\n            } else {\n              \n              visible = true;\n              if ($truthy(encl_text['$start_with?'](\"(\"))) {\n                if ($truthy(encl_text['$end_with?'](\")\"))) {\n                  $c = [encl_text.$slice(1, $rb_minus(encl_text.$length(), 2)), false], (encl_text = $c[0]), (visible = $c[1]), $c\n                } else {\n                  $c = [encl_text.$slice(1, encl_text.$length()), \"(\", \"\"], (encl_text = $c[0]), (before = $c[1]), (after = $c[2]), $c\n                }\n              } else if ($truthy(encl_text['$end_with?'](\")\"))) {\n                $c = [encl_text.$chop(), \"\", \")\"], (encl_text = $c[0]), (before = $c[1]), (after = $c[2]), $c};\n            };\n            if ($truthy(visible)) {\n              \n              if ($truthy((term = self.$normalize_text(encl_text, true))['$include?'](\";&\"))) {\n                if ($truthy(term['$include?'](\" &gt;&gt; \"))) {\n                  \n                  $d = term.$partition(\" &gt;&gt; \"), $c = Opal.to_ary($d), (term = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (see = ($c[2] == null ? nil : $c[2])), $d;\n                  attrs = $hash2([\"see\"], {\"see\": see});\n                } else if ($truthy(term['$include?'](\" &amp;&gt; \"))) {\n                  \n                  $d = term.$split(\" &amp;&gt; \"), $c = Opal.to_ary($d), (term = ($c[0] == null ? nil : $c[0])), (see_also = $slice.call($c, 1)), $d;\n                  attrs = $hash2([\"see-also\"], {\"see-also\": see_also});}};\n              subbed_term = $$($nesting, 'Inline').$new(self, \"indexterm\", term, $hash2([\"attributes\", \"type\"], {\"attributes\": attrs, \"type\": \"visible\"})).$convert();\n            } else {\n              \n              attrs = $hash2([], {});\n              if ($truthy((terms = self.$normalize_text(encl_text, true))['$include?'](\";&\"))) {\n                if ($truthy(terms['$include?'](\" &gt;&gt; \"))) {\n                  \n                  $d = terms.$partition(\" &gt;&gt; \"), $c = Opal.to_ary($d), (terms = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (see = ($c[2] == null ? nil : $c[2])), $d;\n                  \n                  $writer = [\"see\", see];\n                  $send(attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                } else if ($truthy(terms['$include?'](\" &amp;&gt; \"))) {\n                  \n                  $d = terms.$split(\" &amp;&gt; \"), $c = Opal.to_ary($d), (terms = ($c[0] == null ? nil : $c[0])), (see_also = $slice.call($c, 1)), $d;\n                  \n                  $writer = [\"see-also\", see_also];\n                  $send(attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;}};\n              \n              $writer = [\"terms\", self.$split_simple_csv(terms)];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              subbed_term = $$($nesting, 'Inline').$new(self, \"indexterm\", nil, $hash2([\"attributes\"], {\"attributes\": attrs})).$convert();\n            };\n            if ($truthy(before)) {\n              return \"\" + (before) + (subbed_term) + (after)\n            } else {\n              return subbed_term\n            };}})()}, $$31.$$s = self, $$31.$$arity = 0, $$31))};\n        if ($truthy(($truthy($a = found_colon) ? text['$include?'](\"://\") : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineLinkRx')], ($$34 = function(){var self = $$34.$$s || this, $c, $d, target = nil, prefix = nil, suffix = nil, link_text = nil, $case = nil, attrs = nil, link_opts = nil, new_link_text = nil, $writer = nil, bare = nil;\n\n          \n            if ($truthy((target = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2)))['$start_with?']($$($nesting, 'RS')))) {\n              return \"\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + (target.$slice(1, target.$length())) + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](4)));};\n            $c = [(($d = $gvars['~']) === nil ? nil : $d['$[]'](1)), \"\"], (prefix = $c[0]), (suffix = $c[1]), $c;\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](4)))) {\n              \n              if (prefix['$=='](\"link:\")) {\n                prefix = \"\"};\n              if ($truthy((link_text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](4)))['$empty?']())) {\n                link_text = nil};\n            } else {\n              \n              $case = prefix;\n              if (\"link:\"['$===']($case) || \"\\\"\"['$===']($case) || \"'\"['$===']($case)) {return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));};\n              $case = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3));\n              if (\")\"['$===']($case) || \"?\"['$===']($case) || \"!\"['$===']($case)) {\n              target = target.$chop();\n              if ($truthy((($c = (suffix = (($d = $gvars['~']) === nil ? nil : $d['$[]'](3)))['$=='](\")\")) ? target['$end_with?'](\".\", \"?\", \"!\") : (suffix = (($d = $gvars['~']) === nil ? nil : $d['$[]'](3)))['$=='](\")\")))) {\n                \n                suffix = $rb_plus(target['$[]'](-1), suffix);\n                target = target.$chop();};\n              if ($truthy(target['$end_with?'](\"://\"))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));};}\n              else if (\";\"['$===']($case)) {\n              if ($truthy(($truthy($c = prefix['$start_with?'](\"&lt;\")) ? target['$end_with?'](\"&gt;\") : $c))) {\n                \n                prefix = prefix.$slice(4, prefix.$length());\n                target = target.$slice(0, $rb_minus(target.$length(), 4));\n              } else if ($truthy((target = target.$chop())['$end_with?'](\")\"))) {\n                \n                target = target.$chop();\n                suffix = \");\";\n              } else {\n                suffix = \";\"\n              };\n              if ($truthy(target['$end_with?'](\"://\"))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));};}\n              else if (\":\"['$===']($case)) {\n              if ($truthy((target = target.$chop())['$end_with?'](\")\"))) {\n                \n                target = target.$chop();\n                suffix = \"):\";\n              } else {\n                suffix = \":\"\n              };\n              if ($truthy(target['$end_with?'](\"://\"))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));};};\n            };\n            $c = [nil, $hash2([\"type\"], {\"type\": \"link\"})], (attrs = $c[0]), (link_opts = $c[1]), $c;\n            if ($truthy(link_text)) {\n              \n              if ($truthy(link_text['$include?']($$($nesting, 'R_SB')))) {\n                new_link_text = (link_text = link_text.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB')))};\n              if ($truthy(($truthy($c = doc.$compat_mode()['$!']()) ? link_text['$include?'](\"=\") : $c))) {\n                \n                $d = self.$extract_attributes_from_text(link_text, \"\"), $c = Opal.to_ary($d), (link_text = ($c[0] == null ? nil : $c[0])), (attrs = ($c[1] == null ? nil : $c[1])), $d;\n                new_link_text = link_text;\n                \n                $writer = [\"id\", attrs['$[]'](\"id\")];\n                $send(link_opts, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;};\n              if ($truthy(link_text['$end_with?'](\"^\"))) {\n                \n                new_link_text = (link_text = link_text.$chop());\n                if ($truthy(attrs)) {\n                  ($truthy($c = attrs['$[]'](\"window\")) ? $c : (($writer = [\"window\", \"_blank\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n                } else {\n                  attrs = $hash2([\"window\"], {\"window\": \"_blank\"})\n                };};\n              if ($truthy(($truthy($c = new_link_text) ? new_link_text['$empty?']() : $c))) {\n                \n                link_text = (function() {if ($truthy(doc_attrs['$key?'](\"hide-uri-scheme\"))) {\n                  \n                  return target.$sub($$($nesting, 'UriSniffRx'), \"\");\n                } else {\n                  return target\n                }; return nil; })();\n                bare = true;};\n            } else {\n              \n              link_text = (function() {if ($truthy(doc_attrs['$key?'](\"hide-uri-scheme\"))) {\n                \n                return target.$sub($$($nesting, 'UriSniffRx'), \"\");\n              } else {\n                return target\n              }; return nil; })();\n              bare = true;\n            };\n            if ($truthy(bare)) {\n              if ($truthy(attrs)) {\n                \n                $writer = [\"role\", (function() {if ($truthy(attrs['$key?'](\"role\"))) {\n                  return \"\" + \"bare \" + (attrs['$[]'](\"role\"))\n                } else {\n                  return \"bare\"\n                }; return nil; })()];\n                $send(attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              } else {\n                attrs = $hash2([\"role\"], {\"role\": \"bare\"})\n              }};\n            doc.$register(\"links\", (($writer = [\"target\", target]), $send(link_opts, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n            if ($truthy(attrs)) {\n              \n              $writer = [\"attributes\", attrs];\n              $send(link_opts, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            return \"\" + (prefix) + ($$($nesting, 'Inline').$new(self, \"anchor\", link_text, link_opts).$convert()) + (suffix);}, $$34.$$s = self, $$34.$$arity = 0, $$34))};\n        if ($truthy(($truthy($a = found_macroish) ? ($truthy($b = text['$include?'](\"link:\")) ? $b : text['$include?'](\"ilto:\")) : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineLinkMacroRx')], ($$35 = function(){var self = $$35.$$s || this, $c, $d, mailto = nil, target = nil, mailto_text = nil, attrs = nil, link_opts = nil, link_text = nil, $writer = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());\n            } else if ($truthy((mailto = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1))))) {\n              target = $rb_plus(\"mailto:\", (mailto_text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))))\n            } else {\n              target = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))\n            };\n            $c = [nil, $hash2([\"type\"], {\"type\": \"link\"})], (attrs = $c[0]), (link_opts = $c[1]), $c;\n            if ($truthy((link_text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))['$empty?']())) {\n            } else {\n              \n              if ($truthy(link_text['$include?']($$($nesting, 'R_SB')))) {\n                link_text = link_text.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n              if ($truthy(mailto)) {\n                if ($truthy(($truthy($c = doc.$compat_mode()['$!']()) ? link_text['$include?'](\",\") : $c))) {\n                  \n                  $d = self.$extract_attributes_from_text(link_text, \"\"), $c = Opal.to_ary($d), (link_text = ($c[0] == null ? nil : $c[0])), (attrs = ($c[1] == null ? nil : $c[1])), $d;\n                  \n                  $writer = [\"id\", attrs['$[]'](\"id\")];\n                  $send(link_opts, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                  if ($truthy(attrs['$key?'](2))) {\n                    if ($truthy(attrs['$key?'](3))) {\n                      target = \"\" + (target) + \"?subject=\" + ($$($nesting, 'Helpers').$encode_uri_component(attrs['$[]'](2))) + \"&amp;body=\" + ($$($nesting, 'Helpers').$encode_uri_component(attrs['$[]'](3)))\n                    } else {\n                      target = \"\" + (target) + \"?subject=\" + ($$($nesting, 'Helpers').$encode_uri_component(attrs['$[]'](2)))\n                    }};}\n              } else if ($truthy(($truthy($c = doc.$compat_mode()['$!']()) ? link_text['$include?'](\"=\") : $c))) {\n                \n                $d = self.$extract_attributes_from_text(link_text, \"\"), $c = Opal.to_ary($d), (link_text = ($c[0] == null ? nil : $c[0])), (attrs = ($c[1] == null ? nil : $c[1])), $d;\n                \n                $writer = [\"id\", attrs['$[]'](\"id\")];\n                $send(link_opts, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;};\n              if ($truthy(link_text['$end_with?'](\"^\"))) {\n                \n                link_text = link_text.$chop();\n                if ($truthy(attrs)) {\n                  ($truthy($c = attrs['$[]'](\"window\")) ? $c : (($writer = [\"window\", \"_blank\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n                } else {\n                  attrs = $hash2([\"window\"], {\"window\": \"_blank\"})\n                };};\n            };\n            if ($truthy(link_text['$empty?']())) {\n              if ($truthy(mailto)) {\n                link_text = mailto_text\n              } else {\n                \n                if ($truthy(doc_attrs['$key?'](\"hide-uri-scheme\"))) {\n                  if ($truthy((link_text = target.$sub($$($nesting, 'UriSniffRx'), \"\"))['$empty?']())) {\n                    link_text = target}\n                } else {\n                  link_text = target\n                };\n                if ($truthy(attrs)) {\n                  \n                  $writer = [\"role\", (function() {if ($truthy(attrs['$key?'](\"role\"))) {\n                    return \"\" + \"bare \" + (attrs['$[]'](\"role\"))\n                  } else {\n                    return \"bare\"\n                  }; return nil; })()];\n                  $send(attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];\n                } else {\n                  attrs = $hash2([\"role\"], {\"role\": \"bare\"})\n                };\n              }};\n            doc.$register(\"links\", (($writer = [\"target\", target]), $send(link_opts, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n            if ($truthy(attrs)) {\n              \n              $writer = [\"attributes\", attrs];\n              $send(link_opts, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            return $$($nesting, 'Inline').$new(self, \"anchor\", link_text, link_opts).$convert();}, $$35.$$s = self, $$35.$$arity = 0, $$35))};\n        if ($truthy(text['$include?'](\"@\"))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineEmailRx')], ($$36 = function(){var self = $$36.$$s || this, $c, target = nil, address = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](1)))) {\n              return (function() {if ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))['$==']($$($nesting, 'RS'))) {\n                \n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());\n              } else {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0))\n              }; return nil; })();};\n            target = $rb_plus(\"mailto:\", (address = (($c = $gvars['~']) === nil ? nil : $c['$[]'](0))));\n            doc.$register(\"links\", target);\n            return $$($nesting, 'Inline').$new(self, \"anchor\", address, $hash2([\"type\", \"target\"], {\"type\": \"link\", \"target\": target})).$convert();}, $$36.$$s = self, $$36.$$arity = 0, $$36))};\n        if ($truthy(($truthy($a = ($truthy($b = found_square_bracket) ? self.context['$=='](\"list_item\") : $b)) ? self.parent.$style()['$=='](\"bibliography\") : $a))) {\n          text = $send(text, 'sub', [$$($nesting, 'InlineBiblioAnchorRx')], ($$37 = function(){var self = $$37.$$s || this, $c;\n\n          return $$($nesting, 'Inline').$new(self, \"anchor\", (($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), $hash2([\"type\", \"id\"], {\"type\": \"bibref\", \"id\": (($c = $gvars['~']) === nil ? nil : $c['$[]'](1))})).$convert()}, $$37.$$s = self, $$37.$$arity = 0, $$37))};\n        if ($truthy(($truthy($a = ($truthy($b = found_square_bracket) ? text['$include?'](\"[[\") : $b)) ? $a : ($truthy($b = found_macroish) ? text['$include?'](\"or:\") : $b)))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineAnchorRx')], ($$38 = function(){var self = $$38.$$s || this, $c, $d, id = nil, reftext = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](1)))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ($truthy((id = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))))) {\n              reftext = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))\n            } else {\n              \n              id = (($c = $gvars['~']) === nil ? nil : $c['$[]'](4));\n              if ($truthy(($truthy($c = (reftext = (($d = $gvars['~']) === nil ? nil : $d['$[]'](5)))) ? reftext['$include?']($$($nesting, 'R_SB')) : $c))) {\n                reftext = reftext.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n            };\n            return $$($nesting, 'Inline').$new(self, \"anchor\", reftext, $hash2([\"type\", \"id\"], {\"type\": \"ref\", \"id\": id})).$convert();}, $$38.$$s = self, $$38.$$arity = 0, $$38))};\n        if ($truthy(($truthy($a = ($truthy($b = text['$include?'](\"&\")) ? text['$include?'](\";&l\") : $b)) ? $a : ($truthy($b = found_macroish) ? text['$include?'](\"xref:\") : $b)))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineXrefMacroRx')], ($$39 = function(){var self = $$39.$$s || this, $c, $d, attrs = nil, refid = nil, _ = nil, link_text = nil, macro = nil, fragment = nil, hash_idx = nil, fragment_len = nil, path = nil, src2src = nil, target = nil, $writer = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            attrs = $hash2([], {});\n            if ($truthy((refid = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1))))) {\n              if ($truthy(refid['$include?'](\",\"))) {\n                \n                $d = refid.$partition(\",\"), $c = Opal.to_ary($d), (refid = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (link_text = ($c[2] == null ? nil : $c[2])), $d;\n                if ($truthy((link_text = link_text.$lstrip())['$empty?']())) {\n                  link_text = nil};}\n            } else {\n              \n              macro = true;\n              refid = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2));\n              if ($truthy((link_text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))))) {\n                \n                if ($truthy(link_text['$include?']($$($nesting, 'R_SB')))) {\n                  link_text = link_text.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n                if ($truthy(($truthy($c = doc.$compat_mode()['$!']()) ? link_text['$include?'](\"=\") : $c))) {\n                  $d = self.$extract_attributes_from_text(link_text), $c = Opal.to_ary($d), (link_text = ($c[0] == null ? nil : $c[0])), (attrs = ($c[1] == null ? nil : $c[1])), $d};};\n            };\n            if ($truthy(doc.$compat_mode())) {\n              fragment = refid\n            } else if ($truthy((hash_idx = refid.$index(\"#\")))) {\n              if ($truthy($rb_gt(hash_idx, 0))) {\n                \n                if ($truthy($rb_gt((fragment_len = $rb_minus($rb_minus(refid.$length(), 1), hash_idx)), 0))) {\n                  $c = [refid.$slice(0, hash_idx), refid.$slice($rb_plus(hash_idx, 1), fragment_len)], (path = $c[0]), (fragment = $c[1]), $c\n                } else {\n                  path = refid.$chop()\n                };\n                if ($truthy(macro)) {\n                  if ($truthy(path['$end_with?'](\".adoc\"))) {\n                    src2src = (path = path.$slice(0, $rb_minus(path.$length(), 5)))\n                  } else if ($truthy($$($nesting, 'Helpers')['$extname?'](path)['$!']())) {\n                    src2src = path}\n                } else if ($truthy($send(path, 'end_with?', Opal.to_a($$($nesting, 'ASCIIDOC_EXTENSIONS').$keys())))) {\n                  src2src = (path = path.$slice(0, path.$rindex(\".\")))\n                } else {\n                  src2src = path\n                };\n              } else {\n                $c = [refid, refid.$slice(1, refid.$length())], (target = $c[0]), (fragment = $c[1]), $c\n              }\n            } else if ($truthy(macro)) {\n              if ($truthy(refid['$end_with?'](\".adoc\"))) {\n                src2src = (path = refid.$slice(0, $rb_minus(refid.$length(), 5)))\n              } else if ($truthy($$($nesting, 'Helpers')['$extname?'](refid))) {\n                path = refid\n              } else {\n                fragment = refid\n              }\n            } else {\n              fragment = refid\n            };\n            if ($truthy(target)) {\n              \n              refid = fragment;\n              if ($truthy(($truthy($c = self.$logger()['$info?']()) ? doc.$catalog()['$[]'](\"refs\")['$[]'](refid)['$!']() : $c))) {\n                self.$logger().$info(\"\" + \"possible invalid reference: \" + (refid))};\n            } else if ($truthy(path)) {\n              if ($truthy(($truthy($c = src2src) ? ($truthy($d = doc.$attributes()['$[]'](\"docname\")['$=='](path)) ? $d : doc.$catalog()['$[]'](\"includes\")['$[]'](path)) : $c))) {\n                if ($truthy(fragment)) {\n                  \n                  $c = [fragment, nil, \"\" + \"#\" + (fragment)], (refid = $c[0]), (path = $c[1]), (target = $c[2]), $c;\n                  if ($truthy(($truthy($c = self.$logger()['$info?']()) ? doc.$catalog()['$[]'](\"refs\")['$[]'](refid)['$!']() : $c))) {\n                    self.$logger().$info(\"\" + \"possible invalid reference: \" + (refid))};\n                } else {\n                  $c = [nil, nil, \"#\"], (refid = $c[0]), (path = $c[1]), (target = $c[2]), $c\n                }\n              } else {\n                \n                $c = [path, \"\" + (($truthy($d = doc.$attributes()['$[]'](\"relfileprefix\")) ? $d : \"\")) + (path) + ((function() {if ($truthy(src2src)) {\n                  \n                  return doc.$attributes().$fetch(\"relfilesuffix\", doc.$outfilesuffix());\n                } else {\n                  return \"\"\n                }; return nil; })())], (refid = $c[0]), (path = $c[1]), $c;\n                if ($truthy(fragment)) {\n                  $c = [\"\" + (refid) + \"#\" + (fragment), \"\" + (path) + \"#\" + (fragment)], (refid = $c[0]), (target = $c[1]), $c\n                } else {\n                  target = path\n                };\n              }\n            } else if ($truthy(($truthy($c = doc.$compat_mode()) ? $c : $$($nesting, 'Compliance').$natural_xrefs()['$!']()))) {\n              \n              $c = [fragment, \"\" + \"#\" + (fragment)], (refid = $c[0]), (target = $c[1]), $c;\n              if ($truthy(($truthy($c = self.$logger()['$info?']()) ? doc.$catalog()['$[]'](\"refs\")['$[]'](refid)['$!']() : $c))) {\n                self.$logger().$info(\"\" + \"possible invalid reference: \" + (refid))};\n            } else if ($truthy(doc.$catalog()['$[]'](\"refs\")['$[]'](fragment))) {\n              $c = [fragment, \"\" + \"#\" + (fragment)], (refid = $c[0]), (target = $c[1]), $c\n            } else if ($truthy(($truthy($c = ($truthy($d = fragment['$include?'](\" \")) ? $d : fragment.$downcase()['$!='](fragment))) ? (refid = doc.$resolve_id(fragment)) : $c))) {\n              $c = [refid, \"\" + \"#\" + (refid)], (fragment = $c[0]), (target = $c[1]), $c\n            } else {\n              \n              $c = [fragment, \"\" + \"#\" + (fragment)], (refid = $c[0]), (target = $c[1]), $c;\n              if ($truthy(self.$logger()['$info?']())) {\n                self.$logger().$info(\"\" + \"possible invalid reference: \" + (refid))};\n            };\n            \n            $writer = [\"path\", path];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"fragment\", fragment];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"refid\", refid];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return $$($nesting, 'Inline').$new(self, \"anchor\", link_text, $hash2([\"type\", \"target\", \"attributes\"], {\"type\": \"xref\", \"target\": target, \"attributes\": attrs})).$convert();}, $$39.$$s = self, $$39.$$arity = 0, $$39))};\n        if ($truthy(($truthy($a = found_macroish) ? text['$include?'](\"tnote\") : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineFootnoteMacroRx')], ($$40 = function(){var self = $$40.$$s || this, $c, $d, $e, $$41, id = nil, content = nil, footnote = nil, index = nil, type = nil, target = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](1)))) {\n              if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))) {\n                \n                $d = (($e = $gvars['~']) === nil ? nil : $e['$[]'](3)).$split(\",\", 2), $c = Opal.to_ary($d), (id = ($c[0] == null ? nil : $c[0])), (content = ($c[1] == null ? nil : $c[1])), $d;\n                if ($truthy(doc.$compat_mode())) {\n                } else {\n                  self.$logger().$warn(\"\" + \"found deprecated footnoteref macro: \" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))) + \"; use footnote macro with target instead\")\n                };\n              } else {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));\n              }\n            } else {\n              \n              id = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2));\n              content = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3));\n            };\n            if ($truthy(id)) {\n              if ($truthy((footnote = $send(doc.$footnotes(), 'find', [], ($$41 = function(candidate){var self = $$41.$$s || this;\n\n              \n                \n                if (candidate == null) {\n                  candidate = nil;\n                };\n                return candidate.$id()['$=='](id);}, $$41.$$s = self, $$41.$$arity = 1, $$41))))) {\n                \n                $c = [footnote.$index(), footnote.$text()], (index = $c[0]), (content = $c[1]), $c;\n                $c = [\"xref\", id, nil], (type = $c[0]), (target = $c[1]), (id = $c[2]), $c;\n              } else if ($truthy(content)) {\n                \n                content = self.$restore_passthroughs(self.$normalize_text(content, true, true));\n                index = doc.$counter(\"footnote-number\");\n                doc.$register(\"footnotes\", $$$($$($nesting, 'Document'), 'Footnote').$new(index, id, content));\n                $c = [\"ref\", nil], (type = $c[0]), (target = $c[1]), $c;\n              } else {\n                \n                self.$logger().$warn(\"\" + \"invalid footnote reference: \" + (id));\n                $c = [\"xref\", id, id, nil], (type = $c[0]), (target = $c[1]), (content = $c[2]), (id = $c[3]), $c;\n              }\n            } else if ($truthy(content)) {\n              \n              content = self.$restore_passthroughs(self.$normalize_text(content, true, true));\n              index = doc.$counter(\"footnote-number\");\n              doc.$register(\"footnotes\", $$$($$($nesting, 'Document'), 'Footnote').$new(index, id, content));\n              type = (target = nil);\n            } else {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0));\n            };\n            return $$($nesting, 'Inline').$new(self, \"footnote\", content, $hash2([\"attributes\", \"id\", \"target\", \"type\"], {\"attributes\": $hash2([\"index\"], {\"index\": index}), \"id\": id, \"target\": target, \"type\": type})).$convert();}, $$40.$$s = self, $$40.$$arity = 0, $$40))};\n        return text;\n      }, $Substitutors_sub_macros$19.$$arity = 1);\n      \n      Opal.def(self, '$sub_post_replacements', $Substitutors_sub_post_replacements$42 = function $$sub_post_replacements(text) {\n        var $a, $$43, $$44, self = this, lines = nil, last = nil;\n        if (self.attributes == null) self.attributes = nil;\n        if (self.document == null) self.document = nil;\n\n        if ($truthy(($truthy($a = self.attributes['$[]'](\"hardbreaks-option\")) ? $a : self.document.$attributes()['$[]'](\"hardbreaks-option\")))) {\n          \n          lines = text.$split($$($nesting, 'LF'), -1);\n          if ($truthy($rb_lt(lines.$size(), 2))) {\n            return text};\n          last = lines.$pop();\n          return $send(lines, 'map', [], ($$43 = function(line){var self = $$43.$$s || this;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            return $$($nesting, 'Inline').$new(self, \"break\", (function() {if ($truthy(line['$end_with?']($$($nesting, 'HARD_LINE_BREAK')))) {\n              \n              return line.$slice(0, $rb_minus(line.$length(), 2));\n            } else {\n              return line\n            }; return nil; })(), $hash2([\"type\"], {\"type\": \"line\"})).$convert();}, $$43.$$s = self, $$43.$$arity = 1, $$43))['$<<'](last).$join($$($nesting, 'LF'));\n        } else if ($truthy(($truthy($a = text['$include?']($$($nesting, 'PLUS'))) ? text['$include?']($$($nesting, 'HARD_LINE_BREAK')) : $a))) {\n          return $send(text, 'gsub', [$$($nesting, 'HardLineBreakRx')], ($$44 = function(){var self = $$44.$$s || this, $b;\n\n          return $$($nesting, 'Inline').$new(self, \"break\", (($b = $gvars['~']) === nil ? nil : $b['$[]'](1)), $hash2([\"type\"], {\"type\": \"line\"})).$convert()}, $$44.$$s = self, $$44.$$arity = 0, $$44))\n        } else {\n          return text\n        }\n      }, $Substitutors_sub_post_replacements$42.$$arity = 1);\n      \n      Opal.def(self, '$sub_source', $Substitutors_sub_source$45 = function $$sub_source(source, process_callouts) {\n        var self = this;\n\n        if ($truthy(process_callouts)) {\n          return self.$sub_callouts(self.$sub_specialchars(source))\n        } else {\n          \n          return self.$sub_specialchars(source);\n        }\n      }, $Substitutors_sub_source$45.$$arity = 2);\n      \n      Opal.def(self, '$sub_callouts', $Substitutors_sub_callouts$46 = function $$sub_callouts(text) {\n        var $$47, self = this, callout_rx = nil, autonum = nil;\n\n        \n        callout_rx = (function() {if ($truthy(self['$attr?'](\"line-comment\"))) {\n          return $$($nesting, 'CalloutSourceRxMap')['$[]'](self.$attr(\"line-comment\"))\n        } else {\n          return $$($nesting, 'CalloutSourceRx')\n        }; return nil; })();\n        autonum = 0;\n        return $send(text, 'gsub', [callout_rx], ($$47 = function(){var self = $$47.$$s || this, $a, $b;\n          if (self.document == null) self.document = nil;\n\n        if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](2)))) {\n            return (($a = $gvars['~']) === nil ? nil : $a['$[]'](0)).$sub($$($nesting, 'RS'), \"\")\n          } else {\n            return $$($nesting, 'Inline').$new(self, \"callout\", (function() {if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](4))['$=='](\".\")) {\n              return (autonum = $rb_plus(autonum, 1)).$to_s()\n            } else {\n              return (($a = $gvars['~']) === nil ? nil : $a['$[]'](4))\n            }; return nil; })(), $hash2([\"id\", \"attributes\"], {\"id\": self.document.$callouts().$read_next_id(), \"attributes\": $hash2([\"guard\"], {\"guard\": ($truthy($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))) ? $a : (function() {if ((($b = $gvars['~']) === nil ? nil : $b['$[]'](3))['$=='](\"--\")) {\n              return [\"<!--\", \"-->\"]\n            } else {\n              return nil\n            }; return nil; })())})})).$convert()\n          }}, $$47.$$s = self, $$47.$$arity = 0, $$47));\n      }, $Substitutors_sub_callouts$46.$$arity = 1);\n      \n      Opal.def(self, '$highlight_source', $Substitutors_highlight_source$48 = function $$highlight_source(source, process_callouts) {\n        var $a, $b, $c, self = this, syntax_hl = nil, callout_marks = nil, doc_attrs = nil, syntax_hl_name = nil, linenums_mode = nil, start_line_number = nil, highlight_lines = nil, highlighted = nil, source_offset = nil;\n        if (self.document == null) self.document = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n\n        \n        if ($truthy(($truthy($a = (syntax_hl = self.document.$syntax_highlighter())) ? syntax_hl['$highlight?']() : $a))) {\n        } else {\n          return self.$sub_source(source, process_callouts)\n        };\n        if ($truthy(process_callouts)) {\n          $b = self.$extract_callouts(source), $a = Opal.to_ary($b), (source = ($a[0] == null ? nil : $a[0])), (callout_marks = ($a[1] == null ? nil : $a[1])), $b};\n        doc_attrs = self.document.$attributes();\n        syntax_hl_name = syntax_hl.$name();\n        if ($truthy(($truthy($a = (linenums_mode = (function() {if ($truthy(self['$attr?'](\"linenums\"))) {\n          return ($truthy($b = doc_attrs['$[]'](\"\" + (syntax_hl_name) + \"-linenums-mode\")) ? $b : \"table\").$to_sym()\n        } else {\n          return nil\n        }; return nil; })())) ? $rb_lt((start_line_number = self.$attr(\"start\", 1).$to_i()), 1) : $a))) {\n          start_line_number = 1};\n        if ($truthy(self['$attr?'](\"highlight\"))) {\n          highlight_lines = self.$resolve_lines_to_highlight(source, self.$attr(\"highlight\"), start_line_number)};\n        $b = syntax_hl.$highlight(self, source, self.$attr(\"language\"), $hash2([\"callouts\", \"css_mode\", \"highlight_lines\", \"number_lines\", \"start_line_number\", \"style\"], {\"callouts\": callout_marks, \"css_mode\": ($truthy($c = doc_attrs['$[]'](\"\" + (syntax_hl_name) + \"-css\")) ? $c : \"class\").$to_sym(), \"highlight_lines\": highlight_lines, \"number_lines\": linenums_mode, \"start_line_number\": start_line_number, \"style\": doc_attrs['$[]'](\"\" + (syntax_hl_name) + \"-style\")})), $a = Opal.to_ary($b), (highlighted = ($a[0] == null ? nil : $a[0])), (source_offset = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy(self.passthroughs['$empty?']())) {\n        } else {\n          highlighted = highlighted.$gsub($$($nesting, 'HighlightedPassSlotRx'), \"\" + ($$($nesting, 'PASS_START')) + \"\\\\1\" + ($$($nesting, 'PASS_END')))\n        };\n        if ($truthy(callout_marks['$nil_or_empty?']())) {\n          return highlighted\n        } else {\n          \n          return self.$restore_callouts(highlighted, callout_marks, source_offset);\n        };\n      }, $Substitutors_highlight_source$48.$$arity = 2);\n      \n      Opal.def(self, '$resolve_lines_to_highlight', $Substitutors_resolve_lines_to_highlight$49 = function $$resolve_lines_to_highlight(source, spec, start) {\n        var $$50, $$51, self = this, lines = nil, shift = nil;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        lines = [];\n        if ($truthy(spec['$include?'](\" \"))) {\n          spec = spec.$delete(\" \")};\n        $send((function() {if ($truthy(spec['$include?'](\",\"))) {\n          \n          return spec.$split(\",\");\n        } else {\n          \n          return spec.$split(\";\");\n        }; return nil; })(), 'map', [], ($$50 = function(entry){var self = $$50.$$s || this, $a, $b, negate = nil, delim = nil, from = nil, _ = nil, to = nil, line = nil;\n\n        \n          \n          if (entry == null) {\n            entry = nil;\n          };\n          if ($truthy(entry['$start_with?'](\"!\"))) {\n            \n            entry = entry.$slice(1, entry.$length());\n            negate = true;};\n          if ($truthy((delim = (function() {if ($truthy(entry['$include?'](\"..\"))) {\n            return \"..\"\n          } else {\n            \n            if ($truthy(entry['$include?'](\"-\"))) {\n              return \"-\"\n            } else {\n              return nil\n            };\n          }; return nil; })()))) {\n            \n            $b = entry.$partition(delim), $a = Opal.to_ary($b), (from = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (to = ($a[2] == null ? nil : $a[2])), $b;\n            if ($truthy(($truthy($a = to['$empty?']()) ? $a : $rb_lt((to = to.$to_i()), 0)))) {\n              to = $rb_plus(source.$count($$($nesting, 'LF')), 1)};\n            if ($truthy(negate)) {\n              return (lines = $rb_minus(lines, Opal.Range.$new(from.$to_i(), to, false).$to_a()))\n            } else {\n              return (lines = lines['$|'](Opal.Range.$new(from.$to_i(), to, false).$to_a()))\n            };\n          } else if ($truthy(negate)) {\n            return lines.$delete(entry.$to_i())\n          } else if ($truthy(lines['$include?']((line = entry.$to_i()))['$!']())) {\n            return lines['$<<'](line)\n          } else {\n            return nil\n          };}, $$50.$$s = self, $$50.$$arity = 1, $$50));\n        if ((shift = (function() {if ($truthy(start)) {\n          return $rb_minus(start, 1)\n        } else {\n          return 0\n        }; return nil; })())['$=='](0)) {\n        } else {\n          lines = $send(lines, 'map', [], ($$51 = function(it){var self = $$51.$$s || this;\n\n          \n            \n            if (it == null) {\n              it = nil;\n            };\n            return $rb_minus(it, shift);}, $$51.$$s = self, $$51.$$arity = 1, $$51))\n        };\n        return lines.$sort();\n      }, $Substitutors_resolve_lines_to_highlight$49.$$arity = -3);\n      \n      Opal.def(self, '$extract_passthroughs', $Substitutors_extract_passthroughs$52 = function $$extract_passthroughs(text) {\n        var $a, $b, $$53, $$54, $$55, self = this, compat_mode = nil, passthrus = nil, pass_inline_char1 = nil, pass_inline_char2 = nil, pass_inline_rx = nil;\n        if (self.document == null) self.document = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n\n        \n        compat_mode = self.document.$compat_mode();\n        passthrus = self.passthroughs;\n        if ($truthy(($truthy($a = ($truthy($b = text['$include?'](\"++\")) ? $b : text['$include?'](\"$$\"))) ? $a : text['$include?'](\"ss:\")))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlinePassMacroRx')], ($$53 = function(){var self = $$53.$$s || this, $c, boundary = nil, attrlist = nil, escape_count = nil, preceding = nil, old_behavior = nil, attributes = nil, subs = nil, $writer = nil, passthru_key = nil;\n\n          \n            if ($truthy((boundary = (($c = $gvars['~']) === nil ? nil : $c['$[]'](4))))) {\n              \n              if ($truthy(($truthy($c = compat_mode) ? boundary['$=='](\"++\") : $c))) {\n                return \"\" + ((function() {if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](2)))) {\n                  return \"\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + \"[\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](2))) + \"]\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))\n                } else {\n                  return \"\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))\n                }; return nil; })()) + \"++\" + (self.$extract_passthroughs((($c = $gvars['~']) === nil ? nil : $c['$[]'](5)))) + \"++\";};\n              if ($truthy((attrlist = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2))))) {\n                if ($truthy($rb_gt((escape_count = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)).$length()), 0))) {\n                  return \"\" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + \"[\" + (attrlist) + \"]\" + ($rb_times($$($nesting, 'RS'), $rb_minus(escape_count, 1))) + (boundary) + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](5))) + (boundary);\n                } else if ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))['$==']($$($nesting, 'RS'))) {\n                  preceding = \"\" + \"[\" + (attrlist) + \"]\"\n                } else {\n                  \n                  if ($truthy((($c = boundary['$=='](\"++\")) ? attrlist['$end_with?'](\"x-\") : boundary['$=='](\"++\")))) {\n                    \n                    old_behavior = true;\n                    attrlist = attrlist.$slice(0, $rb_minus(attrlist.$length(), 2));};\n                  attributes = self.$parse_quoted_text_attributes(attrlist);\n                }\n              } else if ($truthy($rb_gt((escape_count = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)).$length()), 0))) {\n                return \"\" + ($rb_times($$($nesting, 'RS'), $rb_minus(escape_count, 1))) + (boundary) + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](5))) + (boundary);};\n              subs = (function() {if (boundary['$=='](\"+++\")) {\n                return []\n              } else {\n                return $$($nesting, 'BASIC_SUBS')\n              }; return nil; })();\n              if ($truthy(attributes)) {\n                if ($truthy(old_behavior)) {\n                  \n                  $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"type\", \"attributes\"], {\"text\": (($c = $gvars['~']) === nil ? nil : $c['$[]'](5)), \"subs\": $$($nesting, 'NORMAL_SUBS'), \"type\": \"monospaced\", \"attributes\": attributes})];\n                  $send(passthrus, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];\n                } else {\n                  \n                  $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"type\", \"attributes\"], {\"text\": (($c = $gvars['~']) === nil ? nil : $c['$[]'](5)), \"subs\": subs, \"type\": \"unquoted\", \"attributes\": attributes})];\n                  $send(passthrus, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];\n                }\n              } else {\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\"], {\"text\": (($c = $gvars['~']) === nil ? nil : $c['$[]'](5)), \"subs\": subs})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n            } else {\n              \n              if ((($c = $gvars['~']) === nil ? nil : $c['$[]'](6))['$==']($$($nesting, 'RS'))) {\n                return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n              if ($truthy((subs = (($c = $gvars['~']) === nil ? nil : $c['$[]'](7))))) {\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\"], {\"text\": self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](8)), nil, true), \"subs\": self.$resolve_pass_subs(subs)})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              } else {\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\"], {\"text\": self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](8)), nil, true)})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n            };\n            return \"\" + (($truthy($c = preceding) ? $c : \"\")) + ($$($nesting, 'PASS_START')) + (passthru_key) + ($$($nesting, 'PASS_END'));}, $$53.$$s = self, $$53.$$arity = 0, $$53))};\n        $b = $$($nesting, 'InlinePassRx')['$[]'](compat_mode), $a = Opal.to_ary($b), (pass_inline_char1 = ($a[0] == null ? nil : $a[0])), (pass_inline_char2 = ($a[1] == null ? nil : $a[1])), (pass_inline_rx = ($a[2] == null ? nil : $a[2])), $b;\n        if ($truthy(($truthy($a = text['$include?'](pass_inline_char1)) ? $a : ($truthy($b = pass_inline_char2) ? text['$include?'](pass_inline_char2) : $b)))) {\n          text = $send(text, 'gsub', [pass_inline_rx], ($$54 = function(){var self = $$54.$$s || this, $c, preceding = nil, attrlist = nil, quoted_text = nil, escape_mark = nil, format_mark = nil, content = nil, old_behavior = nil, attributes = nil, $writer = nil, passthru_key = nil, subs = nil;\n\n          \n            preceding = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1));\n            attrlist = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2));\n            if ($truthy((quoted_text = (($c = $gvars['~']) === nil ? nil : $c['$[]'](3)))['$start_with?']($$($nesting, 'RS')))) {\n              escape_mark = $$($nesting, 'RS')};\n            format_mark = (($c = $gvars['~']) === nil ? nil : $c['$[]'](4));\n            content = (($c = $gvars['~']) === nil ? nil : $c['$[]'](5));\n            if ($truthy(compat_mode)) {\n              old_behavior = true\n            } else if ($truthy((old_behavior = ($truthy($c = attrlist) ? attrlist['$end_with?'](\"x-\") : $c)))) {\n              attrlist = attrlist.$slice(0, $rb_minus(attrlist.$length(), 2))};\n            if ($truthy(attrlist)) {\n              if ($truthy((($c = format_mark['$=='](\"`\")) ? old_behavior['$!']() : format_mark['$=='](\"`\")))) {\n                return self.$extract_inner_passthrough(content, \"\" + (preceding) + \"[\" + (attrlist) + \"]\" + (escape_mark));\n              } else if ($truthy(escape_mark)) {\n                return \"\" + (preceding) + \"[\" + (attrlist) + \"]\" + (quoted_text.$slice(1, quoted_text.$length()));\n              } else if (preceding['$==']($$($nesting, 'RS'))) {\n                preceding = \"\" + \"[\" + (attrlist) + \"]\"\n              } else {\n                attributes = self.$parse_quoted_text_attributes(attrlist)\n              }\n            } else if ($truthy((($c = format_mark['$=='](\"`\")) ? old_behavior['$!']() : format_mark['$=='](\"`\")))) {\n              return self.$extract_inner_passthrough(content, \"\" + (preceding) + (escape_mark));\n            } else if ($truthy(escape_mark)) {\n              return \"\" + (preceding) + (quoted_text.$slice(1, quoted_text.$length()));};\n            if ($truthy(compat_mode)) {\n              \n              $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"attributes\", \"type\"], {\"text\": content, \"subs\": $$($nesting, 'BASIC_SUBS'), \"attributes\": attributes, \"type\": \"monospaced\"})];\n              $send(passthrus, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else if ($truthy(attributes)) {\n              if ($truthy(old_behavior)) {\n                \n                subs = (function() {if (format_mark['$=='](\"`\")) {\n                  return $$($nesting, 'BASIC_SUBS')\n                } else {\n                  return $$($nesting, 'NORMAL_SUBS')\n                }; return nil; })();\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"attributes\", \"type\"], {\"text\": content, \"subs\": subs, \"attributes\": attributes, \"type\": \"monospaced\"})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n              } else {\n                \n                $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"attributes\", \"type\"], {\"text\": content, \"subs\": $$($nesting, 'BASIC_SUBS'), \"attributes\": attributes, \"type\": \"unquoted\"})];\n                $send(passthrus, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              }\n            } else {\n              \n              $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\"], {\"text\": content, \"subs\": $$($nesting, 'BASIC_SUBS')})];\n              $send(passthrus, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            return \"\" + (preceding) + ($$($nesting, 'PASS_START')) + (passthru_key) + ($$($nesting, 'PASS_END'));}, $$54.$$s = self, $$54.$$arity = 0, $$54))};\n        if ($truthy(($truthy($a = text['$include?'](\":\")) ? ($truthy($b = text['$include?'](\"stem:\")) ? $b : text['$include?'](\"math:\")) : $a))) {\n          text = $send(text, 'gsub', [$$($nesting, 'InlineStemMacroRx')], ($$55 = function(){var self = $$55.$$s || this, $c, $d, type = nil, subs = nil, content = nil, $writer = nil, passthru_key = nil;\n            if (self.document == null) self.document = nil;\n\n          \n            if ($truthy((($c = $gvars['~']) === nil ? nil : $c['$[]'](0))['$start_with?']($$($nesting, 'RS')))) {\n              return (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$slice(1, (($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$length());};\n            if ((type = (($c = $gvars['~']) === nil ? nil : $c['$[]'](1)).$to_sym())['$=='](\"stem\")) {\n              type = $$($nesting, 'STEM_TYPE_ALIASES')['$[]'](self.document.$attributes()['$[]'](\"stem\")).$to_sym()};\n            subs = (($c = $gvars['~']) === nil ? nil : $c['$[]'](2));\n            content = self.$normalize_text((($c = $gvars['~']) === nil ? nil : $c['$[]'](3)), nil, true);\n            if ($truthy(($truthy($c = (($d = type['$=='](\"latexmath\")) ? content['$start_with?'](\"$\") : type['$=='](\"latexmath\"))) ? content['$end_with?'](\"$\") : $c))) {\n              content = content.$slice(1, $rb_minus(content.$length(), 2))};\n            subs = (function() {if ($truthy(subs)) {\n              \n              return self.$resolve_pass_subs(subs);\n            } else {\n              \n              if ($truthy(self.document['$basebackend?'](\"html\"))) {\n                return $$($nesting, 'BASIC_SUBS')\n              } else {\n                return nil\n              };\n            }; return nil; })();\n            \n            $writer = [(passthru_key = passthrus.$size()), $hash2([\"text\", \"subs\", \"type\"], {\"text\": content, \"subs\": subs, \"type\": type})];\n            $send(passthrus, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return \"\" + ($$($nesting, 'PASS_START')) + (passthru_key) + ($$($nesting, 'PASS_END'));}, $$55.$$s = self, $$55.$$arity = 0, $$55))};\n        return text;\n      }, $Substitutors_extract_passthroughs$52.$$arity = 1);\n      \n      Opal.def(self, '$restore_passthroughs', $Substitutors_restore_passthroughs$56 = function $$restore_passthroughs(text) {\n        var $$57, self = this, passthrus = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n\n        \n        passthrus = self.passthroughs;\n        return $send(text, 'gsub', [$$($nesting, 'PassSlotRx')], ($$57 = function(){var self = $$57.$$s || this, $a, pass = nil, subbed_text = nil, type = nil, attributes = nil, id = nil;\n\n        if ($truthy((pass = passthrus['$[]']((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)).$to_i())))) {\n            \n            subbed_text = self.$apply_subs(pass['$[]'](\"text\"), pass['$[]'](\"subs\"));\n            if ($truthy((type = pass['$[]'](\"type\")))) {\n              \n              if ($truthy((attributes = pass['$[]'](\"attributes\")))) {\n                id = attributes['$[]'](\"id\")};\n              subbed_text = $$($nesting, 'Inline').$new(self, \"quoted\", subbed_text, $hash2([\"type\", \"id\", \"attributes\"], {\"type\": type, \"id\": id, \"attributes\": attributes})).$convert();};\n            if ($truthy(subbed_text['$include?']($$($nesting, 'PASS_START')))) {\n              return self.$restore_passthroughs(subbed_text)\n            } else {\n              return subbed_text\n            };\n          } else {\n            \n            self.$logger().$error(\"\" + \"unresolved passthrough detected: \" + (text));\n            return \"??pass??\";\n          }}, $$57.$$s = self, $$57.$$arity = 0, $$57));\n      }, $Substitutors_restore_passthroughs$56.$$arity = 1);\n      \n      Opal.def(self, '$resolve_subs', $Substitutors_resolve_subs$58 = function $$resolve_subs(subs, type, defaults, subject) {\n        var $$59, self = this, candidates = nil, modifiers_present = nil, resolved = nil, invalid = nil;\n\n        \n        \n        if (type == null) {\n          type = \"block\";\n        };\n        \n        if (defaults == null) {\n          defaults = nil;\n        };\n        \n        if (subject == null) {\n          subject = nil;\n        };\n        if ($truthy(subs['$nil_or_empty?']())) {\n          return nil};\n        candidates = nil;\n        if ($truthy(subs['$include?'](\" \"))) {\n          subs = subs.$delete(\" \")};\n        modifiers_present = $$($nesting, 'SubModifierSniffRx')['$match?'](subs);\n        $send(subs.$split(\",\"), 'each', [], ($$59 = function(key){var self = $$59.$$s || this, $a, $b, modifier_operation = nil, first = nil, resolved_keys = nil, resolved_key = nil, candidate = nil, $case = nil;\n\n        \n          \n          if (key == null) {\n            key = nil;\n          };\n          modifier_operation = nil;\n          if ($truthy(modifiers_present)) {\n            if ((first = key.$chr())['$=='](\"+\")) {\n              \n              modifier_operation = \"append\";\n              key = key.$slice(1, key.$length());\n            } else if (first['$=='](\"-\")) {\n              \n              modifier_operation = \"remove\";\n              key = key.$slice(1, key.$length());\n            } else if ($truthy(key['$end_with?'](\"+\"))) {\n              \n              modifier_operation = \"prepend\";\n              key = key.$chop();}};\n          key = key.$to_sym();\n          if ($truthy((($a = type['$=='](\"inline\")) ? ($truthy($b = key['$=='](\"verbatim\")) ? $b : key['$=='](\"v\")) : type['$=='](\"inline\")))) {\n            resolved_keys = $$($nesting, 'BASIC_SUBS')\n          } else if ($truthy($$($nesting, 'SUB_GROUPS')['$key?'](key))) {\n            resolved_keys = $$($nesting, 'SUB_GROUPS')['$[]'](key)\n          } else if ($truthy(($truthy($a = (($b = type['$=='](\"inline\")) ? key.$length()['$=='](1) : type['$=='](\"inline\"))) ? $$($nesting, 'SUB_HINTS')['$key?'](key) : $a))) {\n            \n            resolved_key = $$($nesting, 'SUB_HINTS')['$[]'](key);\n            if ($truthy((candidate = $$($nesting, 'SUB_GROUPS')['$[]'](resolved_key)))) {\n              resolved_keys = candidate\n            } else {\n              resolved_keys = [resolved_key]\n            };\n          } else {\n            resolved_keys = [key]\n          };\n          if ($truthy(modifier_operation)) {\n            \n            candidates = ($truthy($a = candidates) ? $a : (function() {if ($truthy(defaults)) {\n              \n              return defaults.$drop(0);\n            } else {\n              return []\n            }; return nil; })());\n            return (function() {$case = modifier_operation;\n            if (\"append\"['$===']($case)) {return (candidates = $rb_plus(candidates, resolved_keys))}\n            else if (\"prepend\"['$===']($case)) {return (candidates = $rb_plus(resolved_keys, candidates))}\n            else if (\"remove\"['$===']($case)) {return (candidates = $rb_minus(candidates, resolved_keys))}\n            else { return nil }})();\n          } else {\n            \n            candidates = ($truthy($a = candidates) ? $a : []);\n            return (candidates = $rb_plus(candidates, resolved_keys));\n          };}, $$59.$$s = self, $$59.$$arity = 1, $$59));\n        if ($truthy(candidates)) {\n        } else {\n          return nil\n        };\n        resolved = candidates['$&']($$($nesting, 'SUB_OPTIONS')['$[]'](type));\n        if ($truthy($rb_minus(candidates, resolved)['$empty?']())) {\n        } else {\n          \n          invalid = $rb_minus(candidates, resolved);\n          self.$logger().$warn(\"\" + \"invalid substitution type\" + ((function() {if ($truthy($rb_gt(invalid.$size(), 1))) {\n            return \"s\"\n          } else {\n            return \"\"\n          }; return nil; })()) + ((function() {if ($truthy(subject)) {\n            return \" for \"\n          } else {\n            return \"\"\n          }; return nil; })()) + (subject) + \": \" + (invalid.$join(\", \")));\n        };\n        return resolved;\n      }, $Substitutors_resolve_subs$58.$$arity = -2);\n      \n      Opal.def(self, '$resolve_block_subs', $Substitutors_resolve_block_subs$60 = function $$resolve_block_subs(subs, defaults, subject) {\n        var self = this;\n\n        return self.$resolve_subs(subs, \"block\", defaults, subject)\n      }, $Substitutors_resolve_block_subs$60.$$arity = 3);\n      \n      Opal.def(self, '$resolve_pass_subs', $Substitutors_resolve_pass_subs$61 = function $$resolve_pass_subs(subs) {\n        var self = this;\n\n        return self.$resolve_subs(subs, \"inline\", nil, \"passthrough macro\")\n      }, $Substitutors_resolve_pass_subs$61.$$arity = 1);\n      \n      Opal.def(self, '$expand_subs', $Substitutors_expand_subs$62 = function $$expand_subs(subs, subject) {\n        var $a, $$63, self = this, $case = nil, expanded_subs = nil;\n\n        \n        \n        if (subject == null) {\n          subject = nil;\n        };\n        return (function() {$case = subs;\n        if ($$$('::', 'Symbol')['$===']($case)) {if (subs['$=='](\"none\")) {\n          return nil\n        } else {\n          return ($truthy($a = $$($nesting, 'SUB_GROUPS')['$[]'](subs)) ? $a : [subs])\n        }}\n        else if ($$$('::', 'Array')['$===']($case)) {\n        expanded_subs = [];\n        $send(subs, 'each', [], ($$63 = function(key){var self = $$63.$$s || this, sub_group = nil;\n\n        \n          \n          if (key == null) {\n            key = nil;\n          };\n          if (key['$=='](\"none\")) {\n            return nil\n          } else if ($truthy((sub_group = $$($nesting, 'SUB_GROUPS')['$[]'](key)))) {\n            return (expanded_subs = $rb_plus(expanded_subs, sub_group))\n          } else {\n            return expanded_subs['$<<'](key)\n          };}, $$63.$$s = self, $$63.$$arity = 1, $$63));\n        if ($truthy(expanded_subs['$empty?']())) {\n          return nil\n        } else {\n          return expanded_subs\n        };}\n        else {return self.$resolve_subs(subs, \"inline\", nil, subject)}})();\n      }, $Substitutors_expand_subs$62.$$arity = -2);\n      \n      Opal.def(self, '$commit_subs', $Substitutors_commit_subs$64 = function $$commit_subs() {\n        var $a, $b, $c, $d, self = this, default_subs = nil, $case = nil, custom_subs = nil, syntax_hl = nil, idx = nil, $writer = nil;\n        if (self.default_subs == null) self.default_subs = nil;\n        if (self.content_model == null) self.content_model = nil;\n        if (self.context == null) self.context = nil;\n        if (self.subs == null) self.subs = nil;\n        if (self.attributes == null) self.attributes = nil;\n        if (self.style == null) self.style = nil;\n        if (self.document == null) self.document = nil;\n\n        \n        if ($truthy((default_subs = self.default_subs))) {\n        } else {\n          $case = self.content_model;\n          if (\"simple\"['$===']($case)) {default_subs = $$($nesting, 'NORMAL_SUBS')}\n          else if (\"verbatim\"['$===']($case)) {default_subs = (function() {if (self.context['$=='](\"verse\")) {\n            return $$($nesting, 'NORMAL_SUBS')\n          } else {\n            return $$($nesting, 'VERBATIM_SUBS')\n          }; return nil; })()}\n          else if (\"raw\"['$===']($case)) {default_subs = (function() {if (self.context['$=='](\"stem\")) {\n            return $$($nesting, 'BASIC_SUBS')\n          } else {\n            return $$($nesting, 'NO_SUBS')\n          }; return nil; })()}\n          else {return self.subs}\n        };\n        if ($truthy((custom_subs = self.attributes['$[]'](\"subs\")))) {\n          self.subs = ($truthy($a = self.$resolve_block_subs(custom_subs, default_subs, self.context)) ? $a : [])\n        } else {\n          self.subs = default_subs.$drop(0)\n        };\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = (($d = self.context['$=='](\"listing\")) ? self.style['$=='](\"source\") : self.context['$=='](\"listing\"))) ? (syntax_hl = self.document.$syntax_highlighter()) : $c)) ? syntax_hl['$highlight?']() : $b)) ? (idx = self.subs.$index(\"specialcharacters\")) : $a))) {\n          \n          $writer = [idx, \"highlight\"];\n          $send(self.subs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        return nil;\n      }, $Substitutors_commit_subs$64.$$arity = 0);\n      \n      Opal.def(self, '$parse_attributes', $Substitutors_parse_attributes$65 = function $$parse_attributes(attrlist, posattrs, opts) {\n        var $a, self = this, block = nil, into = nil;\n        if (self.document == null) self.document = nil;\n\n        \n        \n        if (posattrs == null) {\n          posattrs = [];\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy((function() {if ($truthy(attrlist)) {\n          return attrlist['$empty?']()\n        } else {\n          return true\n        }; return nil; })())) {\n          return $hash2([], {})};\n        if ($truthy(opts['$[]'](\"unescape_input\"))) {\n          attrlist = self.$normalize_text(attrlist, true, true)};\n        if ($truthy(($truthy($a = opts['$[]'](\"sub_input\")) ? attrlist['$include?']($$($nesting, 'ATTR_REF_HEAD')) : $a))) {\n          attrlist = self.document.$sub_attributes(attrlist)};\n        if ($truthy(opts['$[]'](\"sub_result\"))) {\n          block = self};\n        if ($truthy((into = opts['$[]'](\"into\")))) {\n          return $$($nesting, 'AttributeList').$new(attrlist, block).$parse_into(into, posattrs)\n        } else {\n          return $$($nesting, 'AttributeList').$new(attrlist, block).$parse(posattrs)\n        };\n      }, $Substitutors_parse_attributes$65.$$arity = -2);\n      self.$private();\n      \n      Opal.def(self, '$extract_attributes_from_text', $Substitutors_extract_attributes_from_text$66 = function $$extract_attributes_from_text(text, default_text) {\n        var self = this, attrlist = nil, resolved_text = nil, attrs = nil;\n\n        \n        \n        if (default_text == null) {\n          default_text = nil;\n        };\n        attrlist = (function() {if ($truthy(text['$include?']($$($nesting, 'LF')))) {\n          \n          return text.$tr($$($nesting, 'LF'), \" \");\n        } else {\n          return text\n        }; return nil; })();\n        if ($truthy((resolved_text = (attrs = $$($nesting, 'AttributeList').$new(attrlist, self).$parse())['$[]'](1)))) {\n          if (resolved_text['$=='](attrlist)) {\n            return [text, attrs.$clear()]\n          } else {\n            return [resolved_text, attrs]\n          }\n        } else {\n          return [default_text, attrs]\n        };\n      }, $Substitutors_extract_attributes_from_text$66.$$arity = -2);\n      \n      Opal.def(self, '$extract_callouts', $Substitutors_extract_callouts$67 = function $$extract_callouts(source) {\n        var $$68, self = this, callout_marks = nil, autonum = nil, lineno = nil, last_lineno = nil, callout_rx = nil;\n\n        \n        callout_marks = $hash2([], {});\n        autonum = (lineno = 0);\n        last_lineno = nil;\n        callout_rx = (function() {if ($truthy(self['$attr?'](\"line-comment\"))) {\n          return $$($nesting, 'CalloutExtractRxMap')['$[]'](self.$attr(\"line-comment\"))\n        } else {\n          return $$($nesting, 'CalloutExtractRx')\n        }; return nil; })();\n        source = $send(source.$split($$($nesting, 'LF'), -1), 'map', [], ($$68 = function(line){var self = $$68.$$s || this, $$69;\n\n        \n          \n          if (line == null) {\n            line = nil;\n          };\n          lineno = $rb_plus(lineno, 1);\n          return $send(line, 'gsub', [callout_rx], ($$69 = function(){var self = $$69.$$s || this, $a, $b, $writer = nil;\n\n          if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](2)))) {\n              return (($a = $gvars['~']) === nil ? nil : $a['$[]'](0)).$sub($$($nesting, 'RS'), \"\")\n            } else {\n              \n              ($truthy($a = callout_marks['$[]'](lineno)) ? $a : (($writer = [lineno, []]), $send(callout_marks, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$<<']([($truthy($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))) ? $a : (function() {if ((($b = $gvars['~']) === nil ? nil : $b['$[]'](3))['$=='](\"--\")) {\n                return [\"<!--\", \"-->\"]\n              } else {\n                return nil\n              }; return nil; })()), (function() {if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](4))['$=='](\".\")) {\n                return (autonum = $rb_plus(autonum, 1)).$to_s()\n              } else {\n                return (($a = $gvars['~']) === nil ? nil : $a['$[]'](4))\n              }; return nil; })()]);\n              last_lineno = lineno;\n              return \"\";\n            }}, $$69.$$s = self, $$69.$$arity = 0, $$69));}, $$68.$$s = self, $$68.$$arity = 1, $$68)).$join($$($nesting, 'LF'));\n        if ($truthy(last_lineno)) {\n          if (last_lineno['$=='](lineno)) {\n            source = \"\" + (source) + ($$($nesting, 'LF'))}\n        } else {\n          callout_marks = nil\n        };\n        return [source, callout_marks];\n      }, $Substitutors_extract_callouts$67.$$arity = 1);\n      \n      Opal.def(self, '$restore_callouts', $Substitutors_restore_callouts$70 = function $$restore_callouts(source, callout_marks, source_offset) {\n        var $$71, self = this, preamble = nil, lineno = nil;\n\n        \n        \n        if (source_offset == null) {\n          source_offset = nil;\n        };\n        if ($truthy(source_offset)) {\n          \n          preamble = source.$slice(0, source_offset);\n          source = source.$slice(source_offset, source.$length());\n        } else {\n          preamble = \"\"\n        };\n        lineno = 0;\n        return $rb_plus(preamble, $send(source.$split($$($nesting, 'LF'), -1), 'map', [], ($$71 = function(line){var self = $$71.$$s || this, $a, $b, $$72, conums = nil, guard = nil, numeral = nil;\n          if (self.document == null) self.document = nil;\n\n        \n          \n          if (line == null) {\n            line = nil;\n          };\n          if ($truthy((conums = callout_marks.$delete((lineno = $rb_plus(lineno, 1)))))) {\n            if (conums.$size()['$=='](1)) {\n              \n              $b = conums['$[]'](0), $a = Opal.to_ary($b), (guard = ($a[0] == null ? nil : $a[0])), (numeral = ($a[1] == null ? nil : $a[1])), $b;\n              return \"\" + (line) + ($$($nesting, 'Inline').$new(self, \"callout\", numeral, $hash2([\"id\", \"attributes\"], {\"id\": self.document.$callouts().$read_next_id(), \"attributes\": $hash2([\"guard\"], {\"guard\": guard})})).$convert());\n            } else {\n              return \"\" + (line) + ($send(conums, 'map', [], ($$72 = function(guard_it, numeral_it){var self = $$72.$$s || this;\n                if (self.document == null) self.document = nil;\n\n              \n                \n                if (guard_it == null) {\n                  guard_it = nil;\n                };\n                \n                if (numeral_it == null) {\n                  numeral_it = nil;\n                };\n                return $$($nesting, 'Inline').$new(self, \"callout\", numeral_it, $hash2([\"id\", \"attributes\"], {\"id\": self.document.$callouts().$read_next_id(), \"attributes\": $hash2([\"guard\"], {\"guard\": guard_it})})).$convert();}, $$72.$$s = self, $$72.$$arity = 2, $$72)).$join(\" \"))\n            }\n          } else {\n            return line\n          };}, $$71.$$s = self, $$71.$$arity = 1, $$71)).$join($$($nesting, 'LF')));\n      }, $Substitutors_restore_callouts$70.$$arity = -3);\n      \n      Opal.def(self, '$extract_inner_passthrough', $Substitutors_extract_inner_passthrough$73 = function $$extract_inner_passthrough(text, pre) {\n        var $a, $b, self = this, $writer = nil, passthru_key = nil;\n        if (self.passthroughs == null) self.passthroughs = nil;\n\n        if ($truthy(($truthy($a = ($truthy($b = text['$end_with?'](\"+\")) ? text['$start_with?'](\"+\", \"\\\\+\") : $b)) ? $$($nesting, 'SinglePlusInlinePassRx')['$=~'](text) : $a))) {\n          if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)))) {\n            return \"\" + (pre) + \"`+\" + ((($a = $gvars['~']) === nil ? nil : $a['$[]'](2))) + \"+`\"\n          } else {\n            \n            \n            $writer = [(passthru_key = self.passthroughs.$size()), $hash2([\"text\", \"subs\"], {\"text\": (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), \"subs\": $$($nesting, 'BASIC_SUBS')})];\n            $send(self.passthroughs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return \"\" + (pre) + \"`\" + ($$($nesting, 'PASS_START')) + (passthru_key) + ($$($nesting, 'PASS_END')) + \"`\";\n          }\n        } else {\n          return \"\" + (pre) + \"`\" + (text) + \"`\"\n        }\n      }, $Substitutors_extract_inner_passthrough$73.$$arity = 2);\n      \n      Opal.def(self, '$convert_quoted_text', $Substitutors_convert_quoted_text$74 = function $$convert_quoted_text(match, type, scope) {\n        var $a, self = this, attrs = nil, unescaped_attrs = nil, attrlist = nil, id = nil, attributes = nil;\n\n        \n        if ($truthy(match['$[]'](0)['$start_with?']($$($nesting, 'RS')))) {\n          if ($truthy((($a = scope['$=='](\"constrained\")) ? (attrs = match['$[]'](2)) : scope['$=='](\"constrained\")))) {\n            unescaped_attrs = \"\" + \"[\" + (attrs) + \"]\"\n          } else {\n            return match['$[]'](0).$slice(1, match['$[]'](0).$length())\n          }};\n        if (scope['$=='](\"constrained\")) {\n          if ($truthy(unescaped_attrs)) {\n            return \"\" + (unescaped_attrs) + ($$($nesting, 'Inline').$new(self, \"quoted\", match['$[]'](3), $hash2([\"type\"], {\"type\": type})).$convert())\n          } else {\n            \n            if ($truthy((attrlist = match['$[]'](2)))) {\n              \n              id = (attributes = self.$parse_quoted_text_attributes(attrlist))['$[]'](\"id\");\n              if (type['$=='](\"mark\")) {\n                type = \"unquoted\"};};\n            return \"\" + (match['$[]'](1)) + ($$($nesting, 'Inline').$new(self, \"quoted\", match['$[]'](3), $hash2([\"type\", \"id\", \"attributes\"], {\"type\": type, \"id\": id, \"attributes\": attributes})).$convert());\n          }\n        } else {\n          \n          if ($truthy((attrlist = match['$[]'](1)))) {\n            \n            id = (attributes = self.$parse_quoted_text_attributes(attrlist))['$[]'](\"id\");\n            if (type['$=='](\"mark\")) {\n              type = \"unquoted\"};};\n          return $$($nesting, 'Inline').$new(self, \"quoted\", match['$[]'](2), $hash2([\"type\", \"id\", \"attributes\"], {\"type\": type, \"id\": id, \"attributes\": attributes})).$convert();\n        };\n      }, $Substitutors_convert_quoted_text$74.$$arity = 3);\n      \n      Opal.def(self, '$do_replacement', $Substitutors_do_replacement$75 = function $$do_replacement(m, replacement, restore) {\n        var self = this, captured = nil, $case = nil;\n\n        if ($truthy((captured = m['$[]'](0))['$include?']($$($nesting, 'RS')))) {\n          return captured.$sub($$($nesting, 'RS'), \"\")\n        } else {\n          return (function() {$case = restore;\n          if (\"none\"['$===']($case)) {return replacement}\n          else if (\"bounding\"['$===']($case)) {return $rb_plus($rb_plus(m['$[]'](1), replacement), m['$[]'](2))}\n          else {return $rb_plus(m['$[]'](1), replacement)}})()\n        }\n      }, $Substitutors_do_replacement$75.$$arity = 3);\n      if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n      } else {\n        nil\n      };\n      \n      Opal.def(self, '$parse_quoted_text_attributes', $Substitutors_parse_quoted_text_attributes$76 = function $$parse_quoted_text_attributes(str) {\n        var $a, $b, self = this, before = nil, _ = nil, after = nil, attrs = nil, $writer = nil, id = nil, roles = nil;\n\n        \n        if ($truthy(str['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n          str = self.$sub_attributes(str)};\n        if ($truthy(str['$include?'](\",\"))) {\n          str = str.$slice(0, str.$index(\",\"))};\n        if ($truthy((str = str.$strip())['$empty?']())) {\n          return $hash2([], {})\n        } else if ($truthy(($truthy($a = str['$start_with?'](\".\", \"#\")) ? $$($nesting, 'Compliance').$shorthand_property_syntax() : $a))) {\n          \n          $b = str.$partition(\"#\"), $a = Opal.to_ary($b), (before = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (after = ($a[2] == null ? nil : $a[2])), $b;\n          attrs = $hash2([], {});\n          if ($truthy(after['$empty?']())) {\n            if ($truthy($rb_gt(before.$length(), 1))) {\n              \n              $writer = [\"role\", before.$tr(\".\", \" \").$lstrip()];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];}\n          } else {\n            \n            $b = after.$partition(\".\"), $a = Opal.to_ary($b), (id = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (roles = ($a[2] == null ? nil : $a[2])), $b;\n            if ($truthy(id['$empty?']())) {\n            } else {\n              \n              $writer = [\"id\", id];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            if ($truthy(roles['$empty?']())) {\n              if ($truthy($rb_gt(before.$length(), 1))) {\n                \n                $writer = [\"role\", before.$tr(\".\", \" \").$lstrip()];\n                $send(attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];}\n            } else if ($truthy($rb_gt(before.$length(), 1))) {\n              \n              $writer = [\"role\", $rb_plus($rb_plus(before, \".\"), roles).$tr(\".\", \" \").$lstrip()];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              \n              $writer = [\"role\", roles.$tr(\".\", \" \")];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n          };\n          return attrs;\n        } else {\n          return $hash2([\"role\"], {\"role\": str})\n        };\n      }, $Substitutors_parse_quoted_text_attributes$76.$$arity = 1);\n      \n      Opal.def(self, '$normalize_text', $Substitutors_normalize_text$77 = function $$normalize_text(text, normalize_whitespace, unescape_closing_square_brackets) {\n        var $a, self = this;\n\n        \n        \n        if (normalize_whitespace == null) {\n          normalize_whitespace = nil;\n        };\n        \n        if (unescape_closing_square_brackets == null) {\n          unescape_closing_square_brackets = nil;\n        };\n        if ($truthy(text['$empty?']())) {\n        } else {\n          \n          if ($truthy(normalize_whitespace)) {\n            text = text.$strip().$tr($$($nesting, 'LF'), \" \")};\n          if ($truthy(($truthy($a = unescape_closing_square_brackets) ? text['$include?']($$($nesting, 'R_SB')) : $a))) {\n            text = text.$gsub($$($nesting, 'ESC_R_SB'), $$($nesting, 'R_SB'))};\n        };\n        return text;\n      }, $Substitutors_normalize_text$77.$$arity = -2);\n      \n      Opal.def(self, '$split_simple_csv', $Substitutors_split_simple_csv$78 = function $$split_simple_csv(str) {\n        var $$79, $$80, self = this, values = nil, accum = nil, quote_open = nil;\n\n        if ($truthy(str['$empty?']())) {\n          return []\n        } else if ($truthy(str['$include?'](\"\\\"\"))) {\n          \n          values = [];\n          accum = \"\";\n          quote_open = nil;\n          $send(str, 'each_char', [], ($$79 = function(c){var self = $$79.$$s || this, $case = nil;\n\n          \n            \n            if (c == null) {\n              c = nil;\n            };\n            return (function() {$case = c;\n            if (\",\"['$===']($case)) {if ($truthy(quote_open)) {\n              return (accum = $rb_plus(accum, c))\n            } else {\n              \n              values['$<<'](accum.$strip());\n              return (accum = \"\");\n            }}\n            else if (\"\\\"\"['$===']($case)) {return (quote_open = quote_open['$!']())}\n            else {return (accum = $rb_plus(accum, c))}})();}, $$79.$$s = self, $$79.$$arity = 1, $$79));\n          return values['$<<'](accum.$strip());\n        } else {\n          return $send(str.$split(\",\"), 'map', [], ($$80 = function(it){var self = $$80.$$s || this;\n\n          \n            \n            if (it == null) {\n              it = nil;\n            };\n            return it.$strip();}, $$80.$$s = self, $$80.$$arity = 1, $$80))\n        }\n      }, $Substitutors_split_simple_csv$78.$$arity = 1);\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/version\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    Opal.const_set($nesting[0], 'VERSION', \"2.0.16\")\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/abstract_node\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$include', '$attr_reader', '$attr_accessor', '$==', '$document', '$to_s', '$[]', '$merge', '$raise', '$converter', '$attributes', '$key?', '$[]=', '$-', '$delete', '$tap', '$new', '$each_key', '$end_with?', '$<<', '$slice', '$length', '$update', '$split', '$include?', '$===', '$join', '$empty?', '$apply_reftext_subs', '$attr?', '$attr', '$extname?', '$image_uri', '$<', '$safe', '$uriish?', '$encode_spaces_in_uri', '$normalize_web_path', '$generate_data_uri_from_uri', '$generate_data_uri', '$extname', '$normalize_system_path', '$readable?', '$strict_encode64', '$binread', '$warn', '$logger', '$require_library', '$!', '$open_uri', '$content_type', '$read', '$base_dir', '$root?', '$path_resolver', '$system_path', '$web_path', '$!=', '$prepare_source_string', '$fetch', '$read_asset']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'AbstractNode');\n\n      var $nesting = [self].concat($parent_nesting), $AbstractNode_initialize$1, $AbstractNode_block$ques$2, $AbstractNode_inline$ques$3, $AbstractNode_converter$4, $AbstractNode_parent$eq$5, $AbstractNode_attr$6, $AbstractNode_attr$ques$7, $AbstractNode_set_attr$8, $AbstractNode_remove_attr$9, $AbstractNode_option$ques$10, $AbstractNode_set_option$11, $AbstractNode_enabled_options$12, $AbstractNode_update_attributes$15, $AbstractNode_role$16, $AbstractNode_roles$17, $AbstractNode_role$ques$18, $AbstractNode_has_role$ques$19, $AbstractNode_role$eq$20, $AbstractNode_add_role$21, $AbstractNode_remove_role$22, $AbstractNode_reftext$23, $AbstractNode_reftext$ques$24, $AbstractNode_icon_uri$25, $AbstractNode_image_uri$26, $AbstractNode_media_uri$27, $AbstractNode_generate_data_uri$28, $AbstractNode_generate_data_uri_from_uri$29, $AbstractNode_normalize_asset_path$31, $AbstractNode_normalize_system_path$32, $AbstractNode_normalize_web_path$33, $AbstractNode_read_asset$34, $AbstractNode_read_contents$35, $AbstractNode_is_uri$ques$38;\n\n      self.$$prototype.document = self.$$prototype.attributes = self.$$prototype.parent = nil;\n      \n      self.$include($$($nesting, 'Logging'));\n      self.$include($$($nesting, 'Substitutors'));\n      self.$attr_reader(\"attributes\");\n      self.$attr_reader(\"context\");\n      self.$attr_reader(\"document\");\n      self.$attr_accessor(\"id\");\n      self.$attr_reader(\"node_name\");\n      self.$attr_reader(\"parent\");\n      \n      Opal.def(self, '$initialize', $AbstractNode_initialize$1 = function $$initialize(parent, context, opts) {\n        var self = this, attrs = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if (context['$=='](\"document\")) {\n          self.document = self\n        } else if ($truthy(parent)) {\n          self.document = (self.parent = parent).$document()};\n        self.node_name = (self.context = context).$to_s();\n        self.attributes = (function() {if ($truthy((attrs = opts['$[]'](\"attributes\")))) {\n          return attrs.$merge()\n        } else {\n          return $hash2([], {})\n        }; return nil; })();\n        return (self.passthroughs = []);\n      }, $AbstractNode_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$block?', $AbstractNode_block$ques$2 = function() {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'))\n      }, $AbstractNode_block$ques$2.$$arity = 0);\n      \n      Opal.def(self, '$inline?', $AbstractNode_inline$ques$3 = function() {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'))\n      }, $AbstractNode_inline$ques$3.$$arity = 0);\n      \n      Opal.def(self, '$converter', $AbstractNode_converter$4 = function $$converter() {\n        var self = this;\n\n        return self.document.$converter()\n      }, $AbstractNode_converter$4.$$arity = 0);\n      \n      Opal.def(self, '$parent=', $AbstractNode_parent$eq$5 = function(parent) {\n        var $a, self = this;\n\n        return $a = [parent, parent.$document()], (self.parent = $a[0]), (self.document = $a[1]), $a\n      }, $AbstractNode_parent$eq$5.$$arity = 1);\n      \n      Opal.def(self, '$attr', $AbstractNode_attr$6 = function $$attr(name, default_value, fallback_name) {\n        var $a, $b, $c, $d, self = this;\n\n        \n        \n        if (default_value == null) {\n          default_value = nil;\n        };\n        \n        if (fallback_name == null) {\n          fallback_name = nil;\n        };\n        return ($truthy($a = self.attributes['$[]'](name.$to_s())) ? $a : ($truthy($b = ($truthy($c = ($truthy($d = fallback_name) ? self.parent : $d)) ? self.document.$attributes()['$[]']((function() {if (fallback_name['$=='](true)) {\n          return name\n        } else {\n          return fallback_name\n        }; return nil; })().$to_s()) : $c)) ? $b : default_value));\n      }, $AbstractNode_attr$6.$$arity = -2);\n      \n      Opal.def(self, '$attr?', $AbstractNode_attr$ques$7 = function(name, expected_value, fallback_name) {\n        var $a, $b, self = this;\n\n        \n        \n        if (expected_value == null) {\n          expected_value = nil;\n        };\n        \n        if (fallback_name == null) {\n          fallback_name = nil;\n        };\n        if ($truthy(expected_value)) {\n          return expected_value['$=='](($truthy($a = self.attributes['$[]'](name.$to_s())) ? $a : (function() {if ($truthy(($truthy($b = fallback_name) ? self.parent : $b))) {\n            return self.document.$attributes()['$[]']((function() {if (fallback_name['$=='](true)) {\n              return name\n            } else {\n              return fallback_name\n            }; return nil; })().$to_s())\n          } else {\n            return nil\n          }; return nil; })()))\n        } else {\n          return ($truthy($a = self.attributes['$key?'](name.$to_s())) ? $a : (function() {if ($truthy(($truthy($b = fallback_name) ? self.parent : $b))) {\n            \n            return self.document.$attributes()['$key?']((function() {if (fallback_name['$=='](true)) {\n              return name\n            } else {\n              return fallback_name\n            }; return nil; })().$to_s());\n          } else {\n            return false\n          }; return nil; })())\n        };\n      }, $AbstractNode_attr$ques$7.$$arity = -2);\n      \n      Opal.def(self, '$set_attr', $AbstractNode_set_attr$8 = function $$set_attr(name, value, overwrite) {\n        var $a, self = this, $writer = nil;\n\n        \n        \n        if (value == null) {\n          value = \"\";\n        };\n        \n        if (overwrite == null) {\n          overwrite = true;\n        };\n        if ($truthy((($a = overwrite['$=='](false)) ? self.attributes['$key?'](name) : overwrite['$=='](false)))) {\n          return false\n        } else {\n          \n          \n          $writer = [name, value];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return true;\n        };\n      }, $AbstractNode_set_attr$8.$$arity = -2);\n      \n      Opal.def(self, '$remove_attr', $AbstractNode_remove_attr$9 = function $$remove_attr(name) {\n        var self = this;\n\n        return self.attributes.$delete(name)\n      }, $AbstractNode_remove_attr$9.$$arity = 1);\n      \n      Opal.def(self, '$option?', $AbstractNode_option$ques$10 = function(name) {\n        var self = this;\n\n        if ($truthy(self.attributes['$[]'](\"\" + (name) + \"-option\"))) {\n          return true\n        } else {\n          return false\n        }\n      }, $AbstractNode_option$ques$10.$$arity = 1);\n      \n      Opal.def(self, '$set_option', $AbstractNode_set_option$11 = function $$set_option(name) {\n        var self = this, $writer = nil;\n\n        \n        \n        $writer = [\"\" + (name) + \"-option\", \"\"];\n        $send(self.attributes, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        return nil;\n      }, $AbstractNode_set_option$11.$$arity = 1);\n      \n      Opal.def(self, '$enabled_options', $AbstractNode_enabled_options$12 = function $$enabled_options() {\n        var $$13, self = this;\n\n        return $send($$$('::', 'Set').$new(), 'tap', [], ($$13 = function(accum){var self = $$13.$$s || this, $$14;\n          if (self.attributes == null) self.attributes = nil;\n\n        \n          \n          if (accum == null) {\n            accum = nil;\n          };\n          return $send(self.attributes, 'each_key', [], ($$14 = function(k){var self = $$14.$$s || this;\n\n          \n            \n            if (k == null) {\n              k = nil;\n            };\n            if ($truthy(k.$to_s()['$end_with?'](\"-option\"))) {\n              return accum['$<<'](k.$slice(0, $rb_minus(k.$length(), 7)))\n            } else {\n              return nil\n            };}, $$14.$$s = self, $$14.$$arity = 1, $$14));}, $$13.$$s = self, $$13.$$arity = 1, $$13))\n      }, $AbstractNode_enabled_options$12.$$arity = 0);\n      \n      Opal.def(self, '$update_attributes', $AbstractNode_update_attributes$15 = function $$update_attributes(new_attributes) {\n        var self = this;\n\n        return self.attributes.$update(new_attributes)\n      }, $AbstractNode_update_attributes$15.$$arity = 1);\n      \n      Opal.def(self, '$role', $AbstractNode_role$16 = function $$role() {\n        var self = this;\n\n        return self.attributes['$[]'](\"role\")\n      }, $AbstractNode_role$16.$$arity = 0);\n      \n      Opal.def(self, '$roles', $AbstractNode_roles$17 = function $$roles() {\n        var self = this, val = nil;\n\n        if ($truthy((val = self.attributes['$[]'](\"role\")))) {\n          return val.$split()\n        } else {\n          return []\n        }\n      }, $AbstractNode_roles$17.$$arity = 0);\n      \n      Opal.def(self, '$role?', $AbstractNode_role$ques$18 = function(expected_value) {\n        var self = this;\n\n        \n        \n        if (expected_value == null) {\n          expected_value = nil;\n        };\n        if ($truthy(expected_value)) {\n          return expected_value['$=='](self.attributes['$[]'](\"role\"))\n        } else {\n          \n          return self.attributes['$key?'](\"role\");\n        };\n      }, $AbstractNode_role$ques$18.$$arity = -1);\n      \n      Opal.def(self, '$has_role?', $AbstractNode_has_role$ques$19 = function(name) {\n        var self = this, val = nil;\n\n        if ($truthy((val = self.attributes['$[]'](\"role\")))) {\n          \n          return (((\"\" + \" \") + (val)) + \" \")['$include?'](\"\" + \" \" + (name) + \" \");\n        } else {\n          return false\n        }\n      }, $AbstractNode_has_role$ques$19.$$arity = 1);\n      \n      Opal.def(self, '$role=', $AbstractNode_role$eq$20 = function(names) {\n        var self = this, $writer = nil;\n\n        \n        $writer = [\"role\", (function() {if ($truthy($$$('::', 'Array')['$==='](names))) {\n          \n          return names.$join(\" \");\n        } else {\n          return names\n        }; return nil; })()];\n        $send(self.attributes, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];\n      }, $AbstractNode_role$eq$20.$$arity = 1);\n      \n      Opal.def(self, '$add_role', $AbstractNode_add_role$21 = function $$add_role(name) {\n        var self = this, val = nil, $writer = nil;\n\n        if ($truthy((val = self.attributes['$[]'](\"role\")))) {\n          if ($truthy((((\"\" + \" \") + (val)) + \" \")['$include?'](\"\" + \" \" + (name) + \" \"))) {\n            return false\n          } else {\n            \n            \n            $writer = [\"role\", \"\" + (val) + \" \" + (name)];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return true;\n          }\n        } else {\n          \n          \n          $writer = [\"role\", name];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return true;\n        }\n      }, $AbstractNode_add_role$21.$$arity = 1);\n      \n      Opal.def(self, '$remove_role', $AbstractNode_remove_role$22 = function $$remove_role(name) {\n        var $a, self = this, val = nil, $writer = nil;\n\n        if ($truthy(($truthy($a = (val = self.attributes['$[]'](\"role\"))) ? (val = val.$split()).$delete(name) : $a))) {\n          \n          if ($truthy(val['$empty?']())) {\n            self.attributes.$delete(\"role\")\n          } else {\n            \n            $writer = [\"role\", val.$join(\" \")];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          return true;\n        } else {\n          return false\n        }\n      }, $AbstractNode_remove_role$22.$$arity = 1);\n      \n      Opal.def(self, '$reftext', $AbstractNode_reftext$23 = function $$reftext() {\n        var self = this, val = nil;\n\n        if ($truthy((val = self.attributes['$[]'](\"reftext\")))) {\n          \n          return self.$apply_reftext_subs(val);\n        } else {\n          return nil\n        }\n      }, $AbstractNode_reftext$23.$$arity = 0);\n      \n      Opal.def(self, '$reftext?', $AbstractNode_reftext$ques$24 = function() {\n        var self = this;\n\n        return self.attributes['$key?'](\"reftext\")\n      }, $AbstractNode_reftext$ques$24.$$arity = 0);\n      \n      Opal.def(self, '$icon_uri', $AbstractNode_icon_uri$25 = function $$icon_uri(name) {\n        var self = this, icon = nil;\n\n        \n        if ($truthy(self['$attr?'](\"icon\"))) {\n          \n          icon = self.$attr(\"icon\");\n          if ($truthy($$($nesting, 'Helpers')['$extname?'](icon))) {\n          } else {\n            icon = \"\" + (icon) + \".\" + (self.document.$attr(\"icontype\", \"png\"))\n          };\n        } else {\n          icon = \"\" + (name) + \".\" + (self.document.$attr(\"icontype\", \"png\"))\n        };\n        return self.$image_uri(icon, \"iconsdir\");\n      }, $AbstractNode_icon_uri$25.$$arity = 1);\n      \n      Opal.def(self, '$image_uri', $AbstractNode_image_uri$26 = function $$image_uri(target_image, asset_dir_key) {\n        var $a, $b, $c, $d, self = this, doc = nil, images_base = nil;\n\n        \n        \n        if (asset_dir_key == null) {\n          asset_dir_key = \"imagesdir\";\n        };\n        if ($truthy(($truthy($a = $rb_lt((doc = self.document).$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE'))) ? doc['$attr?'](\"data-uri\") : $a))) {\n          if ($truthy(($truthy($a = ($truthy($b = $$($nesting, 'Helpers')['$uriish?'](target_image)) ? (target_image = $$($nesting, 'Helpers').$encode_spaces_in_uri(target_image)) : $b)) ? $a : ($truthy($b = ($truthy($c = ($truthy($d = asset_dir_key) ? (images_base = doc.$attr(asset_dir_key)) : $d)) ? $$($nesting, 'Helpers')['$uriish?'](images_base) : $c)) ? (target_image = self.$normalize_web_path(target_image, images_base, false)) : $b)))) {\n            if ($truthy(doc['$attr?'](\"allow-uri-read\"))) {\n              \n              return self.$generate_data_uri_from_uri(target_image, doc['$attr?'](\"cache-uri\"));\n            } else {\n              return target_image\n            }\n          } else {\n            return self.$generate_data_uri(target_image, asset_dir_key)\n          }\n        } else {\n          return self.$normalize_web_path(target_image, (function() {if ($truthy(asset_dir_key)) {\n            \n            return doc.$attr(asset_dir_key);\n          } else {\n            return nil\n          }; return nil; })())\n        };\n      }, $AbstractNode_image_uri$26.$$arity = -2);\n      \n      Opal.def(self, '$media_uri', $AbstractNode_media_uri$27 = function $$media_uri(target, asset_dir_key) {\n        var self = this;\n\n        \n        \n        if (asset_dir_key == null) {\n          asset_dir_key = \"imagesdir\";\n        };\n        return self.$normalize_web_path(target, (function() {if ($truthy(asset_dir_key)) {\n          return self.document.$attr(asset_dir_key)\n        } else {\n          return nil\n        }; return nil; })());\n      }, $AbstractNode_media_uri$27.$$arity = -2);\n      \n      Opal.def(self, '$generate_data_uri', $AbstractNode_generate_data_uri$28 = function $$generate_data_uri(target_image, asset_dir_key) {\n        var self = this, ext = nil, mimetype = nil, image_path = nil;\n\n        \n        \n        if (asset_dir_key == null) {\n          asset_dir_key = nil;\n        };\n        if ($truthy((ext = $$($nesting, 'Helpers').$extname(target_image, nil)))) {\n          mimetype = (function() {if (ext['$=='](\".svg\")) {\n            return \"image/svg+xml\"\n          } else {\n            return \"\" + \"image/\" + (ext.$slice(1, ext.$length()))\n          }; return nil; })()\n        } else {\n          mimetype = \"application/octet-stream\"\n        };\n        if ($truthy(asset_dir_key)) {\n          image_path = self.$normalize_system_path(target_image, self.document.$attr(asset_dir_key), nil, $hash2([\"target_name\"], {\"target_name\": \"image\"}))\n        } else {\n          image_path = self.$normalize_system_path(target_image)\n        };\n        if ($truthy($$$('::', 'File')['$readable?'](image_path))) {\n          return \"\" + \"data:\" + (mimetype) + \";base64,\" + ($$$('::', 'Base64').$strict_encode64($$$('::', 'File').$binread(image_path)))\n        } else {\n          \n          self.$logger().$warn(\"\" + \"image to embed not found or not readable: \" + (image_path));\n          return \"\" + \"data:\" + (mimetype) + \";base64,\";\n        };\n      }, $AbstractNode_generate_data_uri$28.$$arity = -2);\n      \n      Opal.def(self, '$generate_data_uri_from_uri', $AbstractNode_generate_data_uri_from_uri$29 = function $$generate_data_uri_from_uri(image_uri, cache_uri) {\n        var $a, $b, $$30, self = this, mimetype = nil, bindata = nil;\n\n        \n        \n        if (cache_uri == null) {\n          cache_uri = false;\n        };\n        if ($truthy(cache_uri)) {\n          $$($nesting, 'Helpers').$require_library(\"open-uri/cached\", \"open-uri-cached\")\n        } else if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL')['$!']())) {\n          $$$('::', 'OpenURI')};\n        \n        try {\n          \n          $b = $send($$$('::', 'OpenURI'), 'open_uri', [image_uri, $$($nesting, 'URI_READ_MODE')], ($$30 = function(f){var self = $$30.$$s || this;\n\n          \n            \n            if (f == null) {\n              f = nil;\n            };\n            return [f.$content_type(), f.$read()];}, $$30.$$s = self, $$30.$$arity = 1, $$30)), $a = Opal.to_ary($b), (mimetype = ($a[0] == null ? nil : $a[0])), (bindata = ($a[1] == null ? nil : $a[1])), $b;\n          return \"\" + \"data:\" + (mimetype) + \";base64,\" + ($$$('::', 'Base64').$strict_encode64(bindata));\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n            try {\n              \n              self.$logger().$warn(\"\" + \"could not retrieve image data from URI: \" + (image_uri));\n              return image_uri;\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };;\n      }, $AbstractNode_generate_data_uri_from_uri$29.$$arity = -2);\n      \n      Opal.def(self, '$normalize_asset_path', $AbstractNode_normalize_asset_path$31 = function $$normalize_asset_path(asset_ref, asset_name, autocorrect) {\n        var self = this;\n\n        \n        \n        if (asset_name == null) {\n          asset_name = \"path\";\n        };\n        \n        if (autocorrect == null) {\n          autocorrect = true;\n        };\n        return self.$normalize_system_path(asset_ref, self.document.$base_dir(), nil, $hash2([\"target_name\", \"recover\"], {\"target_name\": asset_name, \"recover\": autocorrect}));\n      }, $AbstractNode_normalize_asset_path$31.$$arity = -2);\n      \n      Opal.def(self, '$normalize_system_path', $AbstractNode_normalize_system_path$32 = function $$normalize_system_path(target, start, jail, opts) {\n        var $a, self = this, doc = nil;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        \n        if (jail == null) {\n          jail = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy($rb_lt((doc = self.document).$safe(), $$$($$($nesting, 'SafeMode'), 'SAFE')))) {\n          if ($truthy(start)) {\n            if ($truthy(doc.$path_resolver()['$root?'](start))) {\n            } else {\n              start = $$$('::', 'File').$join(doc.$base_dir(), start)\n            }\n          } else {\n            start = doc.$base_dir()\n          }\n        } else {\n          \n          start = ($truthy($a = start) ? $a : doc.$base_dir());\n          jail = ($truthy($a = jail) ? $a : doc.$base_dir());\n        };\n        return doc.$path_resolver().$system_path(target, start, jail, opts);\n      }, $AbstractNode_normalize_system_path$32.$$arity = -2);\n      \n      Opal.def(self, '$normalize_web_path', $AbstractNode_normalize_web_path$33 = function $$normalize_web_path(target, start, preserve_uri_target) {\n        var $a, self = this;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        \n        if (preserve_uri_target == null) {\n          preserve_uri_target = true;\n        };\n        if ($truthy(($truthy($a = preserve_uri_target) ? $$($nesting, 'Helpers')['$uriish?'](target) : $a))) {\n          return $$($nesting, 'Helpers').$encode_spaces_in_uri(target)\n        } else {\n          return self.document.$path_resolver().$web_path(target, start)\n        };\n      }, $AbstractNode_normalize_web_path$33.$$arity = -2);\n      \n      Opal.def(self, '$read_asset', $AbstractNode_read_asset$34 = function $$read_asset(path, opts) {\n        var $a, self = this;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy($$$('::', 'Hash')['$==='](opts))) {\n        } else {\n          opts = $hash2([\"warn_on_failure\"], {\"warn_on_failure\": opts['$!='](false)})\n        };\n        if ($truthy($$$('::', 'File')['$readable?'](path))) {\n          if ($truthy(opts['$[]'](\"normalize\"))) {\n            \n            return $$($nesting, 'Helpers').$prepare_source_string($$$('::', 'File').$read(path, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_READ_MODE')}))).$join($$($nesting, 'LF'));\n          } else {\n            \n            return $$$('::', 'File').$read(path, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_READ_MODE')}));\n          }\n        } else if ($truthy(opts['$[]'](\"warn_on_failure\"))) {\n          \n          self.$logger().$warn(\"\" + (($truthy($a = self.$attr(\"docfile\")) ? $a : \"<stdin>\")) + \": \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"file\")) + \" does not exist or cannot be read: \" + (path));\n          return nil;\n        } else {\n          return nil\n        };\n      }, $AbstractNode_read_asset$34.$$arity = -2);\n      \n      Opal.def(self, '$read_contents', $AbstractNode_read_contents$35 = function $$read_contents(target, opts) {\n        var $a, $b, $c, $$36, $$37, self = this, doc = nil, start = nil, contents = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        doc = self.document;\n        if ($truthy(($truthy($a = $$($nesting, 'Helpers')['$uriish?'](target)) ? $a : ($truthy($b = ($truthy($c = (start = opts['$[]'](\"start\"))) ? $$($nesting, 'Helpers')['$uriish?'](start) : $c)) ? (target = doc.$path_resolver().$web_path(target, start)) : $b)))) {\n          if ($truthy(doc['$attr?'](\"allow-uri-read\"))) {\n            \n            if ($truthy(doc['$attr?'](\"cache-uri\"))) {\n              $$($nesting, 'Helpers').$require_library(\"open-uri/cached\", \"open-uri-cached\")};\n            \n            try {\n              if ($truthy(opts['$[]'](\"normalize\"))) {\n                contents = $$($nesting, 'Helpers').$prepare_source_string($send($$$('::', 'OpenURI'), 'open_uri', [target, $$($nesting, 'URI_READ_MODE')], ($$36 = function(f){var self = $$36.$$s || this;\n\n                \n                  \n                  if (f == null) {\n                    f = nil;\n                  };\n                  return f.$read();}, $$36.$$s = self, $$36.$$arity = 1, $$36))).$join($$($nesting, 'LF'))\n              } else {\n                contents = $send($$$('::', 'OpenURI'), 'open_uri', [target, $$($nesting, 'URI_READ_MODE')], ($$37 = function(f){var self = $$37.$$s || this;\n\n                \n                  \n                  if (f == null) {\n                    f = nil;\n                  };\n                  return f.$read();}, $$37.$$s = self, $$37.$$arity = 1, $$37))\n              }\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  if ($truthy(opts.$fetch(\"warn_on_failure\", true))) {\n                    self.$logger().$warn(\"\" + \"could not retrieve contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" at URI: \" + (target))}\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };;\n          } else if ($truthy(opts.$fetch(\"warn_on_failure\", true))) {\n            self.$logger().$warn(\"\" + \"cannot retrieve contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" at URI: \" + (target) + \" (allow-uri-read attribute not enabled)\")}\n        } else {\n          \n          target = self.$normalize_system_path(target, opts['$[]'](\"start\"), nil, $hash2([\"target_name\"], {\"target_name\": ($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")}));\n          contents = self.$read_asset(target, $hash2([\"normalize\", \"warn_on_failure\", \"label\"], {\"normalize\": opts['$[]'](\"normalize\"), \"warn_on_failure\": opts.$fetch(\"warn_on_failure\", true), \"label\": opts['$[]'](\"label\")}));\n        };\n        if ($truthy(($truthy($a = ($truthy($b = contents) ? opts['$[]'](\"warn_if_empty\") : $b)) ? contents['$empty?']() : $a))) {\n          self.$logger().$warn(\"\" + \"contents of \" + (($truthy($a = opts['$[]'](\"label\")) ? $a : \"asset\")) + \" is empty: \" + (target))};\n        return contents;\n      }, $AbstractNode_read_contents$35.$$arity = -2);\n      return (Opal.def(self, '$is_uri?', $AbstractNode_is_uri$ques$38 = function(str) {\n        var self = this;\n\n        return $$($nesting, 'Helpers')['$uriish?'](str)\n      }, $AbstractNode_is_uri$ques$38.$$arity = 1), nil) && 'is_uri?';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/abstract_block\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_reader', '$attr_writer', '$attr_accessor', '$==', '$===', '$level', '$file', '$lineno', '$playback_attributes', '$convert', '$converter', '$join', '$map', '$to_s', '$parent', '$parent=', '$-', '$<<', '$empty?', '$>', '$Integer', '$find_by_internal', '$to_proc', '$context', '$[]', '$items', '$+', '$find_index', '$include?', '$next_adjacent_block', '$blocks', '$select', '$sub_specialchars', '$match?', '$sub_replacements', '$title', '$apply_title_subs', '$delete', '$reftext', '$!', '$nil_or_empty?', '$sub_placeholder', '$sub_quotes', '$compat_mode', '$attributes', '$chomp', '$increment_and_store_counter', '$index=', '$numbered', '$sectname', '$counter', '$numeral=', '$numeral', '$caption=', '$int_to_roman', '$each', '$assign_numeral', '$reindex_sections', '$protected', '$has_role?', '$raise', '$header?', '$!=', '$flatten', '$head', '$rows', '$merge', '$body', '$foot', '$style', '$inner_document']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'AbstractBlock');\n\n      var $nesting = [self].concat($parent_nesting), $AbstractBlock_initialize$1, $AbstractBlock_block$ques$2, $AbstractBlock_inline$ques$3, $AbstractBlock_file$4, $AbstractBlock_lineno$5, $AbstractBlock_convert$6, $AbstractBlock_content$7, $AbstractBlock_context$eq$9, $AbstractBlock_$lt$lt$10, $AbstractBlock_blocks$ques$11, $AbstractBlock_sections$ques$12, $AbstractBlock_number$13, $AbstractBlock_number$eq$14, $AbstractBlock_find_by$15, $AbstractBlock_next_adjacent_block$16, $AbstractBlock_sections$18, $AbstractBlock_alt$20, $AbstractBlock_caption$21, $AbstractBlock_captioned_title$22, $AbstractBlock_list_marker_keyword$23, $AbstractBlock_title$24, $AbstractBlock_title$ques$25, $AbstractBlock_title$eq$26, $AbstractBlock_sub$ques$27, $AbstractBlock_remove_sub$28, $AbstractBlock_xreftext$29, $AbstractBlock_assign_caption$30, $AbstractBlock_assign_numeral$31, $AbstractBlock_reindex_sections$32, $AbstractBlock_find_by_internal$34;\n\n      self.$$prototype.source_location = self.$$prototype.document = self.$$prototype.attributes = self.$$prototype.blocks = self.$$prototype.next_section_index = self.$$prototype.numeral = self.$$prototype.context = self.$$prototype.parent = self.$$prototype.caption = self.$$prototype.style = self.$$prototype.converted_title = self.$$prototype.title = self.$$prototype.subs = self.$$prototype.next_section_ordinal = self.$$prototype.id = self.$$prototype.header = nil;\n      \n      self.$attr_reader(\"blocks\");\n      self.$attr_writer(\"caption\");\n      self.$attr_accessor(\"content_model\");\n      self.$attr_accessor(\"level\");\n      self.$attr_accessor(\"numeral\");\n      self.$attr_accessor(\"source_location\");\n      self.$attr_accessor(\"style\");\n      self.$attr_reader(\"subs\");\n      \n      Opal.def(self, '$initialize', $AbstractBlock_initialize$1 = function $$initialize(parent, context, opts) {\n        var $a, $iter = $AbstractBlock_initialize$1.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $AbstractBlock_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $AbstractBlock_initialize$1, false), $zuper, $iter);\n        self.content_model = \"compound\";\n        self.blocks = [];\n        self.subs = [];\n        self.id = (self.title = (self.caption = (self.numeral = (self.style = (self.default_subs = (self.source_location = nil))))));\n        if ($truthy(($truthy($a = context['$=='](\"document\")) ? $a : context['$=='](\"section\")))) {\n          \n          self.level = (self.next_section_index = 0);\n          return (self.next_section_ordinal = 1);\n        } else if ($truthy($$($nesting, 'AbstractBlock')['$==='](parent))) {\n          return (self.level = parent.$level())\n        } else {\n          return (self.level = nil)\n        };\n      }, $AbstractBlock_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$block?', $AbstractBlock_block$ques$2 = function() {\n        var self = this;\n\n        return true\n      }, $AbstractBlock_block$ques$2.$$arity = 0);\n      \n      Opal.def(self, '$inline?', $AbstractBlock_inline$ques$3 = function() {\n        var self = this;\n\n        return false\n      }, $AbstractBlock_inline$ques$3.$$arity = 0);\n      \n      Opal.def(self, '$file', $AbstractBlock_file$4 = function $$file() {\n        var $a, self = this;\n\n        return ($truthy($a = self.source_location) ? self.source_location.$file() : $a)\n      }, $AbstractBlock_file$4.$$arity = 0);\n      \n      Opal.def(self, '$lineno', $AbstractBlock_lineno$5 = function $$lineno() {\n        var $a, self = this;\n\n        return ($truthy($a = self.source_location) ? self.source_location.$lineno() : $a)\n      }, $AbstractBlock_lineno$5.$$arity = 0);\n      \n      Opal.def(self, '$convert', $AbstractBlock_convert$6 = function $$convert() {\n        var self = this;\n\n        \n        self.document.$playback_attributes(self.attributes);\n        return self.$converter().$convert(self);\n      }, $AbstractBlock_convert$6.$$arity = 0);\n      Opal.alias(self, \"render\", \"convert\");\n      \n      Opal.def(self, '$content', $AbstractBlock_content$7 = function $$content() {\n        var $$8, self = this;\n\n        return $send(self.blocks, 'map', [], ($$8 = function(b){var self = $$8.$$s || this;\n\n        \n          \n          if (b == null) {\n            b = nil;\n          };\n          return b.$convert();}, $$8.$$s = self, $$8.$$arity = 1, $$8)).$join($$($nesting, 'LF'))\n      }, $AbstractBlock_content$7.$$arity = 0);\n      \n      Opal.def(self, '$context=', $AbstractBlock_context$eq$9 = function(context) {\n        var self = this;\n\n        return (self.node_name = (self.context = context).$to_s())\n      }, $AbstractBlock_context$eq$9.$$arity = 1);\n      \n      Opal.def(self, '$<<', $AbstractBlock_$lt$lt$10 = function(block) {\n        var self = this, $writer = nil;\n\n        \n        if (block.$parent()['$=='](self)) {\n        } else {\n          \n          $writer = [self];\n          $send(block, 'parent=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        self.blocks['$<<'](block);\n        return self;\n      }, $AbstractBlock_$lt$lt$10.$$arity = 1);\n      Opal.alias(self, \"append\", \"<<\");\n      \n      Opal.def(self, '$blocks?', $AbstractBlock_blocks$ques$11 = function() {\n        var self = this;\n\n        if ($truthy(self.blocks['$empty?']())) {\n          return false\n        } else {\n          return true\n        }\n      }, $AbstractBlock_blocks$ques$11.$$arity = 0);\n      \n      Opal.def(self, '$sections?', $AbstractBlock_sections$ques$12 = function() {\n        var self = this;\n\n        return $rb_gt(self.next_section_index, 0)\n      }, $AbstractBlock_sections$ques$12.$$arity = 0);\n      \n      Opal.def(self, '$number', $AbstractBlock_number$13 = function $$number() {\n        var self = this;\n\n        try {\n          \n          return self.$Integer(self.numeral);\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n            try {\n              return self.numeral\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        }\n      }, $AbstractBlock_number$13.$$arity = 0);\n      \n      Opal.def(self, '$number=', $AbstractBlock_number$eq$14 = function(val) {\n        var self = this;\n\n        return (self.numeral = val.$to_s())\n      }, $AbstractBlock_number$eq$14.$$arity = 1);\n      \n      Opal.def(self, '$find_by', $AbstractBlock_find_by$15 = function $$find_by(selector) {\n        var $iter = $AbstractBlock_find_by$15.$$p, block = $iter || nil, self = this, result = nil;\n\n        if ($iter) $AbstractBlock_find_by$15.$$p = null;\n        \n        \n        if ($iter) $AbstractBlock_find_by$15.$$p = null;;\n        \n        if (selector == null) {\n          selector = $hash2([], {});\n        };\n        try {\n          return $send(self, 'find_by_internal', [selector, (result = [])], block.$to_proc())\n        } catch ($err) {\n          if (Opal.rescue($err, [$$$('::', 'StopIteration')])) {\n            try {\n              return result\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      }, $AbstractBlock_find_by$15.$$arity = -1);\n      Opal.alias(self, \"query\", \"find_by\");\n      \n      Opal.def(self, '$next_adjacent_block', $AbstractBlock_next_adjacent_block$16 = function $$next_adjacent_block() {\n        var $a, $$17, self = this, p = nil, sib = nil;\n\n        if (self.context['$=='](\"document\")) {\n          return nil\n        } else if ($truthy((($a = (p = self.parent).$context()['$=='](\"dlist\")) ? self.context['$=='](\"list_item\") : (p = self.parent).$context()['$=='](\"dlist\")))) {\n          if ($truthy((sib = p.$items()['$[]']($rb_plus($send(p.$items(), 'find_index', [], ($$17 = function(terms, desc){var self = $$17.$$s || this, $b;\n\n          \n            \n            if (terms == null) {\n              terms = nil;\n            };\n            \n            if (desc == null) {\n              desc = nil;\n            };\n            return ($truthy($b = terms['$include?'](self)) ? $b : desc['$=='](self));}, $$17.$$s = self, $$17.$$arity = 2, $$17)), 1))))) {\n            return sib\n          } else {\n            return p.$next_adjacent_block()\n          }\n        } else if ($truthy((sib = p.$blocks()['$[]']($rb_plus(p.$blocks().$find_index(self), 1))))) {\n          return sib\n        } else {\n          return p.$next_adjacent_block()\n        }\n      }, $AbstractBlock_next_adjacent_block$16.$$arity = 0);\n      \n      Opal.def(self, '$sections', $AbstractBlock_sections$18 = function $$sections() {\n        var $$19, self = this;\n\n        return $send(self.blocks, 'select', [], ($$19 = function(block){var self = $$19.$$s || this;\n\n        \n          \n          if (block == null) {\n            block = nil;\n          };\n          return block.$context()['$=='](\"section\");}, $$19.$$s = self, $$19.$$arity = 1, $$19))\n      }, $AbstractBlock_sections$18.$$arity = 0);\n      \n      Opal.def(self, '$alt', $AbstractBlock_alt$20 = function $$alt() {\n        var self = this, text = nil;\n\n        if ($truthy((text = self.attributes['$[]'](\"alt\")))) {\n          if (text['$=='](self.attributes['$[]'](\"default-alt\"))) {\n            return self.$sub_specialchars(text)\n          } else {\n            \n            text = self.$sub_specialchars(text);\n            if ($truthy($$($nesting, 'ReplaceableTextRx')['$match?'](text))) {\n              \n              return self.$sub_replacements(text);\n            } else {\n              return text\n            };\n          }\n        } else {\n          return \"\"\n        }\n      }, $AbstractBlock_alt$20.$$arity = 0);\n      \n      Opal.def(self, '$caption', $AbstractBlock_caption$21 = function $$caption() {\n        var self = this;\n\n        if (self.context['$=='](\"admonition\")) {\n          return self.attributes['$[]'](\"textlabel\")\n        } else {\n          return self.caption\n        }\n      }, $AbstractBlock_caption$21.$$arity = 0);\n      \n      Opal.def(self, '$captioned_title', $AbstractBlock_captioned_title$22 = function $$captioned_title() {\n        var self = this;\n\n        return \"\" + (self.caption) + (self.$title())\n      }, $AbstractBlock_captioned_title$22.$$arity = 0);\n      \n      Opal.def(self, '$list_marker_keyword', $AbstractBlock_list_marker_keyword$23 = function $$list_marker_keyword(list_type) {\n        var $a, self = this;\n\n        \n        \n        if (list_type == null) {\n          list_type = nil;\n        };\n        return $$($nesting, 'ORDERED_LIST_KEYWORDS')['$[]'](($truthy($a = list_type) ? $a : self.style));\n      }, $AbstractBlock_list_marker_keyword$23.$$arity = -1);\n      \n      Opal.def(self, '$title', $AbstractBlock_title$24 = function $$title() {\n        var $a, $b, self = this;\n\n        return (self.converted_title = ($truthy($a = self.converted_title) ? $a : ($truthy($b = self.title) ? self.$apply_title_subs(self.title) : $b)))\n      }, $AbstractBlock_title$24.$$arity = 0);\n      \n      Opal.def(self, '$title?', $AbstractBlock_title$ques$25 = function() {\n        var self = this;\n\n        if ($truthy(self.title)) {\n          return true\n        } else {\n          return false\n        }\n      }, $AbstractBlock_title$ques$25.$$arity = 0);\n      \n      Opal.def(self, '$title=', $AbstractBlock_title$eq$26 = function(val) {\n        var self = this;\n\n        \n        self.converted_title = nil;\n        return (self.title = val);\n      }, $AbstractBlock_title$eq$26.$$arity = 1);\n      \n      Opal.def(self, '$sub?', $AbstractBlock_sub$ques$27 = function(name) {\n        var self = this;\n\n        return self.subs['$include?'](name)\n      }, $AbstractBlock_sub$ques$27.$$arity = 1);\n      \n      Opal.def(self, '$remove_sub', $AbstractBlock_remove_sub$28 = function $$remove_sub(sub) {\n        var self = this;\n\n        \n        self.subs.$delete(sub);\n        return nil;\n      }, $AbstractBlock_remove_sub$28.$$arity = 1);\n      \n      Opal.def(self, '$xreftext', $AbstractBlock_xreftext$29 = function $$xreftext(xrefstyle) {\n        var $a, $b, self = this, val = nil, $case = nil, quoted_title = nil, caption_attr_name = nil, prefix = nil;\n\n        \n        \n        if (xrefstyle == null) {\n          xrefstyle = nil;\n        };\n        if ($truthy(($truthy($a = (val = self.$reftext())) ? val['$empty?']()['$!']() : $a))) {\n          return val\n        } else if ($truthy(($truthy($a = ($truthy($b = xrefstyle) ? self.title : $b)) ? self.caption['$nil_or_empty?']()['$!']() : $a))) {\n          return (function() {$case = xrefstyle;\n          if (\"full\"['$===']($case)) {\n          quoted_title = self.$sub_placeholder(self.$sub_quotes((function() {if ($truthy(self.document.$compat_mode())) {\n            return \"``%s''\"\n          } else {\n            return \"\\\"`%s`\\\"\"\n          }; return nil; })()), self.$title());\n          if ($truthy(($truthy($a = ($truthy($b = self.numeral) ? (caption_attr_name = $$($nesting, 'CAPTION_ATTRIBUTE_NAMES')['$[]'](self.context)) : $b)) ? (prefix = self.document.$attributes()['$[]'](caption_attr_name)) : $a))) {\n            return \"\" + (prefix) + \" \" + (self.numeral) + \", \" + (quoted_title)\n          } else {\n            return \"\" + (self.caption.$chomp(\". \")) + \", \" + (quoted_title)\n          };}\n          else if (\"short\"['$===']($case)) {if ($truthy(($truthy($a = ($truthy($b = self.numeral) ? (caption_attr_name = $$($nesting, 'CAPTION_ATTRIBUTE_NAMES')['$[]'](self.context)) : $b)) ? (prefix = self.document.$attributes()['$[]'](caption_attr_name)) : $a))) {\n            return \"\" + (prefix) + \" \" + (self.numeral)\n          } else {\n            return self.caption.$chomp(\". \")\n          }}\n          else {return self.$title()}})()\n        } else {\n          return self.$title()\n        };\n      }, $AbstractBlock_xreftext$29.$$arity = -1);\n      \n      Opal.def(self, '$assign_caption', $AbstractBlock_assign_caption$30 = function $$assign_caption(value, caption_context) {\n        var $a, $b, self = this, attr_name = nil, prefix = nil;\n\n        \n        \n        if (caption_context == null) {\n          caption_context = self.context;\n        };\n        if ($truthy(($truthy($a = ($truthy($b = self.caption) ? $b : self.title['$!']())) ? $a : (self.caption = ($truthy($b = value) ? $b : self.document.$attributes()['$[]'](\"caption\")))))) {\n          return nil\n        } else if ($truthy(($truthy($a = (attr_name = $$($nesting, 'CAPTION_ATTRIBUTE_NAMES')['$[]'](caption_context))) ? (prefix = self.document.$attributes()['$[]'](attr_name)) : $a))) {\n          \n          self.caption = \"\" + (prefix) + \" \" + ((self.numeral = self.document.$increment_and_store_counter(\"\" + (caption_context) + \"-number\", self))) + \". \";\n          return nil;\n        } else {\n          return nil\n        };\n      }, $AbstractBlock_assign_caption$30.$$arity = -2);\n      \n      Opal.def(self, '$assign_numeral', $AbstractBlock_assign_numeral$31 = function $$assign_numeral(section) {\n        var $a, self = this, $writer = nil, like = nil, sectname = nil, caption = nil;\n\n        \n        self.next_section_index = $rb_plus((($writer = [self.next_section_index]), $send(section, 'index=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]), 1);\n        if ($truthy((like = section.$numbered()))) {\n          if ((sectname = section.$sectname())['$=='](\"appendix\")) {\n            \n            \n            $writer = [self.document.$counter(\"appendix-number\", \"A\")];\n            $send(section, 'numeral=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [(function() {if ($truthy((caption = self.document.$attributes()['$[]'](\"appendix-caption\")))) {\n              return \"\" + (caption) + \" \" + (section.$numeral()) + \": \"\n            } else {\n              return \"\" + (section.$numeral()) + \". \"\n            }; return nil; })()];\n            $send(section, 'caption=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else if ($truthy(($truthy($a = sectname['$=='](\"chapter\")) ? $a : like['$=='](\"chapter\")))) {\n            \n            $writer = [self.document.$counter(\"chapter-number\", 1).$to_s()];\n            $send(section, 'numeral=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            \n            \n            $writer = [(function() {if (sectname['$=='](\"part\")) {\n              \n              return $$($nesting, 'Helpers').$int_to_roman(self.next_section_ordinal);\n            } else {\n              return self.next_section_ordinal.$to_s()\n            }; return nil; })()];\n            $send(section, 'numeral=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            self.next_section_ordinal = $rb_plus(self.next_section_ordinal, 1);\n          }};\n        return nil;\n      }, $AbstractBlock_assign_numeral$31.$$arity = 1);\n      \n      Opal.def(self, '$reindex_sections', $AbstractBlock_reindex_sections$32 = function $$reindex_sections() {\n        var $$33, self = this;\n\n        \n        self.next_section_index = 0;\n        self.next_section_ordinal = 1;\n        return $send(self.blocks, 'each', [], ($$33 = function(block){var self = $$33.$$s || this;\n\n        \n          \n          if (block == null) {\n            block = nil;\n          };\n          if (block.$context()['$=='](\"section\")) {\n            \n            self.$assign_numeral(block);\n            return block.$reindex_sections();\n          } else {\n            return nil\n          };}, $$33.$$s = self, $$33.$$arity = 1, $$33));\n      }, $AbstractBlock_reindex_sections$32.$$arity = 0);\n      self.$protected();\n      return (Opal.def(self, '$find_by_internal', $AbstractBlock_find_by_internal$34 = function $$find_by_internal(selector, result) {\n        var $iter = $AbstractBlock_find_by_internal$34.$$p, block = $iter || nil, $a, $b, $c, $d, $$35, $$36, $$37, $$39, $$41, $$43, self = this, any_context = nil, context_selector = nil, style_selector = nil, role_selector = nil, id_selector = nil, verdict = nil, $case = nil;\n\n        if ($iter) $AbstractBlock_find_by_internal$34.$$p = null;\n        \n        \n        if ($iter) $AbstractBlock_find_by_internal$34.$$p = null;;\n        \n        if (selector == null) {\n          selector = $hash2([], {});\n        };\n        \n        if (result == null) {\n          result = [];\n        };\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = ($truthy($d = (any_context = (function() {if ($truthy((context_selector = selector['$[]'](\"context\")))) {\n          return nil\n        } else {\n          return true\n        }; return nil; })())) ? $d : context_selector['$=='](self.context))) ? ($truthy($d = (style_selector = selector['$[]'](\"style\"))['$!']()) ? $d : style_selector['$=='](self.style)) : $c)) ? ($truthy($c = (role_selector = selector['$[]'](\"role\"))['$!']()) ? $c : self['$has_role?'](role_selector)) : $b)) ? ($truthy($b = (id_selector = selector['$[]'](\"id\"))['$!']()) ? $b : id_selector['$=='](self.id)) : $a))) {\n          if ((block !== nil)) {\n            if ($truthy((verdict = Opal.yield1(block, self)))) {\n              $case = verdict;\n              if (\"prune\"['$===']($case)) {\n              result['$<<'](self);\n              if ($truthy(id_selector)) {\n                self.$raise($$$('::', 'StopIteration'))};\n              return result;}\n              else if (\"reject\"['$===']($case)) {\n              if ($truthy(id_selector)) {\n                self.$raise($$$('::', 'StopIteration'))};\n              return result;}\n              else if (\"stop\"['$===']($case)) {self.$raise($$$('::', 'StopIteration'))}\n              else {\n              result['$<<'](self);\n              if ($truthy(id_selector)) {\n                self.$raise($$$('::', 'StopIteration'))};}\n            } else if ($truthy(id_selector)) {\n              self.$raise($$$('::', 'StopIteration'))}\n          } else {\n            \n            result['$<<'](self);\n            if ($truthy(id_selector)) {\n              self.$raise($$$('::', 'StopIteration'))};\n          }};\n        $case = self.context;\n        if (\"document\"['$===']($case)) {if (context_selector['$=='](\"document\")) {\n        } else {\n          \n          if ($truthy(($truthy($a = self['$header?']()) ? ($truthy($b = any_context) ? $b : context_selector['$=='](\"section\")) : $a))) {\n            $send(self.header, 'find_by_internal', [selector, result], block.$to_proc())};\n          $send(self.blocks, 'each', [], ($$35 = function(b){var self = $$35.$$s || this, $e;\n\n          \n            \n            if (b == null) {\n              b = nil;\n            };\n            if ($truthy((($e = context_selector['$=='](\"section\")) ? b.$context()['$!='](\"section\") : context_selector['$=='](\"section\")))) {\n              return nil;};\n            return $send(b, 'find_by_internal', [selector, result], block.$to_proc());}, $$35.$$s = self, $$35.$$arity = 1, $$35));\n        }}\n        else if (\"dlist\"['$===']($case)) {if ($truthy(($truthy($a = any_context) ? $a : context_selector['$!='](\"section\")))) {\n          $send(self.blocks.$flatten(), 'each', [], ($$36 = function(b){var self = $$36.$$s || this;\n\n          \n            \n            if (b == null) {\n              b = nil;\n            };\n            if ($truthy(b)) {\n              return $send(b, 'find_by_internal', [selector, result], block.$to_proc())\n            } else {\n              return nil\n            };}, $$36.$$s = self, $$36.$$arity = 1, $$36))}}\n        else if (\"table\"['$===']($case)) {if ($truthy(selector['$[]'](\"traverse_documents\"))) {\n          \n          $send(self.$rows().$head(), 'each', [], ($$37 = function(r){var self = $$37.$$s || this, $$38;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            return $send(r, 'each', [], ($$38 = function(c){var self = $$38.$$s || this;\n\n            \n              \n              if (c == null) {\n                c = nil;\n              };\n              return $send(c, 'find_by_internal', [selector, result], block.$to_proc());}, $$38.$$s = self, $$38.$$arity = 1, $$38));}, $$37.$$s = self, $$37.$$arity = 1, $$37));\n          if (context_selector['$=='](\"inner_document\")) {\n            selector = selector.$merge($hash2([\"context\"], {\"context\": \"document\"}))};\n          $send($rb_plus(self.$rows().$body(), self.$rows().$foot()), 'each', [], ($$39 = function(r){var self = $$39.$$s || this, $$40;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            return $send(r, 'each', [], ($$40 = function(c){var self = $$40.$$s || this;\n\n            \n              \n              if (c == null) {\n                c = nil;\n              };\n              $send(c, 'find_by_internal', [selector, result], block.$to_proc());\n              if (c.$style()['$=='](\"asciidoc\")) {\n                return $send(c.$inner_document(), 'find_by_internal', [selector, result], block.$to_proc())\n              } else {\n                return nil\n              };}, $$40.$$s = self, $$40.$$arity = 1, $$40));}, $$39.$$s = self, $$39.$$arity = 1, $$39));\n        } else {\n          $send($rb_plus($rb_plus(self.$rows().$head(), self.$rows().$body()), self.$rows().$foot()), 'each', [], ($$41 = function(r){var self = $$41.$$s || this, $$42;\n\n          \n            \n            if (r == null) {\n              r = nil;\n            };\n            return $send(r, 'each', [], ($$42 = function(c){var self = $$42.$$s || this;\n\n            \n              \n              if (c == null) {\n                c = nil;\n              };\n              return $send(c, 'find_by_internal', [selector, result], block.$to_proc());}, $$42.$$s = self, $$42.$$arity = 1, $$42));}, $$41.$$s = self, $$41.$$arity = 1, $$41))\n        }}\n        else {$send(self.blocks, 'each', [], ($$43 = function(b){var self = $$43.$$s || this, $e;\n\n        \n          \n          if (b == null) {\n            b = nil;\n          };\n          if ($truthy((($e = context_selector['$=='](\"section\")) ? b.$context()['$!='](\"section\") : context_selector['$=='](\"section\")))) {\n            return nil;};\n          return $send(b, 'find_by_internal', [selector, result], block.$to_proc());}, $$43.$$s = self, $$43.$$arity = 1, $$43))};\n        return result;\n      }, $AbstractBlock_find_by_internal$34.$$arity = -1), nil) && 'find_by_internal';\n    })($nesting[0], $$($nesting, 'AbstractNode'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/attribute_list\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash = Opal.hash, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$new', '$[]', '$update', '$parse', '$parse_attribute', '$eos?', '$skip_delimiter', '$+', '$rekey', '$each_with_index', '$[]=', '$-', '$private', '$skip_blank', '$peek', '$===', '$parse_attribute_value', '$get_byte', '$start_with?', '$scan_name', '$end_with?', '$rstrip', '$string', '$==', '$unscan', '$scan_to_delimiter', '$*', '$include?', '$delete', '$each', '$split', '$empty?', '$apply_subs', '$scan_to_quote', '$gsub', '$skip', '$scan']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'AttributeList');\n\n      var $nesting = [self].concat($parent_nesting), $AttributeList_initialize$1, $AttributeList_parse_into$2, $AttributeList_parse$3, $AttributeList_rekey$4, $AttributeList_rekey$5, $AttributeList_parse_attribute$7, $AttributeList_parse_attribute_value$9, $AttributeList_skip_blank$10, $AttributeList_skip_delimiter$11, $AttributeList_scan_name$12, $AttributeList_scan_to_delimiter$13, $AttributeList_scan_to_quote$14;\n\n      self.$$prototype.attributes = self.$$prototype.scanner = self.$$prototype.delimiter = self.$$prototype.block = self.$$prototype.delimiter_skip_pattern = self.$$prototype.delimiter_boundary_pattern = nil;\n      \n      Opal.const_set($nesting[0], 'APOS', \"'\");\n      Opal.const_set($nesting[0], 'BACKSLASH', \"\\\\\");\n      Opal.const_set($nesting[0], 'QUOT', \"\\\"\");\n      Opal.const_set($nesting[0], 'BoundaryRx', $hash($$($nesting, 'QUOT'), /.*?[^\\\\](?=\")/, $$($nesting, 'APOS'), /.*?[^\\\\](?=')/, \",\", /.*?(?=[ \\t]*(,|$))/));\n      Opal.const_set($nesting[0], 'EscapedQuotes', $hash($$($nesting, 'QUOT'), \"\\\\\\\"\", $$($nesting, 'APOS'), \"\\\\'\"));\n      Opal.const_set($nesting[0], 'NameRx', new RegExp(\"\" + ($$($nesting, 'CG_WORD')) + \"[\" + ($$($nesting, 'CC_WORD')) + \"\\\\-.]*\"));\n      Opal.const_set($nesting[0], 'BlankRx', /[ \\t]+/);\n      Opal.const_set($nesting[0], 'SkipRx', $hash2([\",\"], {\",\": /[ \\t]*(,|$)/}));\n      \n      Opal.def(self, '$initialize', $AttributeList_initialize$1 = function $$initialize(source, block, delimiter) {\n        var self = this;\n\n        \n        \n        if (block == null) {\n          block = nil;\n        };\n        \n        if (delimiter == null) {\n          delimiter = \",\";\n        };\n        self.scanner = $$$('::', 'StringScanner').$new(source);\n        self.block = block;\n        self.delimiter = delimiter;\n        self.delimiter_skip_pattern = $$($nesting, 'SkipRx')['$[]'](delimiter);\n        self.delimiter_boundary_pattern = $$($nesting, 'BoundaryRx')['$[]'](delimiter);\n        return (self.attributes = nil);\n      }, $AttributeList_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$parse_into', $AttributeList_parse_into$2 = function $$parse_into(attributes, positional_attrs) {\n        var self = this;\n\n        \n        \n        if (positional_attrs == null) {\n          positional_attrs = [];\n        };\n        return attributes.$update(self.$parse(positional_attrs));\n      }, $AttributeList_parse_into$2.$$arity = -2);\n      \n      Opal.def(self, '$parse', $AttributeList_parse$3 = function $$parse(positional_attrs) {\n        var $a, self = this, index = nil;\n\n        \n        \n        if (positional_attrs == null) {\n          positional_attrs = [];\n        };\n        if ($truthy(self.attributes)) {\n          return self.attributes};\n        self.attributes = $hash2([], {});\n        index = 0;\n        while ($truthy(self.$parse_attribute(index, positional_attrs))) {\n          \n          if ($truthy(self.scanner['$eos?']())) {\n            break;};\n          self.$skip_delimiter();\n          index = $rb_plus(index, 1);\n        };\n        return self.attributes;\n      }, $AttributeList_parse$3.$$arity = -1);\n      \n      Opal.def(self, '$rekey', $AttributeList_rekey$4 = function $$rekey(positional_attrs) {\n        var self = this;\n\n        return $$($nesting, 'AttributeList').$rekey(self.attributes, positional_attrs)\n      }, $AttributeList_rekey$4.$$arity = 1);\n      Opal.defs(self, '$rekey', $AttributeList_rekey$5 = function $$rekey(attributes, positional_attrs) {\n        var $$6, self = this;\n\n        \n        $send(positional_attrs, 'each_with_index', [], ($$6 = function(key, index){var self = $$6.$$s || this, $a, val = nil, $writer = nil;\n\n        \n          \n          if (key == null) {\n            key = nil;\n          };\n          \n          if (index == null) {\n            index = nil;\n          };\n          if ($truthy(($truthy($a = key) ? (val = attributes['$[]']($rb_plus(index, 1))) : $a))) {\n            \n            $writer = [key, val];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            return nil\n          };}, $$6.$$s = self, $$6.$$arity = 2, $$6));\n        return attributes;\n      }, $AttributeList_rekey$5.$$arity = 2);\n      self.$private();\n      \n      Opal.def(self, '$parse_attribute', $AttributeList_parse_attribute$7 = function $$parse_attribute(index, positional_attrs) {\n        var $a, $b, $$8, self = this, continue$ = nil, $case = nil, name = nil, single_quoted = nil, skipped = nil, c = nil, value = nil, $writer = nil, positional_attr_name = nil;\n\n        \n        continue$ = true;\n        self.$skip_blank();\n        $case = self.scanner.$peek(1);\n        if ($$($nesting, 'QUOT')['$===']($case)) {name = self.$parse_attribute_value(self.scanner.$get_byte())}\n        else if ($$($nesting, 'APOS')['$===']($case)) {\n        name = self.$parse_attribute_value(self.scanner.$get_byte());\n        if ($truthy(name['$start_with?']($$($nesting, 'APOS')))) {\n        } else {\n          single_quoted = true\n        };}\n        else {\n        skipped = ($truthy($a = ($truthy($b = (name = self.$scan_name())) ? self.$skip_blank() : $b)) ? $a : 0);\n        if ($truthy(self.scanner['$eos?']())) {\n          \n          if ($truthy(($truthy($a = name) ? $a : self.scanner.$string().$rstrip()['$end_with?'](self.delimiter)))) {\n          } else {\n            return nil\n          };\n          continue$ = nil;\n        } else if ((c = self.scanner.$get_byte())['$=='](self.delimiter)) {\n          self.scanner.$unscan()\n        } else if ($truthy(name)) {\n          if (c['$=='](\"=\")) {\n            \n            self.$skip_blank();\n            $case = (c = self.scanner.$get_byte());\n            if ($$($nesting, 'QUOT')['$===']($case)) {value = self.$parse_attribute_value(c)}\n            else if ($$($nesting, 'APOS')['$===']($case)) {\n            value = self.$parse_attribute_value(c);\n            if ($truthy(value['$start_with?']($$($nesting, 'APOS')))) {\n            } else {\n              single_quoted = true\n            };}\n            else if (self.delimiter['$===']($case)) {\n            value = \"\";\n            self.scanner.$unscan();}\n            else if (nil['$===']($case)) {value = \"\"}\n            else {\n            value = \"\" + (c) + (self.$scan_to_delimiter());\n            if (value['$=='](\"None\")) {\n              return true};};\n          } else {\n            name = \"\" + (name) + ($rb_times(\" \", skipped)) + (c) + (self.$scan_to_delimiter())\n          }\n        } else {\n          name = \"\" + (c) + (self.$scan_to_delimiter())\n        };};\n        if ($truthy(value)) {\n          $case = name;\n          if (\"options\"['$===']($case) || \"opts\"['$===']($case)) {if ($truthy(value['$include?'](\",\"))) {\n            \n            if ($truthy(value['$include?'](\" \"))) {\n              value = value.$delete(\" \")};\n            $send(value.$split(\",\"), 'each', [], ($$8 = function(opt){var self = $$8.$$s || this, $writer = nil;\n              if (self.attributes == null) self.attributes = nil;\n\n            \n              \n              if (opt == null) {\n                opt = nil;\n              };\n              if ($truthy(opt['$empty?']())) {\n                return nil\n              } else {\n                \n                $writer = [\"\" + (opt) + \"-option\", \"\"];\n                $send(self.attributes, '[]=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];\n              };}, $$8.$$s = self, $$8.$$arity = 1, $$8));\n          } else if ($truthy(value['$empty?']())) {\n          } else {\n            \n            $writer = [\"\" + (value) + \"-option\", \"\"];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          }}\n          else {if ($truthy(($truthy($a = single_quoted) ? self.block : $a))) {\n            $case = name;\n            if (\"title\"['$===']($case) || \"reftext\"['$===']($case)) {\n            $writer = [name, value];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else {\n            $writer = [name, self.block.$apply_subs(value)];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n          } else {\n            \n            $writer = [name, value];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          }}\n        } else {\n          \n          if ($truthy(($truthy($a = single_quoted) ? self.block : $a))) {\n            name = self.block.$apply_subs(name)};\n          if ($truthy(($truthy($a = (positional_attr_name = positional_attrs['$[]'](index))) ? name : $a))) {\n            \n            $writer = [positional_attr_name, name];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          \n          $writer = [$rb_plus(index, 1), name];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        };\n        return continue$;\n      }, $AttributeList_parse_attribute$7.$$arity = 2);\n      \n      Opal.def(self, '$parse_attribute_value', $AttributeList_parse_attribute_value$9 = function $$parse_attribute_value(quote) {\n        var self = this, value = nil;\n\n        if (self.scanner.$peek(1)['$=='](quote)) {\n          \n          self.scanner.$get_byte();\n          return \"\";\n        } else if ($truthy((value = self.$scan_to_quote(quote)))) {\n          \n          self.scanner.$get_byte();\n          if ($truthy(value['$include?']($$($nesting, 'BACKSLASH')))) {\n            \n            return value.$gsub($$($nesting, 'EscapedQuotes')['$[]'](quote), quote);\n          } else {\n            return value\n          };\n        } else {\n          return \"\" + (quote) + (self.$scan_to_delimiter())\n        }\n      }, $AttributeList_parse_attribute_value$9.$$arity = 1);\n      \n      Opal.def(self, '$skip_blank', $AttributeList_skip_blank$10 = function $$skip_blank() {\n        var self = this;\n\n        return self.scanner.$skip($$($nesting, 'BlankRx'))\n      }, $AttributeList_skip_blank$10.$$arity = 0);\n      \n      Opal.def(self, '$skip_delimiter', $AttributeList_skip_delimiter$11 = function $$skip_delimiter() {\n        var self = this;\n\n        return self.scanner.$skip(self.delimiter_skip_pattern)\n      }, $AttributeList_skip_delimiter$11.$$arity = 0);\n      \n      Opal.def(self, '$scan_name', $AttributeList_scan_name$12 = function $$scan_name() {\n        var self = this;\n\n        return self.scanner.$scan($$($nesting, 'NameRx'))\n      }, $AttributeList_scan_name$12.$$arity = 0);\n      \n      Opal.def(self, '$scan_to_delimiter', $AttributeList_scan_to_delimiter$13 = function $$scan_to_delimiter() {\n        var self = this;\n\n        return self.scanner.$scan(self.delimiter_boundary_pattern)\n      }, $AttributeList_scan_to_delimiter$13.$$arity = 0);\n      return (Opal.def(self, '$scan_to_quote', $AttributeList_scan_to_quote$14 = function $$scan_to_quote(quote) {\n        var self = this;\n\n        return self.scanner.$scan($$($nesting, 'BoundaryRx')['$[]'](quote))\n      }, $AttributeList_scan_to_quote$14.$$arity = 1), nil) && 'scan_to_quote';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/block\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$default=', '$-', '$attr_accessor', '$[]', '$key?', '$===', '$drop', '$delete', '$to_s', '$[]=', '$commit_subs', '$nil_or_empty?', '$prepare_source_string', '$apply_subs', '$join', '$<', '$size', '$empty?', '$rstrip', '$shift', '$pop', '$==', '$warn', '$logger', '$class', '$object_id', '$inspect']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Block');\n\n      var $nesting = [self].concat($parent_nesting), $Block_initialize$1, $Block_content$2, $Block_source$3, $Block_to_s$4, $writer = nil;\n\n      self.$$prototype.attributes = self.$$prototype.content_model = self.$$prototype.lines = self.$$prototype.subs = self.$$prototype.blocks = self.$$prototype.context = self.$$prototype.style = nil;\n      \n      \n      $writer = [\"simple\"];\n      $send(Opal.const_set($nesting[0], 'DEFAULT_CONTENT_MODEL', $hash2([\"audio\", \"image\", \"listing\", \"literal\", \"stem\", \"open\", \"page_break\", \"pass\", \"thematic_break\", \"video\"], {\"audio\": \"empty\", \"image\": \"empty\", \"listing\": \"verbatim\", \"literal\": \"verbatim\", \"stem\": \"raw\", \"open\": \"compound\", \"page_break\": \"empty\", \"pass\": \"raw\", \"thematic_break\": \"empty\", \"video\": \"empty\"})), 'default=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      Opal.alias(self, \"blockname\", \"context\");\n      self.$attr_accessor(\"lines\");\n      \n      Opal.def(self, '$initialize', $Block_initialize$1 = function $$initialize(parent, context, opts) {\n        var $a, $iter = $Block_initialize$1.$$p, $yield = $iter || nil, self = this, subs = nil, $case = nil, $writer = nil, raw_source = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Block_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Block_initialize$1, false), $zuper, $iter);\n        self.content_model = ($truthy($a = opts['$[]'](\"content_model\")) ? $a : $$($nesting, 'DEFAULT_CONTENT_MODEL')['$[]'](context));\n        if ($truthy(opts['$key?'](\"subs\"))) {\n          if ($truthy((subs = opts['$[]'](\"subs\")))) {\n            \n            $case = subs;\n            if (\"default\"['$===']($case)) {self.default_subs = opts['$[]'](\"default_subs\")}\n            else if ($$$('::', 'Array')['$===']($case)) {\n            self.default_subs = subs.$drop(0);\n            self.attributes.$delete(\"subs\");}\n            else {\n            self.default_subs = nil;\n            \n            $writer = [\"subs\", subs.$to_s()];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;};\n            self.$commit_subs();\n          } else {\n            \n            self.default_subs = [];\n            self.attributes.$delete(\"subs\");\n          }\n        } else {\n          self.default_subs = nil\n        };\n        if ($truthy((raw_source = opts['$[]'](\"source\"))['$nil_or_empty?']())) {\n          return (self.lines = [])\n        } else if ($truthy($$$('::', 'String')['$==='](raw_source))) {\n          return (self.lines = $$($nesting, 'Helpers').$prepare_source_string(raw_source))\n        } else {\n          return (self.lines = raw_source.$drop(0))\n        };\n      }, $Block_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$content', $Block_content$2 = function $$content() {\n        var $a, $b, $iter = $Block_content$2.$$p, $yield = $iter || nil, self = this, $case = nil, result = nil, first = nil, last = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Block_content$2.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        return (function() {$case = self.content_model;\n        if (\"compound\"['$===']($case)) {return $send(self, Opal.find_super_dispatcher(self, 'content', $Block_content$2, false), $zuper, $iter)}\n        else if (\"simple\"['$===']($case)) {return self.$apply_subs(self.lines.$join($$($nesting, 'LF')), self.subs)}\n        else if (\"verbatim\"['$===']($case) || \"raw\"['$===']($case)) {\n        result = self.$apply_subs(self.lines, self.subs);\n        if ($truthy($rb_lt(result.$size(), 2))) {\n          return result['$[]'](0)\n        } else {\n          \n          while ($truthy(($truthy($b = (first = result['$[]'](0))) ? first.$rstrip()['$empty?']() : $b))) {\n            result.$shift()\n          };\n          while ($truthy(($truthy($b = (last = result['$[]'](-1))) ? last.$rstrip()['$empty?']() : $b))) {\n            result.$pop()\n          };\n          return result.$join($$($nesting, 'LF'));\n        };}\n        else {\n        if (self.content_model['$=='](\"empty\")) {\n        } else {\n          self.$logger().$warn(\"\" + \"Unknown content model '\" + (self.content_model) + \"' for block: \" + (self))\n        };\n        return nil;}})()\n      }, $Block_content$2.$$arity = 0);\n      \n      Opal.def(self, '$source', $Block_source$3 = function $$source() {\n        var self = this;\n\n        return self.lines.$join($$($nesting, 'LF'))\n      }, $Block_source$3.$$arity = 0);\n      return (Opal.def(self, '$to_s', $Block_to_s$4 = function $$to_s() {\n        var self = this, content_summary = nil;\n\n        \n        content_summary = (function() {if (self.content_model['$=='](\"compound\")) {\n          return \"\" + \"blocks: \" + (self.blocks.$size())\n        } else {\n          return \"\" + \"lines: \" + (self.lines.$size())\n        }; return nil; })();\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {context: \" + (self.context.$inspect()) + \", content_model: \" + (self.content_model.$inspect()) + \", style: \" + (self.style.$inspect()) + \", \" + (content_summary) + \"}>\";\n      }, $Block_to_s$4.$$arity = 0), nil) && 'to_s';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/callouts\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$next_list', '$<<', '$current_list', '$to_i', '$generate_next_callout_id', '$+', '$<=', '$size', '$[]', '$-', '$chop', '$join', '$map', '$==', '$<', '$private', '$generate_callout_id']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Callouts');\n\n      var $nesting = [self].concat($parent_nesting), $Callouts_initialize$1, $Callouts_register$2, $Callouts_read_next_id$3, $Callouts_callout_ids$4, $Callouts_current_list$6, $Callouts_next_list$7, $Callouts_rewind$8, $Callouts_generate_next_callout_id$9, $Callouts_generate_callout_id$10;\n\n      self.$$prototype.co_index = self.$$prototype.lists = self.$$prototype.list_index = nil;\n      \n      \n      Opal.def(self, '$initialize', $Callouts_initialize$1 = function $$initialize() {\n        var self = this;\n\n        \n        self.lists = [];\n        self.list_index = 0;\n        return self.$next_list();\n      }, $Callouts_initialize$1.$$arity = 0);\n      \n      Opal.def(self, '$register', $Callouts_register$2 = function $$register(li_ordinal) {\n        var self = this, id = nil;\n\n        \n        self.$current_list()['$<<']($hash2([\"ordinal\", \"id\"], {\"ordinal\": li_ordinal.$to_i(), \"id\": (id = self.$generate_next_callout_id())}));\n        self.co_index = $rb_plus(self.co_index, 1);\n        return id;\n      }, $Callouts_register$2.$$arity = 1);\n      \n      Opal.def(self, '$read_next_id', $Callouts_read_next_id$3 = function $$read_next_id() {\n        var self = this, id = nil, list = nil;\n\n        \n        id = nil;\n        list = self.$current_list();\n        if ($truthy($rb_le(self.co_index, list.$size()))) {\n          id = list['$[]']($rb_minus(self.co_index, 1))['$[]'](\"id\")};\n        self.co_index = $rb_plus(self.co_index, 1);\n        return id;\n      }, $Callouts_read_next_id$3.$$arity = 0);\n      \n      Opal.def(self, '$callout_ids', $Callouts_callout_ids$4 = function $$callout_ids(li_ordinal) {\n        var $$5, self = this;\n\n        return $send(self.$current_list(), 'map', [], ($$5 = function(it){var self = $$5.$$s || this;\n\n        \n          \n          if (it == null) {\n            it = nil;\n          };\n          if (it['$[]'](\"ordinal\")['$=='](li_ordinal)) {\n            return \"\" + (it['$[]'](\"id\")) + \" \"\n          } else {\n            return \"\"\n          };}, $$5.$$s = self, $$5.$$arity = 1, $$5)).$join().$chop()\n      }, $Callouts_callout_ids$4.$$arity = 1);\n      \n      Opal.def(self, '$current_list', $Callouts_current_list$6 = function $$current_list() {\n        var self = this;\n\n        return self.lists['$[]']($rb_minus(self.list_index, 1))\n      }, $Callouts_current_list$6.$$arity = 0);\n      \n      Opal.def(self, '$next_list', $Callouts_next_list$7 = function $$next_list() {\n        var self = this;\n\n        \n        self.list_index = $rb_plus(self.list_index, 1);\n        if ($truthy($rb_lt(self.lists.$size(), self.list_index))) {\n          self.lists['$<<']([])};\n        self.co_index = 1;\n        return nil;\n      }, $Callouts_next_list$7.$$arity = 0);\n      \n      Opal.def(self, '$rewind', $Callouts_rewind$8 = function $$rewind() {\n        var self = this;\n\n        \n        self.list_index = 1;\n        self.co_index = 1;\n        return nil;\n      }, $Callouts_rewind$8.$$arity = 0);\n      self.$private();\n      \n      Opal.def(self, '$generate_next_callout_id', $Callouts_generate_next_callout_id$9 = function $$generate_next_callout_id() {\n        var self = this;\n\n        return self.$generate_callout_id(self.list_index, self.co_index)\n      }, $Callouts_generate_next_callout_id$9.$$arity = 0);\n      return (Opal.def(self, '$generate_callout_id', $Callouts_generate_callout_id$10 = function $$generate_callout_id(list_index, co_index) {\n        var self = this;\n\n        return \"\" + \"CO\" + (list_index) + \"-\" + (co_index)\n      }, $Callouts_generate_callout_id$10.$$arity = 2), nil) && 'generate_callout_id';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/converter\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send, $klass = Opal.klass, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$autoload', '$__dir__', '$attr_reader', '$raise', '$class', '$[]', '$sub', '$slice', '$length', '$==', '$[]=', '$backend_traits', '$-', '$derive_backend_traits', '$register', '$map', '$to_s', '$new', '$create', '$default', '$each', '$default=', '$registry', '$for', '$===', '$supports_templates?', '$merge', '$private', '$include', '$delete', '$clear', '$send', '$extend', '$private_class_method', '$node_name', '$+', '$receiver', '$name', '$warn', '$logger', '$respond_to?', '$content']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Converter');\n\n      var $nesting = [self].concat($parent_nesting), $Converter_initialize$1, $Converter_convert$2, $Converter_handles$ques$3, $Converter_derive_backend_traits$4, $Converter_included$28;\n\n      \n      self.$autoload(\"CompositeConverter\", \"\" + (self.$__dir__()) + \"/converter/composite\");\n      self.$autoload(\"TemplateConverter\", \"\" + (self.$__dir__()) + \"/converter/template\");\n      self.$attr_reader(\"backend\");\n      \n      Opal.def(self, '$initialize', $Converter_initialize$1 = function $$initialize(backend, opts) {\n        var self = this;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        return (self.backend = backend);\n      }, $Converter_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$convert', $Converter_convert$2 = function $$convert(node, transform, opts) {\n        var self = this;\n        if (self.backend == null) self.backend = nil;\n\n        \n        \n        if (transform == null) {\n          transform = nil;\n        };\n        \n        if (opts == null) {\n          opts = nil;\n        };\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + (self.$class()) + \" (backend: \" + (self.backend) + \") must implement the #\" + (\"convert\") + \" method\");\n      }, $Converter_convert$2.$$arity = -2);\n      \n      Opal.def(self, '$handles?', $Converter_handles$ques$3 = function(transform) {\n        var self = this;\n\n        return true\n      }, $Converter_handles$ques$3.$$arity = 1);\n      Opal.defs(self, '$derive_backend_traits', $Converter_derive_backend_traits$4 = function $$derive_backend_traits(backend, basebackend) {\n        var $a, self = this, outfilesuffix = nil, filetype = nil;\n\n        \n        \n        if (basebackend == null) {\n          basebackend = nil;\n        };\n        if ($truthy(backend)) {\n        } else {\n          return $hash2([], {})\n        };\n        if ($truthy((outfilesuffix = $$($nesting, 'DEFAULT_EXTENSIONS')['$[]']((basebackend = ($truthy($a = basebackend) ? $a : backend.$sub($$($nesting, 'TrailingDigitsRx'), \"\"))))))) {\n          filetype = outfilesuffix.$slice(1, outfilesuffix.$length())\n        } else {\n          outfilesuffix = \"\" + \".\" + ((filetype = basebackend))\n        };\n        if (filetype['$=='](\"html\")) {\n          return $hash2([\"basebackend\", \"filetype\", \"htmlsyntax\", \"outfilesuffix\"], {\"basebackend\": basebackend, \"filetype\": filetype, \"htmlsyntax\": \"html\", \"outfilesuffix\": outfilesuffix})\n        } else {\n          return $hash2([\"basebackend\", \"filetype\", \"outfilesuffix\"], {\"basebackend\": basebackend, \"filetype\": filetype, \"outfilesuffix\": outfilesuffix})\n        };\n      }, $Converter_derive_backend_traits$4.$$arity = -2);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'BackendTraits');\n\n        var $nesting = [self].concat($parent_nesting), $BackendTraits_basebackend$5, $BackendTraits_filetype$6, $BackendTraits_htmlsyntax$7, $BackendTraits_outfilesuffix$8, $BackendTraits_supports_templates$9, $BackendTraits_supports_templates$ques$10, $BackendTraits_init_backend_traits$11, $BackendTraits_backend_traits$12, $BackendTraits_derive_backend_traits$13;\n\n        \n        \n        Opal.def(self, '$basebackend', $BackendTraits_basebackend$5 = function $$basebackend(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          if ($truthy(value)) {\n            \n            \n            $writer = [\"basebackend\", value];\n            $send(self.$backend_traits(value), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            return self.$backend_traits()['$[]'](\"basebackend\")\n          };\n        }, $BackendTraits_basebackend$5.$$arity = -1);\n        \n        Opal.def(self, '$filetype', $BackendTraits_filetype$6 = function $$filetype(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          if ($truthy(value)) {\n            \n            \n            $writer = [\"filetype\", value];\n            $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            return self.$backend_traits()['$[]'](\"filetype\")\n          };\n        }, $BackendTraits_filetype$6.$$arity = -1);\n        \n        Opal.def(self, '$htmlsyntax', $BackendTraits_htmlsyntax$7 = function $$htmlsyntax(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          if ($truthy(value)) {\n            \n            \n            $writer = [\"htmlsyntax\", value];\n            $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            return self.$backend_traits()['$[]'](\"htmlsyntax\")\n          };\n        }, $BackendTraits_htmlsyntax$7.$$arity = -1);\n        \n        Opal.def(self, '$outfilesuffix', $BackendTraits_outfilesuffix$8 = function $$outfilesuffix(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          if ($truthy(value)) {\n            \n            \n            $writer = [\"outfilesuffix\", value];\n            $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            return self.$backend_traits()['$[]'](\"outfilesuffix\")\n          };\n        }, $BackendTraits_outfilesuffix$8.$$arity = -1);\n        \n        Opal.def(self, '$supports_templates', $BackendTraits_supports_templates$9 = function $$supports_templates(value) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (value == null) {\n            value = true;\n          };\n          $writer = [\"supports_templates\", value];\n          $send(self.$backend_traits(), '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        }, $BackendTraits_supports_templates$9.$$arity = -1);\n        \n        Opal.def(self, '$supports_templates?', $BackendTraits_supports_templates$ques$10 = function() {\n          var self = this;\n\n          return self.$backend_traits()['$[]'](\"supports_templates\")\n        }, $BackendTraits_supports_templates$ques$10.$$arity = 0);\n        \n        Opal.def(self, '$init_backend_traits', $BackendTraits_init_backend_traits$11 = function $$init_backend_traits(value) {\n          var $a, self = this;\n\n          \n          \n          if (value == null) {\n            value = nil;\n          };\n          return (self.backend_traits = ($truthy($a = value) ? $a : $hash2([], {})));\n        }, $BackendTraits_init_backend_traits$11.$$arity = -1);\n        \n        Opal.def(self, '$backend_traits', $BackendTraits_backend_traits$12 = function $$backend_traits(basebackend) {\n          var $a, self = this;\n          if (self.backend_traits == null) self.backend_traits = nil;\n          if (self.backend == null) self.backend = nil;\n\n          \n          \n          if (basebackend == null) {\n            basebackend = nil;\n          };\n          return (self.backend_traits = ($truthy($a = self.backend_traits) ? $a : $$($nesting, 'Converter').$derive_backend_traits(self.backend, basebackend)));\n        }, $BackendTraits_backend_traits$12.$$arity = -1);\n        Opal.alias(self, \"backend_info\", \"backend_traits\");\n        Opal.defs(self, '$derive_backend_traits', $BackendTraits_derive_backend_traits$13 = function $$derive_backend_traits(backend, basebackend) {\n          var self = this;\n\n          \n          \n          if (basebackend == null) {\n            basebackend = nil;\n          };\n          return $$($nesting, 'Converter').$derive_backend_traits(backend, basebackend);\n        }, $BackendTraits_derive_backend_traits$13.$$arity = -2);\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Config');\n\n        var $nesting = [self].concat($parent_nesting), $Config_register_for$14;\n\n        \n        Opal.def(self, '$register_for', $Config_register_for$14 = function $$register_for($a) {\n          var $post_args, backends, $$15, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          backends = $post_args;;\n          return $send($$($nesting, 'Converter'), 'register', [self].concat(Opal.to_a($send(backends, 'map', [], ($$15 = function(backend){var self = $$15.$$s || this;\n\n          \n            \n            if (backend == null) {\n              backend = nil;\n            };\n            return backend.$to_s();}, $$15.$$s = self, $$15.$$arity = 1, $$15)))));\n        }, $Config_register_for$14.$$arity = -1)\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Factory');\n\n        var $nesting = [self].concat($parent_nesting), $Factory_new$16, $Factory_default$17, $Factory_create$18, $Factory_register$19, $Factory_for$21, $Factory_create$22, $Factory_converters$23, $Factory_registry$24;\n\n        \n        Opal.defs(self, '$new', $Factory_new$16 = function($a, $b) {\n          var $post_args, $kwargs, converters, proxy_default, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          $kwargs = Opal.extract_kwargs($post_args);\n          \n          if ($kwargs == null) {\n            $kwargs = $hash2([], {});\n          } else if (!$kwargs.$$is_hash) {\n            throw Opal.ArgumentError.$new('expected kwargs');\n          };\n          \n          if ($post_args.length > 0) {\n            converters = $post_args[0];\n            $post_args.splice(0, 1);\n          }\n          if (converters == null) {\n            converters = nil;\n          };\n          \n          proxy_default = $kwargs.$$smap[\"proxy_default\"];\n          if (proxy_default == null) {\n            proxy_default = true\n          };\n          if ($truthy(proxy_default)) {\n            \n            return $$($nesting, 'DefaultFactoryProxy').$new(converters);\n          } else {\n            \n            return $$($nesting, 'CustomFactory').$new(converters);\n          };\n        }, $Factory_new$16.$$arity = -1);\n        Opal.defs(self, '$default', $Factory_default$17 = function($a) {\n          var $post_args, args, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $$($nesting, 'Converter');\n        }, $Factory_default$17.$$arity = -1);\n        Opal.defs(self, '$create', $Factory_create$18 = function $$create(backend, opts) {\n          var self = this;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          return self.$default().$create(backend, opts);\n        }, $Factory_create$18.$$arity = -2);\n        \n        Opal.def(self, '$register', $Factory_register$19 = function $$register(converter, $a) {\n          var $post_args, backends, $$20, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          backends = $post_args;;\n          return $send(backends, 'each', [], ($$20 = function(backend){var self = $$20.$$s || this, $writer = nil;\n\n          \n            \n            if (backend == null) {\n              backend = nil;\n            };\n            if (backend['$=='](\"*\")) {\n              \n              \n              $writer = [converter];\n              $send(self.$registry(), 'default=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else {\n              \n              \n              $writer = [backend, converter];\n              $send(self.$registry(), '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            };}, $$20.$$s = self, $$20.$$arity = 1, $$20));\n        }, $Factory_register$19.$$arity = -2);\n        \n        Opal.def(self, '$for', $Factory_for$21 = function(backend) {\n          var self = this;\n\n          return self.$registry()['$[]'](backend)\n        }, $Factory_for$21.$$arity = 1);\n        \n        Opal.def(self, '$create', $Factory_create$22 = function $$create(backend, opts) {\n          var $a, $b, self = this, converter = nil, template_dirs = nil, delegate_backend = nil;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy((converter = self.$for(backend)))) {\n            \n            if ($truthy($$$('::', 'Class')['$==='](converter))) {\n              converter = converter.$new(backend, opts)};\n            if ($truthy(($truthy($a = ($truthy($b = (template_dirs = opts['$[]'](\"template_dirs\"))) ? $$($nesting, 'BackendTraits')['$==='](converter) : $b)) ? converter['$supports_templates?']() : $a))) {\n              return $$($nesting, 'CompositeConverter').$new(backend, $$($nesting, 'TemplateConverter').$new(backend, template_dirs, opts), converter, $hash2([\"backend_traits_source\"], {\"backend_traits_source\": converter}))\n            } else {\n              return converter\n            };\n          } else if ($truthy((template_dirs = opts['$[]'](\"template_dirs\")))) {\n            if ($truthy(($truthy($a = (delegate_backend = opts['$[]'](\"delegate_backend\"))) ? (converter = self.$for(delegate_backend)) : $a))) {\n              \n              if ($truthy($$$('::', 'Class')['$==='](converter))) {\n                converter = converter.$new(delegate_backend, opts)};\n              return $$($nesting, 'CompositeConverter').$new(backend, $$($nesting, 'TemplateConverter').$new(backend, template_dirs, opts), converter, $hash2([\"backend_traits_source\"], {\"backend_traits_source\": converter}));\n            } else {\n              return $$($nesting, 'TemplateConverter').$new(backend, template_dirs, opts)\n            }\n          } else {\n            return nil\n          };\n        }, $Factory_create$22.$$arity = -2);\n        \n        Opal.def(self, '$converters', $Factory_converters$23 = function $$converters() {\n          var self = this;\n\n          return self.$registry().$merge()\n        }, $Factory_converters$23.$$arity = 0);\n        self.$private();\n        \n        Opal.def(self, '$registry', $Factory_registry$24 = function $$registry() {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Factory')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"registry\") + \" method\")\n        }, $Factory_registry$24.$$arity = 0);\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'CustomFactory');\n\n        var $nesting = [self].concat($parent_nesting), $CustomFactory_initialize$25, $CustomFactory_unregister_all$26;\n\n        \n        self.$include($$($nesting, 'Factory'));\n        \n        Opal.def(self, '$initialize', $CustomFactory_initialize$25 = function $$initialize(seed_registry) {\n          var self = this, $writer = nil;\n\n          \n          \n          if (seed_registry == null) {\n            seed_registry = nil;\n          };\n          if ($truthy(seed_registry)) {\n            \n            \n            $writer = [seed_registry.$delete(\"*\")];\n            $send(seed_registry, 'default=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            return (self.registry = seed_registry);\n          } else {\n            return (self.registry = $hash2([], {}))\n          };\n        }, $CustomFactory_initialize$25.$$arity = -1);\n        \n        Opal.def(self, '$unregister_all', $CustomFactory_unregister_all$26 = function $$unregister_all() {\n          var self = this, $writer = nil;\n\n          \n          $writer = [nil];\n          $send(self.$registry().$clear(), 'default=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        }, $CustomFactory_unregister_all$26.$$arity = 0);\n        self.$private();\n        return self.$attr_reader(\"registry\");\n      })($nesting[0], null, $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'DefaultFactory');\n\n        var $nesting = [self].concat($parent_nesting), $DefaultFactory_registry$27;\n\n        \n        self.$include($$($nesting, 'Factory'));\n        self.$private();\n        (Opal.class_variable_set($nesting[0], '@@registry', $hash2([], {})));\n        \n        Opal.def(self, '$registry', $DefaultFactory_registry$27 = function $$registry() {\n          var $a, self = this;\n\n          return (($a = $nesting[0].$$cvars['@@registry']) == null ? nil : $a)\n        }, $DefaultFactory_registry$27.$$arity = 0);\n        if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        } else {\n          nil\n        };\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DefaultFactoryProxy');\n\n        var $nesting = [self].concat($parent_nesting);\n\n        \n        self.$include($$($nesting, 'DefaultFactory'));\n        if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n          return nil\n        } else {\n          return nil\n        };\n      })($nesting[0], $$($nesting, 'CustomFactory'), $nesting);\n      Opal.defs(self, '$included', $Converter_included$28 = function $$included(into) {\n        var self = this;\n\n        \n        into.$send(\"include\", $$($nesting, 'BackendTraits'));\n        return into.$extend($$($nesting, 'Config'));\n      }, $Converter_included$28.$$arity = 1);\n      self.$private_class_method(\"included\");\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Base');\n\n        var $nesting = [self].concat($parent_nesting), $Base_convert$29, $Base_handles$ques$30, $Base_content_only$31, $Base_skip$32;\n\n        self.$$prototype.backend = nil;\n        \n        self.$include($$($nesting, 'Logging'));\n        self.$include($$($nesting, 'Converter'));\n        \n        Opal.def(self, '$convert', $Base_convert$29 = function $$convert(node, transform, opts) {\n          var $a, $b, self = this, ex = nil;\n          if ($gvars[\"!\"] == null) $gvars[\"!\"] = nil;\n\n          \n          \n          if (transform == null) {\n            transform = node.$node_name();\n          };\n          \n          if (opts == null) {\n            opts = nil;\n          };\n          try {\n            if ($truthy(opts)) {\n              \n              return self.$send($rb_plus(\"convert_\", transform), node, opts);\n            } else {\n              \n              return self.$send($rb_plus(\"convert_\", transform), node);\n            }\n          } catch ($err) {\n            if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n              try {\n                \n                if ($truthy(($truthy($a = ($truthy($b = $$$('::', 'NoMethodError')['$===']((ex = $gvars[\"!\"]))) ? ex.$receiver()['$=='](self) : $b)) ? ex.$name().$to_s()['$=='](transform) : $a))) {\n                } else {\n                  self.$raise()\n                };\n                self.$logger().$warn(\"\" + \"missing convert handler for \" + (ex.$name()) + \" node in \" + (self.backend) + \" backend (\" + (self.$class()) + \")\");\n                return nil;\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          };\n        }, $Base_convert$29.$$arity = -2);\n        \n        Opal.def(self, '$handles?', $Base_handles$ques$30 = function(transform) {\n          var self = this;\n\n          return self['$respond_to?'](\"\" + \"convert_\" + (transform))\n        }, $Base_handles$ques$30.$$arity = 1);\n        \n        Opal.def(self, '$content_only', $Base_content_only$31 = function $$content_only(node) {\n          var self = this;\n\n          return node.$content()\n        }, $Base_content_only$31.$$arity = 1);\n        return (Opal.def(self, '$skip', $Base_skip$32 = function $$skip(node) {\n          var self = this;\n\n          return nil\n        }, $Base_skip$32.$$arity = 1), nil) && 'skip';\n      })($nesting[0], null, $nesting);\n      self.$extend($$($nesting, 'DefaultFactory'));\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/document\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2, $hash = Opal.hash, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$new', '$attr_reader', '$nil?', '$<<', '$[]', '$[]=', '$-', '$include?', '$strip', '$squeeze', '$gsub', '$empty?', '$!', '$rpartition', '$attr_accessor', '$delete', '$base_dir', '$options', '$merge', '$catalog', '$instance_variable_get', '$attributes', '$safe', '$compat_mode', '$outfilesuffix', '$sourcemap', '$path_resolver', '$converter', '$extensions', '$syntax_highlighter', '$each', '$end_with?', '$start_with?', '$slice', '$length', '$chop', '$==', '$downcase', '$===', '$extname', '$value_for_name', '$key?', '$freeze', '$attribute_undefined', '$attribute_missing', '$update', '$&', '$keys', '$name_for_value', '$expand_path', '$pwd', '$to_s', '$>=', '$+', '$abs', '$to_i', '$delete_if', '$update_doctype_attributes', '$cursor', '$parse', '$restore_attributes', '$update_backend_attributes', '$fetch', '$fill_datetime_attributes', '$activate', '$groups', '$create', '$to_proc', '$preprocessors?', '$preprocessors', '$process_method', '$tree_processors?', '$tree_processors', '$!=', '$counter', '$attribute_locked?', '$nil_or_empty?', '$nextval', '$value', '$save_to', '$register', '$tap', '$xreftext', '$source', '$source_lines', '$doctitle', '$sectname=', '$title=', '$first_section', '$title', '$reftext', '$>', '$<', '$find', '$context', '$assign_numeral', '$clear_playback_attributes', '$save_attributes', '$name', '$negate', '$rewind', '$replace', '$apply_attribute_value_subs', '$delete?', '$start', '$doctype', '$content_model', '$warn', '$logger', '$content', '$convert', '$postprocessors?', '$postprocessors', '$record', '$write', '$respond_to?', '$chomp', '$class', '$write_alternate_pages', '$map', '$split', '$resolve_docinfo_subs', '$normalize_system_path', '$read_asset', '$apply_subs', '$docinfo_processors?', '$join', '$concat', '$compact', '$docinfo_processors', '$object_id', '$inspect', '$size', '$private', '$=~', '$resolve_pass_subs', '$apply_header_subs', '$limit_bytesize', '$bytesize', '$valid_encoding?', '$byteslice', '$resolve_subs', '$utc', '$at', '$Integer', '$now', '$index', '$strftime', '$year', '$utc_offset', '$partition', '$create_converter', '$basebackend', '$filetype', '$htmlsyntax', '$derive_backend_traits', '$raise']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Document');\n\n      var $nesting = [self].concat($parent_nesting), $Document$1, $Document_initialize$8, $Document_parse$11, $Document_parsed$ques$14, $Document_counter$15, $Document_increment_and_store_counter$16, $Document_register$17, $Document_resolve_id$18, $Document_footnotes$ques$22, $Document_footnotes$23, $Document_callouts$24, $Document_nested$ques$25, $Document_embedded$ques$26, $Document_extensions$ques$27, $Document_source$28, $Document_source_lines$29, $Document_basebackend$ques$30, $Document_title$31, $Document_title$eq$32, $Document_doctitle$33, $Document_xreftext$34, $Document_author$35, $Document_authors$36, $Document_revdate$37, $Document_notitle$38, $Document_noheader$39, $Document_nofooter$40, $Document_first_section$41, $Document_header$ques$43, $Document_$lt$lt$44, $Document_finalize_header$45, $Document_playback_attributes$46, $Document_restore_attributes$48, $Document_set_attribute$49, $Document_delete_attribute$50, $Document_attribute_locked$ques$51, $Document_set_header_attribute$52, $Document_convert$53, $Document_write$55, $Document_content$56, $Document_docinfo$57, $Document_docinfo_processors$ques$60, $Document_to_s$61, $Document_apply_attribute_value_subs$62, $Document_limit_bytesize$63, $Document_resolve_docinfo_subs$64, $Document_create_converter$65, $Document_clear_playback_attributes$66, $Document_save_attributes$67, $Document_fill_datetime_attributes$69, $Document_update_backend_attributes$70, $Document_update_doctype_attributes$71;\n\n      self.$$prototype.attributes = self.$$prototype.safe = self.$$prototype.sourcemap = self.$$prototype.reader = self.$$prototype.base_dir = self.$$prototype.parsed = self.$$prototype.parent_document = self.$$prototype.extensions = self.$$prototype.options = self.$$prototype.counters = self.$$prototype.catalog = self.$$prototype.reftexts = self.$$prototype.header = self.$$prototype.blocks = self.$$prototype.header_attributes = self.$$prototype.attributes_modified = self.$$prototype.backend = self.$$prototype.attribute_overrides = self.$$prototype.timings = self.$$prototype.converter = self.$$prototype.outfilesuffix = self.$$prototype.docinfo_processor_extensions = self.$$prototype.document = self.$$prototype.max_attribute_value_size = self.$$prototype.id = self.$$prototype.doctype = nil;\n      \n      Opal.const_set($nesting[0], 'ImageReference', $send($$$('::', 'Struct'), 'new', [\"target\", \"imagesdir\"], ($Document$1 = function(){var self = $Document$1.$$s || this;\n\n      return Opal.alias(self, \"to_s\", \"target\")}, $Document$1.$$s = self, $Document$1.$$arity = 0, $Document$1)));\n      Opal.const_set($nesting[0], 'Footnote', $$$('::', 'Struct').$new(\"index\", \"id\", \"text\"));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'AttributeEntry');\n\n        var $nesting = [self].concat($parent_nesting), $AttributeEntry_initialize$2, $AttributeEntry_save_to$3;\n\n        \n        self.$attr_reader(\"name\", \"value\", \"negate\");\n        \n        Opal.def(self, '$initialize', $AttributeEntry_initialize$2 = function $$initialize(name, value, negate) {\n          var self = this;\n\n          \n          \n          if (negate == null) {\n            negate = nil;\n          };\n          self.name = name;\n          self.value = value;\n          return (self.negate = (function() {if ($truthy(negate['$nil?']())) {\n            return value['$nil?']()\n          } else {\n            return negate\n          }; return nil; })());\n        }, $AttributeEntry_initialize$2.$$arity = -3);\n        return (Opal.def(self, '$save_to', $AttributeEntry_save_to$3 = function $$save_to(block_attributes) {\n          var $a, self = this, $writer = nil;\n\n          \n          ($truthy($a = block_attributes['$[]'](\"attribute_entries\")) ? $a : (($writer = [\"attribute_entries\", []]), $send(block_attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$<<'](self);\n          return self;\n        }, $AttributeEntry_save_to$3.$$arity = 1), nil) && 'save_to';\n      })($nesting[0], null, $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Title');\n\n        var $nesting = [self].concat($parent_nesting), $Title_initialize$4, $Title_sanitized$ques$5, $Title_subtitle$ques$6, $Title_to_s$7;\n\n        self.$$prototype.sanitized = self.$$prototype.subtitle = self.$$prototype.combined = nil;\n        \n        self.$attr_reader(\"main\");\n        Opal.alias(self, \"title\", \"main\");\n        self.$attr_reader(\"subtitle\");\n        self.$attr_reader(\"combined\");\n        \n        Opal.def(self, '$initialize', $Title_initialize$4 = function $$initialize(val, opts) {\n          var $a, $b, self = this, sep = nil, _ = nil;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy(($truthy($a = (self.sanitized = opts['$[]'](\"sanitize\"))) ? val['$include?'](\"<\") : $a))) {\n            val = val.$gsub($$($nesting, 'XmlSanitizeRx'), \"\").$squeeze(\" \").$strip()};\n          if ($truthy(($truthy($a = (sep = ($truthy($b = opts['$[]'](\"separator\")) ? $b : \":\"))['$empty?']()) ? $a : val['$include?']((sep = \"\" + (sep) + \" \"))['$!']()))) {\n            \n            self.main = val;\n            self.subtitle = nil;\n          } else {\n            $b = val.$rpartition(sep), $a = Opal.to_ary($b), (self.main = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (self.subtitle = ($a[2] == null ? nil : $a[2])), $b\n          };\n          return (self.combined = val);\n        }, $Title_initialize$4.$$arity = -2);\n        \n        Opal.def(self, '$sanitized?', $Title_sanitized$ques$5 = function() {\n          var self = this;\n\n          return self.sanitized\n        }, $Title_sanitized$ques$5.$$arity = 0);\n        \n        Opal.def(self, '$subtitle?', $Title_subtitle$ques$6 = function() {\n          var self = this;\n\n          if ($truthy(self.subtitle)) {\n            return true\n          } else {\n            return false\n          }\n        }, $Title_subtitle$ques$6.$$arity = 0);\n        return (Opal.def(self, '$to_s', $Title_to_s$7 = function $$to_s() {\n          var self = this;\n\n          return self.combined\n        }, $Title_to_s$7.$$arity = 0), nil) && 'to_s';\n      })($nesting[0], null, $nesting);\n      Opal.const_set($nesting[0], 'Author', $$$('::', 'Struct').$new(\"name\", \"firstname\", \"middlename\", \"lastname\", \"initials\", \"email\"));\n      self.$attr_reader(\"safe\");\n      self.$attr_reader(\"compat_mode\");\n      self.$attr_reader(\"backend\");\n      self.$attr_reader(\"doctype\");\n      self.$attr_accessor(\"sourcemap\");\n      self.$attr_reader(\"catalog\");\n      Opal.alias(self, \"references\", \"catalog\");\n      self.$attr_reader(\"counters\");\n      self.$attr_reader(\"header\");\n      self.$attr_reader(\"base_dir\");\n      self.$attr_reader(\"options\");\n      self.$attr_reader(\"outfilesuffix\");\n      self.$attr_reader(\"parent_document\");\n      self.$attr_reader(\"reader\");\n      self.$attr_reader(\"path_resolver\");\n      self.$attr_reader(\"converter\");\n      self.$attr_reader(\"syntax_highlighter\");\n      self.$attr_reader(\"extensions\");\n      \n      Opal.def(self, '$initialize', $Document_initialize$8 = function $$initialize(data, options) {\n        var $a, $$9, $b, $c, $$10, $d, $e, $f, $g, $iter = $Document_initialize$8.$$p, $yield = $iter || nil, self = this, parent_doc = nil, $writer = nil, attr_overrides = nil, parent_doctype = nil, initialize_extensions = nil, to_file = nil, safe_mode = nil, input_mtime = nil, standalone = nil, attrs = nil, safe_mode_name = nil, base_dir_val = nil, backend_val = nil, doctype_val = nil, size = nil, initial_backend = nil, ext_registry = nil, ext_block = nil;\n\n        if ($iter) $Document_initialize$8.$$p = null;\n        \n        \n        if (data == null) {\n          data = nil;\n        };\n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Document_initialize$8, false), [self, \"document\"], null);\n        if ($truthy((parent_doc = options.$delete(\"parent\")))) {\n          \n          self.parent_document = parent_doc;\n          ($truthy($a = options['$[]'](\"base_dir\")) ? $a : (($writer = [\"base_dir\", parent_doc.$base_dir()]), $send(options, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          if ($truthy(parent_doc.$options()['$[]'](\"catalog_assets\"))) {\n            \n            $writer = [\"catalog_assets\", true];\n            $send(options, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          self.catalog = parent_doc.$catalog().$merge($hash2([\"footnotes\"], {\"footnotes\": []}));\n          self.attribute_overrides = (attr_overrides = parent_doc.$instance_variable_get(\"@attribute_overrides\").$merge(parent_doc.$attributes()));\n          attr_overrides.$delete(\"compat-mode\");\n          parent_doctype = attr_overrides.$delete(\"doctype\");\n          attr_overrides.$delete(\"notitle\");\n          attr_overrides.$delete(\"showtitle\");\n          attr_overrides.$delete(\"toc\");\n          \n          $writer = [\"toc-placement\", ($truthy($a = attr_overrides.$delete(\"toc-placement\")) ? $a : \"auto\")];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          attr_overrides.$delete(\"toc-position\");\n          self.safe = parent_doc.$safe();\n          if ($truthy((self.compat_mode = parent_doc.$compat_mode()))) {\n            \n            $writer = [\"compat-mode\", \"\"];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          self.outfilesuffix = parent_doc.$outfilesuffix();\n          self.sourcemap = parent_doc.$sourcemap();\n          self.timings = nil;\n          self.path_resolver = parent_doc.$path_resolver();\n          self.converter = parent_doc.$converter();\n          initialize_extensions = nil;\n          self.extensions = parent_doc.$extensions();\n          self.syntax_highlighter = parent_doc.$syntax_highlighter();\n        } else {\n          \n          self.parent_document = nil;\n          self.catalog = $hash2([\"ids\", \"refs\", \"footnotes\", \"links\", \"images\", \"callouts\", \"includes\"], {\"ids\": $hash2([], {}), \"refs\": $hash2([], {}), \"footnotes\": [], \"links\": [], \"images\": [], \"callouts\": $$($nesting, 'Callouts').$new(), \"includes\": $hash2([], {})});\n          self.attribute_overrides = (attr_overrides = $hash2([], {}));\n          $send(($truthy($a = options['$[]'](\"attributes\")) ? $a : $hash2([], {})), 'each', [], ($$9 = function(key, val){var self = $$9.$$s || this, $b;\n\n          \n            \n            if (key == null) {\n              key = nil;\n            };\n            \n            if (val == null) {\n              val = nil;\n            };\n            if ($truthy(key['$end_with?'](\"@\"))) {\n              if ($truthy(key['$start_with?'](\"!\"))) {\n                $b = [key.$slice(1, $rb_minus(key.$length(), 2)), false], (key = $b[0]), (val = $b[1]), $b\n              } else if ($truthy(key['$end_with?'](\"!@\"))) {\n                $b = [key.$slice(0, $rb_minus(key.$length(), 2)), false], (key = $b[0]), (val = $b[1]), $b\n              } else {\n                $b = [key.$chop(), \"\" + (val) + \"@\"], (key = $b[0]), (val = $b[1]), $b\n              }\n            } else if ($truthy(key['$start_with?'](\"!\"))) {\n              $b = [key.$slice(1, key.$length()), (function() {if (val['$=='](\"@\")) {\n                return false\n              } else {\n                return nil\n              }; return nil; })()], (key = $b[0]), (val = $b[1]), $b\n            } else if ($truthy(key['$end_with?'](\"!\"))) {\n              $b = [key.$chop(), (function() {if (val['$=='](\"@\")) {\n                return false\n              } else {\n                return nil\n              }; return nil; })()], (key = $b[0]), (val = $b[1]), $b};\n            \n            $writer = [key.$downcase(), val];\n            $send(attr_overrides, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$9.$$s = self, $$9.$$arity = 2, $$9));\n          if ($truthy($$$('::', 'String')['$===']((to_file = options['$[]'](\"to_file\"))))) {\n            \n            $writer = [\"outfilesuffix\", $$($nesting, 'Helpers').$extname(to_file)];\n            $send(attr_overrides, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy((safe_mode = options['$[]'](\"safe\"))['$!']())) {\n            self.safe = $$$($$($nesting, 'SafeMode'), 'SECURE')\n          } else if ($truthy($$$('::', 'Integer')['$==='](safe_mode))) {\n            self.safe = safe_mode\n          } else {\n            self.safe = (function() { try {\n              \n              return $$($nesting, 'SafeMode').$value_for_name(safe_mode);\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  return $$$($$($nesting, 'SafeMode'), 'SECURE')\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            }})()\n          };\n          input_mtime = options.$delete(\"input_mtime\");\n          self.compat_mode = attr_overrides['$key?'](\"compat-mode\");\n          self.sourcemap = options['$[]'](\"sourcemap\");\n          self.timings = options.$delete(\"timings\");\n          self.path_resolver = $$($nesting, 'PathResolver').$new();\n          initialize_extensions = (function() {if ($truthy(($truthy($a = (($c = $$$('::', 'Asciidoctor', 'skip_raise')) && ($b = $$$($c, 'Extensions', 'skip_raise')) ? 'constant' : nil)) ? $a : options['$key?'](\"extensions\")))) {\n            return $$$($$$('::', 'Asciidoctor'), 'Extensions')\n          } else {\n            return nil\n          }; return nil; })();\n          self.extensions = nil;\n          if ($truthy(($truthy($a = options['$key?'](\"header_footer\")) ? options['$key?'](\"standalone\")['$!']() : $a))) {\n            \n            $writer = [\"standalone\", options['$[]'](\"header_footer\")];\n            $send(options, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n        };\n        self.parsed = (self.reftexts = (self.header = (self.header_attributes = nil)));\n        self.counters = $hash2([], {});\n        self.attributes_modified = $$$('::', 'Set').$new();\n        self.docinfo_processor_extensions = $hash2([], {});\n        standalone = options['$[]'](\"standalone\");\n        (self.options = options).$freeze();\n        attrs = self.attributes;\n        if ($truthy(parent_doc)) {\n        } else {\n          \n          \n          $writer = [\"attribute-undefined\", $$($nesting, 'Compliance').$attribute_undefined()];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"attribute-missing\", $$($nesting, 'Compliance').$attribute_missing()];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          attrs.$update($$($nesting, 'DEFAULT_ATTRIBUTES'));\n        };\n        if ($truthy(standalone)) {\n          \n          \n          $writer = [\"embedded\", nil];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"copycss\", \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"iconfont-remote\", \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"stylesheet\", \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"webfonts\", \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        } else {\n          \n          \n          $writer = [\"embedded\", \"\"];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(($truthy($a = attr_overrides['$key?'](\"showtitle\")) ? attr_overrides.$keys()['$&']([\"notitle\", \"showtitle\"])['$[]'](-1)['$=='](\"showtitle\") : $a))) {\n            \n            $writer = [\"notitle\", $hash(nil, \"\", false, \"@\", \"@\", false)['$[]'](attr_overrides['$[]'](\"showtitle\"))];\n            $send(attr_overrides, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else if ($truthy(attr_overrides['$key?'](\"notitle\"))) {\n            \n            $writer = [\"showtitle\", $hash(nil, \"\", false, \"@\", \"@\", false)['$[]'](attr_overrides['$[]'](\"notitle\"))];\n            $send(attr_overrides, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            \n            $writer = [\"notitle\", \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n        };\n        \n        $writer = [\"asciidoctor\", \"\"];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"asciidoctor-version\", $$$($$$('::', 'Asciidoctor'), 'VERSION')];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"safe-mode-name\", (safe_mode_name = $$($nesting, 'SafeMode').$name_for_value(self.safe))];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"\" + \"safe-mode-\" + (safe_mode_name), \"\"];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"safe-mode-level\", self.safe];\n        $send(attr_overrides, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        ($truthy($a = attr_overrides['$[]'](\"max-include-depth\")) ? $a : (($writer = [\"max-include-depth\", 64]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attr_overrides['$[]'](\"allow-uri-read\")) ? $a : (($writer = [\"allow-uri-read\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        if ($truthy(attr_overrides['$key?'](\"numbered\"))) {\n          \n          $writer = [\"sectnums\", attr_overrides.$delete(\"numbered\")];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(attr_overrides['$key?'](\"hardbreaks\"))) {\n          \n          $writer = [\"hardbreaks-option\", attr_overrides.$delete(\"hardbreaks\")];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy((base_dir_val = options['$[]'](\"base_dir\")))) {\n          self.base_dir = (($writer = [\"docdir\", $$$('::', 'File').$expand_path(base_dir_val)]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n        } else if ($truthy(attr_overrides['$[]'](\"docdir\"))) {\n          self.base_dir = attr_overrides['$[]'](\"docdir\")\n        } else {\n          self.base_dir = (($writer = [\"docdir\", $$$('::', 'Dir').$pwd()]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n        };\n        if ($truthy((backend_val = options['$[]'](\"backend\")))) {\n          \n          $writer = [\"backend\", backend_val.$to_s()];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy((doctype_val = options['$[]'](\"doctype\")))) {\n          \n          $writer = [\"doctype\", doctype_val.$to_s()];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy($rb_ge(self.safe, $$$($$($nesting, 'SafeMode'), 'SERVER')))) {\n          \n          ($truthy($a = attr_overrides['$[]'](\"copycss\")) ? $a : (($writer = [\"copycss\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          ($truthy($a = attr_overrides['$[]'](\"source-highlighter\")) ? $a : (($writer = [\"source-highlighter\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          ($truthy($a = attr_overrides['$[]'](\"backend\")) ? $a : (($writer = [\"backend\", $$($nesting, 'DEFAULT_BACKEND')]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          if ($truthy(($truthy($a = parent_doc['$!']()) ? attr_overrides['$key?'](\"docfile\") : $a))) {\n            \n            $writer = [\"docfile\", attr_overrides['$[]'](\"docfile\")['$[]'](Opal.Range.$new($rb_plus(attr_overrides['$[]'](\"docdir\").$length(), 1), -1, false))];\n            $send(attr_overrides, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          \n          $writer = [\"docdir\", \"\"];\n          $send(attr_overrides, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          ($truthy($a = attr_overrides['$[]'](\"user-home\")) ? $a : (($writer = [\"user-home\", \".\"]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          if ($truthy($rb_ge(self.safe, $$$($$($nesting, 'SafeMode'), 'SECURE')))) {\n            \n            if ($truthy(attr_overrides['$key?'](\"max-attribute-value-size\"))) {\n            } else {\n              \n              $writer = [\"max-attribute-value-size\", 4096];\n              $send(attr_overrides, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            if ($truthy(attr_overrides['$key?'](\"linkcss\"))) {\n            } else {\n              \n              $writer = [\"linkcss\", \"\"];\n              $send(attr_overrides, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            ($truthy($a = attr_overrides['$[]'](\"icons\")) ? $a : (($writer = [\"icons\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));};\n        } else {\n          ($truthy($a = attr_overrides['$[]'](\"user-home\")) ? $a : (($writer = [\"user-home\", $$($nesting, 'USER_HOME')]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n        };\n        self.max_attribute_value_size = (function() {if ($truthy((size = ($truthy($a = attr_overrides['$[]'](\"max-attribute-value-size\")) ? $a : (($writer = [\"max-attribute-value-size\", nil]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))))) {\n          return size.$to_i().$abs()\n        } else {\n          return nil\n        }; return nil; })();\n        $send(attr_overrides, 'delete_if', [], ($$10 = function(key, val){var self = $$10.$$s || this, $d, verdict = nil;\n\n        \n          \n          if (key == null) {\n            key = nil;\n          };\n          \n          if (val == null) {\n            val = nil;\n          };\n          if ($truthy(val)) {\n            \n            if ($truthy(($truthy($d = $$$('::', 'String')['$==='](val)) ? val['$end_with?'](\"@\") : $d))) {\n              $d = [val.$chop(), true], (val = $d[0]), (verdict = $d[1]), $d};\n            \n            $writer = [key, val];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            \n            attrs.$delete(key);\n            verdict = val['$=='](false);\n          };\n          return verdict;}, $$10.$$s = self, $$10.$$arity = 2, $$10));\n        if ($truthy(parent_doc)) {\n          \n          self.backend = attrs['$[]'](\"backend\");\n          if ((self.doctype = (($writer = [\"doctype\", parent_doctype]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$==']($$($nesting, 'DEFAULT_DOCTYPE'))) {\n          } else {\n            self.$update_doctype_attributes($$($nesting, 'DEFAULT_DOCTYPE'))\n          };\n          self.reader = $$($nesting, 'Reader').$new(data, options['$[]'](\"cursor\"));\n          if ($truthy(self.sourcemap)) {\n            self.source_location = self.reader.$cursor()};\n          $$($nesting, 'Parser').$parse(self.reader, self);\n          self.$restore_attributes();\n          return (self.parsed = true);\n        } else {\n          \n          self.backend = nil;\n          if ((initial_backend = ($truthy($a = attrs['$[]'](\"backend\")) ? $a : $$($nesting, 'DEFAULT_BACKEND')))['$=='](\"manpage\")) {\n            self.doctype = (($writer = [\"doctype\", (($writer = [\"doctype\", \"manpage\"]), $send(attr_overrides, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n          } else {\n            self.doctype = ($truthy($a = attrs['$[]'](\"doctype\")) ? $a : (($writer = [\"doctype\", $$($nesting, 'DEFAULT_DOCTYPE')]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n          };\n          self.$update_backend_attributes(initial_backend, true);\n          ($truthy($a = attrs['$[]'](\"stylesdir\")) ? $a : (($writer = [\"stylesdir\", \".\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          ($truthy($a = attrs['$[]'](\"iconsdir\")) ? $a : (($writer = [\"iconsdir\", \"\" + (attrs.$fetch(\"imagesdir\", \"./images\")) + \"/icons\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          self.$fill_datetime_attributes(attrs, input_mtime);\n          if ($truthy(initialize_extensions)) {\n            if ($truthy((ext_registry = options['$[]'](\"extension_registry\")))) {\n              if ($truthy(($truthy($a = $$$($$($nesting, 'Extensions'), 'Registry')['$==='](ext_registry)) ? $a : ($truthy($d = (($g = $$$('::', 'AsciidoctorJ', 'skip_raise')) && ($f = $$$($g, 'Extensions', 'skip_raise')) && ($e = $$$($f, 'ExtensionRegistry', 'skip_raise')) ? 'constant' : nil)) ? $$$($$$($$$('::', 'AsciidoctorJ'), 'Extensions'), 'ExtensionRegistry')['$==='](ext_registry) : $d)))) {\n                self.extensions = ext_registry.$activate(self)}\n            } else if ($truthy((ext_block = options['$[]'](\"extensions\"))['$nil?']())) {\n              if ($truthy($$($nesting, 'Extensions').$groups()['$empty?']())) {\n              } else {\n                self.extensions = $$$($$($nesting, 'Extensions'), 'Registry').$new().$activate(self)\n              }\n            } else if ($truthy($$$('::', 'Proc')['$==='](ext_block))) {\n              self.extensions = $send($$($nesting, 'Extensions'), 'create', [], ext_block.$to_proc()).$activate(self)}};\n          self.reader = $$($nesting, 'PreprocessorReader').$new(self, data, $$$($$($nesting, 'Reader'), 'Cursor').$new(attrs['$[]'](\"docfile\"), self.base_dir), $hash2([\"normalize\"], {\"normalize\": true}));\n          if ($truthy(self.sourcemap)) {\n            return (self.source_location = self.reader.$cursor())\n          } else {\n            return nil\n          };\n        };\n      }, $Document_initialize$8.$$arity = -1);\n      \n      Opal.def(self, '$parse', $Document_parse$11 = function $$parse(data) {\n        var $a, $$12, $$13, self = this, doc = nil, exts = nil;\n\n        \n        \n        if (data == null) {\n          data = nil;\n        };\n        if ($truthy(self.parsed)) {\n          return self\n        } else {\n          \n          doc = self;\n          if ($truthy(data)) {\n            \n            self.reader = $$($nesting, 'PreprocessorReader').$new(doc, data, $$$($$($nesting, 'Reader'), 'Cursor').$new(self.attributes['$[]'](\"docfile\"), self.base_dir), $hash2([\"normalize\"], {\"normalize\": true}));\n            if ($truthy(self.sourcemap)) {\n              self.source_location = self.reader.$cursor()};};\n          if ($truthy(($truthy($a = (exts = (function() {if ($truthy(self.parent_document)) {\n            return nil\n          } else {\n            return self.extensions\n          }; return nil; })())) ? exts['$preprocessors?']() : $a))) {\n            $send(exts.$preprocessors(), 'each', [], ($$12 = function(ext){var self = $$12.$$s || this, $b;\n              if (self.reader == null) self.reader = nil;\n\n            \n              \n              if (ext == null) {\n                ext = nil;\n              };\n              return (self.reader = ($truthy($b = ext.$process_method()['$[]'](doc, self.reader)) ? $b : self.reader));}, $$12.$$s = self, $$12.$$arity = 1, $$12))};\n          $$($nesting, 'Parser').$parse(self.reader, doc, $hash2([\"header_only\"], {\"header_only\": self.options['$[]'](\"parse_header_only\")}));\n          self.$restore_attributes();\n          if ($truthy(($truthy($a = exts) ? exts['$tree_processors?']() : $a))) {\n            $send(exts.$tree_processors(), 'each', [], ($$13 = function(ext){var self = $$13.$$s || this, $b, $c, result = nil;\n\n            \n              \n              if (ext == null) {\n                ext = nil;\n              };\n              if ($truthy(($truthy($b = ($truthy($c = (result = ext.$process_method()['$[]'](doc))) ? $$($nesting, 'Document')['$==='](result) : $c)) ? result['$!='](doc) : $b))) {\n                return (doc = result)\n              } else {\n                return nil\n              };}, $$13.$$s = self, $$13.$$arity = 1, $$13))};\n          self.parsed = true;\n          return doc;\n        };\n      }, $Document_parse$11.$$arity = -1);\n      \n      Opal.def(self, '$parsed?', $Document_parsed$ques$14 = function() {\n        var self = this;\n\n        return self.parsed\n      }, $Document_parsed$ques$14.$$arity = 0);\n      \n      Opal.def(self, '$counter', $Document_counter$15 = function $$counter(name, seed) {\n        var $a, $b, self = this, locked = nil, curr_val = nil, next_val = nil, $writer = nil;\n\n        \n        \n        if (seed == null) {\n          seed = nil;\n        };\n        if ($truthy(self.parent_document)) {\n          return self.parent_document.$counter(name, seed)};\n        if ($truthy(($truthy($a = ($truthy($b = (locked = self['$attribute_locked?'](name))) ? (curr_val = self.counters['$[]'](name)) : $b)) ? $a : (curr_val = self.attributes['$[]'](name))['$nil_or_empty?']()['$!']()))) {\n          next_val = (($writer = [name, $$($nesting, 'Helpers').$nextval(curr_val)]), $send(self.counters, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n        } else if ($truthy(seed)) {\n          next_val = (($writer = [name, (function() {if (seed['$=='](seed.$to_i().$to_s())) {\n            return seed.$to_i()\n          } else {\n            return seed\n          }; return nil; })()]), $send(self.counters, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n        } else {\n          next_val = (($writer = [name, 1]), $send(self.counters, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n        };\n        if ($truthy(locked)) {\n        } else {\n          \n          $writer = [name, next_val];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        return next_val;\n      }, $Document_counter$15.$$arity = -2);\n      \n      Opal.def(self, '$increment_and_store_counter', $Document_increment_and_store_counter$16 = function $$increment_and_store_counter(counter_name, block) {\n        var self = this;\n\n        return $$($nesting, 'AttributeEntry').$new(counter_name, self.$counter(counter_name)).$save_to(block.$attributes()).$value()\n      }, $Document_increment_and_store_counter$16.$$arity = 2);\n      Opal.alias(self, \"counter_increment\", \"increment_and_store_counter\");\n      \n      Opal.def(self, '$register', $Document_register$17 = function $$register(type, value) {\n        var $a, self = this, $case = nil, id = nil, $logical_op_recvr_tmp_1 = nil, $writer = nil, ref = nil;\n\n        return (function() {$case = type;\n        if (\"ids\"['$===']($case)) {return self.$register(\"refs\", [(id = value['$[]'](0)), $$($nesting, 'Inline').$new(self, \"anchor\", value['$[]'](1), $hash2([\"type\", \"id\"], {\"type\": \"ref\", \"id\": id}))])}\n        else if (\"refs\"['$===']($case)) {\n        \n        $logical_op_recvr_tmp_1 = self.catalog['$[]'](\"refs\");\n        ($truthy($a = $logical_op_recvr_tmp_1['$[]'](value['$[]'](0))) ? $a : (($writer = [value['$[]'](0), (ref = value['$[]'](1))]), $send($logical_op_recvr_tmp_1, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));;\n        return ref;}\n        else if (\"footnotes\"['$===']($case)) {return self.catalog['$[]'](type)['$<<'](value)}\n        else {if ($truthy(self.options['$[]'](\"catalog_assets\"))) {\n          return self.catalog['$[]'](type)['$<<']((function() {if (type['$=='](\"images\")) {\n            \n            return $$($nesting, 'ImageReference').$new(value, self.attributes['$[]'](\"imagesdir\"));\n          } else {\n            return value\n          }; return nil; })())\n        } else {\n          return nil\n        }}})()\n      }, $Document_register$17.$$arity = 2);\n      \n      Opal.def(self, '$resolve_id', $Document_resolve_id$18 = function $$resolve_id(text) {\n        var $$19, $$21, self = this, resolved_id = nil, accum = nil;\n\n        if ($truthy(self.reftexts)) {\n          return self.reftexts['$[]'](text)\n        } else if ($truthy(self.parsed)) {\n          return $send((self.reftexts = $hash2([], {})), 'tap', [], ($$19 = function(accum){var self = $$19.$$s || this, $$20;\n            if (self.catalog == null) self.catalog = nil;\n\n          \n            \n            if (accum == null) {\n              accum = nil;\n            };\n            return $send(self.catalog['$[]'](\"refs\"), 'each', [], ($$20 = function(id, ref){var self = $$20.$$s || this, $a, $writer = nil;\n\n            \n              \n              if (id == null) {\n                id = nil;\n              };\n              \n              if (ref == null) {\n                ref = nil;\n              };\n              return ($truthy($a = accum['$[]'](ref.$xreftext())) ? $a : (($writer = [ref.$xreftext(), id]), $send(accum, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));}, $$20.$$s = self, $$20.$$arity = 2, $$20));}, $$19.$$s = self, $$19.$$arity = 1, $$19))['$[]'](text)\n        } else {\n          \n          resolved_id = nil;\n          self.reftexts = (accum = $hash2([], {}));\n          (function(){var $brk = Opal.new_brk(); try {return $send(self.catalog['$[]'](\"refs\"), 'each', [], ($$21 = function(id, ref){var self = $$21.$$s || this, $a, xreftext = nil, $writer = nil;\n\n          \n            \n            if (id == null) {\n              id = nil;\n            };\n            \n            if (ref == null) {\n              ref = nil;\n            };\n            if ((xreftext = ref.$xreftext())['$=='](text)) {\n              \n              resolved_id = id;\n              \n              Opal.brk(nil, $brk);};\n            return ($truthy($a = accum['$[]'](xreftext)) ? $a : (($writer = [xreftext, id]), $send(accum, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));}, $$21.$$s = self, $$21.$$brk = $brk, $$21.$$arity = 2, $$21))\n          } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n          self.reftexts = nil;\n          return resolved_id;\n        }\n      }, $Document_resolve_id$18.$$arity = 1);\n      \n      Opal.def(self, '$footnotes?', $Document_footnotes$ques$22 = function() {\n        var self = this;\n\n        if ($truthy(self.catalog['$[]'](\"footnotes\")['$empty?']())) {\n          return false\n        } else {\n          return true\n        }\n      }, $Document_footnotes$ques$22.$$arity = 0);\n      \n      Opal.def(self, '$footnotes', $Document_footnotes$23 = function $$footnotes() {\n        var self = this;\n\n        return self.catalog['$[]'](\"footnotes\")\n      }, $Document_footnotes$23.$$arity = 0);\n      \n      Opal.def(self, '$callouts', $Document_callouts$24 = function $$callouts() {\n        var self = this;\n\n        return self.catalog['$[]'](\"callouts\")\n      }, $Document_callouts$24.$$arity = 0);\n      \n      Opal.def(self, '$nested?', $Document_nested$ques$25 = function() {\n        var self = this;\n\n        if ($truthy(self.parent_document)) {\n          return true\n        } else {\n          return false\n        }\n      }, $Document_nested$ques$25.$$arity = 0);\n      \n      Opal.def(self, '$embedded?', $Document_embedded$ques$26 = function() {\n        var self = this;\n\n        return self.attributes['$key?'](\"embedded\")\n      }, $Document_embedded$ques$26.$$arity = 0);\n      \n      Opal.def(self, '$extensions?', $Document_extensions$ques$27 = function() {\n        var self = this;\n\n        if ($truthy(self.extensions)) {\n          return true\n        } else {\n          return false\n        }\n      }, $Document_extensions$ques$27.$$arity = 0);\n      \n      Opal.def(self, '$source', $Document_source$28 = function $$source() {\n        var self = this;\n\n        if ($truthy(self.reader)) {\n          return self.reader.$source()\n        } else {\n          return nil\n        }\n      }, $Document_source$28.$$arity = 0);\n      \n      Opal.def(self, '$source_lines', $Document_source_lines$29 = function $$source_lines() {\n        var self = this;\n\n        if ($truthy(self.reader)) {\n          return self.reader.$source_lines()\n        } else {\n          return nil\n        }\n      }, $Document_source_lines$29.$$arity = 0);\n      \n      Opal.def(self, '$basebackend?', $Document_basebackend$ques$30 = function(base) {\n        var self = this;\n\n        return self.attributes['$[]'](\"basebackend\")['$=='](base)\n      }, $Document_basebackend$ques$30.$$arity = 1);\n      \n      Opal.def(self, '$title', $Document_title$31 = function $$title() {\n        var self = this;\n\n        return self.$doctitle()\n      }, $Document_title$31.$$arity = 0);\n      \n      Opal.def(self, '$title=', $Document_title$eq$32 = function(title) {\n        var self = this, sect = nil, $writer = nil;\n\n        \n        if ($truthy((sect = self.header))) {\n        } else {\n          \n          $writer = [\"header\"];\n          $send((sect = (self.header = $$($nesting, 'Section').$new(self, 0))), 'sectname=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        \n        $writer = [title];\n        $send(sect, 'title=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];;\n      }, $Document_title$eq$32.$$arity = 1);\n      \n      Opal.def(self, '$doctitle', $Document_doctitle$33 = function $$doctitle(opts) {\n        var $a, self = this, val = nil, sect = nil, separator = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy((val = self.attributes['$[]'](\"title\")))) {\n        } else if ($truthy((sect = self.$first_section()))) {\n          val = sect.$title()\n        } else if ($truthy(($truthy($a = opts['$[]'](\"use_fallback\")) ? (val = self.attributes['$[]'](\"untitled-label\")) : $a)['$!']())) {\n          return nil};\n        if ($truthy((separator = opts['$[]'](\"partition\")))) {\n          return $$($nesting, 'Title').$new(val, opts.$merge($hash2([\"separator\"], {\"separator\": (function() {if (separator['$=='](true)) {\n            return self.attributes['$[]'](\"title-separator\")\n          } else {\n            return separator\n          }; return nil; })()})))\n        } else if ($truthy(($truthy($a = opts['$[]'](\"sanitize\")) ? val['$include?'](\"<\") : $a))) {\n          return val.$gsub($$($nesting, 'XmlSanitizeRx'), \"\").$squeeze(\" \").$strip()\n        } else {\n          return val\n        };\n      }, $Document_doctitle$33.$$arity = -1);\n      Opal.alias(self, \"name\", \"doctitle\");\n      \n      Opal.def(self, '$xreftext', $Document_xreftext$34 = function $$xreftext(xrefstyle) {\n        var $a, self = this, val = nil;\n\n        \n        \n        if (xrefstyle == null) {\n          xrefstyle = nil;\n        };\n        if ($truthy(($truthy($a = (val = self.$reftext())) ? val['$empty?']()['$!']() : $a))) {\n          return val\n        } else {\n          return self.$title()\n        };\n      }, $Document_xreftext$34.$$arity = -1);\n      \n      Opal.def(self, '$author', $Document_author$35 = function $$author() {\n        var self = this;\n\n        return self.attributes['$[]'](\"author\")\n      }, $Document_author$35.$$arity = 0);\n      \n      Opal.def(self, '$authors', $Document_authors$36 = function $$authors() {\n        var $a, self = this, attrs = nil, authors = nil, num_authors = nil, idx = nil;\n\n        if ($truthy((attrs = self.attributes)['$key?'](\"author\"))) {\n          \n          authors = [$$($nesting, 'Author').$new(attrs['$[]'](\"author\"), attrs['$[]'](\"firstname\"), attrs['$[]'](\"middlename\"), attrs['$[]'](\"lastname\"), attrs['$[]'](\"authorinitials\"), attrs['$[]'](\"email\"))];\n          if ($truthy($rb_gt((num_authors = ($truthy($a = attrs['$[]'](\"authorcount\")) ? $a : 0)), 1))) {\n            \n            idx = 1;\n            while ($truthy($rb_lt(idx, num_authors))) {\n              \n              idx = $rb_plus(idx, 1);\n              authors['$<<']($$($nesting, 'Author').$new(attrs['$[]'](\"\" + \"author_\" + (idx)), attrs['$[]'](\"\" + \"firstname_\" + (idx)), attrs['$[]'](\"\" + \"middlename_\" + (idx)), attrs['$[]'](\"\" + \"lastname_\" + (idx)), attrs['$[]'](\"\" + \"authorinitials_\" + (idx)), attrs['$[]'](\"\" + \"email_\" + (idx))));\n            };};\n          return authors;\n        } else {\n          return []\n        }\n      }, $Document_authors$36.$$arity = 0);\n      \n      Opal.def(self, '$revdate', $Document_revdate$37 = function $$revdate() {\n        var self = this;\n\n        return self.attributes['$[]'](\"revdate\")\n      }, $Document_revdate$37.$$arity = 0);\n      \n      Opal.def(self, '$notitle', $Document_notitle$38 = function $$notitle() {\n        var self = this;\n\n        return self.attributes['$key?'](\"notitle\")\n      }, $Document_notitle$38.$$arity = 0);\n      \n      Opal.def(self, '$noheader', $Document_noheader$39 = function $$noheader() {\n        var self = this;\n\n        return self.attributes['$key?'](\"noheader\")\n      }, $Document_noheader$39.$$arity = 0);\n      \n      Opal.def(self, '$nofooter', $Document_nofooter$40 = function $$nofooter() {\n        var self = this;\n\n        return self.attributes['$key?'](\"nofooter\")\n      }, $Document_nofooter$40.$$arity = 0);\n      \n      Opal.def(self, '$first_section', $Document_first_section$41 = function $$first_section() {\n        var $a, $$42, self = this;\n\n        return ($truthy($a = self.header) ? $a : $send(self.blocks, 'find', [], ($$42 = function(e){var self = $$42.$$s || this;\n\n        \n          \n          if (e == null) {\n            e = nil;\n          };\n          return e.$context()['$=='](\"section\");}, $$42.$$s = self, $$42.$$arity = 1, $$42)))\n      }, $Document_first_section$41.$$arity = 0);\n      \n      Opal.def(self, '$header?', $Document_header$ques$43 = function() {\n        var self = this;\n\n        if ($truthy(self.header)) {\n          return true\n        } else {\n          return false\n        }\n      }, $Document_header$ques$43.$$arity = 0);\n      Opal.alias(self, \"has_header?\", \"header?\");\n      \n      Opal.def(self, '$<<', $Document_$lt$lt$44 = function(block) {\n        var $iter = $Document_$lt$lt$44.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Document_$lt$lt$44.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        if (block.$context()['$=='](\"section\")) {\n          self.$assign_numeral(block)};\n        return $send(self, Opal.find_super_dispatcher(self, '<<', $Document_$lt$lt$44, false), $zuper, $iter);\n      }, $Document_$lt$lt$44.$$arity = 1);\n      \n      Opal.def(self, '$finalize_header', $Document_finalize_header$45 = function $$finalize_header(unrooted_attributes, header_valid) {\n        var self = this, $writer = nil;\n\n        \n        \n        if (header_valid == null) {\n          header_valid = true;\n        };\n        self.$clear_playback_attributes(unrooted_attributes);\n        self.$save_attributes();\n        if ($truthy(header_valid)) {\n        } else {\n          \n          $writer = [\"invalid-header\", true];\n          $send(unrooted_attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        return unrooted_attributes;\n      }, $Document_finalize_header$45.$$arity = -2);\n      \n      Opal.def(self, '$playback_attributes', $Document_playback_attributes$46 = function $$playback_attributes(block_attributes) {\n        var $$47, self = this;\n\n        if ($truthy(block_attributes['$key?'](\"attribute_entries\"))) {\n          return $send(block_attributes['$[]'](\"attribute_entries\"), 'each', [], ($$47 = function(entry){var self = $$47.$$s || this, name = nil, $writer = nil;\n            if (self.attributes == null) self.attributes = nil;\n\n          \n            \n            if (entry == null) {\n              entry = nil;\n            };\n            name = entry.$name();\n            if ($truthy(entry.$negate())) {\n              \n              self.attributes.$delete(name);\n              if (name['$=='](\"compat-mode\")) {\n                return (self.compat_mode = false)\n              } else {\n                return nil\n              };\n            } else {\n              \n              \n              $writer = [name, entry.$value()];\n              $send(self.attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              if (name['$=='](\"compat-mode\")) {\n                return (self.compat_mode = true)\n              } else {\n                return nil\n              };\n            };}, $$47.$$s = self, $$47.$$arity = 1, $$47))\n        } else {\n          return nil\n        }\n      }, $Document_playback_attributes$46.$$arity = 1);\n      \n      Opal.def(self, '$restore_attributes', $Document_restore_attributes$48 = function $$restore_attributes() {\n        var self = this;\n\n        \n        if ($truthy(self.parent_document)) {\n        } else {\n          self.catalog['$[]'](\"callouts\").$rewind()\n        };\n        return self.attributes.$replace(self.header_attributes);\n      }, $Document_restore_attributes$48.$$arity = 0);\n      \n      Opal.def(self, '$set_attribute', $Document_set_attribute$49 = function $$set_attribute(name, value) {\n        var $a, self = this, $writer = nil, $case = nil;\n\n        \n        \n        if (value == null) {\n          value = \"\";\n        };\n        if ($truthy(self['$attribute_locked?'](name))) {\n          return nil\n        } else {\n          \n          if ($truthy(value['$empty?']())) {\n          } else {\n            value = self.$apply_attribute_value_subs(value)\n          };\n          if ($truthy(self.header_attributes)) {\n            \n            $writer = [name, value];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            \n            $case = name;\n            if (\"backend\"['$===']($case)) {self.$update_backend_attributes(value, ($truthy($a = self.attributes_modified['$delete?'](\"htmlsyntax\")) ? value['$=='](self.backend) : $a))}\n            else if (\"doctype\"['$===']($case)) {self.$update_doctype_attributes(value)}\n            else {\n            $writer = [name, value];\n            $send(self.attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n            self.attributes_modified['$<<'](name);\n          };\n          return value;\n        };\n      }, $Document_set_attribute$49.$$arity = -2);\n      \n      Opal.def(self, '$delete_attribute', $Document_delete_attribute$50 = function $$delete_attribute(name) {\n        var self = this;\n\n        if ($truthy(self['$attribute_locked?'](name))) {\n          return false\n        } else {\n          \n          self.attributes.$delete(name);\n          self.attributes_modified['$<<'](name);\n          return true;\n        }\n      }, $Document_delete_attribute$50.$$arity = 1);\n      \n      Opal.def(self, '$attribute_locked?', $Document_attribute_locked$ques$51 = function(name) {\n        var self = this;\n\n        return self.attribute_overrides['$key?'](name)\n      }, $Document_attribute_locked$ques$51.$$arity = 1);\n      \n      Opal.def(self, '$set_header_attribute', $Document_set_header_attribute$52 = function $$set_header_attribute(name, value, overwrite) {\n        var $a, self = this, attrs = nil, $writer = nil;\n\n        \n        \n        if (value == null) {\n          value = \"\";\n        };\n        \n        if (overwrite == null) {\n          overwrite = true;\n        };\n        attrs = ($truthy($a = self.header_attributes) ? $a : self.attributes);\n        if ($truthy((($a = overwrite['$=='](false)) ? attrs['$key?'](name) : overwrite['$=='](false)))) {\n          return false\n        } else {\n          \n          \n          $writer = [name, value];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return true;\n        };\n      }, $Document_set_header_attribute$52.$$arity = -2);\n      \n      Opal.def(self, '$convert', $Document_convert$53 = function $$convert(opts) {\n        var $a, $$54, self = this, $writer = nil, block = nil, output = nil, transform = nil, exts = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy(self.timings)) {\n          self.timings.$start(\"convert\")};\n        if ($truthy(self.parsed)) {\n        } else {\n          self.$parse()\n        };\n        if ($truthy(($truthy($a = $rb_ge(self.safe, $$$($$($nesting, 'SafeMode'), 'SERVER'))) ? $a : opts['$empty?']()))) {\n        } else {\n          \n          if ($truthy((($writer = [\"outfile\", opts['$[]'](\"outfile\")]), $send(self.attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))) {\n          } else {\n            self.attributes.$delete(\"outfile\")\n          };\n          if ($truthy((($writer = [\"outdir\", opts['$[]'](\"outdir\")]), $send(self.attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))) {\n          } else {\n            self.attributes.$delete(\"outdir\")\n          };\n        };\n        if (self.$doctype()['$=='](\"inline\")) {\n          if ($truthy((block = ($truthy($a = self.blocks['$[]'](0)) ? $a : self.header)))) {\n            if ($truthy(($truthy($a = block.$content_model()['$=='](\"compound\")) ? $a : block.$content_model()['$=='](\"empty\")))) {\n              self.$logger().$warn(\"no inline candidate; use the inline doctype to convert a single paragragh, verbatim, or raw block\")\n            } else {\n              output = block.$content()\n            }}\n        } else {\n          \n          if ($truthy(opts['$key?'](\"standalone\"))) {\n            transform = (function() {if ($truthy(opts['$[]'](\"standalone\"))) {\n              return \"document\"\n            } else {\n              return \"embedded\"\n            }; return nil; })()\n          } else if ($truthy(opts['$key?'](\"header_footer\"))) {\n            transform = (function() {if ($truthy(opts['$[]'](\"header_footer\"))) {\n              return \"document\"\n            } else {\n              return \"embedded\"\n            }; return nil; })()\n          } else {\n            transform = (function() {if ($truthy(self.options['$[]'](\"standalone\"))) {\n              return \"document\"\n            } else {\n              return \"embedded\"\n            }; return nil; })()\n          };\n          output = self.converter.$convert(self, transform);\n        };\n        if ($truthy(self.parent_document)) {\n        } else if ($truthy(($truthy($a = (exts = self.extensions)) ? exts['$postprocessors?']() : $a))) {\n          $send(exts.$postprocessors(), 'each', [], ($$54 = function(ext){var self = $$54.$$s || this;\n\n          \n            \n            if (ext == null) {\n              ext = nil;\n            };\n            return (output = ext.$process_method()['$[]'](self, output));}, $$54.$$s = self, $$54.$$arity = 1, $$54))};\n        if ($truthy(self.timings)) {\n          self.timings.$record(\"convert\")};\n        return output;\n      }, $Document_convert$53.$$arity = -1);\n      Opal.alias(self, \"render\", \"convert\");\n      \n      Opal.def(self, '$write', $Document_write$55 = function $$write(output, target) {\n        var $a, $b, self = this;\n\n        \n        if ($truthy(self.timings)) {\n          self.timings.$start(\"write\")};\n        if ($truthy($$($nesting, 'Writer')['$==='](self.converter))) {\n          self.converter.$write(output, target)\n        } else {\n          \n          if ($truthy(target['$respond_to?'](\"write\"))) {\n            if ($truthy(output['$nil_or_empty?']())) {\n            } else {\n              \n              target.$write(output.$chomp());\n              target.$write($$($nesting, 'LF'));\n            }\n          } else {\n            $$$('::', 'File').$write(target, output, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}))\n          };\n          if ($truthy(($truthy($a = (($b = self.backend['$=='](\"manpage\")) ? $$$('::', 'String')['$==='](target) : self.backend['$=='](\"manpage\"))) ? self.converter.$class()['$respond_to?'](\"write_alternate_pages\") : $a))) {\n            self.converter.$class().$write_alternate_pages(self.attributes['$[]'](\"mannames\"), self.attributes['$[]'](\"manvolnum\"), target)};\n        };\n        if ($truthy(self.timings)) {\n          self.timings.$record(\"write\")};\n        return nil;\n      }, $Document_write$55.$$arity = 2);\n      \n      Opal.def(self, '$content', $Document_content$56 = function $$content() {\n        var $iter = $Document_content$56.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Document_content$56.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        self.attributes.$delete(\"title\");\n        return $send(self, Opal.find_super_dispatcher(self, 'content', $Document_content$56, false), $zuper, $iter);\n      }, $Document_content$56.$$arity = 0);\n      \n      Opal.def(self, '$docinfo', $Document_docinfo$57 = function $$docinfo(location, suffix) {\n        var $a, $$58, $$59, self = this, qualifier = nil, docinfo = nil, content = nil, docinfo_file = nil, docinfo_dir = nil, docinfo_subs = nil, docinfo_path = nil, shared_docinfo = nil, private_docinfo = nil;\n\n        \n        \n        if (location == null) {\n          location = \"head\";\n        };\n        \n        if (suffix == null) {\n          suffix = nil;\n        };\n        if ($truthy($rb_lt(self.$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')))) {\n          \n          if (location['$=='](\"head\")) {\n          } else {\n            qualifier = \"\" + \"-\" + (location)\n          };\n          suffix = ($truthy($a = suffix) ? $a : self.outfilesuffix);\n          if ($truthy((docinfo = self.attributes['$[]'](\"docinfo\"))['$nil_or_empty?']())) {\n            if ($truthy(self.attributes['$key?'](\"docinfo2\"))) {\n              docinfo = [\"private\", \"shared\"]\n            } else if ($truthy(self.attributes['$key?'](\"docinfo1\"))) {\n              docinfo = [\"shared\"]\n            } else {\n              docinfo = (function() {if ($truthy(docinfo)) {\n                return [\"private\"]\n              } else {\n                return nil\n              }; return nil; })()\n            }\n          } else {\n            docinfo = $send(docinfo.$split(\",\"), 'map', [], ($$58 = function(it){var self = $$58.$$s || this;\n\n            \n              \n              if (it == null) {\n                it = nil;\n              };\n              return it.$strip();}, $$58.$$s = self, $$58.$$arity = 1, $$58))\n          };\n          if ($truthy(docinfo)) {\n            \n            content = [];\n            $a = [\"\" + \"docinfo\" + (qualifier) + (suffix), self.attributes['$[]'](\"docinfodir\"), self.$resolve_docinfo_subs()], (docinfo_file = $a[0]), (docinfo_dir = $a[1]), (docinfo_subs = $a[2]), $a;\n            if ($truthy(docinfo['$&']([\"shared\", \"\" + \"shared-\" + (location)])['$empty?']())) {\n            } else {\n              \n              docinfo_path = self.$normalize_system_path(docinfo_file, docinfo_dir);\n              if ($truthy((shared_docinfo = self.$read_asset(docinfo_path, $hash2([\"normalize\"], {\"normalize\": true}))))) {\n                content['$<<'](self.$apply_subs(shared_docinfo, docinfo_subs))};\n            };\n            if ($truthy(($truthy($a = self.attributes['$[]'](\"docname\")['$nil_or_empty?']()) ? $a : docinfo['$&']([\"private\", \"\" + \"private-\" + (location)])['$empty?']()))) {\n            } else {\n              \n              docinfo_path = self.$normalize_system_path(\"\" + (self.attributes['$[]'](\"docname\")) + \"-\" + (docinfo_file), docinfo_dir);\n              if ($truthy((private_docinfo = self.$read_asset(docinfo_path, $hash2([\"normalize\"], {\"normalize\": true}))))) {\n                content['$<<'](self.$apply_subs(private_docinfo, docinfo_subs))};\n            };};};\n        if ($truthy(($truthy($a = self.extensions) ? self['$docinfo_processors?'](location) : $a))) {\n          return ($truthy($a = content) ? $a : []).$concat($send(self.docinfo_processor_extensions['$[]'](location), 'map', [], ($$59 = function(ext){var self = $$59.$$s || this;\n\n          \n            \n            if (ext == null) {\n              ext = nil;\n            };\n            return ext.$process_method()['$[]'](self);}, $$59.$$s = self, $$59.$$arity = 1, $$59)).$compact()).$join($$($nesting, 'LF'))\n        } else if ($truthy(content)) {\n          return content.$join($$($nesting, 'LF'))\n        } else {\n          return \"\"\n        };\n      }, $Document_docinfo$57.$$arity = -1);\n      \n      Opal.def(self, '$docinfo_processors?', $Document_docinfo_processors$ques$60 = function(location) {\n        var $a, self = this, $writer = nil;\n\n        \n        \n        if (location == null) {\n          location = \"head\";\n        };\n        if ($truthy(self.docinfo_processor_extensions['$key?'](location))) {\n          return self.docinfo_processor_extensions['$[]'](location)['$!='](false)\n        } else if ($truthy(($truthy($a = self.extensions) ? self.document.$extensions()['$docinfo_processors?'](location) : $a))) {\n          return (($writer = [location, self.document.$extensions().$docinfo_processors(location)]), $send(self.docinfo_processor_extensions, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])['$!']()['$!']()\n        } else {\n          \n          $writer = [location, false];\n          $send(self.docinfo_processor_extensions, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n      }, $Document_docinfo_processors$ques$60.$$arity = -1);\n      \n      Opal.def(self, '$to_s', $Document_to_s$61 = function $$to_s() {\n        var $a, self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {doctype: \" + (self.$doctype().$inspect()) + \", doctitle: \" + (($truthy($a = self.header) ? self.header.$title() : $a).$inspect()) + \", blocks: \" + (self.blocks.$size()) + \"}>\"\n      }, $Document_to_s$61.$$arity = 0);\n      self.$private();\n      \n      Opal.def(self, '$apply_attribute_value_subs', $Document_apply_attribute_value_subs$62 = function $$apply_attribute_value_subs(value) {\n        var $a, self = this;\n\n        \n        if ($truthy($$($nesting, 'AttributeEntryPassMacroRx')['$=~'](value))) {\n          \n          value = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2));\n          if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)))) {\n            value = self.$apply_subs(value, self.$resolve_pass_subs((($a = $gvars['~']) === nil ? nil : $a['$[]'](1))))};\n        } else {\n          value = self.$apply_header_subs(value)\n        };\n        if ($truthy(self.max_attribute_value_size)) {\n          \n          return self.$limit_bytesize(value, self.max_attribute_value_size);\n        } else {\n          return value\n        };\n      }, $Document_apply_attribute_value_subs$62.$$arity = 1);\n      \n      Opal.def(self, '$limit_bytesize', $Document_limit_bytesize$63 = function $$limit_bytesize(str, max) {\n        var $a, self = this;\n\n        \n        if ($truthy($rb_gt(str.$bytesize(), max))) {\n          while (!($truthy((str = str.$byteslice(0, max))['$valid_encoding?']()))) {\n            max = $rb_minus(max, 1)\n          }};\n        return str;\n      }, $Document_limit_bytesize$63.$$arity = 2);\n      \n      Opal.def(self, '$resolve_docinfo_subs', $Document_resolve_docinfo_subs$64 = function $$resolve_docinfo_subs() {\n        var self = this;\n\n        if ($truthy(self.attributes['$key?'](\"docinfosubs\"))) {\n          \n          return self.$resolve_subs(self.attributes['$[]'](\"docinfosubs\"), \"block\", nil, \"docinfo\");\n        } else {\n          return [\"attributes\"]\n        }\n      }, $Document_resolve_docinfo_subs$64.$$arity = 0);\n      \n      Opal.def(self, '$create_converter', $Document_create_converter$65 = function $$create_converter(backend, delegate_backend) {\n        var $a, self = this, converter_opts = nil, template_dirs = nil, opts = nil, $writer = nil, converter = nil;\n\n        \n        converter_opts = $hash2([\"document\", \"htmlsyntax\"], {\"document\": self, \"htmlsyntax\": self.attributes['$[]'](\"htmlsyntax\")});\n        if ($truthy((template_dirs = ($truthy($a = (opts = self.options)['$[]'](\"template_dirs\")) ? $a : opts['$[]'](\"template_dir\"))))) {\n          \n          \n          $writer = [\"template_dirs\", [].concat(Opal.to_a(template_dirs))];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"template_cache\", opts.$fetch(\"template_cache\", true)];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"template_engine\", opts['$[]'](\"template_engine\")];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"template_engine_options\", opts['$[]'](\"template_engine_options\")];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"eruby\", opts['$[]'](\"eruby\")];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"safe\", self.safe];\n          $send(converter_opts, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(delegate_backend)) {\n            \n            $writer = [\"delegate_backend\", delegate_backend];\n            $send(converter_opts, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};};\n        if ($truthy((converter = opts['$[]'](\"converter\")))) {\n          return $$$($$($nesting, 'Converter'), 'CustomFactory').$new($hash(backend, converter)).$create(backend, converter_opts)\n        } else {\n          return opts.$fetch(\"converter_factory\", $$($nesting, 'Converter')).$create(backend, converter_opts)\n        };\n      }, $Document_create_converter$65.$$arity = 2);\n      \n      Opal.def(self, '$clear_playback_attributes', $Document_clear_playback_attributes$66 = function $$clear_playback_attributes(attributes) {\n        var self = this;\n\n        return attributes.$delete(\"attribute_entries\")\n      }, $Document_clear_playback_attributes$66.$$arity = 1);\n      \n      Opal.def(self, '$save_attributes', $Document_save_attributes$67 = function $$save_attributes() {\n        var $a, $$68, self = this, attrs = nil, doctitle_val = nil, $writer = nil, toc_val = nil, toc_position_val = nil, toc_placement_val = nil, default_toc_position = nil, default_toc_class = nil, position = nil, $case = nil, icons_val = nil, basebackend = nil, syntax_hl_name = nil, syntax_hl_factory = nil, syntax_hls = nil;\n\n        \n        if ($truthy(($truthy($a = (attrs = self.attributes)['$key?'](\"doctitle\")) ? $a : (doctitle_val = self.$doctitle())['$!']()))) {\n        } else {\n          \n          $writer = [\"doctitle\", doctitle_val];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        self.id = ($truthy($a = self.id) ? $a : attrs['$[]'](\"css-signature\"));\n        if ($truthy((toc_val = (function() {if ($truthy(attrs.$delete(\"toc2\"))) {\n          return \"left\"\n        } else {\n          return attrs['$[]'](\"toc\")\n        }; return nil; })()))) {\n          \n          toc_position_val = (function() {if ($truthy(($truthy($a = (toc_placement_val = attrs.$fetch(\"toc-placement\", \"macro\"))) ? toc_placement_val['$!='](\"auto\") : $a))) {\n            return toc_placement_val\n          } else {\n            return attrs['$[]'](\"toc-position\")\n          }; return nil; })();\n          if ($truthy(($truthy($a = toc_val['$empty?']()) ? toc_position_val['$nil_or_empty?']() : $a))) {\n          } else {\n            \n            default_toc_position = \"left\";\n            default_toc_class = \"toc2\";\n            position = (function() {if ($truthy(toc_position_val['$nil_or_empty?']())) {\n              \n              if ($truthy(toc_val['$empty?']())) {\n                return default_toc_position\n              } else {\n                return toc_val\n              };\n            } else {\n              return toc_position_val\n            }; return nil; })();\n            \n            $writer = [\"toc\", \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"toc-placement\", \"auto\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            $case = position;\n            if (\"left\"['$===']($case) || \"<\"['$===']($case) || \"&lt;\"['$===']($case)) {\n            $writer = [\"toc-position\", \"left\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else if (\"right\"['$===']($case) || \">\"['$===']($case) || \"&gt;\"['$===']($case)) {\n            $writer = [\"toc-position\", \"right\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else if (\"top\"['$===']($case) || \"^\"['$===']($case)) {\n            $writer = [\"toc-position\", \"top\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else if (\"bottom\"['$===']($case) || \"v\"['$===']($case)) {\n            $writer = [\"toc-position\", \"bottom\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}\n            else if (\"preamble\"['$===']($case) || \"macro\"['$===']($case)) {\n            \n            $writer = [\"toc-position\", \"content\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"toc-placement\", position];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            default_toc_class = nil;}\n            else {\n            attrs.$delete(\"toc-position\");\n            default_toc_class = nil;};\n            if ($truthy(default_toc_class)) {\n              ($truthy($a = attrs['$[]'](\"toc-class\")) ? $a : (($writer = [\"toc-class\", default_toc_class]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))};\n          };};\n        if ($truthy(($truthy($a = (icons_val = attrs['$[]'](\"icons\"))) ? attrs['$key?'](\"icontype\")['$!']() : $a))) {\n          $case = icons_val;\n          if (\"\"['$===']($case) || \"font\"['$===']($case)) {nil}\n          else {\n          \n          $writer = [\"icons\", \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if (icons_val['$=='](\"image\")) {\n          } else {\n            \n            $writer = [\"icontype\", icons_val];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };}};\n        if ($truthy(($truthy($a = (self.compat_mode = attrs['$key?'](\"compat-mode\"))) ? attrs['$key?'](\"language\") : $a))) {\n          \n          $writer = [\"source-language\", attrs['$[]'](\"language\")];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(self.parent_document)) {\n        } else {\n          \n          if ((basebackend = attrs['$[]'](\"basebackend\"))['$=='](\"html\")) {\n            if ($truthy(($truthy($a = (syntax_hl_name = attrs['$[]'](\"source-highlighter\"))) ? attrs['$[]'](\"\" + (syntax_hl_name) + \"-unavailable\")['$!']() : $a))) {\n              if ($truthy((syntax_hl_factory = self.options['$[]'](\"syntax_highlighter_factory\")))) {\n                self.syntax_highlighter = syntax_hl_factory.$create(syntax_hl_name, self.backend, $hash2([\"document\"], {\"document\": self}))\n              } else if ($truthy((syntax_hls = self.options['$[]'](\"syntax_highlighters\")))) {\n                self.syntax_highlighter = $$$($$($nesting, 'SyntaxHighlighter'), 'DefaultFactoryProxy').$new(syntax_hls).$create(syntax_hl_name, self.backend, $hash2([\"document\"], {\"document\": self}))\n              } else {\n                self.syntax_highlighter = $$($nesting, 'SyntaxHighlighter').$create(syntax_hl_name, self.backend, $hash2([\"document\"], {\"document\": self}))\n              }}\n          } else if (basebackend['$=='](\"docbook\")) {\n            \n            if ($truthy(($truthy($a = self['$attribute_locked?'](\"toc\")) ? $a : self.attributes_modified['$include?'](\"toc\")))) {\n            } else {\n              \n              $writer = [\"toc\", \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            if ($truthy(($truthy($a = self['$attribute_locked?'](\"sectnums\")) ? $a : self.attributes_modified['$include?'](\"sectnums\")))) {\n            } else {\n              \n              $writer = [\"sectnums\", \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };};\n          self.outfilesuffix = attrs['$[]'](\"outfilesuffix\");\n          $send($$($nesting, 'FLEXIBLE_ATTRIBUTES'), 'each', [], ($$68 = function(name){var self = $$68.$$s || this, $b;\n            if (self.attribute_overrides == null) self.attribute_overrides = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            if ($truthy(($truthy($b = self.attribute_overrides['$key?'](name)) ? self.attribute_overrides['$[]'](name) : $b))) {\n              return self.attribute_overrides.$delete(name)\n            } else {\n              return nil\n            };}, $$68.$$s = self, $$68.$$arity = 1, $$68));\n        };\n        return (self.header_attributes = attrs.$merge());\n      }, $Document_save_attributes$67.$$arity = 0);\n      \n      Opal.def(self, '$fill_datetime_attributes', $Document_fill_datetime_attributes$69 = function $$fill_datetime_attributes(attrs, input_mtime) {\n        var $a, $b, self = this, now = nil, source_date_epoch = nil, localdate = nil, $writer = nil, localtime = nil, docdate = nil, doctime = nil;\n\n        \n        now = (function() {if ($truthy($$$('::', 'ENV')['$key?'](\"SOURCE_DATE_EPOCH\"))) {\n          \n          return (source_date_epoch = $$$('::', 'Time').$at(self.$Integer($$$('::', 'ENV')['$[]'](\"SOURCE_DATE_EPOCH\"))).$utc());\n        } else {\n          return $$$('::', 'Time').$now()\n        }; return nil; })();\n        if ($truthy((localdate = attrs['$[]'](\"localdate\")))) {\n          ($truthy($a = attrs['$[]'](\"localyear\")) ? $a : (($writer = [\"localyear\", (function() {if (localdate.$index(\"-\")['$=='](4)) {\n            \n            return localdate.$slice(0, 4);\n          } else {\n            return nil\n          }; return nil; })()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n        } else {\n          \n          localdate = (($writer = [\"localdate\", now.$strftime(\"%F\")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n          ($truthy($a = attrs['$[]'](\"localyear\")) ? $a : (($writer = [\"localyear\", now.$year().$to_s()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        };\n        localtime = ($truthy($a = attrs['$[]'](\"localtime\")) ? $a : (($writer = [\"localtime\", now.$strftime(\"\" + \"%T \" + ((function() {if (now.$utc_offset()['$=='](0)) {\n          return \"UTC\"\n        } else {\n          return \"%z\"\n        }; return nil; })()))]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attrs['$[]'](\"localdatetime\")) ? $a : (($writer = [\"localdatetime\", \"\" + (localdate) + \" \" + (localtime)]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        input_mtime = ($truthy($a = ($truthy($b = source_date_epoch) ? $b : input_mtime)) ? $a : now);\n        if ($truthy((docdate = attrs['$[]'](\"docdate\")))) {\n          ($truthy($a = attrs['$[]'](\"docyear\")) ? $a : (($writer = [\"docyear\", (function() {if (docdate.$index(\"-\")['$=='](4)) {\n            \n            return docdate.$slice(0, 4);\n          } else {\n            return nil\n          }; return nil; })()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n        } else {\n          \n          docdate = (($writer = [\"docdate\", input_mtime.$strftime(\"%F\")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n          ($truthy($a = attrs['$[]'](\"docyear\")) ? $a : (($writer = [\"docyear\", input_mtime.$year().$to_s()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        };\n        doctime = ($truthy($a = attrs['$[]'](\"doctime\")) ? $a : (($writer = [\"doctime\", input_mtime.$strftime(\"\" + \"%T \" + ((function() {if (input_mtime.$utc_offset()['$=='](0)) {\n          return \"UTC\"\n        } else {\n          return \"%z\"\n        }; return nil; })()))]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attrs['$[]'](\"docdatetime\")) ? $a : (($writer = [\"docdatetime\", \"\" + (docdate) + \" \" + (doctime)]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        return nil;\n      }, $Document_fill_datetime_attributes$69.$$arity = 2);\n      \n      Opal.def(self, '$update_backend_attributes', $Document_update_backend_attributes$70 = function $$update_backend_attributes(new_backend, init) {\n        var $a, $b, self = this, current_backend = nil, current_basebackend = nil, attrs = nil, current_doctype = nil, actual_backend = nil, _ = nil, $writer = nil, delegate_backend = nil, converter = nil, new_basebackend = nil, new_filetype = nil, htmlsyntax = nil, backend_traits = nil, current_filetype = nil, page_width = nil;\n\n        \n        \n        if (init == null) {\n          init = nil;\n        };\n        if ($truthy(($truthy($a = init) ? $a : new_backend['$!='](self.backend)))) {\n          \n          current_backend = self.backend;\n          current_basebackend = (attrs = self.attributes)['$[]'](\"basebackend\");\n          current_doctype = self.doctype;\n          if ($truthy(new_backend['$include?'](\":\"))) {\n            $b = new_backend.$partition(\":\"), $a = Opal.to_ary($b), (actual_backend = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (new_backend = ($a[2] == null ? nil : $a[2])), $b};\n          if ($truthy(new_backend['$start_with?'](\"xhtml\"))) {\n            \n            \n            $writer = [\"htmlsyntax\", \"xml\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            new_backend = new_backend.$slice(1, new_backend.$length());\n          } else if ($truthy(new_backend['$start_with?'](\"html\"))) {\n            ($truthy($a = attrs['$[]'](\"htmlsyntax\")) ? $a : (($writer = [\"htmlsyntax\", \"html\"]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))};\n          new_backend = ($truthy($a = $$($nesting, 'BACKEND_ALIASES')['$[]'](new_backend)) ? $a : new_backend);\n          if ($truthy(actual_backend)) {\n            $a = [actual_backend, new_backend], (new_backend = $a[0]), (delegate_backend = $a[1]), $a};\n          if ($truthy(current_doctype)) {\n            \n            if ($truthy(current_backend)) {\n              \n              attrs.$delete(\"\" + \"backend-\" + (current_backend));\n              attrs.$delete(\"\" + \"backend-\" + (current_backend) + \"-doctype-\" + (current_doctype));};\n            \n            $writer = [\"\" + \"backend-\" + (new_backend) + \"-doctype-\" + (current_doctype), \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"\" + \"doctype-\" + (current_doctype), \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else if ($truthy(current_backend)) {\n            attrs.$delete(\"\" + \"backend-\" + (current_backend))};\n          \n          $writer = [\"\" + \"backend-\" + (new_backend), \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          self.backend = (($writer = [\"backend\", new_backend]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n          if ($truthy($$$($$($nesting, 'Converter'), 'BackendTraits')['$===']((converter = self.$create_converter(new_backend, delegate_backend))))) {\n            \n            new_basebackend = converter.$basebackend();\n            new_filetype = converter.$filetype();\n            if ($truthy((htmlsyntax = converter.$htmlsyntax()))) {\n              \n              $writer = [\"htmlsyntax\", htmlsyntax];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(init)) {\n              ($truthy($a = attrs['$[]'](\"outfilesuffix\")) ? $a : (($writer = [\"outfilesuffix\", converter.$outfilesuffix()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n            } else if ($truthy(self['$attribute_locked?'](\"outfilesuffix\"))) {\n            } else {\n              \n              $writer = [\"outfilesuffix\", converter.$outfilesuffix()];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n          } else if ($truthy(converter)) {\n            \n            backend_traits = $$($nesting, 'Converter').$derive_backend_traits(new_backend);\n            new_basebackend = backend_traits['$[]'](\"basebackend\");\n            new_filetype = backend_traits['$[]'](\"filetype\");\n            if ($truthy(init)) {\n              ($truthy($a = attrs['$[]'](\"outfilesuffix\")) ? $a : (($writer = [\"outfilesuffix\", backend_traits['$[]'](\"outfilesuffix\")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n            } else if ($truthy(self['$attribute_locked?'](\"outfilesuffix\"))) {\n            } else {\n              \n              $writer = [\"outfilesuffix\", backend_traits['$[]'](\"outfilesuffix\")];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n          } else {\n            self.$raise($$$('::', 'NotImplementedError'), \"\" + \"asciidoctor: FAILED: missing converter for backend '\" + (new_backend) + \"'. Processing aborted.\")\n          };\n          self.converter = converter;\n          if ($truthy((current_filetype = attrs['$[]'](\"filetype\")))) {\n            attrs.$delete(\"\" + \"filetype-\" + (current_filetype))};\n          \n          $writer = [\"filetype\", new_filetype];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"\" + \"filetype-\" + (new_filetype), \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy((page_width = $$($nesting, 'DEFAULT_PAGE_WIDTHS')['$[]'](new_basebackend)))) {\n            \n            $writer = [\"pagewidth\", page_width];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            attrs.$delete(\"pagewidth\")\n          };\n          if ($truthy(new_basebackend['$!='](current_basebackend))) {\n            \n            if ($truthy(current_doctype)) {\n              \n              if ($truthy(current_basebackend)) {\n                \n                attrs.$delete(\"\" + \"basebackend-\" + (current_basebackend));\n                attrs.$delete(\"\" + \"basebackend-\" + (current_basebackend) + \"-doctype-\" + (current_doctype));};\n              \n              $writer = [\"\" + \"basebackend-\" + (new_basebackend) + \"-doctype-\" + (current_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else if ($truthy(current_basebackend)) {\n              attrs.$delete(\"\" + \"basebackend-\" + (current_basebackend))};\n            \n            $writer = [\"\" + \"basebackend-\" + (new_basebackend), \"\"];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"basebackend\", new_basebackend];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;};\n          return new_backend;\n        } else {\n          return nil\n        };\n      }, $Document_update_backend_attributes$70.$$arity = -2);\n      return (Opal.def(self, '$update_doctype_attributes', $Document_update_doctype_attributes$71 = function $$update_doctype_attributes(new_doctype) {\n        var $a, self = this, attrs = nil, current_backend = nil, current_basebackend = nil, current_doctype = nil, $writer = nil;\n\n        if ($truthy(($truthy($a = new_doctype) ? new_doctype['$!='](self.doctype) : $a))) {\n          \n          $a = [self.backend, (attrs = self.attributes)['$[]'](\"basebackend\"), self.doctype], (current_backend = $a[0]), (current_basebackend = $a[1]), (current_doctype = $a[2]), $a;\n          if ($truthy(current_doctype)) {\n            \n            attrs.$delete(\"\" + \"doctype-\" + (current_doctype));\n            if ($truthy(current_backend)) {\n              \n              attrs.$delete(\"\" + \"backend-\" + (current_backend) + \"-doctype-\" + (current_doctype));\n              \n              $writer = [\"\" + \"backend-\" + (current_backend) + \"-doctype-\" + (new_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n            if ($truthy(current_basebackend)) {\n              \n              attrs.$delete(\"\" + \"basebackend-\" + (current_basebackend) + \"-doctype-\" + (current_doctype));\n              \n              $writer = [\"\" + \"basebackend-\" + (current_basebackend) + \"-doctype-\" + (new_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n          } else {\n            \n            if ($truthy(current_backend)) {\n              \n              $writer = [\"\" + \"backend-\" + (current_backend) + \"-doctype-\" + (new_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(current_basebackend)) {\n              \n              $writer = [\"\" + \"basebackend-\" + (current_basebackend) + \"-doctype-\" + (new_doctype), \"\"];\n              $send(attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n          };\n          \n          $writer = [\"\" + \"doctype-\" + (new_doctype), \"\"];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          return (self.doctype = (($writer = [\"doctype\", new_doctype]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        } else {\n          return nil\n        }\n      }, $Document_update_doctype_attributes$71.$$arity = 1), nil) && 'update_doctype_attributes';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/inline\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_accessor', '$attr_reader', '$[]', '$convert', '$converter', '$attr', '$==', '$apply_reftext_subs', '$reftext']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Inline');\n\n      var $nesting = [self].concat($parent_nesting), $Inline_initialize$1, $Inline_block$ques$2, $Inline_inline$ques$3, $Inline_convert$4, $Inline_alt$5, $Inline_reftext$ques$6, $Inline_reftext$7, $Inline_xreftext$8;\n\n      self.$$prototype.text = self.$$prototype.type = nil;\n      \n      self.$attr_accessor(\"text\");\n      self.$attr_reader(\"type\");\n      self.$attr_accessor(\"target\");\n      \n      Opal.def(self, '$initialize', $Inline_initialize$1 = function $$initialize(parent, context, text, opts) {\n        var $iter = $Inline_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $Inline_initialize$1.$$p = null;\n        \n        \n        if (text == null) {\n          text = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Inline_initialize$1, false), [parent, context, opts], null);\n        self.node_name = \"\" + \"inline_\" + (context);\n        self.text = text;\n        self.id = opts['$[]'](\"id\");\n        self.type = opts['$[]'](\"type\");\n        return (self.target = opts['$[]'](\"target\"));\n      }, $Inline_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$block?', $Inline_block$ques$2 = function() {\n        var self = this;\n\n        return false\n      }, $Inline_block$ques$2.$$arity = 0);\n      \n      Opal.def(self, '$inline?', $Inline_inline$ques$3 = function() {\n        var self = this;\n\n        return true\n      }, $Inline_inline$ques$3.$$arity = 0);\n      \n      Opal.def(self, '$convert', $Inline_convert$4 = function $$convert() {\n        var self = this;\n\n        return self.$converter().$convert(self)\n      }, $Inline_convert$4.$$arity = 0);\n      Opal.alias(self, \"render\", \"convert\");\n      \n      Opal.def(self, '$alt', $Inline_alt$5 = function $$alt() {\n        var $a, self = this;\n\n        return ($truthy($a = self.$attr(\"alt\")) ? $a : \"\")\n      }, $Inline_alt$5.$$arity = 0);\n      \n      Opal.def(self, '$reftext?', $Inline_reftext$ques$6 = function() {\n        var $a, $b, self = this;\n\n        return ($truthy($a = self.text) ? ($truthy($b = self.type['$=='](\"ref\")) ? $b : self.type['$=='](\"bibref\")) : $a)\n      }, $Inline_reftext$ques$6.$$arity = 0);\n      \n      Opal.def(self, '$reftext', $Inline_reftext$7 = function $$reftext() {\n        var self = this, val = nil;\n\n        if ($truthy((val = self.text))) {\n          \n          return self.$apply_reftext_subs(val);\n        } else {\n          return nil\n        }\n      }, $Inline_reftext$7.$$arity = 0);\n      return (Opal.def(self, '$xreftext', $Inline_xreftext$8 = function $$xreftext(xrefstyle) {\n        var self = this;\n\n        \n        \n        if (xrefstyle == null) {\n          xrefstyle = nil;\n        };\n        return self.$reftext();\n      }, $Inline_xreftext$8.$$arity = -1), nil) && 'xreftext';\n    })($nesting[0], $$($nesting, 'AbstractNode'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/list\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$==', '$next_list', '$callouts', '$class', '$object_id', '$inspect', '$size', '$items', '$attr_accessor', '$level', '$drop', '$nil_or_empty?', '$apply_subs', '$attr_writer', '$empty?', '$===', '$[]', '$outline?', '$!', '$simple?', '$source', '$shift', '$context', '$parent']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'List');\n\n      var $nesting = [self].concat($parent_nesting), $List_initialize$1, $List_outline$ques$2, $List_convert$3, $List_to_s$4;\n\n      self.$$prototype.context = self.$$prototype.document = self.$$prototype.style = nil;\n      \n      Opal.alias(self, \"items\", \"blocks\");\n      Opal.alias(self, \"content\", \"blocks\");\n      Opal.alias(self, \"items?\", \"blocks?\");\n      \n      Opal.def(self, '$initialize', $List_initialize$1 = function $$initialize(parent, context, opts) {\n        var $iter = $List_initialize$1.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $List_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        return $send(self, Opal.find_super_dispatcher(self, 'initialize', $List_initialize$1, false), $zuper, $iter);\n      }, $List_initialize$1.$$arity = -3);\n      \n      Opal.def(self, '$outline?', $List_outline$ques$2 = function() {\n        var $a, self = this;\n\n        return ($truthy($a = self.context['$=='](\"ulist\")) ? $a : self.context['$=='](\"olist\"))\n      }, $List_outline$ques$2.$$arity = 0);\n      \n      Opal.def(self, '$convert', $List_convert$3 = function $$convert() {\n        var $iter = $List_convert$3.$$p, $yield = $iter || nil, self = this, result = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $List_convert$3.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        if (self.context['$=='](\"colist\")) {\n          \n          result = $send(self, Opal.find_super_dispatcher(self, 'convert', $List_convert$3, false), $zuper, $iter);\n          self.document.$callouts().$next_list();\n          return result;\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'convert', $List_convert$3, false), $zuper, $iter)\n        }\n      }, $List_convert$3.$$arity = 0);\n      Opal.alias(self, \"render\", \"convert\");\n      return (Opal.def(self, '$to_s', $List_to_s$4 = function $$to_s() {\n        var self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {context: \" + (self.context.$inspect()) + \", style: \" + (self.style.$inspect()) + \", items: \" + (self.$items().$size()) + \"}>\"\n      }, $List_to_s$4.$$arity = 0), nil) && 'to_s';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'ListItem');\n\n      var $nesting = [self].concat($parent_nesting), $ListItem_initialize$5, $ListItem_text$ques$6, $ListItem_text$7, $ListItem_simple$ques$8, $ListItem_compound$ques$9, $ListItem_fold_first$10, $ListItem_to_s$11;\n\n      self.$$prototype.text = self.$$prototype.subs = self.$$prototype.blocks = nil;\n      \n      Opal.alias(self, \"list\", \"parent\");\n      self.$attr_accessor(\"marker\");\n      \n      Opal.def(self, '$initialize', $ListItem_initialize$5 = function $$initialize(parent, text) {\n        var $iter = $ListItem_initialize$5.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $ListItem_initialize$5.$$p = null;\n        \n        \n        if (text == null) {\n          text = nil;\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $ListItem_initialize$5, false), [parent, \"list_item\"], null);\n        self.text = text;\n        self.level = parent.$level();\n        return (self.subs = $$($nesting, 'NORMAL_SUBS').$drop(0));\n      }, $ListItem_initialize$5.$$arity = -2);\n      \n      Opal.def(self, '$text?', $ListItem_text$ques$6 = function() {\n        var self = this;\n\n        if ($truthy(self.text['$nil_or_empty?']())) {\n          return false\n        } else {\n          return true\n        }\n      }, $ListItem_text$ques$6.$$arity = 0);\n      \n      Opal.def(self, '$text', $ListItem_text$7 = function $$text() {\n        var $a, self = this;\n\n        return ($truthy($a = self.text) ? self.$apply_subs(self.text, self.subs) : $a)\n      }, $ListItem_text$7.$$arity = 0);\n      self.$attr_writer(\"text\");\n      \n      Opal.def(self, '$simple?', $ListItem_simple$ques$8 = function() {\n        var $a, $b, $c, self = this, blk = nil;\n\n        return ($truthy($a = self.blocks['$empty?']()) ? $a : ($truthy($b = (($c = self.blocks.$size()['$=='](1)) ? $$($nesting, 'List')['$===']((blk = self.blocks['$[]'](0))) : self.blocks.$size()['$=='](1))) ? blk['$outline?']() : $b))\n      }, $ListItem_simple$ques$8.$$arity = 0);\n      \n      Opal.def(self, '$compound?', $ListItem_compound$ques$9 = function() {\n        var self = this;\n\n        return self['$simple?']()['$!']()\n      }, $ListItem_compound$ques$9.$$arity = 0);\n      \n      Opal.def(self, '$fold_first', $ListItem_fold_first$10 = function $$fold_first() {\n        var self = this;\n\n        \n        self.text = (function() {if ($truthy(self.text['$nil_or_empty?']())) {\n          return self.blocks.$shift().$source()\n        } else {\n          return \"\" + (self.text) + ($$($nesting, 'LF')) + (self.blocks.$shift().$source())\n        }; return nil; })();\n        return nil;\n      }, $ListItem_fold_first$10.$$arity = 0);\n      return (Opal.def(self, '$to_s', $ListItem_to_s$11 = function $$to_s() {\n        var $a, self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {list_context: \" + (self.$parent().$context().$inspect()) + \", text: \" + (self.text.$inspect()) + \", blocks: \" + (($truthy($a = self.blocks) ? $a : []).$size()) + \"}>\"\n      }, $ListItem_to_s$11.$$arity = 0), nil) && 'to_s';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/parser\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$include', '$new', '$proc', '$start_with?', '$match?', '$is_delimited_block?', '$private_class_method', '$parse_document_header', '$[]', '$has_more_lines?', '$next_section', '$assign_numeral', '$<<', '$blocks', '$skip_blank_lines', '$parse_block_metadata_lines', '$attributes', '$is_next_line_doctitle?', '$finalize_header', '$nil_or_empty?', '$title=', '$-', '$sourcemap', '$cursor', '$parse_section_title', '$id=', '$include?', '$sub_specialchars', '$[]=', '$sub_attributes', '$source_location=', '$header', '$attribute_locked?', '$id', '$clear', '$delete', '$instance_variable_get', '$parse_header_metadata', '$==', '$!', '$register', '$doctype', '$parse_manpage_header', '$=~', '$downcase', '$error', '$logger', '$message_with_context', '$cursor_at_line', '$backend', '$save', '$update', '$is_next_line_section?', '$initialize_section', '$join', '$map', '$read_lines_until', '$lstrip', '$split', '$title', '$restore_save', '$discard_save', '$context', '$empty?', '$header?', '$!=', '$attr?', '$attr', '$key?', '$document', '$+', '$level', '$special', '$sectname', '$to_i', '$<', '$>', '$warn', '$next_block', '$blocks?', '$style', '$context=', '$style=', '$parent=', '$size', '$content_model', '$shift', '$unwrap_standalone_preamble', '$source_location', '$merge', '$fetch', '$parse_block_metadata_line', '$extensions', '$block_macros?', '$mark', '$read_line', '$terminator', '$to_s', '$masq', '$to_sym', '$registered_for_block?', '$debug?', '$debug', '$cursor_at_mark', '$strict_verbatim_paragraphs', '$unshift_line', '$markdown_syntax', '$keys', '$chr', '$uniform?', '$length', '$end_with?', '$===', '$parse_attributes', '$attribute_missing', '$tr', '$basename', '$assign_caption', '$registered_for_block_macro?', '$config', '$process_method', '$replace', '$parse_callout_list', '$callouts', '$parse_list', '$parse_description_list', '$underline_style_section_titles', '$is_section_title?', '$peek_line', '$atx_section_title?', '$generate_id', '$level=', '$read_paragraph_lines', '$adjust_indentation!', '$map!', '$slice', '$pop', '$build_block', '$apply_subs', '$chop', '$catalog_inline_anchors', '$rekey', '$index', '$strip', '$parse_table', '$each', '$raise', '$title?', '$update_attributes', '$commit_subs', '$sub?', '$catalog_callouts', '$source', '$remove_sub', '$block_terminates_paragraph', '$to_proc', '$nil?', '$lines', '$parse_blocks', '$parse_list_item', '$items', '$scan', '$gsub', '$count', '$advance', '$dup', '$match', '$callout_ids', '$next_list', '$catalog_inline_anchor', '$marker=', '$catalog_inline_biblio_anchor', '$set_option', '$text=', '$resolve_ordered_list_marker', '$read_lines_for_list_item', '$skip_line_comments', '$unshift_lines', '$fold_first', '$text?', '$is_sibling_list_item?', '$concat', '$find', '$casecmp', '$sectname=', '$special=', '$numbered=', '$numbered', '$lineno', '$peek_lines', '$setext_section_title?', '$abs', '$cursor_at_prev_line', '$process_attribute_entries', '$next_line_empty?', '$process_authors', '$apply_header_subs', '$rstrip', '$each_with_index', '$compact', '$squeeze', '$to_a', '$parse_style_attribute', '$process_attribute_entry', '$skip_comment_lines', '$store_attribute', '$sanitize_attribute_name', '$set_attribute', '$save_to', '$delete_attribute', '$ord', '$int_to_roman', '$resolve_list_marker', '$parse_colspecs', '$create_columns', '$has_header_option=', '$format', '$starts_with_delimiter?', '$close_open_cell', '$parse_cellspec', '$delimiter', '$match_delimiter', '$pre_match', '$post_match', '$buffer_has_unclosed_quotes?', '$skip_past_delimiter', '$buffer', '$buffer=', '$skip_past_escaped_delimiter', '$keep_cell_open', '$push_cellspec', '$close_cell', '$cell_open?', '$columns', '$assign_column_widths', '$partition_header_footer', '$upto', '$partition', '$shorthand_property_syntax', '$each_char', '$yield_buffered_attribute', '$any?', '$*', '$each_byte', '$%']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Parser');\n\n      var $nesting = [self].concat($parent_nesting), $Parser$1, $Parser$2, $Parser$3, $Parser_parse$4, $Parser_parse_document_header$5, $Parser_parse_manpage_header$6, $Parser_next_section$9, $Parser_next_block$10, $Parser_read_paragraph_lines$14, $Parser_is_delimited_block$ques$15, $Parser_build_block$16, $Parser_parse_blocks$17, $Parser_parse_list$18, $Parser_catalog_callouts$19, $Parser_catalog_inline_anchor$21, $Parser_catalog_inline_anchors$22, $Parser_catalog_inline_biblio_anchor$24, $Parser_parse_description_list$25, $Parser_parse_callout_list$26, $Parser_parse_list_item$27, $Parser_read_lines_for_list_item$28, $Parser_initialize_section$34, $Parser_is_next_line_section$ques$35, $Parser_is_next_line_doctitle$ques$36, $Parser_is_section_title$ques$37, $Parser_atx_section_title$ques$38, $Parser_setext_section_title$ques$39, $Parser_parse_section_title$40, $Parser_parse_header_metadata$41, $Parser_process_authors$46, $Parser_parse_block_metadata_lines$51, $Parser_parse_block_metadata_line$52, $Parser_process_attribute_entries$53, $Parser_process_attribute_entry$54, $Parser_store_attribute$55, $Parser_resolve_list_marker$56, $Parser_resolve_ordered_list_marker$57, $Parser_is_sibling_list_item$ques$59, $Parser_parse_table$60, $Parser_parse_colspecs$61, $Parser_parse_cellspec$65, $Parser_parse_style_attribute$66, $Parser_yield_buffered_attribute$69, $Parser_adjust_indentation$excl$70, $Parser_uniform$ques$79, $Parser_sanitize_attribute_name$80;\n\n      \n      self.$include($$($nesting, 'Logging'));\n      Opal.const_set($nesting[0], 'BlockMatchData', $$($nesting, 'Struct').$new(\"context\", \"masq\", \"tip\", \"terminator\"));\n      Opal.const_set($nesting[0], 'TAB', \"\\t\");\n      Opal.const_set($nesting[0], 'TabIndentRx', /^\\t+/);\n      Opal.const_set($nesting[0], 'StartOfBlockProc', $send(self, 'proc', [], ($Parser$1 = function(l){var self = $Parser$1.$$s || this, $a, $b;\n\n      \n        \n        if (l == null) {\n          l = nil;\n        };\n        return ($truthy($a = ($truthy($b = l['$start_with?'](\"[\")) ? $$($nesting, 'BlockAttributeLineRx')['$match?'](l) : $b)) ? $a : self['$is_delimited_block?'](l));}, $Parser$1.$$s = self, $Parser$1.$$arity = 1, $Parser$1)));\n      Opal.const_set($nesting[0], 'StartOfListProc', $send(self, 'proc', [], ($Parser$2 = function(l){var self = $Parser$2.$$s || this;\n\n      \n        \n        if (l == null) {\n          l = nil;\n        };\n        return $$($nesting, 'AnyListRx')['$match?'](l);}, $Parser$2.$$s = self, $Parser$2.$$arity = 1, $Parser$2)));\n      Opal.const_set($nesting[0], 'StartOfBlockOrListProc', $send(self, 'proc', [], ($Parser$3 = function(l){var self = $Parser$3.$$s || this, $a, $b, $c;\n\n      \n        \n        if (l == null) {\n          l = nil;\n        };\n        return ($truthy($a = ($truthy($b = self['$is_delimited_block?'](l)) ? $b : ($truthy($c = l['$start_with?'](\"[\")) ? $$($nesting, 'BlockAttributeLineRx')['$match?'](l) : $c))) ? $a : $$($nesting, 'AnyListRx')['$match?'](l));}, $Parser$3.$$s = self, $Parser$3.$$arity = 1, $Parser$3)));\n      Opal.const_set($nesting[0], 'NoOp', nil);\n      Opal.const_set($nesting[0], 'AuthorKeys', [\"author\", \"authorinitials\", \"firstname\", \"middlename\", \"lastname\", \"email\"]);\n      Opal.const_set($nesting[0], 'TableCellHorzAlignments', $hash2([\"<\", \">\", \"^\"], {\"<\": \"left\", \">\": \"right\", \"^\": \"center\"}));\n      Opal.const_set($nesting[0], 'TableCellVertAlignments', $hash2([\"<\", \">\", \"^\"], {\"<\": \"top\", \">\": \"bottom\", \"^\": \"middle\"}));\n      Opal.const_set($nesting[0], 'TableCellStyles', $hash2([\"d\", \"s\", \"e\", \"m\", \"h\", \"l\", \"a\"], {\"d\": \"none\", \"s\": \"strong\", \"e\": \"emphasis\", \"m\": \"monospaced\", \"h\": \"header\", \"l\": \"literal\", \"a\": \"asciidoc\"}));\n      self.$private_class_method(\"new\");\n      Opal.defs(self, '$parse', $Parser_parse$4 = function $$parse(reader, document, options) {\n        var $a, $b, $c, self = this, block_attributes = nil, new_section = nil;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        block_attributes = self.$parse_document_header(reader, document);\n        if ($truthy(options['$[]'](\"header_only\"))) {\n        } else {\n          while ($truthy(reader['$has_more_lines?']())) {\n            \n            $c = self.$next_section(reader, document, block_attributes), $b = Opal.to_ary($c), (new_section = ($b[0] == null ? nil : $b[0])), (block_attributes = ($b[1] == null ? nil : $b[1])), $c;\n            if ($truthy(new_section)) {\n              \n              document.$assign_numeral(new_section);\n              document.$blocks()['$<<'](new_section);};\n          }\n        };\n        return document;\n      }, $Parser_parse$4.$$arity = -3);\n      Opal.defs(self, '$parse_document_header', $Parser_parse_document_header$5 = function $$parse_document_header(reader, document) {\n        var $a, $b, self = this, block_attrs = nil, doc_attrs = nil, implicit_doctitle = nil, val = nil, $writer = nil, doctitle_attr_val = nil, source_location = nil, _ = nil, l0_section_title = nil, atx = nil, separator = nil, doc_id = nil, role = nil, reftext = nil, modified_attrs = nil;\n\n        \n        block_attrs = (function() {if ($truthy(reader.$skip_blank_lines())) {\n          \n          return self.$parse_block_metadata_lines(reader, document);\n        } else {\n          return $hash2([], {})\n        }; return nil; })();\n        doc_attrs = document.$attributes();\n        if ($truthy(($truthy($a = (implicit_doctitle = self['$is_next_line_doctitle?'](reader, block_attrs, doc_attrs['$[]'](\"leveloffset\")))) ? block_attrs['$[]'](\"title\") : $a))) {\n          return document.$finalize_header(block_attrs, false)};\n        if ($truthy((val = doc_attrs['$[]'](\"doctitle\"))['$nil_or_empty?']())) {\n        } else {\n          \n          $writer = [(doctitle_attr_val = val)];\n          $send(document, 'title=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        if ($truthy(implicit_doctitle)) {\n          \n          if ($truthy(document.$sourcemap())) {\n            source_location = reader.$cursor()};\n          $b = self.$parse_section_title(reader, document), $a = Opal.to_ary($b), document['$id='](($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (l0_section_title = ($a[2] == null ? nil : $a[2])), (_ = ($a[3] == null ? nil : $a[3])), (atx = ($a[4] == null ? nil : $a[4])), $b;\n          if ($truthy(doctitle_attr_val)) {\n            l0_section_title = nil\n          } else {\n            \n            \n            $writer = [l0_section_title];\n            $send(document, 'title=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy((($writer = [\"doctitle\", (doctitle_attr_val = document.$sub_specialchars(l0_section_title))]), $send(doc_attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n              \n              $writer = [\"doctitle\", (doctitle_attr_val = document.$sub_attributes(doctitle_attr_val, $hash2([\"attribute_missing\"], {\"attribute_missing\": \"skip\"})))];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n          };\n          if ($truthy(source_location)) {\n            \n            $writer = [source_location];\n            $send(document.$header(), 'source_location=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy(($truthy($a = atx) ? $a : document['$attribute_locked?'](\"compat-mode\")))) {\n          } else {\n            \n            $writer = [\"compat-mode\", \"\"];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          if ($truthy((separator = block_attrs['$[]'](\"separator\")))) {\n            if ($truthy(document['$attribute_locked?'](\"title-separator\"))) {\n            } else {\n              \n              $writer = [\"title-separator\", separator];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            }};\n          if ($truthy((doc_id = block_attrs['$[]'](\"id\")))) {\n            \n            $writer = [doc_id];\n            $send(document, 'id=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            doc_id = document.$id()\n          };\n          if ($truthy((role = block_attrs['$[]'](\"role\")))) {\n            \n            $writer = [\"role\", role];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy((reftext = block_attrs['$[]'](\"reftext\")))) {\n            \n            $writer = [\"reftext\", reftext];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          block_attrs.$clear();\n          (modified_attrs = document.$instance_variable_get(\"@attributes_modified\")).$delete(\"doctitle\");\n          self.$parse_header_metadata(reader, document);\n          if ($truthy(modified_attrs['$include?'](\"doctitle\"))) {\n            if ($truthy(($truthy($a = (val = doc_attrs['$[]'](\"doctitle\"))['$nil_or_empty?']()) ? $a : val['$=='](doctitle_attr_val)))) {\n              \n              $writer = [\"doctitle\", doctitle_attr_val];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              \n              $writer = [val];\n              $send(document, 'title=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            }\n          } else if ($truthy(l0_section_title['$!']())) {\n            modified_attrs['$<<'](\"doctitle\")};\n          if ($truthy(doc_id)) {\n            document.$register(\"refs\", [doc_id, document])};};\n        if (document.$doctype()['$=='](\"manpage\")) {\n          self.$parse_manpage_header(reader, document, block_attrs)};\n        return document.$finalize_header(block_attrs);\n      }, $Parser_parse_document_header$5.$$arity = 2);\n      Opal.defs(self, '$parse_manpage_header', $Parser_parse_manpage_header$6 = function $$parse_manpage_header(reader, document, block_attributes) {\n        var $a, $b, $$7, $$8, self = this, doc_attrs = nil, $writer = nil, manvolnum = nil, mantitle = nil, manname = nil, name_section_level = nil, name_section = nil, name_section_buffer = nil, mannames = nil, manpurpose = nil, error_msg = nil;\n\n        \n        if ($truthy($$($nesting, 'ManpageTitleVolnumRx')['$=~']((doc_attrs = document.$attributes())['$[]'](\"doctitle\")))) {\n          \n          \n          $writer = [\"manvolnum\", (manvolnum = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)))];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"mantitle\", (function() {if ($truthy((mantitle = (($a = $gvars['~']) === nil ? nil : $a['$[]'](1)))['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n            \n            return document.$sub_attributes(mantitle);\n          } else {\n            return mantitle\n          }; return nil; })().$downcase()];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        } else {\n          \n          self.$logger().$error(self.$message_with_context(\"non-conforming manpage title\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_line(1)})));\n          \n          $writer = [\"mantitle\", ($truthy($a = ($truthy($b = doc_attrs['$[]'](\"doctitle\")) ? $b : doc_attrs['$[]'](\"docname\"))) ? $a : \"command\")];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"manvolnum\", (manvolnum = \"1\")];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n        };\n        if ($truthy(($truthy($a = (manname = doc_attrs['$[]'](\"manname\"))) ? doc_attrs['$[]'](\"manpurpose\") : $a))) {\n          \n          ($truthy($a = doc_attrs['$[]'](\"manname-title\")) ? $a : (($writer = [\"manname-title\", \"Name\"]), $send(doc_attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          \n          $writer = [\"mannames\", [manname]];\n          $send(doc_attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if (document.$backend()['$=='](\"manpage\")) {\n            \n            \n            $writer = [\"docname\", manname];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"outfilesuffix\", \"\" + \".\" + (manvolnum)];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;};\n        } else {\n          \n          reader.$skip_blank_lines();\n          reader.$save();\n          block_attributes.$update(self.$parse_block_metadata_lines(reader, document));\n          if ($truthy((name_section_level = self['$is_next_line_section?'](reader, $hash2([], {}))))) {\n            if (name_section_level['$=='](1)) {\n              \n              name_section = self.$initialize_section(reader, document, $hash2([], {}));\n              name_section_buffer = $send(reader.$read_lines_until($hash2([\"break_on_blank_lines\", \"skip_line_comments\"], {\"break_on_blank_lines\": true, \"skip_line_comments\": true})), 'map', [], ($$7 = function(l){var self = $$7.$$s || this;\n\n              \n                \n                if (l == null) {\n                  l = nil;\n                };\n                return l.$lstrip();}, $$7.$$s = self, $$7.$$arity = 1, $$7)).$join(\" \");\n              if ($truthy($$($nesting, 'ManpageNamePurposeRx')['$=~'](name_section_buffer))) {\n                \n                if ($truthy((manname = (($a = $gvars['~']) === nil ? nil : $a['$[]'](1)))['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                  manname = document.$sub_attributes(manname)};\n                if ($truthy(manname['$include?'](\",\"))) {\n                  manname = (mannames = $send(manname.$split(\",\"), 'map', [], ($$8 = function(n){var self = $$8.$$s || this;\n\n                  \n                    \n                    if (n == null) {\n                      n = nil;\n                    };\n                    return n.$lstrip();}, $$8.$$s = self, $$8.$$arity = 1, $$8)))['$[]'](0)\n                } else {\n                  mannames = [manname]\n                };\n                if ($truthy((manpurpose = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)))['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                  manpurpose = document.$sub_attributes(manpurpose)};\n                ($truthy($a = doc_attrs['$[]'](\"manname-title\")) ? $a : (($writer = [\"manname-title\", name_section.$title()]), $send(doc_attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n                if ($truthy(name_section.$id())) {\n                  \n                  $writer = [\"manname-id\", name_section.$id()];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                \n                $writer = [\"manname\", manname];\n                $send(doc_attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [\"mannames\", mannames];\n                $send(doc_attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [\"manpurpose\", manpurpose];\n                $send(doc_attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                if (document.$backend()['$=='](\"manpage\")) {\n                  \n                  \n                  $writer = [\"docname\", manname];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                  \n                  $writer = [\"outfilesuffix\", \"\" + \".\" + (manvolnum)];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;};\n              } else {\n                error_msg = \"non-conforming name section body\"\n              };\n            } else {\n              error_msg = \"name section must be at level 1\"\n            }\n          } else {\n            error_msg = \"name section expected\"\n          };\n          if ($truthy(error_msg)) {\n            \n            reader.$restore_save();\n            self.$logger().$error(self.$message_with_context(error_msg, $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})));\n            \n            $writer = [\"manname\", (manname = ($truthy($a = doc_attrs['$[]'](\"docname\")) ? $a : \"command\"))];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"mannames\", [manname]];\n            $send(doc_attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if (document.$backend()['$=='](\"manpage\")) {\n              \n              \n              $writer = [\"docname\", manname];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [\"outfilesuffix\", \"\" + \".\" + (manvolnum)];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n          } else {\n            reader.$discard_save()\n          };\n        };\n        return nil;\n      }, $Parser_parse_manpage_header$6.$$arity = 3);\n      Opal.defs(self, '$next_section', $Parser_next_section$9 = function $$next_section(reader, parent, attributes) {\n        var $a, $b, $c, $d, self = this, preamble = nil, intro = nil, part = nil, has_header = nil, book = nil, document = nil, $writer = nil, section = nil, current_level = nil, expected_next_level = nil, expected_next_level_alt = nil, title = nil, sectname = nil, next_level = nil, expected_condition = nil, new_section = nil, block_cursor = nil, new_block = nil, first_block = nil, child_block = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        preamble = (intro = (part = false));\n        if ($truthy(($truthy($a = (($b = parent.$context()['$=='](\"document\")) ? parent.$blocks()['$empty?']() : parent.$context()['$=='](\"document\"))) ? ($truthy($b = ($truthy($c = (has_header = parent['$header?']())) ? $c : attributes.$delete(\"invalid-header\"))) ? $b : self['$is_next_line_section?'](reader, attributes)['$!']()) : $a))) {\n          \n          book = (document = parent).$doctype()['$=='](\"book\");\n          if ($truthy(($truthy($a = has_header) ? $a : ($truthy($b = book) ? attributes['$[]'](1)['$!='](\"abstract\") : $b)))) {\n            \n            preamble = (intro = $$($nesting, 'Block').$new(parent, \"preamble\", $hash2([\"content_model\"], {\"content_model\": \"compound\"})));\n            if ($truthy(($truthy($a = book) ? parent['$attr?'](\"preface-title\") : $a))) {\n              \n              $writer = [parent.$attr(\"preface-title\")];\n              $send(preamble, 'title=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            parent.$blocks()['$<<'](preamble);};\n          section = parent;\n          current_level = 0;\n          if ($truthy(parent.$attributes()['$key?'](\"fragment\"))) {\n            expected_next_level = -1\n          } else if ($truthy(book)) {\n            $a = [1, 0], (expected_next_level = $a[0]), (expected_next_level_alt = $a[1]), $a\n          } else {\n            expected_next_level = 1\n          };\n        } else {\n          \n          book = (document = parent.$document()).$doctype()['$=='](\"book\");\n          section = self.$initialize_section(reader, parent, attributes);\n          attributes = (function() {if ($truthy((title = attributes['$[]'](\"title\")))) {\n            return $hash2([\"title\"], {\"title\": title})\n          } else {\n            return $hash2([], {})\n          }; return nil; })();\n          expected_next_level = $rb_plus((current_level = section.$level()), 1);\n          if (current_level['$=='](0)) {\n            part = book\n          } else if ($truthy((($a = current_level['$=='](1)) ? section.$special() : current_level['$=='](1)))) {\n            if ($truthy(($truthy($a = ($truthy($b = (sectname = section.$sectname())['$=='](\"appendix\")) ? $b : sectname['$=='](\"preface\"))) ? $a : sectname['$=='](\"abstract\")))) {\n            } else {\n              expected_next_level = nil\n            }};\n        };\n        reader.$skip_blank_lines();\n        while ($truthy(reader['$has_more_lines?']())) {\n          \n          self.$parse_block_metadata_lines(reader, document, attributes);\n          if ($truthy((next_level = self['$is_next_line_section?'](reader, attributes)))) {\n            \n            if ($truthy(document['$attr?'](\"leveloffset\"))) {\n              \n              next_level = $rb_plus(next_level, document.$attr(\"leveloffset\").$to_i());\n              if ($truthy($rb_lt(next_level, 0))) {\n                next_level = 0};};\n            if ($truthy($rb_gt(next_level, current_level))) {\n              \n              if ($truthy(expected_next_level)) {\n                if ($truthy(($truthy($b = ($truthy($c = next_level['$=='](expected_next_level)) ? $c : ($truthy($d = expected_next_level_alt) ? next_level['$=='](expected_next_level_alt) : $d))) ? $b : $rb_lt(expected_next_level, 0)))) {\n                } else {\n                  \n                  expected_condition = (function() {if ($truthy(expected_next_level_alt)) {\n                    return \"\" + \"expected levels \" + (expected_next_level_alt) + \" or \" + (expected_next_level)\n                  } else {\n                    return \"\" + \"expected level \" + (expected_next_level)\n                  }; return nil; })();\n                  self.$logger().$warn(self.$message_with_context(\"\" + \"section title out of sequence: \" + (expected_condition) + \", got level \" + (next_level), $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})));\n                }\n              } else {\n                self.$logger().$error(self.$message_with_context(\"\" + (sectname) + \" sections do not support nested sections\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))\n              };\n              $c = self.$next_section(reader, section, attributes), $b = Opal.to_ary($c), (new_section = ($b[0] == null ? nil : $b[0])), (attributes = ($b[1] == null ? nil : $b[1])), $c;\n              section.$assign_numeral(new_section);\n              section.$blocks()['$<<'](new_section);\n            } else if ($truthy((($b = next_level['$=='](0)) ? section['$=='](document) : next_level['$=='](0)))) {\n              \n              if ($truthy(book)) {\n              } else {\n                self.$logger().$error(self.$message_with_context(\"level 0 sections can only be used when doctype is book\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))\n              };\n              $c = self.$next_section(reader, section, attributes), $b = Opal.to_ary($c), (new_section = ($b[0] == null ? nil : $b[0])), (attributes = ($b[1] == null ? nil : $b[1])), $c;\n              section.$assign_numeral(new_section);\n              section.$blocks()['$<<'](new_section);\n            } else {\n              break;\n            };\n          } else {\n            \n            block_cursor = reader.$cursor();\n            if ($truthy((new_block = self.$next_block(reader, ($truthy($b = intro) ? $b : section), attributes, $hash2([\"parse_metadata\"], {\"parse_metadata\": false}))))) {\n              \n              if ($truthy(part)) {\n                if ($truthy(section['$blocks?']()['$!']())) {\n                  if ($truthy(new_block.$style()['$!='](\"partintro\"))) {\n                    if (new_block.$context()['$=='](\"paragraph\")) {\n                      \n                      \n                      $writer = [\"open\"];\n                      $send(new_block, 'context=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      \n                      $writer = [\"partintro\"];\n                      $send(new_block, 'style=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                    } else {\n                      \n                      \n                      $writer = [(intro = $$($nesting, 'Block').$new(section, \"open\", $hash2([\"content_model\"], {\"content_model\": \"compound\"})))];\n                      $send(new_block, 'parent=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      \n                      $writer = [\"partintro\"];\n                      $send(intro, 'style=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      section.$blocks()['$<<'](intro);\n                    }}\n                } else if (section.$blocks().$size()['$=='](1)) {\n                  \n                  first_block = section.$blocks()['$[]'](0);\n                  if ($truthy(($truthy($b = intro['$!']()) ? first_block.$content_model()['$=='](\"compound\") : $b))) {\n                    self.$logger().$error(self.$message_with_context(\"illegal block content outside of partintro block\", $hash2([\"source_location\"], {\"source_location\": block_cursor})))\n                  } else if ($truthy(first_block.$content_model()['$!='](\"compound\"))) {\n                    \n                    \n                    $writer = [(intro = $$($nesting, 'Block').$new(section, \"open\", $hash2([\"content_model\"], {\"content_model\": \"compound\"})))];\n                    $send(new_block, 'parent=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];;\n                    \n                    $writer = [\"partintro\"];\n                    $send(intro, 'style=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];;\n                    section.$blocks().$shift();\n                    if (first_block.$style()['$=='](\"partintro\")) {\n                      \n                      \n                      $writer = [\"paragraph\"];\n                      $send(first_block, 'context=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      \n                      $writer = [nil];\n                      $send(first_block, 'style=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;};\n                    intro['$<<'](first_block);\n                    section.$blocks()['$<<'](intro);};}};\n              ($truthy($b = intro) ? $b : section).$blocks()['$<<'](new_block);\n              attributes.$clear();};\n          };\n          if ($truthy($b = reader.$skip_blank_lines())) {\n            $b\n          } else {\n            break;\n          };\n        };\n        if ($truthy(part)) {\n          if ($truthy(($truthy($a = section['$blocks?']()) ? section.$blocks()['$[]'](-1).$context()['$=='](\"section\") : $a))) {\n          } else {\n            self.$logger().$error(self.$message_with_context(\"invalid part, must have at least one section (e.g., chapter, appendix, etc.)\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))\n          }\n        } else if ($truthy(preamble)) {\n          if ($truthy(preamble['$blocks?']())) {\n            if ($truthy(($truthy($a = ($truthy($b = book) ? $b : document.$blocks()['$[]'](1))) ? $a : $$($nesting, 'Compliance').$unwrap_standalone_preamble()['$!']()))) {\n              if ($truthy(document.$sourcemap())) {\n                \n                $writer = [preamble.$blocks()['$[]'](0).$source_location()];\n                $send(preamble, 'source_location=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];}\n            } else {\n              \n              document.$blocks().$shift();\n              while ($truthy((child_block = preamble.$blocks().$shift()))) {\n                document['$<<'](child_block)\n              };\n            }\n          } else {\n            document.$blocks().$shift()\n          }};\n        return [(function() {if (section['$=='](parent)) {\n          return nil\n        } else {\n          return section\n        }; return nil; })(), attributes.$merge()];\n      }, $Parser_next_section$9.$$arity = -3);\n      Opal.defs(self, '$next_block', $Parser_next_block$10 = function $$next_block(reader, parent, attributes, options) {try {\n\n        var $a, $b, $c, $d, $$11, $$12, $$13, self = this, skipped = nil, text_only = nil, document = nil, extensions = nil, block_extensions = nil, block_macro_extensions = nil, this_line = nil, doc_attrs = nil, style = nil, block = nil, block_context = nil, cloaked_context = nil, terminator = nil, delimited_block = nil, $writer = nil, indented = nil, md_syntax = nil, ch0 = nil, layout_break_chars = nil, ll = nil, blk_ctx = nil, target = nil, blk_attrs = nil, $case = nil, posattrs = nil, expanded_target = nil, scaledwidth = nil, block_title = nil, extension = nil, report_unknown_block_macro = nil, content = nil, ext_config = nil, default_attrs = nil, float_id = nil, float_reftext = nil, float_level = nil, lines = nil, content_adjacent = nil, admonition_name = nil, credit_line = nil, attribution = nil, citetitle = nil, language = nil, comma_idx = nil, block_cursor = nil, block_reader = nil, content_model = nil, positional_attrs = nil, block_id = nil;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        if ($truthy((skipped = reader.$skip_blank_lines()))) {\n        } else {\n          return nil\n        };\n        if ($truthy(($truthy($a = (text_only = options['$[]'](\"text_only\"))) ? $rb_gt(skipped, 0) : $a))) {\n          \n          options.$delete(\"text_only\");\n          text_only = nil;};\n        document = parent.$document();\n        if ($truthy(options.$fetch(\"parse_metadata\", true))) {\n          while ($truthy(self.$parse_block_metadata_line(reader, document, attributes, options))) {\n            \n            reader.$shift();\n            ($truthy($b = reader.$skip_blank_lines()) ? $b : Opal.ret(nil));\n          }};\n        if ($truthy((extensions = document.$extensions()))) {\n          $a = [extensions['$blocks?'](), extensions['$block_macros?']()], (block_extensions = $a[0]), (block_macro_extensions = $a[1]), $a};\n        reader.$mark();\n        $a = [reader.$read_line(), document.$attributes(), attributes['$[]'](1)], (this_line = $a[0]), (doc_attrs = $a[1]), (style = $a[2]), $a;\n        block = (block_context = (cloaked_context = (terminator = nil)));\n        if ($truthy((delimited_block = self['$is_delimited_block?'](this_line, true)))) {\n          \n          block_context = (cloaked_context = delimited_block.$context());\n          terminator = delimited_block.$terminator();\n          if ($truthy(style)) {\n            if (style['$=='](block_context.$to_s())) {\n            } else if ($truthy(delimited_block.$masq()['$include?'](style))) {\n              block_context = style.$to_sym()\n            } else if ($truthy(($truthy($a = delimited_block.$masq()['$include?'](\"admonition\")) ? $$($nesting, 'ADMONITION_STYLES')['$include?'](style) : $a))) {\n              block_context = \"admonition\"\n            } else if ($truthy(($truthy($a = block_extensions) ? extensions['$registered_for_block?'](style, block_context) : $a))) {\n              block_context = style.$to_sym()\n            } else {\n              \n              if ($truthy(self.$logger()['$debug?']())) {\n                self.$logger().$debug(self.$message_with_context(\"\" + \"unknown style for \" + (block_context) + \" block: \" + (style), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))};\n              style = block_context.$to_s();\n            }\n          } else {\n            style = (($writer = [\"style\", block_context.$to_s()]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])\n          };};\n        if ($truthy(delimited_block)) {\n        } else {\n          while ($truthy(true)) {\n            \n            if ($truthy(($truthy($b = ($truthy($c = style) ? $$($nesting, 'Compliance').$strict_verbatim_paragraphs() : $c)) ? $$($nesting, 'VERBATIM_STYLES')['$include?'](style) : $b))) {\n              \n              block_context = style.$to_sym();\n              reader.$unshift_line(this_line);\n              break;;};\n            if ($truthy(text_only)) {\n              indented = this_line['$start_with?'](\" \", $$($nesting, 'TAB'))\n            } else {\n              \n              md_syntax = $$($nesting, 'Compliance').$markdown_syntax();\n              if ($truthy(this_line['$start_with?'](\" \"))) {\n                \n                $b = [true, \" \"], (indented = $b[0]), (ch0 = $b[1]), $b;\n                if ($truthy(($truthy($b = ($truthy($c = md_syntax) ? $send(this_line.$lstrip(), 'start_with?', Opal.to_a($$($nesting, 'MARKDOWN_THEMATIC_BREAK_CHARS').$keys())) : $c)) ? $$($nesting, 'MarkdownThematicBreakRx')['$match?'](this_line) : $b))) {\n                  \n                  block = $$($nesting, 'Block').$new(parent, \"thematic_break\", $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n                  break;;};\n              } else if ($truthy(this_line['$start_with?']($$($nesting, 'TAB')))) {\n                $b = [true, $$($nesting, 'TAB')], (indented = $b[0]), (ch0 = $b[1]), $b\n              } else {\n                \n                $b = [false, this_line.$chr()], (indented = $b[0]), (ch0 = $b[1]), $b;\n                layout_break_chars = (function() {if ($truthy(md_syntax)) {\n                  return $$($nesting, 'HYBRID_LAYOUT_BREAK_CHARS')\n                } else {\n                  return $$($nesting, 'LAYOUT_BREAK_CHARS')\n                }; return nil; })();\n                if ($truthy(($truthy($b = layout_break_chars['$key?'](ch0)) ? (function() {if ($truthy(md_syntax)) {\n                  \n                  return $$($nesting, 'ExtLayoutBreakRx')['$match?'](this_line);\n                } else {\n                  return ($truthy($c = self['$uniform?'](this_line, ch0, (ll = this_line.$length()))) ? $rb_gt(ll, 2) : $c)\n                }; return nil; })() : $b))) {\n                  \n                  block = $$($nesting, 'Block').$new(parent, layout_break_chars['$[]'](ch0), $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n                  break;;\n                } else if ($truthy(($truthy($b = this_line['$end_with?'](\"]\")) ? this_line['$include?'](\"::\") : $b))) {\n                  if ($truthy(($truthy($b = ($truthy($c = ch0['$=='](\"i\")) ? $c : this_line['$start_with?'](\"video:\", \"audio:\"))) ? $$($nesting, 'BlockMediaMacroRx')['$=~'](this_line) : $b))) {\n                    \n                    $b = [(($c = $gvars['~']) === nil ? nil : $c['$[]'](1)).$to_sym(), (($c = $gvars['~']) === nil ? nil : $c['$[]'](2)), (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))], (blk_ctx = $b[0]), (target = $b[1]), (blk_attrs = $b[2]), $b;\n                    block = $$($nesting, 'Block').$new(parent, blk_ctx, $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n                    if ($truthy(blk_attrs)) {\n                      \n                      $case = blk_ctx;\n                      if (\"video\"['$===']($case)) {posattrs = [\"poster\", \"width\", \"height\"]}\n                      else if (\"audio\"['$===']($case)) {posattrs = []}\n                      else {posattrs = [\"alt\", \"width\", \"height\"]};\n                      block.$parse_attributes(blk_attrs, posattrs, $hash2([\"sub_input\", \"into\"], {\"sub_input\": true, \"into\": attributes}));};\n                    if ($truthy(attributes['$key?'](\"style\"))) {\n                      attributes.$delete(\"style\")};\n                    if ($truthy(target['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                      if ($truthy(($truthy($b = ($truthy($c = (expanded_target = block.$sub_attributes(target))['$empty?']()) ? ($truthy($d = doc_attrs['$[]'](\"attribute-missing\")) ? $d : $$($nesting, 'Compliance').$attribute_missing())['$=='](\"drop-line\") : $c)) ? block.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : $b))) {\n                        \n                        attributes.$clear();\n                        return nil;\n                      } else {\n                        target = expanded_target\n                      }};\n                    if (blk_ctx['$=='](\"image\")) {\n                      \n                      document.$register(\"images\", target);\n                      \n                      $writer = [\"imagesdir\", doc_attrs['$[]'](\"imagesdir\")];\n                      $send(attributes, '[]=', Opal.to_a($writer));\n                      $writer[$rb_minus($writer[\"length\"], 1)];;\n                      ($truthy($b = attributes['$[]'](\"alt\")) ? $b : (($writer = [\"alt\", ($truthy($c = style) ? $c : (($writer = [\"default-alt\", $$($nesting, 'Helpers').$basename(target, true).$tr(\"_-\", \" \")]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n                      if ($truthy((scaledwidth = attributes.$delete(\"scaledwidth\"))['$nil_or_empty?']())) {\n                      } else {\n                        \n                        $writer = [\"scaledwidth\", (function() {if ($truthy($$($nesting, 'TrailingDigitsRx')['$match?'](scaledwidth))) {\n                          return \"\" + (scaledwidth) + \"%\"\n                        } else {\n                          return scaledwidth\n                        }; return nil; })()];\n                        $send(attributes, '[]=', Opal.to_a($writer));\n                        $writer[$rb_minus($writer[\"length\"], 1)];\n                      };\n                      if ($truthy(attributes['$[]'](\"title\"))) {\n                        \n                        \n                        $writer = [(block_title = attributes.$delete(\"title\"))];\n                        $send(block, 'title=', Opal.to_a($writer));\n                        $writer[$rb_minus($writer[\"length\"], 1)];;\n                        block.$assign_caption(attributes.$delete(\"caption\"), \"figure\");};};\n                    \n                    $writer = [\"target\", target];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];;\n                    break;;\n                  } else if ($truthy(($truthy($b = (($c = ch0['$=='](\"t\")) ? this_line['$start_with?'](\"toc:\") : ch0['$=='](\"t\"))) ? $$($nesting, 'BlockTocMacroRx')['$=~'](this_line) : $b))) {\n                    \n                    block = $$($nesting, 'Block').$new(parent, \"toc\", $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n                    if ($truthy((($b = $gvars['~']) === nil ? nil : $b['$[]'](1)))) {\n                      block.$parse_attributes((($b = $gvars['~']) === nil ? nil : $b['$[]'](1)), [], $hash2([\"into\"], {\"into\": attributes}))};\n                    break;;\n                  } else if ($truthy((function() {if ($truthy(block_macro_extensions)) {\n                    \n                    return ($truthy($b = ($truthy($c = $$($nesting, 'CustomBlockMacroRx')['$=~'](this_line)) ? (extension = extensions['$registered_for_block_macro?']((($d = $gvars['~']) === nil ? nil : $d['$[]'](1)))) : $c)) ? $b : (report_unknown_block_macro = self.$logger()['$debug?']()));\n                  } else {\n                    \n                    return ($truthy($b = self.$logger()['$debug?']()) ? (report_unknown_block_macro = $$($nesting, 'CustomBlockMacroRx')['$=~'](this_line)) : $b);\n                  }; return nil; })())) {\n                    if ($truthy(report_unknown_block_macro)) {\n                      self.$logger().$debug(self.$message_with_context(\"\" + \"unknown name for block macro: \" + ((($b = $gvars['~']) === nil ? nil : $b['$[]'](1))), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))\n                    } else {\n                      \n                      content = (($b = $gvars['~']) === nil ? nil : $b['$[]'](3));\n                      if ($truthy((target = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2)))['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                        if ($truthy(($truthy($b = ($truthy($c = (expanded_target = parent.$sub_attributes(target))['$empty?']()) ? ($truthy($d = doc_attrs['$[]'](\"attribute-missing\")) ? $d : $$($nesting, 'Compliance').$attribute_missing())['$=='](\"drop-line\") : $c)) ? parent.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : $b))) {\n                          \n                          attributes.$clear();\n                          return nil;\n                        } else {\n                          target = expanded_target\n                        }};\n                      if ((ext_config = extension.$config())['$[]'](\"content_model\")['$=='](\"attributes\")) {\n                        if ($truthy(content)) {\n                          document.$parse_attributes(content, ($truthy($b = ($truthy($c = ext_config['$[]'](\"positional_attrs\")) ? $c : ext_config['$[]'](\"pos_attrs\"))) ? $b : []), $hash2([\"sub_input\", \"into\"], {\"sub_input\": true, \"into\": attributes}))}\n                      } else {\n                        \n                        $writer = [\"text\", ($truthy($b = content) ? $b : \"\")];\n                        $send(attributes, '[]=', Opal.to_a($writer));\n                        $writer[$rb_minus($writer[\"length\"], 1)];\n                      };\n                      if ($truthy((default_attrs = ext_config['$[]'](\"default_attrs\")))) {\n                        $send(attributes, 'update', [default_attrs], ($$11 = function(_, old_v){var self = $$11.$$s || this;\n\n                        \n                          \n                          if (_ == null) {\n                            _ = nil;\n                          };\n                          \n                          if (old_v == null) {\n                            old_v = nil;\n                          };\n                          return old_v;}, $$11.$$s = self, $$11.$$arity = 2, $$11))};\n                      if ($truthy((block = extension.$process_method()['$[]'](parent, target, attributes)))) {\n                        \n                        attributes.$replace(block.$attributes());\n                        break;;\n                      } else {\n                        \n                        attributes.$clear();\n                        return nil;\n                      };\n                    }}};\n              };\n            };\n            if ($truthy(($truthy($b = ($truthy($c = indented['$!']()) ? (ch0 = ($truthy($d = ch0) ? $d : this_line.$chr()))['$=='](\"<\") : $c)) ? $$($nesting, 'CalloutListRx')['$=~'](this_line) : $b))) {\n              \n              reader.$unshift_line(this_line);\n              block = self.$parse_callout_list(reader, $gvars[\"~\"], parent, document.$callouts());\n              \n              $writer = [\"style\", \"arabic\"];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              break;;\n            } else if ($truthy($$($nesting, 'UnorderedListRx')['$match?'](this_line))) {\n              \n              reader.$unshift_line(this_line);\n              if ($truthy(($truthy($b = ($truthy($c = style['$!']()) ? $$($nesting, 'Section')['$==='](parent) : $c)) ? parent.$sectname()['$=='](\"bibliography\") : $b))) {\n                \n                $writer = [\"style\", (style = \"bibliography\")];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              block = self.$parse_list(reader, \"ulist\", parent, style);\n              break;;\n            } else if ($truthy($$($nesting, 'OrderedListRx')['$match?'](this_line))) {\n              \n              reader.$unshift_line(this_line);\n              block = self.$parse_list(reader, \"olist\", parent, style);\n              if ($truthy(block.$style())) {\n                \n                $writer = [\"style\", block.$style()];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              break;;\n            } else if ($truthy(($truthy($b = ($truthy($c = this_line['$include?'](\"::\")) ? $c : this_line['$include?'](\";;\"))) ? $$($nesting, 'DescriptionListRx')['$=~'](this_line) : $b))) {\n              \n              reader.$unshift_line(this_line);\n              block = self.$parse_description_list(reader, $gvars[\"~\"], parent);\n              break;;\n            } else if ($truthy(($truthy($b = ($truthy($c = style['$=='](\"float\")) ? $c : style['$=='](\"discrete\"))) ? (function() {if ($truthy($$($nesting, 'Compliance').$underline_style_section_titles())) {\n              \n              return self['$is_section_title?'](this_line, reader.$peek_line());\n            } else {\n              return ($truthy($c = indented['$!']()) ? self['$atx_section_title?'](this_line) : $c)\n            }; return nil; })() : $b))) {\n              \n              reader.$unshift_line(this_line);\n              $c = self.$parse_section_title(reader, document, attributes['$[]'](\"id\")), $b = Opal.to_ary($c), (float_id = ($b[0] == null ? nil : $b[0])), (float_reftext = ($b[1] == null ? nil : $b[1])), (block_title = ($b[2] == null ? nil : $b[2])), (float_level = ($b[3] == null ? nil : $b[3])), $c;\n              if ($truthy(float_reftext)) {\n                \n                $writer = [\"reftext\", float_reftext];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              block = $$($nesting, 'Block').$new(parent, \"floating_title\", $hash2([\"content_model\"], {\"content_model\": \"empty\"}));\n              \n              $writer = [block_title];\n              $send(block, 'title=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              attributes.$delete(\"title\");\n              \n              $writer = [($truthy($b = float_id) ? $b : (function() {if ($truthy(doc_attrs['$key?'](\"sectids\"))) {\n                \n                return $$($nesting, 'Section').$generate_id(block.$title(), document);\n              } else {\n                return nil\n              }; return nil; })())];\n              $send(block, 'id=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [float_level];\n              $send(block, 'level=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              break;;\n            } else if ($truthy(($truthy($b = style) ? style['$!='](\"normal\") : $b))) {\n              if ($truthy($$($nesting, 'PARAGRAPH_STYLES')['$include?'](style))) {\n                \n                block_context = style.$to_sym();\n                cloaked_context = \"paragraph\";\n                reader.$unshift_line(this_line);\n                break;;\n              } else if ($truthy($$($nesting, 'ADMONITION_STYLES')['$include?'](style))) {\n                \n                block_context = \"admonition\";\n                cloaked_context = \"paragraph\";\n                reader.$unshift_line(this_line);\n                break;;\n              } else if ($truthy(($truthy($b = block_extensions) ? extensions['$registered_for_block?'](style, \"paragraph\") : $b))) {\n                \n                block_context = style.$to_sym();\n                cloaked_context = \"paragraph\";\n                reader.$unshift_line(this_line);\n                break;;\n              } else {\n                \n                if ($truthy(self.$logger()['$debug?']())) {\n                  self.$logger().$debug(self.$message_with_context(\"\" + \"unknown style for paragraph: \" + (style), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))};\n                style = nil;\n              }};\n            reader.$unshift_line(this_line);\n            if ($truthy(($truthy($b = indented) ? style['$!']() : $b))) {\n              \n              lines = self.$read_paragraph_lines(reader, (content_adjacent = (function() {if (skipped['$=='](0)) {\n                return options['$[]'](\"list_type\")\n              } else {\n                return nil\n              }; return nil; })()), $hash2([\"skip_line_comments\"], {\"skip_line_comments\": text_only}));\n              self['$adjust_indentation!'](lines);\n              if ($truthy(($truthy($b = text_only) ? $b : content_adjacent['$=='](\"dlist\")))) {\n                block = $$($nesting, 'Block').$new(parent, \"paragraph\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}))\n              } else {\n                block = $$($nesting, 'Block').$new(parent, \"literal\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"verbatim\", \"source\": lines, \"attributes\": attributes}))\n              };\n            } else {\n              \n              lines = self.$read_paragraph_lines(reader, (($b = skipped['$=='](0)) ? options['$[]'](\"list_type\") : skipped['$=='](0)), $hash2([\"skip_line_comments\"], {\"skip_line_comments\": true}));\n              if ($truthy(text_only)) {\n                \n                if ($truthy(($truthy($b = indented) ? style['$=='](\"normal\") : $b))) {\n                  self['$adjust_indentation!'](lines)};\n                block = $$($nesting, 'Block').$new(parent, \"paragraph\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}));\n              } else if ($truthy(($truthy($b = ($truthy($c = $$($nesting, 'ADMONITION_STYLE_HEADS')['$include?'](ch0)) ? this_line['$include?'](\":\") : $c)) ? $$($nesting, 'AdmonitionParagraphRx')['$=~'](this_line) : $b))) {\n                \n                \n                $writer = [0, (($b = $gvars['~']) === nil ? nil : $b.$post_match())];\n                $send(lines, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [\"name\", (admonition_name = (($writer = [\"style\", (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]).$downcase())];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [\"textlabel\", ($truthy($b = attributes.$delete(\"caption\")) ? $b : doc_attrs['$[]'](\"\" + (admonition_name) + \"-caption\"))];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                block = $$($nesting, 'Block').$new(parent, \"admonition\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}));\n              } else if ($truthy(($truthy($b = ($truthy($c = md_syntax) ? ch0['$=='](\">\") : $c)) ? this_line['$start_with?'](\"> \") : $b))) {\n                \n                $send(lines, 'map!', [], ($$12 = function(line){var self = $$12.$$s || this;\n\n                \n                  \n                  if (line == null) {\n                    line = nil;\n                  };\n                  if (line['$=='](\">\")) {\n                    \n                    return line.$slice(1, line.$length());\n                  } else {\n                    \n                    if ($truthy(line['$start_with?'](\"> \"))) {\n                      \n                      return line.$slice(2, line.$length());\n                    } else {\n                      return line\n                    };\n                  };}, $$12.$$s = self, $$12.$$arity = 1, $$12));\n                if ($truthy(lines['$[]'](-1)['$start_with?'](\"-- \"))) {\n                  \n                  credit_line = (credit_line = lines.$pop()).$slice(3, credit_line.$length());\n                  if ($truthy(lines['$empty?']())) {\n                  } else {\n                    while ($truthy(lines['$[]'](-1)['$empty?']())) {\n                      lines.$pop()\n                    }\n                  };};\n                \n                $writer = [\"style\", \"quote\"];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                block = self.$build_block(\"quote\", \"compound\", false, parent, $$($nesting, 'Reader').$new(lines), attributes);\n                if ($truthy(credit_line)) {\n                  \n                  $c = block.$apply_subs(credit_line).$split(\", \", 2), $b = Opal.to_ary($c), (attribution = ($b[0] == null ? nil : $b[0])), (citetitle = ($b[1] == null ? nil : $b[1])), $c;\n                  if ($truthy(attribution)) {\n                    \n                    $writer = [\"attribution\", attribution];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];};\n                  if ($truthy(citetitle)) {\n                    \n                    $writer = [\"citetitle\", citetitle];\n                    $send(attributes, '[]=', Opal.to_a($writer));\n                    $writer[$rb_minus($writer[\"length\"], 1)];};};\n              } else if ($truthy(($truthy($b = ($truthy($c = (($d = ch0['$=='](\"\\\"\")) ? $rb_gt(lines.$size(), 1) : ch0['$=='](\"\\\"\"))) ? lines['$[]'](-1)['$start_with?'](\"-- \") : $c)) ? lines['$[]'](-2)['$end_with?'](\"\\\"\") : $b))) {\n                \n                \n                $writer = [0, this_line.$slice(1, this_line.$length())];\n                $send(lines, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                credit_line = (credit_line = lines.$pop()).$slice(3, credit_line.$length());\n                while ($truthy(lines['$[]'](-1)['$empty?']())) {\n                  lines.$pop()\n                };\n                lines['$<<'](lines.$pop().$chop());\n                \n                $writer = [\"style\", \"quote\"];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                block = $$($nesting, 'Block').$new(parent, \"quote\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}));\n                $c = block.$apply_subs(credit_line).$split(\", \", 2), $b = Opal.to_ary($c), (attribution = ($b[0] == null ? nil : $b[0])), (citetitle = ($b[1] == null ? nil : $b[1])), $c;\n                if ($truthy(attribution)) {\n                  \n                  $writer = [\"attribution\", attribution];\n                  $send(attributes, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                if ($truthy(citetitle)) {\n                  \n                  $writer = [\"citetitle\", citetitle];\n                  $send(attributes, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n              } else {\n                \n                if ($truthy(($truthy($b = indented) ? style['$=='](\"normal\") : $b))) {\n                  self['$adjust_indentation!'](lines)};\n                block = $$($nesting, 'Block').$new(parent, \"paragraph\", $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": \"simple\", \"source\": lines, \"attributes\": attributes}));\n              };\n              self.$catalog_inline_anchors(lines.$join($$($nesting, 'LF')), block, document, reader);\n            };\n            break;;\n          }\n        };\n        if ($truthy(block)) {\n        } else {\n          $case = block_context;\n          if (\"listing\"['$===']($case) || \"source\"['$===']($case)) {\n          if ($truthy(($truthy($a = block_context['$=='](\"source\")) ? $a : ($truthy($b = attributes['$[]'](1)['$!']()) ? (language = ($truthy($c = attributes['$[]'](2)) ? $c : doc_attrs['$[]'](\"source-language\"))) : $b)))) {\n            \n            if ($truthy(language)) {\n              \n              \n              $writer = [\"style\", \"source\"];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              \n              $writer = [\"language\", language];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              $$($nesting, 'AttributeList').$rekey(attributes, [nil, nil, \"linenums\"]);\n            } else {\n              \n              $$($nesting, 'AttributeList').$rekey(attributes, [nil, \"language\", \"linenums\"]);\n              if ($truthy(attributes['$key?'](\"language\"))) {\n              } else if ($truthy(doc_attrs['$key?'](\"source-language\"))) {\n                \n                $writer = [\"language\", doc_attrs['$[]'](\"source-language\")];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n            };\n            if ($truthy(attributes['$key?'](\"linenums\"))) {\n            } else if ($truthy(($truthy($a = attributes['$[]'](\"linenums-option\")) ? $a : doc_attrs['$[]'](\"source-linenums-option\")))) {\n              \n              $writer = [\"linenums\", \"\"];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(attributes['$key?'](\"indent\"))) {\n            } else if ($truthy(doc_attrs['$key?'](\"source-indent\"))) {\n              \n              $writer = [\"indent\", doc_attrs['$[]'](\"source-indent\")];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};};\n          block = self.$build_block(\"listing\", \"verbatim\", terminator, parent, reader, attributes);}\n          else if (\"fenced_code\"['$===']($case)) {\n          \n          $writer = [\"style\", \"source\"];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy($rb_gt((ll = this_line.$length()), 3))) {\n            if ($truthy((comma_idx = (language = this_line.$slice(3, ll)).$index(\",\")))) {\n              if ($truthy($rb_gt(comma_idx, 0))) {\n                \n                language = language.$slice(0, comma_idx).$strip();\n                if ($truthy($rb_lt(comma_idx, $rb_minus(ll, 4)))) {\n                  \n                  $writer = [\"linenums\", \"\"];\n                  $send(attributes, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n              } else if ($truthy($rb_gt(ll, 4))) {\n                \n                $writer = [\"linenums\", \"\"];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];}\n            } else {\n              language = language.$lstrip()\n            }};\n          if ($truthy(language['$nil_or_empty?']())) {\n            if ($truthy(doc_attrs['$key?'](\"source-language\"))) {\n              \n              $writer = [\"language\", doc_attrs['$[]'](\"source-language\")];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];}\n          } else {\n            \n            $writer = [\"language\", language];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          if ($truthy(attributes['$key?'](\"linenums\"))) {\n          } else if ($truthy(($truthy($a = attributes['$[]'](\"linenums-option\")) ? $a : doc_attrs['$[]'](\"source-linenums-option\")))) {\n            \n            $writer = [\"linenums\", \"\"];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy(attributes['$key?'](\"indent\"))) {\n          } else if ($truthy(doc_attrs['$key?'](\"source-indent\"))) {\n            \n            $writer = [\"indent\", doc_attrs['$[]'](\"source-indent\")];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          terminator = terminator.$slice(0, 3);\n          block = self.$build_block(\"listing\", \"verbatim\", terminator, parent, reader, attributes);}\n          else if (\"table\"['$===']($case)) {\n          block_cursor = reader.$cursor();\n          block_reader = $$($nesting, 'Reader').$new(reader.$read_lines_until($hash2([\"terminator\", \"skip_line_comments\", \"context\", \"cursor\"], {\"terminator\": terminator, \"skip_line_comments\": true, \"context\": \"table\", \"cursor\": \"at_mark\"})), block_cursor);\n          if ($truthy(terminator['$start_with?'](\"|\", \"!\"))) {\n          } else {\n            ($truthy($a = attributes['$[]'](\"format\")) ? $a : (($writer = [\"format\", (function() {if ($truthy(terminator['$start_with?'](\",\"))) {\n              return \"csv\"\n            } else {\n              return \"dsv\"\n            }; return nil; })()]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n          };\n          block = self.$parse_table(block_reader, parent, attributes);}\n          else if (\"sidebar\"['$===']($case)) {block = self.$build_block(block_context, \"compound\", terminator, parent, reader, attributes)}\n          else if (\"admonition\"['$===']($case)) {\n          \n          $writer = [\"name\", (admonition_name = style.$downcase())];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          \n          $writer = [\"textlabel\", ($truthy($a = attributes.$delete(\"caption\")) ? $a : doc_attrs['$[]'](\"\" + (admonition_name) + \"-caption\"))];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          block = self.$build_block(block_context, \"compound\", terminator, parent, reader, attributes);}\n          else if (\"open\"['$===']($case) || \"abstract\"['$===']($case) || \"partintro\"['$===']($case)) {block = self.$build_block(\"open\", \"compound\", terminator, parent, reader, attributes)}\n          else if (\"literal\"['$===']($case)) {block = self.$build_block(block_context, \"verbatim\", terminator, parent, reader, attributes)}\n          else if (\"example\"['$===']($case)) {\n          if ($truthy(attributes['$[]'](\"collapsible-option\"))) {\n            \n            $writer = [\"caption\", \"\"];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          block = self.$build_block(block_context, \"compound\", terminator, parent, reader, attributes);}\n          else if (\"quote\"['$===']($case) || \"verse\"['$===']($case)) {\n          $$($nesting, 'AttributeList').$rekey(attributes, [nil, \"attribution\", \"citetitle\"]);\n          block = self.$build_block(block_context, (function() {if (block_context['$=='](\"verse\")) {\n            return \"verbatim\"\n          } else {\n            return \"compound\"\n          }; return nil; })(), terminator, parent, reader, attributes);}\n          else if (\"stem\"['$===']($case) || \"latexmath\"['$===']($case) || \"asciimath\"['$===']($case)) {\n          if (block_context['$=='](\"stem\")) {\n            \n            $writer = [\"style\", $$($nesting, 'STEM_TYPE_ALIASES')['$[]'](($truthy($a = attributes['$[]'](2)) ? $a : doc_attrs['$[]'](\"stem\")))];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          block = self.$build_block(\"stem\", \"raw\", terminator, parent, reader, attributes);}\n          else if (\"pass\"['$===']($case)) {block = self.$build_block(block_context, \"raw\", terminator, parent, reader, attributes)}\n          else if (\"comment\"['$===']($case)) {\n          self.$build_block(block_context, \"skip\", terminator, parent, reader, attributes);\n          attributes.$clear();\n          return nil;}\n          else {if ($truthy(($truthy($a = block_extensions) ? (extension = extensions['$registered_for_block?'](block_context, cloaked_context)) : $a))) {\n            \n            if ((content_model = (ext_config = extension.$config())['$[]'](\"content_model\"))['$=='](\"skip\")) {\n            } else {\n              \n              if ($truthy((positional_attrs = ($truthy($a = ext_config['$[]'](\"positional_attrs\")) ? $a : ext_config['$[]'](\"pos_attrs\")))['$nil_or_empty?']())) {\n              } else {\n                $$($nesting, 'AttributeList').$rekey(attributes, $rb_plus([nil], positional_attrs))\n              };\n              if ($truthy((default_attrs = ext_config['$[]'](\"default_attrs\")))) {\n                $send(default_attrs, 'each', [], ($$13 = function(k, v){var self = $$13.$$s || this, $e;\n\n                \n                  \n                  if (k == null) {\n                    k = nil;\n                  };\n                  \n                  if (v == null) {\n                    v = nil;\n                  };\n                  return ($truthy($e = attributes['$[]'](k)) ? $e : (($writer = [k, v]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));}, $$13.$$s = self, $$13.$$arity = 2, $$13))};\n              \n              $writer = [\"cloaked-context\", cloaked_context];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n            };\n            if ($truthy((block = self.$build_block(block_context, content_model, terminator, parent, reader, attributes, $hash2([\"extension\"], {\"extension\": extension}))))) {\n            } else {\n              \n              attributes.$clear();\n              return nil;\n            };\n          } else {\n            self.$raise(\"\" + \"Unsupported block type \" + (block_context) + \" at \" + (reader.$cursor()))\n          }}\n        };\n        if ($truthy(document.$sourcemap())) {\n          \n          $writer = [reader.$cursor_at_mark()];\n          $send(block, 'source_location=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(attributes['$[]'](\"title\"))) {\n          \n          \n          $writer = [(block_title = attributes.$delete(\"title\"))];\n          $send(block, 'title=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy($$($nesting, 'CAPTION_ATTRIBUTE_NAMES')['$[]'](block.$context()))) {\n            block.$assign_caption(attributes.$delete(\"caption\"))};};\n        \n        $writer = [attributes['$[]'](\"style\")];\n        $send(block, 'style=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        if ($truthy((block_id = ($truthy($a = block.$id()) ? $a : (($writer = [attributes['$[]'](\"id\")]), $send(block, 'id=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))))) {\n          \n          if ($truthy((function() {if ($truthy(block_title)) {\n            \n            return block_title['$include?']($$($nesting, 'ATTR_REF_HEAD'));\n          } else {\n            return block['$title?']()\n          }; return nil; })())) {\n            block.$title()};\n          if ($truthy(document.$register(\"refs\", [block_id, block]))) {\n          } else {\n            self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to block already in use: \" + (block_id), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))\n          };};\n        if ($truthy(attributes['$empty?']())) {\n        } else {\n          block.$update_attributes(attributes)\n        };\n        block.$commit_subs();\n        if ($truthy(block['$sub?'](\"callouts\"))) {\n          if ($truthy(self.$catalog_callouts(block.$source(), document))) {\n          } else {\n            block.$remove_sub(\"callouts\")\n          }};\n        return block;\n        } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n      }, $Parser_next_block$10.$$arity = -3);\n      Opal.defs(self, '$read_paragraph_lines', $Parser_read_paragraph_lines$14 = function $$read_paragraph_lines(reader, break_at_list, opts) {\n        var self = this, $writer = nil, break_condition = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        \n        $writer = [\"break_on_blank_lines\", true];\n        $send(opts, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"break_on_list_continuation\", true];\n        $send(opts, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        \n        $writer = [\"preserve_last_line\", true];\n        $send(opts, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        break_condition = (function() {if ($truthy(break_at_list)) {\n          \n          if ($truthy($$($nesting, 'Compliance').$block_terminates_paragraph())) {\n            return $$($nesting, 'StartOfBlockOrListProc')\n          } else {\n            return $$($nesting, 'StartOfListProc')\n          };\n        } else {\n          \n          if ($truthy($$($nesting, 'Compliance').$block_terminates_paragraph())) {\n            return $$($nesting, 'StartOfBlockProc')\n          } else {\n            return $$($nesting, 'NoOp')\n          };\n        }; return nil; })();\n        return $send(reader, 'read_lines_until', [opts], break_condition.$to_proc());\n      }, $Parser_read_paragraph_lines$14.$$arity = -3);\n      Opal.defs(self, '$is_delimited_block?', $Parser_is_delimited_block$ques$15 = function(line, return_match_data) {\n        var $a, $b, self = this, line_len = nil, tip = nil, tip_len = nil, context = nil, masq = nil;\n\n        \n        \n        if (return_match_data == null) {\n          return_match_data = nil;\n        };\n        if ($truthy(($truthy($a = $rb_gt((line_len = line.$length()), 1)) ? $$($nesting, 'DELIMITED_BLOCK_HEADS')['$[]'](line.$slice(0, 2)) : $a))) {\n        } else {\n          return nil\n        };\n        if (line_len['$=='](2)) {\n          \n          tip = line;\n          tip_len = 2;\n        } else {\n          \n          if ($truthy($rb_lt(line_len, 5))) {\n            \n            tip = line;\n            tip_len = line_len;\n          } else {\n            tip = line.$slice(0, (tip_len = 4))\n          };\n          if ($truthy(($truthy($a = $$($nesting, 'Compliance').$markdown_syntax()) ? tip['$start_with?'](\"`\") : $a))) {\n            if (tip_len['$=='](4)) {\n              \n              if ($truthy(($truthy($a = tip['$=='](\"````\")) ? $a : (tip = tip.$chop())['$!='](\"```\")))) {\n                return nil};\n              line = tip;\n              line_len = (tip_len = 3);\n            } else if ($truthy(tip['$!='](\"```\"))) {\n              return nil}\n          } else if (tip_len['$=='](3)) {\n            return nil};\n        };\n        $b = $$($nesting, 'DELIMITED_BLOCKS')['$[]'](tip), $a = Opal.to_ary($b), (context = ($a[0] == null ? nil : $a[0])), (masq = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy(($truthy($a = context) ? ($truthy($b = line_len['$=='](tip_len)) ? $b : self['$uniform?'](line.$slice(1, line_len), $$($nesting, 'DELIMITED_BLOCK_TAILS')['$[]'](tip), $rb_minus(line_len, 1))) : $a))) {\n          if ($truthy(return_match_data)) {\n            \n            return $$($nesting, 'BlockMatchData').$new(context, masq, tip, line);\n          } else {\n            return true\n          }\n        } else {\n          return nil\n        };\n      }, $Parser_is_delimited_block$ques$15.$$arity = -2);\n      Opal.defs(self, '$build_block', $Parser_build_block$16 = function $$build_block(block_context, content_model, terminator, parent, reader, attributes, options) {\n        var $a, self = this, $case = nil, skip_processing = nil, parse_as_content_model = nil, lines = nil, block_reader = nil, block_cursor = nil, tab_size = nil, indent = nil, extension = nil, block = nil;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        $case = content_model;\n        if (\"skip\"['$===']($case)) {$a = [true, \"simple\"], (skip_processing = $a[0]), (parse_as_content_model = $a[1]), $a}\n        else if (\"raw\"['$===']($case)) {$a = [false, \"simple\"], (skip_processing = $a[0]), (parse_as_content_model = $a[1]), $a}\n        else {$a = [false, content_model], (skip_processing = $a[0]), (parse_as_content_model = $a[1]), $a};\n        if ($truthy(terminator['$nil?']())) {\n          \n          if (parse_as_content_model['$=='](\"verbatim\")) {\n            lines = reader.$read_lines_until($hash2([\"break_on_blank_lines\", \"break_on_list_continuation\"], {\"break_on_blank_lines\": true, \"break_on_list_continuation\": true}))\n          } else {\n            \n            if (content_model['$=='](\"compound\")) {\n              content_model = \"simple\"};\n            lines = self.$read_paragraph_lines(reader, false, $hash2([\"skip_line_comments\", \"skip_processing\"], {\"skip_line_comments\": true, \"skip_processing\": skip_processing}));\n          };\n          block_reader = nil;\n        } else if ($truthy(parse_as_content_model['$!='](\"compound\"))) {\n          \n          lines = reader.$read_lines_until($hash2([\"terminator\", \"skip_processing\", \"context\", \"cursor\"], {\"terminator\": terminator, \"skip_processing\": skip_processing, \"context\": block_context, \"cursor\": \"at_mark\"}));\n          block_reader = nil;\n        } else if (terminator['$=='](false)) {\n          \n          lines = nil;\n          block_reader = reader;\n        } else {\n          \n          lines = nil;\n          block_cursor = reader.$cursor();\n          block_reader = $$($nesting, 'Reader').$new(reader.$read_lines_until($hash2([\"terminator\", \"skip_processing\", \"context\", \"cursor\"], {\"terminator\": terminator, \"skip_processing\": skip_processing, \"context\": block_context, \"cursor\": \"at_mark\"})), block_cursor);\n        };\n        $case = content_model;\n        if (\"verbatim\"['$===']($case)) {\n        tab_size = ($truthy($a = attributes['$[]'](\"tabsize\")) ? $a : parent.$document().$attributes()['$[]'](\"tabsize\")).$to_i();\n        if ($truthy((indent = attributes['$[]'](\"indent\")))) {\n          self['$adjust_indentation!'](lines, indent.$to_i(), tab_size)\n        } else if ($truthy($rb_gt(tab_size, 0))) {\n          self['$adjust_indentation!'](lines, -1, tab_size)};}\n        else if (\"skip\"['$===']($case)) {return nil};\n        if ($truthy((extension = options['$[]'](\"extension\")))) {\n          \n          attributes.$delete(\"style\");\n          if ($truthy((block = extension.$process_method()['$[]'](parent, ($truthy($a = block_reader) ? $a : $$($nesting, 'Reader').$new(lines)), attributes.$merge())))) {\n            \n            attributes.$replace(block.$attributes());\n            if ($truthy((($a = block.$content_model()['$=='](\"compound\")) ? (lines = block.$lines())['$empty?']()['$!']() : block.$content_model()['$=='](\"compound\")))) {\n              \n              content_model = \"compound\";\n              block_reader = $$($nesting, 'Reader').$new(lines);};\n          } else {\n            return nil\n          };\n        } else {\n          block = $$($nesting, 'Block').$new(parent, block_context, $hash2([\"content_model\", \"source\", \"attributes\"], {\"content_model\": content_model, \"source\": lines, \"attributes\": attributes}))\n        };\n        if (content_model['$=='](\"compound\")) {\n          self.$parse_blocks(block_reader, block)};\n        return block;\n      }, $Parser_build_block$16.$$arity = -7);\n      Opal.defs(self, '$parse_blocks', $Parser_parse_blocks$17 = function $$parse_blocks(reader, parent, attributes) {\n        var $a, $b, $c, self = this, block = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = nil;\n        };\n        if ($truthy(attributes)) {\n          while ($truthy(($truthy($b = ($truthy($c = (block = self.$next_block(reader, parent, attributes.$merge()))) ? parent.$blocks()['$<<'](block) : $c)) ? $b : reader['$has_more_lines?']()))) {\n            \n          }\n        } else {\n          while ($truthy(($truthy($b = ($truthy($c = (block = self.$next_block(reader, parent))) ? parent.$blocks()['$<<'](block) : $c)) ? $b : reader['$has_more_lines?']()))) {\n            \n          }\n        };\n        return nil;\n      }, $Parser_parse_blocks$17.$$arity = -3);\n      Opal.defs(self, '$parse_list', $Parser_parse_list$18 = function $$parse_list(reader, list_type, parent, style) {\n        var $a, $b, self = this, list_block = nil, list_rx = nil, list_item = nil;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        list_block = $$($nesting, 'List').$new(parent, list_type);\n        list_rx = $$($nesting, 'ListRxMap')['$[]'](list_type);\n        while ($truthy(($truthy($b = reader['$has_more_lines?']()) ? list_rx['$=~'](reader.$peek_line()) : $b))) {\n          \n          if ($truthy((list_item = self.$parse_list_item(reader, list_block, $gvars[\"~\"], (($b = $gvars['~']) === nil ? nil : $b['$[]'](1)), style)))) {\n            list_block.$items()['$<<'](list_item)};\n          if ($truthy($b = reader.$skip_blank_lines())) {\n            $b\n          } else {\n            break;\n          };\n        };\n        return list_block;\n      }, $Parser_parse_list$18.$$arity = 4);\n      Opal.defs(self, '$catalog_callouts', $Parser_catalog_callouts$19 = function $$catalog_callouts(text, document) {\n        var $$20, self = this, found = nil, autonum = nil;\n\n        \n        found = false;\n        autonum = 0;\n        if ($truthy(text['$include?'](\"<\"))) {\n          $send(text, 'scan', [$$($nesting, 'CalloutScanRx')], ($$20 = function(){var self = $$20.$$s || this, $a;\n\n          \n            if ($truthy((($a = $gvars['~']) === nil ? nil : $a['$[]'](0))['$start_with?'](\"\\\\\"))) {\n            } else {\n              document.$callouts().$register((function() {if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](2))['$=='](\".\")) {\n                return (autonum = $rb_plus(autonum, 1)).$to_s()\n              } else {\n                return (($a = $gvars['~']) === nil ? nil : $a['$[]'](2))\n              }; return nil; })())\n            };\n            return (found = true);}, $$20.$$s = self, $$20.$$arity = 0, $$20))};\n        return found;\n      }, $Parser_catalog_callouts$19.$$arity = 2);\n      Opal.defs(self, '$catalog_inline_anchor', $Parser_catalog_inline_anchor$21 = function $$catalog_inline_anchor(id, reftext, node, location, doc) {\n        var $a, self = this;\n\n        \n        \n        if (doc == null) {\n          doc = node.$document();\n        };\n        if ($truthy(($truthy($a = reftext) ? reftext['$include?']($$($nesting, 'ATTR_REF_HEAD')) : $a))) {\n          reftext = doc.$sub_attributes(reftext)};\n        if ($truthy(doc.$register(\"refs\", [id, $$($nesting, 'Inline').$new(node, \"anchor\", reftext, $hash2([\"type\", \"id\"], {\"type\": \"ref\", \"id\": id}))]))) {\n        } else {\n          \n          if ($truthy($$($nesting, 'Reader')['$==='](location))) {\n            location = location.$cursor()};\n          self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to anchor already in use: \" + (id), $hash2([\"source_location\"], {\"source_location\": location})));\n        };\n        return nil;\n      }, $Parser_catalog_inline_anchor$21.$$arity = -5);\n      Opal.defs(self, '$catalog_inline_anchors', $Parser_catalog_inline_anchors$22 = function $$catalog_inline_anchors(text, block, document, reader) {\n        var $a, $$23, self = this;\n\n        \n        if ($truthy(($truthy($a = text['$include?'](\"[[\")) ? $a : text['$include?'](\"or:\")))) {\n          $send(text, 'scan', [$$($nesting, 'InlineAnchorScanRx')], ($$23 = function(){var self = $$23.$$s || this, $b, $c, $d, id = nil, reftext = nil, location = nil, offset = nil;\n\n          \n            if ($truthy((id = (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))))) {\n              if ($truthy(($truthy($b = ($truthy($c = (reftext = (($d = $gvars['~']) === nil ? nil : $d['$[]'](2)))) ? reftext['$include?']($$($nesting, 'ATTR_REF_HEAD')) : $c)) ? (reftext = document.$sub_attributes(reftext))['$empty?']() : $b))) {\n                return nil;}\n            } else {\n              \n              id = (($b = $gvars['~']) === nil ? nil : $b['$[]'](3));\n              if ($truthy((reftext = (($b = $gvars['~']) === nil ? nil : $b['$[]'](4))))) {\n                if ($truthy(reftext['$include?'](\"]\"))) {\n                  \n                  reftext = reftext.$gsub(\"\\\\]\", \"]\");\n                  if ($truthy(reftext['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                    reftext = document.$sub_attributes(reftext)};\n                } else if ($truthy(($truthy($b = reftext['$include?']($$($nesting, 'ATTR_REF_HEAD'))) ? (reftext = document.$sub_attributes(reftext))['$empty?']() : $b))) {\n                  return nil;}};\n            };\n            if ($truthy(document.$register(\"refs\", [id, $$($nesting, 'Inline').$new(block, \"anchor\", reftext, $hash2([\"type\", \"id\"], {\"type\": \"ref\", \"id\": id}))]))) {\n              return nil\n            } else {\n              \n              location = reader.$cursor_at_mark();\n              if ($truthy($rb_gt((offset = $rb_plus((($b = $gvars['~']) === nil ? nil : $b.$pre_match()).$count($$($nesting, 'LF')), (function() {if ($truthy((($b = $gvars['~']) === nil ? nil : $b['$[]'](0))['$start_with?']($$($nesting, 'LF')))) {\n                return 1\n              } else {\n                return 0\n              }; return nil; })())), 0))) {\n                (location = location.$dup()).$advance(offset)};\n              return self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to anchor already in use: \" + (id), $hash2([\"source_location\"], {\"source_location\": location})));\n            };}, $$23.$$s = self, $$23.$$arity = 0, $$23))};\n        return nil;\n      }, $Parser_catalog_inline_anchors$22.$$arity = 4);\n      Opal.defs(self, '$catalog_inline_biblio_anchor', $Parser_catalog_inline_biblio_anchor$24 = function $$catalog_inline_biblio_anchor(id, reftext, node, reader) {\n        var $a, self = this;\n\n        \n        if ($truthy(node.$document().$register(\"refs\", [id, $$($nesting, 'Inline').$new(node, \"anchor\", ($truthy($a = reftext) ? \"\" + \"[\" + (reftext) + \"]\" : $a), $hash2([\"type\", \"id\"], {\"type\": \"bibref\", \"id\": id}))]))) {\n        } else {\n          self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to bibliography anchor already in use: \" + (id), $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))\n        };\n        return nil;\n      }, $Parser_catalog_inline_biblio_anchor$24.$$arity = 4);\n      Opal.defs(self, '$parse_description_list', $Parser_parse_description_list$25 = function $$parse_description_list(reader, match, parent) {\n        var $a, $b, self = this, list_block = nil, sibling_pattern = nil, current_pair = nil, next_pair = nil, $writer = nil;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        list_block = $$($nesting, 'List').$new(parent, \"dlist\");\n        sibling_pattern = $$($nesting, 'DescriptionListSiblingRx')['$[]'](match['$[]'](2));\n        list_block.$items()['$<<']((current_pair = self.$parse_list_item(reader, list_block, match, sibling_pattern)));\n        while ($truthy(($truthy($b = reader['$has_more_lines?']()) ? sibling_pattern['$=~'](reader.$peek_line()) : $b))) {\n          \n          next_pair = self.$parse_list_item(reader, list_block, $gvars[\"~\"], sibling_pattern);\n          if ($truthy(current_pair['$[]'](1))) {\n            list_block.$items()['$<<']((current_pair = next_pair))\n          } else {\n            \n            current_pair['$[]'](0)['$<<'](next_pair['$[]'](0)['$[]'](0));\n            \n            $writer = [1, next_pair['$[]'](1)];\n            $send(current_pair, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          };\n        };\n        return list_block;\n      }, $Parser_parse_description_list$25.$$arity = 3);\n      Opal.defs(self, '$parse_callout_list', $Parser_parse_callout_list$26 = function $$parse_callout_list(reader, match, parent, callouts) {\n        var $a, $b, $c, self = this, list_block = nil, next_index = nil, autonum = nil, num = nil, list_item = nil, coids = nil, $writer = nil;\n\n        \n        list_block = $$($nesting, 'List').$new(parent, \"colist\");\n        next_index = 1;\n        autonum = 0;\n        while ($truthy(($truthy($b = match) ? $b : ($truthy($c = (match = $$($nesting, 'CalloutListRx').$match(reader.$peek_line()))) ? reader.$mark() : $c)))) {\n          \n          if ((num = match['$[]'](1))['$=='](\".\")) {\n            num = (autonum = $rb_plus(autonum, 1)).$to_s()};\n          if (num['$=='](next_index.$to_s())) {\n          } else {\n            self.$logger().$warn(self.$message_with_context(\"\" + \"callout list item index: expected \" + (next_index) + \", got \" + (num), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))\n          };\n          if ($truthy((list_item = self.$parse_list_item(reader, list_block, match, \"<1>\")))) {\n            \n            list_block.$items()['$<<'](list_item);\n            if ($truthy((coids = callouts.$callout_ids(list_block.$items().$size()))['$empty?']())) {\n              self.$logger().$warn(self.$message_with_context(\"\" + \"no callout found for <\" + (list_block.$items().$size()) + \">\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_mark()})))\n            } else {\n              \n              $writer = [\"coids\", coids];\n              $send(list_item.$attributes(), '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };};\n          next_index = $rb_plus(next_index, 1);\n          match = nil;\n        };\n        callouts.$next_list();\n        return list_block;\n      }, $Parser_parse_callout_list$26.$$arity = 4);\n      Opal.defs(self, '$parse_list_item', $Parser_parse_list_item$27 = function $$parse_list_item(reader, list_block, match, sibling_trait, style) {\n        var $a, $b, self = this, list_type = nil, dlist = nil, list_term = nil, term_text = nil, item_text = nil, has_text = nil, list_item = nil, $writer = nil, sourcemap_assignment_deferred = nil, $case = nil, ordinal = nil, implicit_style = nil, block_cursor = nil, list_item_reader = nil, comment_lines = nil, subsequent_line = nil, content_adjacent = nil, block = nil, first_block = nil;\n\n        \n        \n        if (style == null) {\n          style = nil;\n        };\n        if ((list_type = list_block.$context())['$=='](\"dlist\")) {\n          \n          dlist = true;\n          list_term = $$($nesting, 'ListItem').$new(list_block, (term_text = match['$[]'](1)));\n          if ($truthy(($truthy($a = term_text['$start_with?'](\"[[\")) ? $$($nesting, 'LeadingInlineAnchorRx')['$=~'](term_text) : $a))) {\n            self.$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), ($truthy($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](2))) ? $a : (($b = $gvars['~']) === nil ? nil : $b.$post_match()).$lstrip()), list_term, reader)};\n          if ($truthy((item_text = match['$[]'](3)))) {\n            has_text = true};\n          list_item = $$($nesting, 'ListItem').$new(list_block, item_text);\n          if ($truthy(list_block.$document().$sourcemap())) {\n            \n            \n            $writer = [reader.$cursor()];\n            $send(list_term, 'source_location=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy(has_text)) {\n              \n              $writer = [list_term.$source_location()];\n              $send(list_item, 'source_location=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              sourcemap_assignment_deferred = true\n            };};\n        } else {\n          \n          has_text = true;\n          list_item = $$($nesting, 'ListItem').$new(list_block, (item_text = match['$[]'](2)));\n          if ($truthy(list_block.$document().$sourcemap())) {\n            \n            $writer = [reader.$cursor()];\n            $send(list_item, 'source_location=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          $case = list_type;\n          if (\"ulist\"['$===']($case)) {\n          \n          $writer = [sibling_trait];\n          $send(list_item, 'marker=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(item_text['$start_with?'](\"[\"))) {\n            if ($truthy(($truthy($a = style) ? style['$=='](\"bibliography\") : $a))) {\n              if ($truthy($$($nesting, 'InlineBiblioAnchorRx')['$=~'](item_text))) {\n                self.$catalog_inline_biblio_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), list_item, reader)}\n            } else if ($truthy(item_text['$start_with?'](\"[[\"))) {\n              if ($truthy($$($nesting, 'LeadingInlineAnchorRx')['$=~'](item_text))) {\n                self.$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), list_item, reader)}\n            } else if ($truthy(item_text['$start_with?'](\"[ ] \", \"[x] \", \"[*] \"))) {\n              \n              list_block.$set_option(\"checklist\");\n              \n              $writer = [\"checkbox\", \"\"];\n              $send(list_item.$attributes(), '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              if ($truthy(item_text['$start_with?'](\"[ \"))) {\n              } else {\n                \n                $writer = [\"checked\", \"\"];\n                $send(list_item.$attributes(), '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n              \n              $writer = [item_text.$slice(4, item_text.$length())];\n              $send(list_item, 'text=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;}};}\n          else if (\"olist\"['$===']($case)) {\n          $b = self.$resolve_ordered_list_marker(sibling_trait, (ordinal = list_block.$items().$size()), true, reader), $a = Opal.to_ary($b), (sibling_trait = ($a[0] == null ? nil : $a[0])), (implicit_style = ($a[1] == null ? nil : $a[1])), $b;\n          \n          $writer = [sibling_trait];\n          $send(list_item, 'marker=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy((($a = ordinal['$=='](0)) ? style['$!']() : ordinal['$=='](0)))) {\n            \n            $writer = [($truthy($a = implicit_style) ? $a : ($truthy($b = $$($nesting, 'ORDERED_LIST_STYLES')['$[]']($rb_minus(sibling_trait.$length(), 1))) ? $b : \"arabic\").$to_s())];\n            $send(list_block, 'style=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy(($truthy($a = item_text['$start_with?'](\"[[\")) ? $$($nesting, 'LeadingInlineAnchorRx')['$=~'](item_text) : $a))) {\n            self.$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), list_item, reader)};}\n          else {\n          \n          $writer = [sibling_trait];\n          $send(list_item, 'marker=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(($truthy($a = item_text['$start_with?'](\"[[\")) ? $$($nesting, 'LeadingInlineAnchorRx')['$=~'](item_text) : $a))) {\n            self.$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), list_item, reader)};};\n        };\n        reader.$shift();\n        block_cursor = reader.$cursor();\n        list_item_reader = $$($nesting, 'Reader').$new(self.$read_lines_for_list_item(reader, list_type, sibling_trait, has_text), block_cursor);\n        if ($truthy(list_item_reader['$has_more_lines?']())) {\n          \n          if ($truthy(sourcemap_assignment_deferred)) {\n            \n            $writer = [block_cursor];\n            $send(list_item, 'source_location=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          comment_lines = list_item_reader.$skip_line_comments();\n          if ($truthy((subsequent_line = list_item_reader.$peek_line()))) {\n            \n            if ($truthy(comment_lines['$empty?']())) {\n            } else {\n              list_item_reader.$unshift_lines(comment_lines)\n            };\n            if ($truthy(subsequent_line['$empty?']())) {\n            } else {\n              \n              content_adjacent = true;\n              if ($truthy(dlist)) {\n              } else {\n                has_text = nil\n              };\n            };};\n          if ($truthy((block = self.$next_block(list_item_reader, list_item, $hash2([], {}), $hash2([\"text_only\", \"list_type\"], {\"text_only\": (function() {if ($truthy(has_text)) {\n            return nil\n          } else {\n            return true\n          }; return nil; })(), \"list_type\": list_type}))))) {\n            list_item.$blocks()['$<<'](block)};\n          while ($truthy(list_item_reader['$has_more_lines?']())) {\n            if ($truthy((block = self.$next_block(list_item_reader, list_item, $hash2([], {}), $hash2([\"list_type\"], {\"list_type\": list_type}))))) {\n              list_item.$blocks()['$<<'](block)}\n          };\n          if ($truthy(($truthy($a = ($truthy($b = content_adjacent) ? (first_block = list_item.$blocks()['$[]'](0)) : $b)) ? first_block.$context()['$=='](\"paragraph\") : $a))) {\n            list_item.$fold_first()};};\n        if ($truthy(dlist)) {\n          return [[list_term], (function() {if ($truthy(($truthy($a = list_item['$text?']()) ? $a : list_item['$blocks?']()))) {\n            return list_item\n          } else {\n            return nil\n          }; return nil; })()]\n        } else {\n          return list_item\n        };\n      }, $Parser_parse_list_item$27.$$arity = -5);\n      Opal.defs(self, '$read_lines_for_list_item', $Parser_read_lines_for_list_item$28 = function $$read_lines_for_list_item(reader, list_type, sibling_trait, has_text) {\n        var $a, $b, $c, $$29, $$30, $$31, $$32, $$33, self = this, buffer = nil, continuation = nil, within_nested_list = nil, detached_continuation = nil, dlist = nil, this_line = nil, prev_line = nil, $writer = nil, match = nil, nested_list_type = nil, last_line = nil;\n\n        \n        \n        if (sibling_trait == null) {\n          sibling_trait = nil;\n        };\n        \n        if (has_text == null) {\n          has_text = true;\n        };\n        buffer = [];\n        continuation = \"inactive\";\n        within_nested_list = false;\n        detached_continuation = nil;\n        dlist = list_type['$=='](\"dlist\");\n        while ($truthy(reader['$has_more_lines?']())) {\n          \n          this_line = reader.$read_line();\n          if ($truthy(self['$is_sibling_list_item?'](this_line, list_type, sibling_trait))) {\n            break;};\n          prev_line = (function() {if ($truthy(buffer['$empty?']())) {\n            return nil\n          } else {\n            return buffer['$[]'](-1)\n          }; return nil; })();\n          if (prev_line['$==']($$($nesting, 'LIST_CONTINUATION'))) {\n            \n            if (continuation['$=='](\"inactive\")) {\n              \n              continuation = \"active\";\n              has_text = true;\n              if ($truthy(within_nested_list)) {\n              } else {\n                \n                $writer = [-1, \"\"];\n                $send(buffer, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };};\n            if (this_line['$==']($$($nesting, 'LIST_CONTINUATION'))) {\n              \n              if ($truthy(continuation['$!='](\"frozen\"))) {\n                \n                continuation = \"frozen\";\n                buffer['$<<'](this_line);};\n              this_line = nil;\n              continue;;};};\n          if ($truthy((match = self['$is_delimited_block?'](this_line, true)))) {\n            if (continuation['$=='](\"active\")) {\n              \n              buffer['$<<'](this_line);\n              buffer.$concat(reader.$read_lines_until($hash2([\"terminator\", \"read_last_line\", \"context\"], {\"terminator\": match.$terminator(), \"read_last_line\": true, \"context\": nil})));\n              continuation = \"inactive\";\n            } else {\n              break;\n            }\n          } else if ($truthy(($truthy($b = ($truthy($c = dlist) ? continuation['$!='](\"active\") : $c)) ? $$($nesting, 'BlockAttributeLineRx')['$match?'](this_line) : $b))) {\n            break;\n          } else if ($truthy((($b = continuation['$=='](\"active\")) ? this_line['$empty?']()['$!']() : continuation['$=='](\"active\")))) {\n            if ($truthy($$($nesting, 'LiteralParagraphRx')['$match?'](this_line))) {\n              \n              reader.$unshift_line(this_line);\n              if ($truthy(dlist)) {\n                buffer.$concat($send(reader, 'read_lines_until', [$hash2([\"preserve_last_line\", \"break_on_blank_lines\", \"break_on_list_continuation\"], {\"preserve_last_line\": true, \"break_on_blank_lines\": true, \"break_on_list_continuation\": true})], ($$29 = function(line){var self = $$29.$$s || this;\n\n                \n                  \n                  if (line == null) {\n                    line = nil;\n                  };\n                  return self['$is_sibling_list_item?'](line, list_type, sibling_trait);}, $$29.$$s = self, $$29.$$arity = 1, $$29)))\n              } else {\n                buffer.$concat(reader.$read_lines_until($hash2([\"preserve_last_line\", \"break_on_blank_lines\", \"break_on_list_continuation\"], {\"preserve_last_line\": true, \"break_on_blank_lines\": true, \"break_on_list_continuation\": true})))\n              };\n              continuation = \"inactive\";\n            } else if ($truthy(($truthy($b = ($truthy($c = $$($nesting, 'BlockTitleRx')['$match?'](this_line)) ? $c : $$($nesting, 'BlockAttributeLineRx')['$match?'](this_line))) ? $b : $$($nesting, 'AttributeEntryRx')['$match?'](this_line)))) {\n              buffer['$<<'](this_line)\n            } else {\n              \n              if ($truthy((nested_list_type = $send((function() {if ($truthy(within_nested_list)) {\n                return [\"dlist\"]\n              } else {\n                return $$($nesting, 'NESTABLE_LIST_CONTEXTS')\n              }; return nil; })(), 'find', [], ($$30 = function(ctx){var self = $$30.$$s || this;\n\n              \n                \n                if (ctx == null) {\n                  ctx = nil;\n                };\n                return $$($nesting, 'ListRxMap')['$[]'](ctx)['$match?'](this_line);}, $$30.$$s = self, $$30.$$arity = 1, $$30))))) {\n                \n                within_nested_list = true;\n                if ($truthy((($b = nested_list_type['$=='](\"dlist\")) ? (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))['$nil_or_empty?']() : nested_list_type['$=='](\"dlist\")))) {\n                  has_text = false};};\n              buffer['$<<'](this_line);\n              continuation = \"inactive\";\n            }\n          } else if ($truthy(($truthy($b = prev_line) ? prev_line['$empty?']() : $b))) {\n            \n            if ($truthy(this_line['$empty?']())) {\n              \n              if ($truthy((this_line = ($truthy($b = reader.$skip_blank_lines()) ? reader.$read_line() : $b)))) {\n              } else {\n                break;\n              };\n              if ($truthy(self['$is_sibling_list_item?'](this_line, list_type, sibling_trait))) {\n                break;};};\n            if (this_line['$==']($$($nesting, 'LIST_CONTINUATION'))) {\n              \n              detached_continuation = buffer.$size();\n              buffer['$<<'](this_line);\n            } else if ($truthy(has_text)) {\n              if ($truthy(self['$is_sibling_list_item?'](this_line, list_type, sibling_trait))) {\n                break;\n              } else if ($truthy((nested_list_type = $send($$($nesting, 'NESTABLE_LIST_CONTEXTS'), 'find', [], ($$31 = function(ctx){var self = $$31.$$s || this;\n\n              \n                \n                if (ctx == null) {\n                  ctx = nil;\n                };\n                return $$($nesting, 'ListRxMap')['$[]'](ctx)['$=~'](this_line);}, $$31.$$s = self, $$31.$$arity = 1, $$31))))) {\n                \n                buffer['$<<'](this_line);\n                within_nested_list = true;\n                if ($truthy((($b = nested_list_type['$=='](\"dlist\")) ? (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))['$nil_or_empty?']() : nested_list_type['$=='](\"dlist\")))) {\n                  has_text = false};\n              } else if ($truthy($$($nesting, 'LiteralParagraphRx')['$match?'](this_line))) {\n                \n                reader.$unshift_line(this_line);\n                if ($truthy(dlist)) {\n                  buffer.$concat($send(reader, 'read_lines_until', [$hash2([\"preserve_last_line\", \"break_on_blank_lines\", \"break_on_list_continuation\"], {\"preserve_last_line\": true, \"break_on_blank_lines\": true, \"break_on_list_continuation\": true})], ($$32 = function(line){var self = $$32.$$s || this;\n\n                  \n                    \n                    if (line == null) {\n                      line = nil;\n                    };\n                    return self['$is_sibling_list_item?'](line, list_type, sibling_trait);}, $$32.$$s = self, $$32.$$arity = 1, $$32)))\n                } else {\n                  buffer.$concat(reader.$read_lines_until($hash2([\"preserve_last_line\", \"break_on_blank_lines\", \"break_on_list_continuation\"], {\"preserve_last_line\": true, \"break_on_blank_lines\": true, \"break_on_list_continuation\": true})))\n                };\n              } else {\n                break;\n              }\n            } else {\n              \n              if ($truthy(within_nested_list)) {\n              } else {\n                buffer.$pop()\n              };\n              buffer['$<<'](this_line);\n              has_text = true;\n            };\n          } else {\n            \n            if ($truthy(this_line['$empty?']())) {\n            } else {\n              has_text = true\n            };\n            if ($truthy((nested_list_type = $send((function() {if ($truthy(within_nested_list)) {\n              return [\"dlist\"]\n            } else {\n              return $$($nesting, 'NESTABLE_LIST_CONTEXTS')\n            }; return nil; })(), 'find', [], ($$33 = function(ctx){var self = $$33.$$s || this;\n\n            \n              \n              if (ctx == null) {\n                ctx = nil;\n              };\n              return $$($nesting, 'ListRxMap')['$[]'](ctx)['$=~'](this_line);}, $$33.$$s = self, $$33.$$arity = 1, $$33))))) {\n              \n              within_nested_list = true;\n              if ($truthy((($b = nested_list_type['$=='](\"dlist\")) ? (($c = $gvars['~']) === nil ? nil : $c['$[]'](3))['$nil_or_empty?']() : nested_list_type['$=='](\"dlist\")))) {\n                has_text = false};};\n            buffer['$<<'](this_line);\n          };\n          this_line = nil;\n        };\n        if ($truthy(this_line)) {\n          reader.$unshift_line(this_line)};\n        if ($truthy(detached_continuation)) {\n          \n          $writer = [detached_continuation, \"\"];\n          $send(buffer, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        while (!($truthy(buffer['$empty?']()))) {\n          if ($truthy((last_line = buffer['$[]'](-1))['$empty?']())) {\n            buffer.$pop()\n          } else {\n            \n            if (last_line['$==']($$($nesting, 'LIST_CONTINUATION'))) {\n              buffer.$pop()};\n            break;;\n          }\n        };\n        return buffer;\n      }, $Parser_read_lines_for_list_item$28.$$arity = -3);\n      Opal.defs(self, '$initialize_section', $Parser_initialize_section$34 = function $$initialize_section(reader, parent, attributes) {\n        var $a, $b, self = this, document = nil, book = nil, doctype = nil, source_location = nil, sect_style = nil, sect_id = nil, sect_reftext = nil, sect_title = nil, sect_level = nil, sect_atx = nil, sect_name = nil, sect_special = nil, sect_numbered = nil, $writer = nil, section = nil, id = nil, generated_id = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        document = parent.$document();\n        book = (doctype = document.$doctype())['$=='](\"book\");\n        if ($truthy(document.$sourcemap())) {\n          source_location = reader.$cursor()};\n        sect_style = attributes['$[]'](1);\n        $b = self.$parse_section_title(reader, document, attributes['$[]'](\"id\")), $a = Opal.to_ary($b), (sect_id = ($a[0] == null ? nil : $a[0])), (sect_reftext = ($a[1] == null ? nil : $a[1])), (sect_title = ($a[2] == null ? nil : $a[2])), (sect_level = ($a[3] == null ? nil : $a[3])), (sect_atx = ($a[4] == null ? nil : $a[4])), $b;\n        if ($truthy(sect_style)) {\n          if ($truthy(($truthy($a = book) ? sect_style['$=='](\"abstract\") : $a))) {\n            $a = [\"chapter\", 1], (sect_name = $a[0]), (sect_level = $a[1]), $a\n          } else if ($truthy(($truthy($a = sect_style['$start_with?'](\"sect\")) ? $$($nesting, 'SectionLevelStyleRx')['$match?'](sect_style) : $a))) {\n            sect_name = \"section\"\n          } else {\n            \n            $a = [sect_style, true], (sect_name = $a[0]), (sect_special = $a[1]), $a;\n            if (sect_level['$=='](0)) {\n              sect_level = 1};\n            sect_numbered = sect_name['$=='](\"appendix\");\n          }\n        } else if ($truthy(book)) {\n          sect_name = (function() {if (sect_level['$=='](0)) {\n            return \"part\"\n          } else {\n            \n            if ($truthy($rb_gt(sect_level, 1))) {\n              return \"section\"\n            } else {\n              return \"chapter\"\n            };\n          }; return nil; })()\n        } else if ($truthy((($a = doctype['$=='](\"manpage\")) ? sect_title.$casecmp(\"synopsis\")['$=='](0) : doctype['$=='](\"manpage\")))) {\n          $a = [\"synopsis\", true], (sect_name = $a[0]), (sect_special = $a[1]), $a\n        } else {\n          sect_name = \"section\"\n        };\n        if ($truthy(sect_reftext)) {\n          \n          $writer = [\"reftext\", sect_reftext];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        section = $$($nesting, 'Section').$new(parent, sect_level);\n        $a = [sect_id, sect_title, sect_name, source_location], section['$id=']($a[0]), section['$title=']($a[1]), section['$sectname=']($a[2]), section['$source_location=']($a[3]), $a;\n        if ($truthy(sect_special)) {\n          \n          \n          $writer = [true];\n          $send(section, 'special=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(sect_numbered)) {\n            \n            $writer = [true];\n            $send(section, 'numbered=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else if (document.$attributes()['$[]'](\"sectnums\")['$=='](\"all\")) {\n            \n            $writer = [(function() {if ($truthy(($truthy($a = book) ? sect_level['$=='](1) : $a))) {\n              return \"chapter\"\n            } else {\n              return true\n            }; return nil; })()];\n            $send(section, 'numbered=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n        } else if ($truthy(($truthy($a = document.$attributes()['$[]'](\"sectnums\")) ? $rb_gt(sect_level, 0) : $a))) {\n          \n          $writer = [(function() {if ($truthy(section.$special())) {\n            return ($truthy($a = parent.$numbered()) ? true : $a)\n          } else {\n            return true\n          }; return nil; })()];\n          $send(section, 'numbered=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        } else if ($truthy(($truthy($a = ($truthy($b = book) ? sect_level['$=='](0) : $b)) ? document.$attributes()['$[]'](\"partnums\") : $a))) {\n          \n          $writer = [true];\n          $send(section, 'numbered=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy((id = ($truthy($a = section.$id()) ? $a : (($writer = [(function() {if ($truthy(document.$attributes()['$key?'](\"sectids\"))) {\n          \n          return (generated_id = $$($nesting, 'Section').$generate_id(section.$title(), document));\n        } else {\n          return nil\n        }; return nil; })()]), $send(section, 'id=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))))) {\n          \n          if ($truthy(($truthy($a = generated_id) ? $a : sect_title['$include?']($$($nesting, 'ATTR_REF_HEAD'))['$!']()))) {\n          } else {\n            section.$title()\n          };\n          if ($truthy(document.$register(\"refs\", [id, section]))) {\n          } else {\n            self.$logger().$warn(self.$message_with_context(\"\" + \"id assigned to section already in use: \" + (id), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_line($rb_minus(reader.$lineno(), (function() {if ($truthy(sect_atx)) {\n              return 1\n            } else {\n              return 2\n            }; return nil; })()))})))\n          };};\n        section.$update_attributes(attributes);\n        reader.$skip_blank_lines();\n        return section;\n      }, $Parser_initialize_section$34.$$arity = -3);\n      Opal.defs(self, '$is_next_line_section?', $Parser_is_next_line_section$ques$35 = function(reader, attributes) {\n        var $a, $b, self = this, style = nil, next_lines = nil;\n\n        \n        if ($truthy(($truthy($a = (style = attributes['$[]'](1))) ? ($truthy($b = style['$=='](\"discrete\")) ? $b : style['$=='](\"float\")) : $a))) {\n          return nil};\n        if ($truthy($$($nesting, 'Compliance').$underline_style_section_titles())) {\n          \n          next_lines = reader.$peek_lines(2, ($truthy($a = style) ? style['$=='](\"comment\") : $a));\n          return self['$is_section_title?'](($truthy($a = next_lines['$[]'](0)) ? $a : \"\"), next_lines['$[]'](1));\n        } else {\n          return self['$atx_section_title?'](($truthy($a = reader.$peek_line()) ? $a : \"\"))\n        };\n      }, $Parser_is_next_line_section$ques$35.$$arity = 2);\n      Opal.defs(self, '$is_next_line_doctitle?', $Parser_is_next_line_doctitle$ques$36 = function(reader, attributes, leveloffset) {\n        var $a, self = this, sect_level = nil;\n\n        if ($truthy(leveloffset)) {\n          return ($truthy($a = (sect_level = self['$is_next_line_section?'](reader, attributes))) ? $rb_plus(sect_level, leveloffset.$to_i())['$=='](0) : $a)\n        } else {\n          return self['$is_next_line_section?'](reader, attributes)['$=='](0)\n        }\n      }, $Parser_is_next_line_doctitle$ques$36.$$arity = 3);\n      Opal.defs(self, '$is_section_title?', $Parser_is_section_title$ques$37 = function(line1, line2) {\n        var $a, self = this;\n\n        \n        \n        if (line2 == null) {\n          line2 = nil;\n        };\n        return ($truthy($a = self['$atx_section_title?'](line1)) ? $a : (function() {if ($truthy(line2['$nil_or_empty?']())) {\n          return nil\n        } else {\n          return self['$setext_section_title?'](line1, line2)\n        }; return nil; })());\n      }, $Parser_is_section_title$ques$37.$$arity = -2);\n      Opal.defs(self, '$atx_section_title?', $Parser_atx_section_title$ques$38 = function(line) {\n        var $a, self = this;\n\n        if ($truthy((function() {if ($truthy($$($nesting, 'Compliance').$markdown_syntax())) {\n          \n          return ($truthy($a = line['$start_with?'](\"=\", \"#\")) ? $$($nesting, 'ExtAtxSectionTitleRx')['$=~'](line) : $a);\n        } else {\n          \n          return ($truthy($a = line['$start_with?'](\"=\")) ? $$($nesting, 'AtxSectionTitleRx')['$=~'](line) : $a);\n        }; return nil; })())) {\n          return $rb_minus((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)).$length(), 1)\n        } else {\n          return nil\n        }\n      }, $Parser_atx_section_title$ques$38.$$arity = 1);\n      Opal.defs(self, '$setext_section_title?', $Parser_setext_section_title$ques$39 = function(line1, line2) {\n        var $a, $b, $c, self = this, level = nil, line2_ch0 = nil, line2_len = nil;\n\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = (level = $$($nesting, 'SETEXT_SECTION_LEVELS')['$[]']((line2_ch0 = line2.$chr())))) ? self['$uniform?'](line2, line2_ch0, (line2_len = line2.$length())) : $c)) ? $$($nesting, 'SetextSectionTitleRx')['$match?'](line1) : $b)) ? $rb_lt($rb_minus(line1.$length(), line2_len).$abs(), 2) : $a))) {\n          return level\n        } else {\n          return nil\n        }\n      }, $Parser_setext_section_title$ques$39.$$arity = 2);\n      Opal.defs(self, '$parse_section_title', $Parser_parse_section_title$40 = function $$parse_section_title(reader, document, sect_id) {\n        var $a, $b, $c, $d, $e, self = this, sect_reftext = nil, line1 = nil, sect_level = nil, sect_title = nil, atx = nil, line2 = nil, line2_ch0 = nil, line2_len = nil;\n\n        \n        \n        if (sect_id == null) {\n          sect_id = nil;\n        };\n        sect_reftext = nil;\n        line1 = reader.$read_line();\n        if ($truthy((function() {if ($truthy($$($nesting, 'Compliance').$markdown_syntax())) {\n          \n          return ($truthy($a = line1['$start_with?'](\"=\", \"#\")) ? $$($nesting, 'ExtAtxSectionTitleRx')['$=~'](line1) : $a);\n        } else {\n          \n          return ($truthy($a = line1['$start_with?'](\"=\")) ? $$($nesting, 'AtxSectionTitleRx')['$=~'](line1) : $a);\n        }; return nil; })())) {\n          \n          $a = [$rb_minus((($b = $gvars['~']) === nil ? nil : $b['$[]'](1)).$length(), 1), (($b = $gvars['~']) === nil ? nil : $b['$[]'](2)), true], (sect_level = $a[0]), (sect_title = $a[1]), (atx = $a[2]), $a;\n          if ($truthy(sect_id)) {\n          } else if ($truthy(($truthy($a = ($truthy($b = sect_title['$end_with?'](\"]]\")) ? $$($nesting, 'InlineSectionAnchorRx')['$=~'](sect_title) : $b)) ? (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))['$!']() : $a))) {\n            $a = [sect_title.$slice(0, $rb_minus(sect_title.$length(), (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)).$length())), (($b = $gvars['~']) === nil ? nil : $b['$[]'](2)), (($b = $gvars['~']) === nil ? nil : $b['$[]'](3))], (sect_title = $a[0]), (sect_id = $a[1]), (sect_reftext = $a[2]), $a};\n        } else if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = ($truthy($d = ($truthy($e = $$($nesting, 'Compliance').$underline_style_section_titles()) ? (line2 = reader.$peek_line(true)) : $e)) ? (sect_level = $$($nesting, 'SETEXT_SECTION_LEVELS')['$[]']((line2_ch0 = line2.$chr()))) : $d)) ? self['$uniform?'](line2, line2_ch0, (line2_len = line2.$length())) : $c)) ? (sect_title = ($truthy($c = $$($nesting, 'SetextSectionTitleRx')['$=~'](line1)) ? (($d = $gvars['~']) === nil ? nil : $d['$[]'](1)) : $c)) : $b)) ? $rb_lt($rb_minus(line1.$length(), line2_len).$abs(), 2) : $a))) {\n          \n          atx = false;\n          if ($truthy(sect_id)) {\n          } else if ($truthy(($truthy($a = ($truthy($b = sect_title['$end_with?'](\"]]\")) ? $$($nesting, 'InlineSectionAnchorRx')['$=~'](sect_title) : $b)) ? (($b = $gvars['~']) === nil ? nil : $b['$[]'](1))['$!']() : $a))) {\n            $a = [sect_title.$slice(0, $rb_minus(sect_title.$length(), (($b = $gvars['~']) === nil ? nil : $b['$[]'](0)).$length())), (($b = $gvars['~']) === nil ? nil : $b['$[]'](2)), (($b = $gvars['~']) === nil ? nil : $b['$[]'](3))], (sect_title = $a[0]), (sect_id = $a[1]), (sect_reftext = $a[2]), $a};\n          reader.$shift();\n        } else {\n          self.$raise(\"\" + \"Unrecognized section at \" + (reader.$cursor_at_prev_line()))\n        };\n        if ($truthy(document['$attr?'](\"leveloffset\"))) {\n          \n          sect_level = $rb_plus(sect_level, document.$attr(\"leveloffset\").$to_i());\n          if ($truthy($rb_lt(sect_level, 0))) {\n            sect_level = 0};};\n        return [sect_id, sect_reftext, sect_title, sect_level, atx];\n      }, $Parser_parse_section_title$40.$$arity = -3);\n      Opal.defs(self, '$parse_header_metadata', $Parser_parse_header_metadata$41 = function $$parse_header_metadata(reader, document) {\n        var $a, $$42, $$43, $$44, self = this, doc_attrs = nil, implicit_authors = nil, metadata = nil, implicit_author = nil, implicit_authorinitials = nil, author_metadata = nil, rev_metadata = nil, rev_line = nil, match = nil, $writer = nil, component = nil, author_line = nil, authors = nil, author_idx = nil, author_key = nil, explicit = nil, sparse = nil, author_override = nil;\n\n        \n        \n        if (document == null) {\n          document = nil;\n        };\n        doc_attrs = ($truthy($a = document) ? document.$attributes() : $a);\n        self.$process_attribute_entries(reader, document);\n        $a = [(implicit_authors = $hash2([], {})), nil, nil], (metadata = $a[0]), (implicit_author = $a[1]), (implicit_authorinitials = $a[2]), $a;\n        if ($truthy(($truthy($a = reader['$has_more_lines?']()) ? reader['$next_line_empty?']()['$!']() : $a))) {\n          \n          if ($truthy((author_metadata = self.$process_authors(reader.$read_line()))['$empty?']())) {\n          } else {\n            \n            if ($truthy(document)) {\n              \n              $send(author_metadata, 'each', [], ($$42 = function(key, val){var self = $$42.$$s || this, $writer = nil;\n\n              \n                \n                if (key == null) {\n                  key = nil;\n                };\n                \n                if (val == null) {\n                  val = nil;\n                };\n                if ($truthy(doc_attrs['$key?'](key))) {\n                  return nil\n                } else {\n                  \n                  $writer = [key, (function() {if ($truthy($$$('::', 'String')['$==='](val))) {\n                    \n                    return document.$apply_header_subs(val);\n                  } else {\n                    return val\n                  }; return nil; })()];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                };}, $$42.$$s = self, $$42.$$arity = 2, $$42));\n              implicit_author = doc_attrs['$[]'](\"author\");\n              implicit_authorinitials = doc_attrs['$[]'](\"authorinitials\");\n              implicit_authors = doc_attrs['$[]'](\"authors\");};\n            metadata = author_metadata;\n          };\n          self.$process_attribute_entries(reader, document);\n          rev_metadata = $hash2([], {});\n          if ($truthy(($truthy($a = reader['$has_more_lines?']()) ? reader['$next_line_empty?']()['$!']() : $a))) {\n            \n            rev_line = reader.$read_line();\n            if ($truthy((match = $$($nesting, 'RevisionInfoLineRx').$match(rev_line)))) {\n              \n              if ($truthy(match['$[]'](1))) {\n                \n                $writer = [\"revnumber\", match['$[]'](1).$rstrip()];\n                $send(rev_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              if ($truthy((component = match['$[]'](2).$strip())['$empty?']())) {\n              } else if ($truthy(($truthy($a = match['$[]'](1)['$!']()) ? component['$start_with?'](\"v\") : $a))) {\n                \n                $writer = [\"revnumber\", component.$slice(1, component.$length())];\n                $send(rev_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              } else {\n                \n                $writer = [\"revdate\", component];\n                $send(rev_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n              if ($truthy(match['$[]'](3))) {\n                \n                $writer = [\"revremark\", match['$[]'](3).$rstrip()];\n                $send(rev_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n            } else {\n              reader.$unshift_line(rev_line)\n            };};\n          if ($truthy(rev_metadata['$empty?']())) {\n          } else {\n            \n            if ($truthy(document)) {\n              $send(rev_metadata, 'each', [], ($$43 = function(key, val){var self = $$43.$$s || this;\n\n              \n                \n                if (key == null) {\n                  key = nil;\n                };\n                \n                if (val == null) {\n                  val = nil;\n                };\n                if ($truthy(doc_attrs['$key?'](key))) {\n                  return nil\n                } else {\n                  \n                  $writer = [key, document.$apply_header_subs(val)];\n                  $send(doc_attrs, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                };}, $$43.$$s = self, $$43.$$arity = 2, $$43))};\n            metadata.$update(rev_metadata);\n          };\n          self.$process_attribute_entries(reader, document);\n          reader.$skip_blank_lines();\n        } else {\n          author_metadata = $hash2([], {})\n        };\n        if ($truthy(document)) {\n          \n          if ($truthy(($truthy($a = doc_attrs['$key?'](\"author\")) ? (author_line = doc_attrs['$[]'](\"author\"))['$!='](implicit_author) : $a))) {\n            \n            author_metadata = self.$process_authors(author_line, true, false);\n            if ($truthy(doc_attrs['$[]'](\"authorinitials\")['$!='](implicit_authorinitials))) {\n              author_metadata.$delete(\"authorinitials\")};\n          } else if ($truthy(($truthy($a = doc_attrs['$key?'](\"authors\")) ? (author_line = doc_attrs['$[]'](\"authors\"))['$!='](implicit_authors) : $a))) {\n            author_metadata = self.$process_authors(author_line, true)\n          } else {\n            \n            $a = [[], 1, \"author_1\", false, false], (authors = $a[0]), (author_idx = $a[1]), (author_key = $a[2]), (explicit = $a[3]), (sparse = $a[4]), $a;\n            while ($truthy(doc_attrs['$key?'](author_key))) {\n              \n              if ((author_override = doc_attrs['$[]'](author_key))['$=='](author_metadata['$[]'](author_key))) {\n                \n                authors['$<<'](nil);\n                sparse = true;\n              } else {\n                \n                authors['$<<'](author_override);\n                explicit = true;\n              };\n              author_key = \"\" + \"author_\" + ((author_idx = $rb_plus(author_idx, 1)));\n            };\n            if ($truthy(explicit)) {\n              \n              if ($truthy(sparse)) {\n                $send(authors, 'each_with_index', [], ($$44 = function(author, idx){var self = $$44.$$s || this, $$45, name_idx = nil;\n\n                \n                  \n                  if (author == null) {\n                    author = nil;\n                  };\n                  \n                  if (idx == null) {\n                    idx = nil;\n                  };\n                  if ($truthy(author)) {\n                    return nil;};\n                  \n                  $writer = [idx, $send([author_metadata['$[]'](\"\" + \"firstname_\" + ((name_idx = $rb_plus(idx, 1)))), author_metadata['$[]'](\"\" + \"middlename_\" + (name_idx)), author_metadata['$[]'](\"\" + \"lastname_\" + (name_idx))].$compact(), 'map', [], ($$45 = function(it){var self = $$45.$$s || this;\n\n                  \n                    \n                    if (it == null) {\n                      it = nil;\n                    };\n                    return it.$tr(\" \", \"_\");}, $$45.$$s = self, $$45.$$arity = 1, $$45)).$join(\" \")];\n                  $send(authors, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$44.$$s = self, $$44.$$arity = 2, $$44))};\n              author_metadata = self.$process_authors(authors, true, false);\n            } else {\n              author_metadata = $hash2([], {})\n            };\n          };\n          if ($truthy(author_metadata['$empty?']())) {\n            ($truthy($a = metadata['$[]'](\"authorcount\")) ? $a : (($writer = [\"authorcount\", (($writer = [\"authorcount\", 0]), $send(doc_attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])]), $send(metadata, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n          } else {\n            \n            doc_attrs.$update(author_metadata);\n            if ($truthy(($truthy($a = doc_attrs['$key?'](\"email\")['$!']()) ? doc_attrs['$key?'](\"email_1\") : $a))) {\n              \n              $writer = [\"email\", doc_attrs['$[]'](\"email_1\")];\n              $send(doc_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n          };};\n        return metadata;\n      }, $Parser_parse_header_metadata$41.$$arity = -2);\n      Opal.defs(self, '$process_authors', $Parser_process_authors$46 = function $$process_authors(author_line, names_only, multiple) {\n        var $a, $$47, self = this, author_metadata = nil, author_idx = nil, $writer = nil;\n\n        \n        \n        if (names_only == null) {\n          names_only = false;\n        };\n        \n        if (multiple == null) {\n          multiple = true;\n        };\n        author_metadata = $hash2([], {});\n        author_idx = 0;\n        $send((function() {if ($truthy(($truthy($a = multiple) ? author_line['$include?'](\";\") : $a))) {\n          \n          return author_line.$split($$($nesting, 'AuthorDelimiterRx'));\n        } else {\n          return [].concat(Opal.to_a(author_line))\n        }; return nil; })(), 'each', [], ($$47 = function(author_entry){var self = $$47.$$s || this, $$48, $$49, $b, $$50, key_map = nil, $writer = nil, segments = nil, match = nil, author = nil, fname = nil, mname = nil, lname = nil;\n\n        \n          \n          if (author_entry == null) {\n            author_entry = nil;\n          };\n          if ($truthy(author_entry['$empty?']())) {\n            return nil;};\n          key_map = $hash2([], {});\n          if ((author_idx = $rb_plus(author_idx, 1))['$=='](1)) {\n            $send($$($nesting, 'AuthorKeys'), 'each', [], ($$48 = function(key){var self = $$48.$$s || this, $writer = nil;\n\n            \n              \n              if (key == null) {\n                key = nil;\n              };\n              $writer = [key.$to_sym(), key];\n              $send(key_map, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];}, $$48.$$s = self, $$48.$$arity = 1, $$48))\n          } else {\n            $send($$($nesting, 'AuthorKeys'), 'each', [], ($$49 = function(key){var self = $$49.$$s || this, $writer = nil;\n\n            \n              \n              if (key == null) {\n                key = nil;\n              };\n              $writer = [key.$to_sym(), \"\" + (key) + \"_\" + (author_idx)];\n              $send(key_map, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];}, $$49.$$s = self, $$49.$$arity = 1, $$49))\n          };\n          if ($truthy(names_only)) {\n            \n            if ($truthy(author_entry['$include?'](\"<\"))) {\n              \n              \n              $writer = [key_map['$[]'](\"author\"), author_entry.$tr(\"_\", \" \")];\n              $send(author_metadata, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              author_entry = author_entry.$gsub($$($nesting, 'XmlSanitizeRx'), \"\");};\n            if ((segments = author_entry.$split(nil, 3)).$size()['$=='](3)) {\n              segments['$<<'](segments.$pop().$squeeze(\" \"))};\n          } else if ($truthy((match = $$($nesting, 'AuthorInfoLineRx').$match(author_entry)))) {\n            (segments = match.$to_a()).$shift()};\n          if ($truthy(segments)) {\n            \n            author = (($writer = [key_map['$[]'](\"firstname\"), (fname = segments['$[]'](0).$tr(\"_\", \" \"))]), $send(author_metadata, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n            \n            $writer = [key_map['$[]'](\"authorinitials\"), fname.$chr()];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy(segments['$[]'](1))) {\n              if ($truthy(segments['$[]'](2))) {\n                \n                \n                $writer = [key_map['$[]'](\"middlename\"), (mname = segments['$[]'](1).$tr(\"_\", \" \"))];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                \n                $writer = [key_map['$[]'](\"lastname\"), (lname = segments['$[]'](2).$tr(\"_\", \" \"))];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                author = $rb_plus($rb_plus($rb_plus($rb_plus(fname, \" \"), mname), \" \"), lname);\n                \n                $writer = [key_map['$[]'](\"authorinitials\"), \"\" + (fname.$chr()) + (mname.$chr()) + (lname.$chr())];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n              } else {\n                \n                \n                $writer = [key_map['$[]'](\"lastname\"), (lname = segments['$[]'](1).$tr(\"_\", \" \"))];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                author = $rb_plus($rb_plus(fname, \" \"), lname);\n                \n                $writer = [key_map['$[]'](\"authorinitials\"), \"\" + (fname.$chr()) + (lname.$chr())];\n                $send(author_metadata, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n              }};\n            ($truthy($b = author_metadata['$[]'](key_map['$[]'](\"author\"))) ? $b : (($writer = [key_map['$[]'](\"author\"), author]), $send(author_metadata, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n            if ($truthy(($truthy($b = names_only) ? $b : segments['$[]'](3)['$!']()))) {\n            } else {\n              \n              $writer = [key_map['$[]'](\"email\"), segments['$[]'](3)];\n              $send(author_metadata, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n          } else {\n            \n            \n            $writer = [key_map['$[]'](\"author\"), (($writer = [key_map['$[]'](\"firstname\"), (fname = author_entry.$squeeze(\" \").$strip())]), $send(author_metadata, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [key_map['$[]'](\"authorinitials\"), fname.$chr()];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          };\n          if (author_idx['$=='](1)) {\n            \n            $writer = [\"authors\", author_metadata['$[]'](key_map['$[]'](\"author\"))];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            \n            if (author_idx['$=='](2)) {\n              $send($$($nesting, 'AuthorKeys'), 'each', [], ($$50 = function(key){var self = $$50.$$s || this;\n\n              \n                \n                if (key == null) {\n                  key = nil;\n                };\n                if ($truthy(author_metadata['$key?'](key))) {\n                  \n                  $writer = [\"\" + (key) + \"_1\", author_metadata['$[]'](key)];\n                  $send(author_metadata, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                } else {\n                  return nil\n                };}, $$50.$$s = self, $$50.$$arity = 1, $$50))};\n            \n            $writer = [\"authors\", \"\" + (author_metadata['$[]'](\"authors\")) + \", \" + (author_metadata['$[]'](key_map['$[]'](\"author\")))];\n            $send(author_metadata, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          };}, $$47.$$s = self, $$47.$$arity = 1, $$47));\n        \n        $writer = [\"authorcount\", author_idx];\n        $send(author_metadata, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        return author_metadata;\n      }, $Parser_process_authors$46.$$arity = -2);\n      Opal.defs(self, '$parse_block_metadata_lines', $Parser_parse_block_metadata_lines$51 = function $$parse_block_metadata_lines(reader, document, attributes, options) {\n        var $a, $b, self = this;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        while ($truthy(self.$parse_block_metadata_line(reader, document, attributes, options))) {\n          \n          reader.$shift();\n          if ($truthy($b = reader.$skip_blank_lines())) {\n            $b\n          } else {\n            break;\n          };\n        };\n        return attributes;\n      }, $Parser_parse_block_metadata_lines$51.$$arity = -3);\n      Opal.defs(self, '$parse_block_metadata_line', $Parser_parse_block_metadata_line$52 = function $$parse_block_metadata_line(reader, document, attributes, options) {\n        var $a, $b, self = this, next_line = nil, normal = nil, $writer = nil, reftext = nil, current_style = nil, ll = nil;\n        if ($gvars[\"~\"] == null) $gvars[\"~\"] = nil;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        if ($truthy(($truthy($a = (next_line = reader.$peek_line())) ? (function() {if ($truthy(options['$[]'](\"text_only\"))) {\n          \n          return next_line['$start_with?'](\"[\", \"/\");\n        } else {\n          \n          return (normal = next_line['$start_with?'](\"[\", \".\", \"/\", \":\"));\n        }; return nil; })() : $a))) {\n          if ($truthy(next_line['$start_with?'](\"[\"))) {\n            if ($truthy(next_line['$start_with?'](\"[[\"))) {\n              if ($truthy(($truthy($a = next_line['$end_with?'](\"]]\")) ? $$($nesting, 'BlockAnchorRx')['$=~'](next_line) : $a))) {\n                \n                \n                $writer = [\"id\", (($a = $gvars['~']) === nil ? nil : $a['$[]'](1))];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;\n                if ($truthy((reftext = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2))))) {\n                  \n                  $writer = [\"reftext\", (function() {if ($truthy(reftext['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n                    \n                    return document.$sub_attributes(reftext);\n                  } else {\n                    return reftext\n                  }; return nil; })()];\n                  $send(attributes, '[]=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                return true;}\n            } else if ($truthy(($truthy($a = next_line['$end_with?'](\"]\")) ? $$($nesting, 'BlockAttributeListRx')['$=~'](next_line) : $a))) {\n              \n              current_style = attributes['$[]'](1);\n              if ($truthy(document.$parse_attributes((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), [], $hash2([\"sub_input\", \"sub_result\", \"into\"], {\"sub_input\": true, \"sub_result\": true, \"into\": attributes}))['$[]'](1))) {\n                \n                $writer = [1, ($truthy($a = self.$parse_style_attribute(attributes, reader)) ? $a : current_style)];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              return true;}\n          } else if ($truthy(($truthy($a = normal) ? next_line['$start_with?'](\".\") : $a))) {\n            if ($truthy($$($nesting, 'BlockTitleRx')['$=~'](next_line))) {\n              \n              \n              $writer = [\"title\", (($a = $gvars['~']) === nil ? nil : $a['$[]'](1))];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              return true;}\n          } else if ($truthy(($truthy($a = normal['$!']()) ? $a : next_line['$start_with?'](\"/\")))) {\n            if ($truthy(next_line['$start_with?'](\"//\"))) {\n              if (next_line['$=='](\"//\")) {\n                return true\n              } else if ($truthy(($truthy($a = normal) ? self['$uniform?'](next_line, \"/\", (ll = next_line.$length())) : $a))) {\n                if (ll['$=='](3)) {\n                } else {\n                  \n                  reader.$read_lines_until($hash2([\"terminator\", \"skip_first_line\", \"preserve_last_line\", \"skip_processing\", \"context\"], {\"terminator\": next_line, \"skip_first_line\": true, \"preserve_last_line\": true, \"skip_processing\": true, \"context\": \"comment\"}));\n                  return true;\n                }\n              } else if ($truthy(next_line['$start_with?'](\"///\"))) {\n              } else {\n                return true\n              }}\n          } else if ($truthy(($truthy($a = ($truthy($b = normal) ? next_line['$start_with?'](\":\") : $b)) ? $$($nesting, 'AttributeEntryRx')['$=~'](next_line) : $a))) {\n            \n            self.$process_attribute_entry(reader, document, attributes, $gvars[\"~\"]);\n            return true;}};\n        return nil;\n      }, $Parser_parse_block_metadata_line$52.$$arity = -4);\n      Opal.defs(self, '$process_attribute_entries', $Parser_process_attribute_entries$53 = function $$process_attribute_entries(reader, document, attributes) {\n        var $a, self = this;\n\n        \n        \n        if (attributes == null) {\n          attributes = nil;\n        };\n        reader.$skip_comment_lines();\n        while ($truthy(self.$process_attribute_entry(reader, document, attributes))) {\n          \n          reader.$shift();\n          reader.$skip_comment_lines();\n        };\n      }, $Parser_process_attribute_entries$53.$$arity = -3);\n      Opal.defs(self, '$process_attribute_entry', $Parser_process_attribute_entry$54 = function $$process_attribute_entry(reader, document, attributes, match) {\n        var $a, $b, $c, self = this, value = nil, con = nil, next_line = nil, keep_open = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = nil;\n        };\n        \n        if (match == null) {\n          match = nil;\n        };\n        if ($truthy(($truthy($a = match) ? $a : (match = (function() {if ($truthy(reader['$has_more_lines?']())) {\n          \n          return $$($nesting, 'AttributeEntryRx').$match(reader.$peek_line());\n        } else {\n          return nil\n        }; return nil; })())))) {\n          \n          if ($truthy((value = match['$[]'](2))['$nil_or_empty?']())) {\n            value = \"\"\n          } else if ($truthy(value['$end_with?']($$($nesting, 'LINE_CONTINUATION'), $$($nesting, 'LINE_CONTINUATION_LEGACY')))) {\n            \n            $a = [value.$slice($rb_minus(value.$length(), 2), 2), value.$slice(0, $rb_minus(value.$length(), 2)).$rstrip()], (con = $a[0]), (value = $a[1]), $a;\n            while ($truthy(($truthy($b = reader.$advance()) ? (next_line = ($truthy($c = reader.$peek_line()) ? $c : \"\"))['$empty?']()['$!']() : $b))) {\n              \n              next_line = next_line.$lstrip();\n              if ($truthy((keep_open = next_line['$end_with?'](con)))) {\n                next_line = next_line.$slice(0, $rb_minus(next_line.$length(), 2)).$rstrip()};\n              value = \"\" + (value) + ((function() {if ($truthy(value['$end_with?']($$($nesting, 'HARD_LINE_BREAK')))) {\n                return $$($nesting, 'LF')\n              } else {\n                return \" \"\n              }; return nil; })()) + (next_line);\n              if ($truthy(keep_open)) {\n              } else {\n                break;\n              };\n            };};\n          self.$store_attribute(match['$[]'](1), value, document, attributes);\n          return true;\n        } else {\n          return nil\n        };\n      }, $Parser_process_attribute_entry$54.$$arity = -3);\n      Opal.defs(self, '$store_attribute', $Parser_store_attribute$55 = function $$store_attribute(name, value, doc, attrs) {\n        var $a, self = this, resolved_value = nil;\n\n        \n        \n        if (doc == null) {\n          doc = nil;\n        };\n        \n        if (attrs == null) {\n          attrs = nil;\n        };\n        if ($truthy(name['$end_with?'](\"!\"))) {\n          \n          name = name.$chop();\n          value = nil;\n        } else if ($truthy(name['$start_with?'](\"!\"))) {\n          \n          name = name.$slice(1, name.$length());\n          value = nil;};\n        if ((name = self.$sanitize_attribute_name(name))['$=='](\"numbered\")) {\n          name = \"sectnums\"\n        } else if (name['$=='](\"hardbreaks\")) {\n          name = \"hardbreaks-option\"\n        } else if (name['$=='](\"showtitle\")) {\n          self.$store_attribute(\"notitle\", (function() {if ($truthy(value)) {\n            return nil\n          } else {\n            return \"\"\n          }; return nil; })(), doc, attrs)};\n        if ($truthy(doc)) {\n          if ($truthy(value)) {\n            \n            if (name['$=='](\"leveloffset\")) {\n              if ($truthy(value['$start_with?'](\"+\"))) {\n                value = $rb_plus(doc.$attr(\"leveloffset\", 0).$to_i(), value.$slice(1, value.$length()).$to_i()).$to_s()\n              } else if ($truthy(value['$start_with?'](\"-\"))) {\n                value = $rb_minus(doc.$attr(\"leveloffset\", 0).$to_i(), value.$slice(1, value.$length()).$to_i()).$to_s()}};\n            if ($truthy((resolved_value = doc.$set_attribute(name, value)))) {\n              \n              value = resolved_value;\n              if ($truthy(attrs)) {\n                $$$($$($nesting, 'Document'), 'AttributeEntry').$new(name, value).$save_to(attrs)};};\n          } else if ($truthy(($truthy($a = doc.$delete_attribute(name)) ? attrs : $a))) {\n            $$$($$($nesting, 'Document'), 'AttributeEntry').$new(name, value).$save_to(attrs)}\n        } else if ($truthy(attrs)) {\n          $$$($$($nesting, 'Document'), 'AttributeEntry').$new(name, value).$save_to(attrs)};\n        return [name, value];\n      }, $Parser_store_attribute$55.$$arity = -3);\n      Opal.defs(self, '$resolve_list_marker', $Parser_resolve_list_marker$56 = function $$resolve_list_marker(list_type, marker, ordinal, validate, reader) {\n        var self = this, $case = nil;\n\n        \n        \n        if (ordinal == null) {\n          ordinal = 0;\n        };\n        \n        if (validate == null) {\n          validate = false;\n        };\n        \n        if (reader == null) {\n          reader = nil;\n        };\n        return (function() {$case = list_type;\n        if (\"ulist\"['$===']($case)) {return marker}\n        else if (\"olist\"['$===']($case)) {return self.$resolve_ordered_list_marker(marker, ordinal, validate, reader)['$[]'](0)}\n        else {return \"<1>\"}})();\n      }, $Parser_resolve_list_marker$56.$$arity = -3);\n      Opal.defs(self, '$resolve_ordered_list_marker', $Parser_resolve_ordered_list_marker$57 = function $$resolve_ordered_list_marker(marker, ordinal, validate, reader) {\n        var $$58, $a, self = this, $case = nil, style = nil, expected = nil, actual = nil;\n\n        \n        \n        if (ordinal == null) {\n          ordinal = 0;\n        };\n        \n        if (validate == null) {\n          validate = false;\n        };\n        \n        if (reader == null) {\n          reader = nil;\n        };\n        if ($truthy(marker['$start_with?'](\".\"))) {\n          return [marker]};\n        $case = (style = $send($$($nesting, 'ORDERED_LIST_STYLES'), 'find', [], ($$58 = function(s){var self = $$58.$$s || this;\n\n        \n          \n          if (s == null) {\n            s = nil;\n          };\n          return $$($nesting, 'OrderedListMarkerRxMap')['$[]'](s)['$match?'](marker);}, $$58.$$s = self, $$58.$$arity = 1, $$58)));\n        if (\"arabic\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $rb_plus(ordinal, 1);\n          actual = marker.$to_i();};\n        marker = \"1.\";}\n        else if (\"loweralpha\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $rb_plus(\"a\"['$[]'](0).$ord(), ordinal).$chr();\n          actual = marker.$chop();};\n        marker = \"a.\";}\n        else if (\"upperalpha\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $rb_plus(\"A\"['$[]'](0).$ord(), ordinal).$chr();\n          actual = marker.$chop();};\n        marker = \"A.\";}\n        else if (\"lowerroman\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $$($nesting, 'Helpers').$int_to_roman($rb_plus(ordinal, 1)).$downcase();\n          actual = marker.$chop();};\n        marker = \"i)\";}\n        else if (\"upperroman\"['$===']($case)) {\n        if ($truthy(validate)) {\n          \n          expected = $$($nesting, 'Helpers').$int_to_roman($rb_plus(ordinal, 1));\n          actual = marker.$chop();};\n        marker = \"I)\";};\n        if ($truthy(($truthy($a = validate) ? expected['$!='](actual) : $a))) {\n          self.$logger().$warn(self.$message_with_context(\"\" + \"list item index: expected \" + (expected) + \", got \" + (actual), $hash2([\"source_location\"], {\"source_location\": reader.$cursor()})))};\n        return [marker, style];\n      }, $Parser_resolve_ordered_list_marker$57.$$arity = -2);\n      Opal.defs(self, '$is_sibling_list_item?', $Parser_is_sibling_list_item$ques$59 = function(line, list_type, sibling_trait) {\n        var $a, $b, self = this;\n\n        if ($truthy($$$('::', 'Regexp')['$==='](sibling_trait))) {\n          return sibling_trait['$match?'](line)\n        } else {\n          return ($truthy($a = $$($nesting, 'ListRxMap')['$[]'](list_type)['$=~'](line)) ? sibling_trait['$=='](self.$resolve_list_marker(list_type, (($b = $gvars['~']) === nil ? nil : $b['$[]'](1)))) : $a)\n        }\n      }, $Parser_is_sibling_list_item$ques$59.$$arity = 3);\n      Opal.defs(self, '$parse_table', $Parser_parse_table$60 = function $$parse_table(table_reader, parent, attributes) {\n        var $a, $b, $c, $d, self = this, table = nil, colspecs = nil, explicit_colspecs = nil, skipped = nil, $writer = nil, implicit_header = nil, parser_ctx = nil, format = nil, loop_idx = nil, implicit_header_boundary = nil, line = nil, beyond_first = nil, next_cellspec = nil, m = nil, pre_match = nil, post_match = nil, $case = nil, cell_text = nil, $logical_op_recvr_tmp_2 = nil;\n\n        \n        table = $$($nesting, 'Table').$new(parent, attributes);\n        if ($truthy(($truthy($a = attributes['$key?'](\"cols\")) ? (colspecs = self.$parse_colspecs(attributes['$[]'](\"cols\")))['$empty?']()['$!']() : $a))) {\n          \n          table.$create_columns(colspecs);\n          explicit_colspecs = true;};\n        skipped = ($truthy($a = table_reader.$skip_blank_lines()) ? $a : 0);\n        if ($truthy(attributes['$[]'](\"header-option\"))) {\n          \n          $writer = [true];\n          $send(table, 'has_header_option=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        } else if ($truthy((($a = skipped['$=='](0)) ? attributes['$[]'](\"noheader-option\")['$!']() : skipped['$=='](0)))) {\n          \n          \n          $writer = [\"implicit\"];\n          $send(table, 'has_header_option=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          implicit_header = true;};\n        parser_ctx = $$$($$($nesting, 'Table'), 'ParserContext').$new(table_reader, table, attributes);\n        $a = [parser_ctx.$format(), -1, nil], (format = $a[0]), (loop_idx = $a[1]), (implicit_header_boundary = $a[2]), $a;\n        $a = false; while ($a || $truthy((line = table_reader.$read_line()))) {$a = false;\n          \n          if ($truthy(($truthy($b = (beyond_first = $rb_gt((loop_idx = $rb_plus(loop_idx, 1)), 0))) ? line['$empty?']() : $b))) {\n            \n            line = nil;\n            if ($truthy(implicit_header_boundary)) {\n              implicit_header_boundary = $rb_plus(implicit_header_boundary, 1)};\n          } else if (format['$=='](\"psv\")) {\n            if ($truthy(parser_ctx['$starts_with_delimiter?'](line))) {\n              \n              line = line.$slice(1, line.$length());\n              parser_ctx.$close_open_cell();\n              if ($truthy(implicit_header_boundary)) {\n                implicit_header_boundary = nil};\n            } else {\n              \n              $c = self.$parse_cellspec(line, \"start\", parser_ctx.$delimiter()), $b = Opal.to_ary($c), (next_cellspec = ($b[0] == null ? nil : $b[0])), (line = ($b[1] == null ? nil : $b[1])), $c;\n              if ($truthy(next_cellspec)) {\n                \n                parser_ctx.$close_open_cell(next_cellspec);\n                if ($truthy(implicit_header_boundary)) {\n                  implicit_header_boundary = nil};\n              } else if ($truthy(($truthy($b = implicit_header_boundary) ? implicit_header_boundary['$=='](loop_idx) : $b))) {\n                \n                $writer = [(implicit_header = (implicit_header_boundary = nil))];\n                $send(table, 'has_header_option=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n            }};\n          if ($truthy(beyond_first)) {\n          } else {\n            \n            table_reader.$mark();\n            if ($truthy(implicit_header)) {\n              if ($truthy(($truthy($b = table_reader['$has_more_lines?']()) ? table_reader.$peek_line()['$empty?']() : $b))) {\n                implicit_header_boundary = 1\n              } else {\n                \n                $writer = [(implicit_header = nil)];\n                $send(table, 'has_header_option=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              }};\n          };\n          $b = false; while ($b || $truthy(true)) {$b = false;\n            if ($truthy(($truthy($c = line) ? (m = parser_ctx.$match_delimiter(line)) : $c))) {\n              \n              $c = [m.$pre_match(), m.$post_match()], (pre_match = $c[0]), (post_match = $c[1]), $c;\n              $case = format;\n              if (\"csv\"['$===']($case)) {\n              if ($truthy(parser_ctx['$buffer_has_unclosed_quotes?'](pre_match))) {\n                \n                parser_ctx.$skip_past_delimiter(pre_match);\n                if ($truthy((line = post_match)['$empty?']())) {\n                  break;};\n                $b = true; continue;;};\n              \n              $writer = [\"\" + (parser_ctx.$buffer()) + (pre_match)];\n              $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;}\n              else if (\"dsv\"['$===']($case)) {\n              if ($truthy(pre_match['$end_with?'](\"\\\\\"))) {\n                \n                parser_ctx.$skip_past_escaped_delimiter(pre_match);\n                if ($truthy((line = post_match)['$empty?']())) {\n                  \n                  \n                  $writer = [\"\" + (parser_ctx.$buffer()) + ($$($nesting, 'LF'))];\n                  $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                  parser_ctx.$keep_cell_open();\n                  break;;};\n                $b = true; continue;;};\n              \n              $writer = [\"\" + (parser_ctx.$buffer()) + (pre_match)];\n              $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;}\n              else {\n              if ($truthy(pre_match['$end_with?'](\"\\\\\"))) {\n                \n                parser_ctx.$skip_past_escaped_delimiter(pre_match);\n                if ($truthy((line = post_match)['$empty?']())) {\n                  \n                  \n                  $writer = [\"\" + (parser_ctx.$buffer()) + ($$($nesting, 'LF'))];\n                  $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                  parser_ctx.$keep_cell_open();\n                  break;;};\n                $b = true; continue;;};\n              $d = self.$parse_cellspec(pre_match), $c = Opal.to_ary($d), (next_cellspec = ($c[0] == null ? nil : $c[0])), (cell_text = ($c[1] == null ? nil : $c[1])), $d;\n              parser_ctx.$push_cellspec(next_cellspec);\n              \n              $writer = [\"\" + (parser_ctx.$buffer()) + (cell_text)];\n              $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n              if ($truthy((line = post_match)['$empty?']())) {\n                line = nil};\n              parser_ctx.$close_cell();\n            } else {\n              \n              \n              $writer = [\"\" + (parser_ctx.$buffer()) + (line) + ($$($nesting, 'LF'))];\n              $send(parser_ctx, 'buffer=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              $case = format;\n              if (\"csv\"['$===']($case)) {if ($truthy(parser_ctx['$buffer_has_unclosed_quotes?']())) {\n                \n                if ($truthy(($truthy($c = implicit_header_boundary) ? loop_idx['$=='](0) : $c))) {\n                  \n                  $writer = [(implicit_header = (implicit_header_boundary = nil))];\n                  $send(table, 'has_header_option=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];};\n                parser_ctx.$keep_cell_open();\n              } else {\n                parser_ctx.$close_cell(true)\n              }}\n              else if (\"dsv\"['$===']($case)) {parser_ctx.$close_cell(true)}\n              else {parser_ctx.$keep_cell_open()};\n              break;;\n            }\n          };\n          if ($truthy(parser_ctx['$cell_open?']())) {\n            if ($truthy(table_reader['$has_more_lines?']())) {\n            } else {\n              parser_ctx.$close_cell(true)\n            }\n          } else {\n            if ($truthy($b = table_reader.$skip_blank_lines())) {\n              $b\n            } else {\n              break;\n            }\n          };\n        };\n        if ($truthy(($truthy($a = (($logical_op_recvr_tmp_2 = table.$attributes()), ($truthy($b = $logical_op_recvr_tmp_2['$[]'](\"colcount\")) ? $b : (($writer = [\"colcount\", table.$columns().$size()]), $send($logical_op_recvr_tmp_2, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])))['$=='](0)) ? $a : explicit_colspecs))) {\n        } else {\n          table.$assign_column_widths()\n        };\n        if ($truthy(implicit_header)) {\n          \n          $writer = [true];\n          $send(table, 'has_header_option=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        table.$partition_header_footer(attributes);\n        return table;\n      }, $Parser_parse_table$60.$$arity = 3);\n      Opal.defs(self, '$parse_colspecs', $Parser_parse_colspecs$61 = function $$parse_colspecs(records) {\n        var $$62, $$63, self = this, specs = nil;\n\n        \n        if ($truthy(records['$include?'](\" \"))) {\n          records = records.$delete(\" \")};\n        if (records['$=='](records.$to_i().$to_s())) {\n          return $send($$$('::', 'Array'), 'new', [records.$to_i()], ($$62 = function(){var self = $$62.$$s || this;\n\n          return $hash2([\"width\"], {\"width\": 1})}, $$62.$$s = self, $$62.$$arity = 0, $$62))};\n        specs = [];\n        $send((function() {if ($truthy(records['$include?'](\",\"))) {\n          \n          return records.$split(\",\", -1);\n        } else {\n          \n          return records.$split(\";\", -1);\n        }; return nil; })(), 'each', [], ($$63 = function(record){var self = $$63.$$s || this, $a, $b, $$64, m = nil, spec = nil, colspec = nil, rowspec = nil, $writer = nil, width = nil;\n\n        \n          \n          if (record == null) {\n            record = nil;\n          };\n          if ($truthy(record['$empty?']())) {\n            return specs['$<<']($hash2([\"width\"], {\"width\": 1}))\n          } else if ($truthy((m = $$($nesting, 'ColumnSpecRx').$match(record)))) {\n            \n            spec = $hash2([], {});\n            if ($truthy(m['$[]'](2))) {\n              \n              $b = m['$[]'](2).$split(\".\"), $a = Opal.to_ary($b), (colspec = ($a[0] == null ? nil : $a[0])), (rowspec = ($a[1] == null ? nil : $a[1])), $b;\n              if ($truthy(($truthy($a = colspec['$nil_or_empty?']()['$!']()) ? $$($nesting, 'TableCellHorzAlignments')['$key?'](colspec) : $a))) {\n                \n                $writer = [\"halign\", $$($nesting, 'TableCellHorzAlignments')['$[]'](colspec)];\n                $send(spec, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};\n              if ($truthy(($truthy($a = rowspec['$nil_or_empty?']()['$!']()) ? $$($nesting, 'TableCellVertAlignments')['$key?'](rowspec) : $a))) {\n                \n                $writer = [\"valign\", $$($nesting, 'TableCellVertAlignments')['$[]'](rowspec)];\n                $send(spec, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];};};\n            if ($truthy((width = m['$[]'](3)))) {\n              \n              $writer = [\"width\", (function() {if (width['$=='](\"~\")) {\n                return -1\n              } else {\n                return width.$to_i()\n              }; return nil; })()];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              \n              $writer = [\"width\", 1];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            };\n            if ($truthy(($truthy($a = m['$[]'](4)) ? $$($nesting, 'TableCellStyles')['$key?'](m['$[]'](4)) : $a))) {\n              \n              $writer = [\"style\", $$($nesting, 'TableCellStyles')['$[]'](m['$[]'](4))];\n              $send(spec, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(m['$[]'](1))) {\n              return $send((1), 'upto', [m['$[]'](1).$to_i()], ($$64 = function(){var self = $$64.$$s || this;\n\n              return specs['$<<'](spec.$merge())}, $$64.$$s = self, $$64.$$arity = 0, $$64))\n            } else {\n              return specs['$<<'](spec)\n            };\n          } else {\n            return nil\n          };}, $$63.$$s = self, $$63.$$arity = 1, $$63));\n        return specs;\n      }, $Parser_parse_colspecs$61.$$arity = 1);\n      Opal.defs(self, '$parse_cellspec', $Parser_parse_cellspec$65 = function $$parse_cellspec(line, pos, delimiter) {\n        var $a, $b, self = this, m = nil, rest = nil, spec_part = nil, _ = nil, spec = nil, colspec = nil, rowspec = nil, $case = nil, $writer = nil;\n\n        \n        \n        if (pos == null) {\n          pos = \"end\";\n        };\n        \n        if (delimiter == null) {\n          delimiter = nil;\n        };\n        $a = [nil, \"\"], (m = $a[0]), (rest = $a[1]), $a;\n        if (pos['$=='](\"start\")) {\n          if ($truthy(line['$include?'](delimiter))) {\n            \n            $b = line.$partition(delimiter), $a = Opal.to_ary($b), (spec_part = ($a[0] == null ? nil : $a[0])), (_ = ($a[1] == null ? nil : $a[1])), (rest = ($a[2] == null ? nil : $a[2])), $b;\n            if ($truthy((m = $$($nesting, 'CellSpecStartRx').$match(spec_part)))) {\n              if ($truthy(m['$[]'](0)['$empty?']())) {\n                return [$hash2([], {}), rest]}\n            } else {\n              return [nil, line]\n            };\n          } else {\n            return [nil, line]\n          }\n        } else if ($truthy((m = $$($nesting, 'CellSpecEndRx').$match(line)))) {\n          \n          if ($truthy(m['$[]'](0).$lstrip()['$empty?']())) {\n            return [$hash2([], {}), line.$rstrip()]};\n          rest = m.$pre_match();\n        } else {\n          return [$hash2([], {}), line]\n        };\n        spec = $hash2([], {});\n        if ($truthy(m['$[]'](1))) {\n          \n          $b = m['$[]'](1).$split(\".\"), $a = Opal.to_ary($b), (colspec = ($a[0] == null ? nil : $a[0])), (rowspec = ($a[1] == null ? nil : $a[1])), $b;\n          colspec = (function() {if ($truthy(colspec['$nil_or_empty?']())) {\n            return 1\n          } else {\n            return colspec.$to_i()\n          }; return nil; })();\n          rowspec = (function() {if ($truthy(rowspec['$nil_or_empty?']())) {\n            return 1\n          } else {\n            return rowspec.$to_i()\n          }; return nil; })();\n          $case = m['$[]'](2);\n          if (\"+\"['$===']($case)) {\n          if (colspec['$=='](1)) {\n          } else {\n            \n            $writer = [\"colspan\", colspec];\n            $send(spec, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          if (rowspec['$=='](1)) {\n          } else {\n            \n            $writer = [\"rowspan\", rowspec];\n            $send(spec, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };}\n          else if (\"*\"['$===']($case)) {if (colspec['$=='](1)) {\n          } else {\n            \n            $writer = [\"repeatcol\", colspec];\n            $send(spec, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          }};};\n        if ($truthy(m['$[]'](3))) {\n          \n          $b = m['$[]'](3).$split(\".\"), $a = Opal.to_ary($b), (colspec = ($a[0] == null ? nil : $a[0])), (rowspec = ($a[1] == null ? nil : $a[1])), $b;\n          if ($truthy(($truthy($a = colspec['$nil_or_empty?']()['$!']()) ? $$($nesting, 'TableCellHorzAlignments')['$key?'](colspec) : $a))) {\n            \n            $writer = [\"halign\", $$($nesting, 'TableCellHorzAlignments')['$[]'](colspec)];\n            $send(spec, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy(($truthy($a = rowspec['$nil_or_empty?']()['$!']()) ? $$($nesting, 'TableCellVertAlignments')['$key?'](rowspec) : $a))) {\n            \n            $writer = [\"valign\", $$($nesting, 'TableCellVertAlignments')['$[]'](rowspec)];\n            $send(spec, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};};\n        if ($truthy(($truthy($a = m['$[]'](4)) ? $$($nesting, 'TableCellStyles')['$key?'](m['$[]'](4)) : $a))) {\n          \n          $writer = [\"style\", $$($nesting, 'TableCellStyles')['$[]'](m['$[]'](4))];\n          $send(spec, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        return [spec, rest];\n      }, $Parser_parse_cellspec$65.$$arity = -2);\n      Opal.defs(self, '$parse_style_attribute', $Parser_parse_style_attribute$66 = function $$parse_style_attribute(attributes, reader) {\n        var $a, $b, $$67, $$68, self = this, raw_style = nil, name = nil, accum = nil, parsed_attrs = nil, parsed_style = nil, $writer = nil, existing_role = nil;\n\n        \n        \n        if (reader == null) {\n          reader = nil;\n        };\n        if ($truthy(($truthy($a = ($truthy($b = (raw_style = attributes['$[]'](1))) ? raw_style['$include?'](\" \")['$!']() : $b)) ? $$($nesting, 'Compliance').$shorthand_property_syntax() : $a))) {\n          \n          name = nil;\n          accum = \"\";\n          parsed_attrs = $hash2([], {});\n          $send(raw_style, 'each_char', [], ($$67 = function(c){var self = $$67.$$s || this, $case = nil;\n\n          \n            \n            if (c == null) {\n              c = nil;\n            };\n            return (function() {$case = c;\n            if (\".\"['$===']($case)) {\n            self.$yield_buffered_attribute(parsed_attrs, name, accum, reader);\n            accum = \"\";\n            return (name = \"role\");}\n            else if (\"#\"['$===']($case)) {\n            self.$yield_buffered_attribute(parsed_attrs, name, accum, reader);\n            accum = \"\";\n            return (name = \"id\");}\n            else if (\"%\"['$===']($case)) {\n            self.$yield_buffered_attribute(parsed_attrs, name, accum, reader);\n            accum = \"\";\n            return (name = \"option\");}\n            else {return (accum = $rb_plus(accum, c))}})();}, $$67.$$s = self, $$67.$$arity = 1, $$67));\n          if ($truthy(name)) {\n            \n            self.$yield_buffered_attribute(parsed_attrs, name, accum, reader);\n            if ($truthy((parsed_style = parsed_attrs['$[]'](\"style\")))) {\n              \n              $writer = [\"style\", parsed_style];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(parsed_attrs['$key?'](\"id\"))) {\n              \n              $writer = [\"id\", parsed_attrs['$[]'](\"id\")];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(parsed_attrs['$key?'](\"role\"))) {\n              \n              $writer = [\"role\", (function() {if ($truthy((existing_role = attributes['$[]'](\"role\"))['$nil_or_empty?']())) {\n                \n                return parsed_attrs['$[]'](\"role\").$join(\" \");\n              } else {\n                return \"\" + (existing_role) + \" \" + (parsed_attrs['$[]'](\"role\").$join(\" \"))\n              }; return nil; })()];\n              $send(attributes, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            if ($truthy(parsed_attrs['$key?'](\"option\"))) {\n              $send(parsed_attrs['$[]'](\"option\"), 'each', [], ($$68 = function(opt){var self = $$68.$$s || this;\n\n              \n                \n                if (opt == null) {\n                  opt = nil;\n                };\n                $writer = [\"\" + (opt) + \"-option\", \"\"];\n                $send(attributes, '[]=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];}, $$68.$$s = self, $$68.$$arity = 1, $$68))};\n            return parsed_style;\n          } else {\n            \n            $writer = [\"style\", raw_style];\n            $send(attributes, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n        } else {\n          \n          $writer = [\"style\", raw_style];\n          $send(attributes, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n      }, $Parser_parse_style_attribute$66.$$arity = -2);\n      Opal.defs(self, '$yield_buffered_attribute', $Parser_yield_buffered_attribute$69 = function $$yield_buffered_attribute(attrs, name, value, reader) {\n        var $a, self = this, $writer = nil;\n\n        \n        if ($truthy(name)) {\n          if ($truthy(value['$empty?']())) {\n            if ($truthy(reader)) {\n              self.$logger().$warn(self.$message_with_context(\"\" + \"invalid empty \" + (name) + \" detected in style attribute\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_prev_line()})))\n            } else {\n              self.$logger().$warn(\"\" + \"invalid empty \" + (name) + \" detected in style attribute\")\n            }\n          } else if (name['$=='](\"id\")) {\n            \n            if ($truthy(attrs['$key?'](\"id\"))) {\n              if ($truthy(reader)) {\n                self.$logger().$warn(self.$message_with_context(\"multiple ids detected in style attribute\", $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_prev_line()})))\n              } else {\n                self.$logger().$warn(\"multiple ids detected in style attribute\")\n              }};\n            \n            $writer = [name, value];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            ($truthy($a = attrs['$[]'](name)) ? $a : (($writer = [name, []]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))['$<<'](value)\n          }\n        } else if ($truthy(value['$empty?']())) {\n        } else {\n          \n          $writer = [\"style\", value];\n          $send(attrs, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        };\n        return nil;\n      }, $Parser_yield_buffered_attribute$69.$$arity = 4);\n      Opal.defs(self, '$adjust_indentation!', $Parser_adjust_indentation$excl$70 = function(lines, indent_size, tab_size) {\n        var $a, $$71, $$72, $$75, $$76, $$77, $$78, self = this, full_tab_space = nil, block_indent = nil, new_block_indent = nil;\n\n        \n        \n        if (indent_size == null) {\n          indent_size = 0;\n        };\n        \n        if (tab_size == null) {\n          tab_size = 0;\n        };\n        if ($truthy(lines['$empty?']())) {\n          return nil};\n        if ($truthy(($truthy($a = $rb_gt(tab_size, 0)) ? $send(lines, 'any?', [], ($$71 = function(line){var self = $$71.$$s || this;\n\n        \n          \n          if (line == null) {\n            line = nil;\n          };\n          return line['$include?']($$($nesting, 'TAB'));}, $$71.$$s = self, $$71.$$arity = 1, $$71)) : $a))) {\n          \n          full_tab_space = $rb_times(\" \", tab_size);\n          (function(){var $brk = Opal.new_brk(); try {return $send(lines, 'map!', [], ($$72 = function(line){var self = $$72.$$s || this, $b, $$73, $$74, tab_idx = nil, leading_tabs = nil, spaces_added = nil, idx = nil, result = nil;\n\n          \n            \n            if (line == null) {\n              line = nil;\n            };\n            if ($truthy(($truthy($b = line['$empty?']()) ? $b : (tab_idx = line.$index($$($nesting, 'TAB')))['$nil?']()))) {\n              return line\n            } else {\n              \n              if (tab_idx['$=='](0)) {\n                \n                leading_tabs = 0;\n                (function(){var $brk = Opal.new_brk(); try {return $send(line, 'each_byte', [], ($$73 = function(b){var self = $$73.$$s || this;\n\n                \n                  \n                  if (b == null) {\n                    b = nil;\n                  };\n                  if (b['$=='](9)) {\n                  } else {\n                    \n                    Opal.brk(nil, $brk)\n                  };\n                  return (leading_tabs = $rb_plus(leading_tabs, 1));}, $$73.$$s = self, $$73.$$brk = $brk, $$73.$$arity = 1, $$73))\n                } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n                line = \"\" + ($rb_times(full_tab_space, leading_tabs)) + (line.$slice(leading_tabs, line.$length()));\n                if ($truthy(line['$include?']($$($nesting, 'TAB')))) {\n                } else {\n                  return line;\n                };};\n              spaces_added = 0;\n              idx = 0;\n              result = \"\";\n              $send(line, 'each_char', [], ($$74 = function(c){var self = $$74.$$s || this, offset = nil, spaces = nil;\n\n              \n                \n                if (c == null) {\n                  c = nil;\n                };\n                if (c['$==']($$($nesting, 'TAB'))) {\n                  if ((offset = $rb_plus(idx, spaces_added))['$%'](tab_size)['$=='](0)) {\n                    \n                    spaces_added = $rb_plus(spaces_added, $rb_minus(tab_size, 1));\n                    result = $rb_plus(result, full_tab_space);\n                  } else {\n                    \n                    if ((spaces = $rb_minus(tab_size, offset['$%'](tab_size)))['$=='](1)) {\n                    } else {\n                      spaces_added = $rb_plus(spaces_added, $rb_minus(spaces, 1))\n                    };\n                    result = $rb_plus(result, $rb_times(\" \", spaces));\n                  }\n                } else {\n                  result = $rb_plus(result, c)\n                };\n                return (idx = $rb_plus(idx, 1));}, $$74.$$s = self, $$74.$$arity = 1, $$74));\n              return result;\n            };}, $$72.$$s = self, $$72.$$brk = $brk, $$72.$$arity = 1, $$72))\n          } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();};\n        if ($truthy($rb_lt(indent_size, 0))) {\n          return nil};\n        block_indent = nil;\n        (function(){var $brk = Opal.new_brk(); try {return $send(lines, 'each', [], ($$75 = function(line){var self = $$75.$$s || this, $b, line_indent = nil;\n\n        \n          \n          if (line == null) {\n            line = nil;\n          };\n          if ($truthy(line['$empty?']())) {\n            return nil;};\n          if ((line_indent = $rb_minus(line.$length(), line.$lstrip().$length()))['$=='](0)) {\n            \n            block_indent = nil;\n            \n            Opal.brk(nil, $brk);};\n          if ($truthy(($truthy($b = block_indent) ? $rb_lt(block_indent, line_indent) : $b))) {\n            return nil\n          } else {\n            return (block_indent = line_indent)\n          };}, $$75.$$s = self, $$75.$$brk = $brk, $$75.$$arity = 1, $$75))\n        } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n        if (indent_size['$=='](0)) {\n          if ($truthy(block_indent)) {\n            $send(lines, 'map!', [], ($$76 = function(line){var self = $$76.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              if ($truthy(line['$empty?']())) {\n                return line\n              } else {\n                \n                return line.$slice(block_indent, line.$length());\n              };}, $$76.$$s = self, $$76.$$arity = 1, $$76))}\n        } else {\n          \n          new_block_indent = $rb_times(\" \", indent_size);\n          if ($truthy(block_indent)) {\n            $send(lines, 'map!', [], ($$77 = function(line){var self = $$77.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              if ($truthy(line['$empty?']())) {\n                return line\n              } else {\n                return $rb_plus(new_block_indent, line.$slice(block_indent, line.$length()))\n              };}, $$77.$$s = self, $$77.$$arity = 1, $$77))\n          } else {\n            $send(lines, 'map!', [], ($$78 = function(line){var self = $$78.$$s || this;\n\n            \n              \n              if (line == null) {\n                line = nil;\n              };\n              if ($truthy(line['$empty?']())) {\n                return line\n              } else {\n                return $rb_plus(new_block_indent, line)\n              };}, $$78.$$s = self, $$78.$$arity = 1, $$78))\n          };\n        };\n        return nil;\n      }, $Parser_adjust_indentation$excl$70.$$arity = -2);\n      Opal.defs(self, '$uniform?', $Parser_uniform$ques$79 = function(str, chr, len) {\n        var self = this;\n\n        return str.$count(chr)['$=='](len)\n      }, $Parser_uniform$ques$79.$$arity = 3);\n      return (Opal.defs(self, '$sanitize_attribute_name', $Parser_sanitize_attribute_name$80 = function $$sanitize_attribute_name(name) {\n        var self = this;\n\n        return name.$gsub($$($nesting, 'InvalidAttributeNameCharsRx'), \"\").$downcase()\n      }, $Parser_sanitize_attribute_name$80.$$arity = 1), nil) && 'sanitize_attribute_name';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/path_resolver\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$include', '$attr_accessor', '$root?', '$posixify', '$expand_path', '$pwd', '$start_with?', '$==', '$match?', '$absolute_path?', '$+', '$length', '$descends_from?', '$slice', '$to_s', '$relative_path_from', '$new', '$include?', '$tr', '$partition_path', '$each', '$pop', '$<<', '$join_path', '$[]', '$web_root?', '$unc?', '$index', '$split', '$delete', '$[]=', '$-', '$join', '$raise', '$!', '$fetch', '$warn', '$logger', '$empty?', '$nil_or_empty?', '$chomp', '$!=', '$>', '$size', '$extract_uri_prefix', '$end_with?', '$gsub', '$private', '$=~']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'PathResolver');\n\n      var $nesting = [self].concat($parent_nesting), $PathResolver_initialize$1, $PathResolver_absolute_path$ques$2, $a, $PathResolver_root$ques$3, $PathResolver_unc$ques$4, $PathResolver_web_root$ques$5, $PathResolver_descends_from$ques$6, $PathResolver_relative_path$7, $PathResolver_posixify$8, $PathResolver_expand_path$9, $PathResolver_partition_path$11, $PathResolver_join_path$12, $PathResolver_system_path$13, $PathResolver_web_path$16, $PathResolver_extract_uri_prefix$18;\n\n      self.$$prototype.file_separator = self.$$prototype._partition_path_web = self.$$prototype._partition_path_sys = self.$$prototype.working_dir = nil;\n      \n      self.$include($$($nesting, 'Logging'));\n      Opal.const_set($nesting[0], 'DOT', \".\");\n      Opal.const_set($nesting[0], 'DOT_DOT', \"..\");\n      Opal.const_set($nesting[0], 'DOT_SLASH', \"./\");\n      Opal.const_set($nesting[0], 'SLASH', \"/\");\n      Opal.const_set($nesting[0], 'BACKSLASH', \"\\\\\");\n      Opal.const_set($nesting[0], 'DOUBLE_SLASH', \"//\");\n      Opal.const_set($nesting[0], 'WindowsRootRx', /^(?:[a-zA-Z]:)?[\\\\\\/]/);\n      self.$attr_accessor(\"file_separator\");\n      self.$attr_accessor(\"working_dir\");\n      \n      Opal.def(self, '$initialize', $PathResolver_initialize$1 = function $$initialize(file_separator, working_dir) {\n        var $a, $b, self = this;\n\n        \n        \n        if (file_separator == null) {\n          file_separator = nil;\n        };\n        \n        if (working_dir == null) {\n          working_dir = nil;\n        };\n        self.file_separator = ($truthy($a = ($truthy($b = file_separator) ? $b : $$$($$$('::', 'File'), 'ALT_SEPARATOR'))) ? $a : $$$($$$('::', 'File'), 'SEPARATOR'));\n        self.working_dir = (function() {if ($truthy(working_dir)) {\n          \n          if ($truthy(self['$root?'](working_dir))) {\n            \n            return self.$posixify(working_dir);\n          } else {\n            \n            return $$$('::', 'File').$expand_path(working_dir);\n          };\n        } else {\n          return $$$('::', 'Dir').$pwd()\n        }; return nil; })();\n        self._partition_path_sys = $hash2([], {});\n        return (self._partition_path_web = $hash2([], {}));\n      }, $PathResolver_initialize$1.$$arity = -1);\n      \n      Opal.def(self, '$absolute_path?', $PathResolver_absolute_path$ques$2 = function(path) {\n        var $a, $b, self = this;\n\n        return ($truthy($a = path['$start_with?']($$($nesting, 'SLASH'))) ? $a : (($b = self.file_separator['$==']($$($nesting, 'BACKSLASH'))) ? $$($nesting, 'WindowsRootRx')['$match?'](path) : self.file_separator['$==']($$($nesting, 'BACKSLASH'))))\n      }, $PathResolver_absolute_path$ques$2.$$arity = 1);\n      if ($truthy((($a = $$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) ? $$$('::', 'JAVASCRIPT_IO_MODULE')['$=='](\"xmlhttprequest\") : $$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")))) {\n        \n        Opal.def(self, '$root?', $PathResolver_root$ques$3 = function(path) {\n          var $a, self = this;\n\n          return ($truthy($a = self['$absolute_path?'](path)) ? $a : path['$start_with?'](\"file://\", \"http://\", \"https://\"))\n        }, $PathResolver_root$ques$3.$$arity = 1)\n      } else {\n        Opal.alias(self, \"root?\", \"absolute_path?\")\n      };\n      \n      Opal.def(self, '$unc?', $PathResolver_unc$ques$4 = function(path) {\n        var self = this;\n\n        return path['$start_with?']($$($nesting, 'DOUBLE_SLASH'))\n      }, $PathResolver_unc$ques$4.$$arity = 1);\n      \n      Opal.def(self, '$web_root?', $PathResolver_web_root$ques$5 = function(path) {\n        var self = this;\n\n        return path['$start_with?']($$($nesting, 'SLASH'))\n      }, $PathResolver_web_root$ques$5.$$arity = 1);\n      \n      Opal.def(self, '$descends_from?', $PathResolver_descends_from$ques$6 = function(path, base) {\n        var $a, self = this;\n\n        if (base['$=='](path)) {\n          return 0\n        } else if (base['$==']($$($nesting, 'SLASH'))) {\n          return ($truthy($a = path['$start_with?']($$($nesting, 'SLASH'))) ? 1 : $a)\n        } else {\n          return ($truthy($a = path['$start_with?']($rb_plus(base, $$($nesting, 'SLASH')))) ? $rb_plus(base.$length(), 1) : $a)\n        }\n      }, $PathResolver_descends_from$ques$6.$$arity = 2);\n      \n      Opal.def(self, '$relative_path', $PathResolver_relative_path$7 = function $$relative_path(path, base) {\n        var self = this, offset = nil;\n\n        if ($truthy(self['$root?'](path))) {\n          if ($truthy((offset = self['$descends_from?'](path, base)))) {\n            return path.$slice(offset, path.$length())\n          } else {\n            \n            try {\n              return $$($nesting, 'Pathname').$new(path).$relative_path_from($$($nesting, 'Pathname').$new(base)).$to_s()\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  return path\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };\n          }\n        } else {\n          return path\n        }\n      }, $PathResolver_relative_path$7.$$arity = 2);\n      \n      Opal.def(self, '$posixify', $PathResolver_posixify$8 = function $$posixify(path) {\n        var $a, self = this;\n\n        if ($truthy(path)) {\n          if ($truthy((($a = self.file_separator['$==']($$($nesting, 'BACKSLASH'))) ? path['$include?']($$($nesting, 'BACKSLASH')) : self.file_separator['$==']($$($nesting, 'BACKSLASH'))))) {\n            \n            return path.$tr($$($nesting, 'BACKSLASH'), $$($nesting, 'SLASH'));\n          } else {\n            return path\n          }\n        } else {\n          return \"\"\n        }\n      }, $PathResolver_posixify$8.$$arity = 1);\n      Opal.alias(self, \"posixfy\", \"posixify\");\n      \n      Opal.def(self, '$expand_path', $PathResolver_expand_path$9 = function $$expand_path(path) {\n        var $a, $b, $$10, self = this, path_segments = nil, path_root = nil, resolved_segments = nil;\n\n        \n        $b = self.$partition_path(path), $a = Opal.to_ary($b), (path_segments = ($a[0] == null ? nil : $a[0])), (path_root = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy(path['$include?']($$($nesting, 'DOT_DOT')))) {\n          \n          resolved_segments = [];\n          $send(path_segments, 'each', [], ($$10 = function(segment){var self = $$10.$$s || this;\n\n          \n            \n            if (segment == null) {\n              segment = nil;\n            };\n            if (segment['$==']($$($nesting, 'DOT_DOT'))) {\n              return resolved_segments.$pop()\n            } else {\n              return resolved_segments['$<<'](segment)\n            };}, $$10.$$s = self, $$10.$$arity = 1, $$10));\n          return self.$join_path(resolved_segments, path_root);\n        } else {\n          return self.$join_path(path_segments, path_root)\n        };\n      }, $PathResolver_expand_path$9.$$arity = 1);\n      \n      Opal.def(self, '$partition_path', $PathResolver_partition_path$11 = function $$partition_path(path, web) {\n        var self = this, result = nil, cache = nil, posix_path = nil, root = nil, path_segments = nil, $writer = nil;\n\n        \n        \n        if (web == null) {\n          web = nil;\n        };\n        if ($truthy((result = (cache = (function() {if ($truthy(web)) {\n          return self._partition_path_web\n        } else {\n          return self._partition_path_sys\n        }; return nil; })())['$[]'](path)))) {\n          return result};\n        posix_path = self.$posixify(path);\n        if ($truthy(web)) {\n          if ($truthy(self['$web_root?'](posix_path))) {\n            root = $$($nesting, 'SLASH')\n          } else if ($truthy(posix_path['$start_with?']($$($nesting, 'DOT_SLASH')))) {\n            root = $$($nesting, 'DOT_SLASH')}\n        } else if ($truthy(self['$root?'](posix_path))) {\n          if ($truthy(self['$unc?'](posix_path))) {\n            root = $$($nesting, 'DOUBLE_SLASH')\n          } else if ($truthy(posix_path['$start_with?']($$($nesting, 'SLASH')))) {\n            root = $$($nesting, 'SLASH')\n          } else {\n            root = posix_path.$slice(0, $rb_plus(posix_path.$index($$($nesting, 'SLASH')), 1))\n          }\n        } else if ($truthy(posix_path['$start_with?']($$($nesting, 'DOT_SLASH')))) {\n          root = $$($nesting, 'DOT_SLASH')};\n        path_segments = (function() {if ($truthy(root)) {\n          \n          return posix_path.$slice(root.$length(), posix_path.$length());\n        } else {\n          return posix_path\n        }; return nil; })().$split($$($nesting, 'SLASH'));\n        path_segments.$delete($$($nesting, 'DOT'));\n        \n        $writer = [path, [path_segments, root]];\n        $send(cache, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];;\n      }, $PathResolver_partition_path$11.$$arity = -2);\n      \n      Opal.def(self, '$join_path', $PathResolver_join_path$12 = function $$join_path(segments, root) {\n        var self = this;\n\n        \n        \n        if (root == null) {\n          root = nil;\n        };\n        if ($truthy(root)) {\n          return \"\" + (root) + (segments.$join($$($nesting, 'SLASH')))\n        } else {\n          \n          return segments.$join($$($nesting, 'SLASH'));\n        };\n      }, $PathResolver_join_path$12.$$arity = -2);\n      \n      Opal.def(self, '$system_path', $PathResolver_system_path$13 = function $$system_path(target, start, jail, opts) {\n        var $a, $b, $$14, $$15, self = this, target_path = nil, target_segments = nil, jail_segments = nil, jail_root = nil, recheck = nil, start_segments = nil, start_root = nil, resolved_segments = nil, unresolved_segments = nil, warned = nil;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        \n        if (jail == null) {\n          jail = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy(jail)) {\n          \n          if ($truthy(self['$root?'](jail))) {\n          } else {\n            self.$raise($$$('::', 'SecurityError'), \"\" + \"Jail is not an absolute path: \" + (jail))\n          };\n          jail = self.$posixify(jail);};\n        if ($truthy(target)) {\n          if ($truthy(self['$root?'](target))) {\n            \n            target_path = self.$expand_path(target);\n            if ($truthy(($truthy($a = jail) ? self['$descends_from?'](target_path, jail)['$!']() : $a))) {\n              if ($truthy(opts.$fetch(\"recover\", true))) {\n                \n                self.$logger().$warn(\"\" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" is outside of jail; recovering automatically\");\n                $b = self.$partition_path(target_path), $a = Opal.to_ary($b), (target_segments = ($a[0] == null ? nil : $a[0])), $b;\n                $b = self.$partition_path(jail), $a = Opal.to_ary($b), (jail_segments = ($a[0] == null ? nil : $a[0])), (jail_root = ($a[1] == null ? nil : $a[1])), $b;\n                return self.$join_path($rb_plus(jail_segments, target_segments), jail_root);\n              } else {\n                self.$raise($$$('::', 'SecurityError'), \"\" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" \" + (target) + \" is outside of jail: \" + (jail) + \" (disallowed in safe mode)\")\n              }};\n            return target_path;\n          } else {\n            $b = self.$partition_path(target), $a = Opal.to_ary($b), (target_segments = ($a[0] == null ? nil : $a[0])), $b\n          }\n        } else {\n          target_segments = []\n        };\n        if ($truthy(target_segments['$empty?']())) {\n          if ($truthy(start['$nil_or_empty?']())) {\n            return ($truthy($a = jail) ? $a : self.working_dir)\n          } else if ($truthy(self['$root?'](start))) {\n            if ($truthy(jail)) {\n              start = self.$posixify(start)\n            } else {\n              return self.$expand_path(start)\n            }\n          } else {\n            \n            $b = self.$partition_path(start), $a = Opal.to_ary($b), (target_segments = ($a[0] == null ? nil : $a[0])), $b;\n            start = ($truthy($a = jail) ? $a : self.working_dir);\n          }\n        } else if ($truthy(start['$nil_or_empty?']())) {\n          start = ($truthy($a = jail) ? $a : self.working_dir)\n        } else if ($truthy(self['$root?'](start))) {\n          if ($truthy(jail)) {\n            start = self.$posixify(start)}\n        } else {\n          start = \"\" + (($truthy($a = jail) ? $a : self.working_dir).$chomp(\"/\")) + \"/\" + (start)\n        };\n        if ($truthy(($truthy($a = ($truthy($b = jail) ? (recheck = self['$descends_from?'](start, jail)['$!']()) : $b)) ? self.file_separator['$==']($$($nesting, 'BACKSLASH')) : $a))) {\n          \n          $b = self.$partition_path(start), $a = Opal.to_ary($b), (start_segments = ($a[0] == null ? nil : $a[0])), (start_root = ($a[1] == null ? nil : $a[1])), $b;\n          $b = self.$partition_path(jail), $a = Opal.to_ary($b), (jail_segments = ($a[0] == null ? nil : $a[0])), (jail_root = ($a[1] == null ? nil : $a[1])), $b;\n          if ($truthy(start_root['$!='](jail_root))) {\n            if ($truthy(opts.$fetch(\"recover\", true))) {\n              \n              self.$logger().$warn(\"\" + \"start path for \" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" is outside of jail root; recovering automatically\");\n              start_segments = jail_segments;\n              recheck = false;\n            } else {\n              self.$raise($$$('::', 'SecurityError'), \"\" + \"start path for \" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" \" + (start) + \" refers to location outside jail root: \" + (jail) + \" (disallowed in safe mode)\")\n            }};\n        } else {\n          $b = self.$partition_path(start), $a = Opal.to_ary($b), (start_segments = ($a[0] == null ? nil : $a[0])), (jail_root = ($a[1] == null ? nil : $a[1])), $b\n        };\n        if ($truthy((resolved_segments = $rb_plus(start_segments, target_segments))['$include?']($$($nesting, 'DOT_DOT')))) {\n          \n          $a = [resolved_segments, []], (unresolved_segments = $a[0]), (resolved_segments = $a[1]), $a;\n          if ($truthy(jail)) {\n            \n            if ($truthy(jail_segments)) {\n            } else {\n              $b = self.$partition_path(jail), $a = Opal.to_ary($b), (jail_segments = ($a[0] == null ? nil : $a[0])), $b\n            };\n            warned = false;\n            $send(unresolved_segments, 'each', [], ($$14 = function(segment){var self = $$14.$$s || this, $c;\n\n            \n              \n              if (segment == null) {\n                segment = nil;\n              };\n              if (segment['$==']($$($nesting, 'DOT_DOT'))) {\n                if ($truthy($rb_gt(resolved_segments.$size(), jail_segments.$size()))) {\n                  return resolved_segments.$pop()\n                } else if ($truthy(opts.$fetch(\"recover\", true))) {\n                  if ($truthy(warned)) {\n                    return nil\n                  } else {\n                    \n                    self.$logger().$warn(\"\" + (($truthy($c = opts['$[]'](\"target_name\")) ? $c : \"path\")) + \" has illegal reference to ancestor of jail; recovering automatically\");\n                    return (warned = true);\n                  }\n                } else {\n                  return self.$raise($$$('::', 'SecurityError'), \"\" + (($truthy($c = opts['$[]'](\"target_name\")) ? $c : \"path\")) + \" \" + (target) + \" refers to location outside jail: \" + (jail) + \" (disallowed in safe mode)\")\n                }\n              } else {\n                return resolved_segments['$<<'](segment)\n              };}, $$14.$$s = self, $$14.$$arity = 1, $$14));\n          } else {\n            $send(unresolved_segments, 'each', [], ($$15 = function(segment){var self = $$15.$$s || this;\n\n            \n              \n              if (segment == null) {\n                segment = nil;\n              };\n              if (segment['$==']($$($nesting, 'DOT_DOT'))) {\n                return resolved_segments.$pop()\n              } else {\n                return resolved_segments['$<<'](segment)\n              };}, $$15.$$s = self, $$15.$$arity = 1, $$15))\n          };};\n        if ($truthy(recheck)) {\n          \n          target_path = self.$join_path(resolved_segments, jail_root);\n          if ($truthy(self['$descends_from?'](target_path, jail))) {\n            return target_path\n          } else if ($truthy(opts.$fetch(\"recover\", true))) {\n            \n            self.$logger().$warn(\"\" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" is outside of jail; recovering automatically\");\n            if ($truthy(jail_segments)) {\n            } else {\n              $b = self.$partition_path(jail), $a = Opal.to_ary($b), (jail_segments = ($a[0] == null ? nil : $a[0])), $b\n            };\n            return self.$join_path($rb_plus(jail_segments, target_segments), jail_root);\n          } else {\n            return self.$raise($$$('::', 'SecurityError'), \"\" + (($truthy($a = opts['$[]'](\"target_name\")) ? $a : \"path\")) + \" \" + (target) + \" is outside of jail: \" + (jail) + \" (disallowed in safe mode)\")\n          };\n        } else {\n          return self.$join_path(resolved_segments, jail_root)\n        };\n      }, $PathResolver_system_path$13.$$arity = -2);\n      \n      Opal.def(self, '$web_path', $PathResolver_web_path$16 = function $$web_path(target, start) {\n        var $a, $b, $$17, self = this, uri_prefix = nil, target_segments = nil, target_root = nil, resolved_segments = nil, resolved_path = nil;\n\n        \n        \n        if (start == null) {\n          start = nil;\n        };\n        target = self.$posixify(target);\n        start = self.$posixify(start);\n        if ($truthy(($truthy($a = start['$nil_or_empty?']()) ? $a : self['$web_root?'](target)))) {\n        } else {\n          $b = self.$extract_uri_prefix(\"\" + (start) + ((function() {if ($truthy(start['$end_with?']($$($nesting, 'SLASH')))) {\n            return \"\"\n          } else {\n            return $$($nesting, 'SLASH')\n          }; return nil; })()) + (target)), $a = Opal.to_ary($b), (target = ($a[0] == null ? nil : $a[0])), (uri_prefix = ($a[1] == null ? nil : $a[1])), $b\n        };\n        $b = self.$partition_path(target, true), $a = Opal.to_ary($b), (target_segments = ($a[0] == null ? nil : $a[0])), (target_root = ($a[1] == null ? nil : $a[1])), $b;\n        resolved_segments = [];\n        $send(target_segments, 'each', [], ($$17 = function(segment){var self = $$17.$$s || this, $c;\n\n        \n          \n          if (segment == null) {\n            segment = nil;\n          };\n          if (segment['$==']($$($nesting, 'DOT_DOT'))) {\n            if ($truthy(resolved_segments['$empty?']())) {\n              if ($truthy(($truthy($c = target_root) ? target_root['$!=']($$($nesting, 'DOT_SLASH')) : $c))) {\n                return nil\n              } else {\n                return resolved_segments['$<<'](segment)\n              }\n            } else if (resolved_segments['$[]'](-1)['$==']($$($nesting, 'DOT_DOT'))) {\n              return resolved_segments['$<<'](segment)\n            } else {\n              return resolved_segments.$pop()\n            }\n          } else {\n            return resolved_segments['$<<'](segment)\n          };}, $$17.$$s = self, $$17.$$arity = 1, $$17));\n        if ($truthy((resolved_path = self.$join_path(resolved_segments, target_root))['$include?'](\" \"))) {\n          resolved_path = resolved_path.$gsub(\" \", \"%20\")};\n        if ($truthy(uri_prefix)) {\n          return \"\" + (uri_prefix) + (resolved_path)\n        } else {\n          return resolved_path\n        };\n      }, $PathResolver_web_path$16.$$arity = -2);\n      self.$private();\n      return (Opal.def(self, '$extract_uri_prefix', $PathResolver_extract_uri_prefix$18 = function $$extract_uri_prefix(str) {\n        var $a, self = this;\n\n        if ($truthy(($truthy($a = str['$include?'](\":\")) ? $$($nesting, 'UriSniffRx')['$=~'](str) : $a))) {\n          return [str.$slice((($a = $gvars['~']) === nil ? nil : $a['$[]'](0)).$length(), str.$length()), (($a = $gvars['~']) === nil ? nil : $a['$[]'](0))]\n        } else {\n          return str\n        }\n      }, $PathResolver_extract_uri_prefix$18.$$arity = 1), nil) && 'extract_uri_prefix';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/reader\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send, $gvars = Opal.gvars, $hash = Opal.hash;\n\n  Opal.add_stubs(['$include', '$attr_reader', '$+', '$attr_accessor', '$!', '$===', '$split', '$file', '$dir', '$dirname', '$path', '$basename', '$lineno', '$reverse', '$prepare_lines', '$empty?', '$nil_or_empty?', '$peek_line', '$>', '$slice', '$[]', '$length', '$process_line', '$times', '$shift', '$read_line', '$<<', '$-', '$unshift_all', '$has_more_lines?', '$join', '$read_lines', '$unshift', '$start_with?', '$==', '$*', '$read_lines_until', '$size', '$clear', '$cursor', '$[]=', '$!=', '$fetch', '$cursor_at_mark', '$warn', '$logger', '$message_with_context', '$pop', '$push', '$respond_to?', '$reverse_each', '$new', '$tap', '$each', '$instance_variables', '$instance_variable_get', '$drop', '$instance_variable_set', '$class', '$object_id', '$inspect', '$private', '$prepare_source_array', '$prepare_source_string', '$chomp', '$valid_encoding?', '$to_s', '$raise', '$to_i', '$attributes', '$catalog', '$pop_include', '$parse', '$path=', '$dup', '$end_with?', '$keys', '$rindex', '$rootname', '$key?', '$attr', '$reverse!', '$>=', '$nil?', '$extensions?', '$include_processors?', '$extensions', '$include_processors', '$map', '$skip_front_matter!', '$adjust_indentation!', '$include?', '$=~', '$preprocess_conditional_directive', '$preprocess_include_directive', '$downcase', '$error', '$none?', '$any?', '$all?', '$strip', '$send', '$resolve_expr_val', '$replace_next_line', '$rstrip', '$sub_attributes', '$attribute_missing', '$info', '$parse_attributes', '$find', '$handles?', '$instance', '$process_method', '$safe', '$resolve_include_path', '$method', '$split_delimited_value', '$partition', '$<', '$to_a', '$uniq', '$sort', '$call', '$each_line', '$infinite?', '$push_include', '$delete', '$first', '$values', '$value?', '$create_include_cursor', '$delete_at', '$read', '$uriish?', '$attr?', '$require_library', '$normalize_system_path', '$file?', '$relative_path', '$path_resolver', '$base_dir', '$to_f']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Reader');\n\n      var $nesting = [self].concat($parent_nesting), $Reader_initialize$4, $Reader_has_more_lines$ques$5, $Reader_empty$ques$6, $Reader_next_line_empty$ques$7, $Reader_peek_line$8, $Reader_peek_lines$9, $Reader_read_line$11, $Reader_read_lines$12, $Reader_read$13, $Reader_advance$14, $Reader_unshift_line$15, $Reader_unshift_lines$16, $Reader_replace_next_line$17, $Reader_skip_blank_lines$18, $Reader_skip_comment_lines$19, $Reader_skip_line_comments$20, $Reader_terminate$21, $Reader_read_lines_until$22, $Reader_shift$23, $Reader_unshift$24, $Reader_unshift_all$25, $Reader_unshift_all$27, $Reader_cursor$28, $Reader_cursor_at_line$29, $Reader_cursor_at_mark$30, $Reader_cursor_before_mark$31, $Reader_cursor_at_prev_line$32, $Reader_mark$33, $Reader_line_info$34, $Reader_lines$35, $Reader_string$36, $Reader_source$37, $Reader_save$38, $Reader_restore_save$41, $Reader_discard_save$43, $Reader_to_s$44, $Reader_prepare_lines$45, $Reader_process_line$46;\n\n      self.$$prototype.file = self.$$prototype.lines = self.$$prototype.look_ahead = self.$$prototype.unescape_next_line = self.$$prototype.lineno = self.$$prototype.process_lines = self.$$prototype.dir = self.$$prototype.path = self.$$prototype.mark = self.$$prototype.source_lines = self.$$prototype.saved = nil;\n      \n      self.$include($$($nesting, 'Logging'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Cursor');\n\n        var $nesting = [self].concat($parent_nesting), $Cursor_initialize$1, $Cursor_advance$2, $Cursor_line_info$3;\n\n        self.$$prototype.lineno = self.$$prototype.path = nil;\n        \n        self.$attr_reader(\"file\", \"dir\", \"path\", \"lineno\");\n        \n        Opal.def(self, '$initialize', $Cursor_initialize$1 = function $$initialize(file, dir, path, lineno) {\n          var $a, self = this;\n\n          \n          \n          if (dir == null) {\n            dir = nil;\n          };\n          \n          if (path == null) {\n            path = nil;\n          };\n          \n          if (lineno == null) {\n            lineno = 1;\n          };\n          return $a = [file, dir, path, lineno], (self.file = $a[0]), (self.dir = $a[1]), (self.path = $a[2]), (self.lineno = $a[3]), $a;\n        }, $Cursor_initialize$1.$$arity = -2);\n        \n        Opal.def(self, '$advance', $Cursor_advance$2 = function $$advance(num) {\n          var self = this;\n\n          return (self.lineno = $rb_plus(self.lineno, num))\n        }, $Cursor_advance$2.$$arity = 1);\n        \n        Opal.def(self, '$line_info', $Cursor_line_info$3 = function $$line_info() {\n          var self = this;\n\n          return \"\" + (self.path) + \": line \" + (self.lineno)\n        }, $Cursor_line_info$3.$$arity = 0);\n        return Opal.alias(self, \"to_s\", \"line_info\");\n      })($nesting[0], null, $nesting);\n      self.$attr_reader(\"file\");\n      self.$attr_reader(\"dir\");\n      self.$attr_reader(\"path\");\n      self.$attr_reader(\"lineno\");\n      self.$attr_reader(\"source_lines\");\n      self.$attr_accessor(\"process_lines\");\n      self.$attr_accessor(\"unterminated\");\n      \n      Opal.def(self, '$initialize', $Reader_initialize$4 = function $$initialize(data, cursor, opts) {\n        var $a, $b, self = this;\n\n        \n        \n        if (data == null) {\n          data = nil;\n        };\n        \n        if (cursor == null) {\n          cursor = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy(cursor['$!']())) {\n          \n          self.file = nil;\n          self.dir = \".\";\n          self.path = \"<stdin>\";\n          self.lineno = 1;\n        } else if ($truthy($$$('::', 'String')['$==='](cursor))) {\n          \n          self.file = cursor;\n          $b = $$$('::', 'File').$split(self.file), $a = Opal.to_ary($b), (self.dir = ($a[0] == null ? nil : $a[0])), (self.path = ($a[1] == null ? nil : $a[1])), $b;\n          self.lineno = 1;\n        } else {\n          \n          if ($truthy((self.file = cursor.$file()))) {\n            \n            self.dir = ($truthy($a = cursor.$dir()) ? $a : $$$('::', 'File').$dirname(self.file));\n            self.path = ($truthy($a = cursor.$path()) ? $a : $$$('::', 'File').$basename(self.file));\n          } else {\n            \n            self.dir = ($truthy($a = cursor.$dir()) ? $a : \".\");\n            self.path = ($truthy($a = cursor.$path()) ? $a : \"<stdin>\");\n          };\n          self.lineno = ($truthy($a = cursor.$lineno()) ? $a : 1);\n        };\n        self.lines = (self.source_lines = self.$prepare_lines(data, opts)).$reverse();\n        self.mark = nil;\n        self.look_ahead = 0;\n        self.process_lines = true;\n        self.unescape_next_line = false;\n        self.unterminated = nil;\n        return (self.saved = nil);\n      }, $Reader_initialize$4.$$arity = -1);\n      \n      Opal.def(self, '$has_more_lines?', $Reader_has_more_lines$ques$5 = function() {\n        var self = this;\n\n        if ($truthy(self.lines['$empty?']())) {\n          \n          self.look_ahead = 0;\n          return false;\n        } else {\n          return true\n        }\n      }, $Reader_has_more_lines$ques$5.$$arity = 0);\n      \n      Opal.def(self, '$empty?', $Reader_empty$ques$6 = function() {\n        var self = this;\n\n        if ($truthy(self.lines['$empty?']())) {\n          \n          self.look_ahead = 0;\n          return true;\n        } else {\n          return false\n        }\n      }, $Reader_empty$ques$6.$$arity = 0);\n      Opal.alias(self, \"eof?\", \"empty?\");\n      \n      Opal.def(self, '$next_line_empty?', $Reader_next_line_empty$ques$7 = function() {\n        var self = this;\n\n        return self.$peek_line()['$nil_or_empty?']()\n      }, $Reader_next_line_empty$ques$7.$$arity = 0);\n      \n      Opal.def(self, '$peek_line', $Reader_peek_line$8 = function $$peek_line(direct) {\n        var $a, self = this, line = nil;\n\n        \n        \n        if (direct == null) {\n          direct = false;\n        };\n        if ($truthy(($truthy($a = direct) ? $a : $rb_gt(self.look_ahead, 0)))) {\n          if ($truthy(self.unescape_next_line)) {\n            \n            return (line = self.lines['$[]'](-1)).$slice(1, line.$length());\n          } else {\n            return self.lines['$[]'](-1)\n          }\n        } else if ($truthy(self.lines['$empty?']())) {\n          \n          self.look_ahead = 0;\n          return nil;\n        } else {\n          return ($truthy($a = self.$process_line(self.lines['$[]'](-1))) ? $a : self.$peek_line())\n        };\n      }, $Reader_peek_line$8.$$arity = -1);\n      \n      Opal.def(self, '$peek_lines', $Reader_peek_lines$9 = function $$peek_lines(num, direct) {\n        var $a, $$10, self = this, old_look_ahead = nil, result = nil;\n\n        \n        \n        if (num == null) {\n          num = nil;\n        };\n        \n        if (direct == null) {\n          direct = false;\n        };\n        old_look_ahead = self.look_ahead;\n        result = [];\n        (function(){var $brk = Opal.new_brk(); try {return $send(($truthy($a = num) ? $a : $$($nesting, 'MAX_INT')), 'times', [], ($$10 = function(){var self = $$10.$$s || this, line = nil;\n          if (self.lineno == null) self.lineno = nil;\n\n        if ($truthy((line = (function() {if ($truthy(direct)) {\n            return self.$shift()\n          } else {\n            return self.$read_line()\n          }; return nil; })()))) {\n            return result['$<<'](line)\n          } else {\n            \n            if ($truthy(direct)) {\n              self.lineno = $rb_minus(self.lineno, 1)};\n            \n            Opal.brk(nil, $brk);\n          }}, $$10.$$s = self, $$10.$$brk = $brk, $$10.$$arity = 0, $$10))\n        } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();\n        if ($truthy(result['$empty?']())) {\n        } else {\n          \n          self.$unshift_all(result);\n          if ($truthy(direct)) {\n            self.look_ahead = old_look_ahead};\n        };\n        return result;\n      }, $Reader_peek_lines$9.$$arity = -1);\n      \n      Opal.def(self, '$read_line', $Reader_read_line$11 = function $$read_line() {\n        var $a, self = this;\n\n        if ($truthy(($truthy($a = $rb_gt(self.look_ahead, 0)) ? $a : self['$has_more_lines?']()))) {\n          return self.$shift()\n        } else {\n          return nil\n        }\n      }, $Reader_read_line$11.$$arity = 0);\n      \n      Opal.def(self, '$read_lines', $Reader_read_lines$12 = function $$read_lines() {\n        var $a, self = this, lines = nil;\n\n        \n        lines = [];\n        while ($truthy(self['$has_more_lines?']())) {\n          lines['$<<'](self.$shift())\n        };\n        return lines;\n      }, $Reader_read_lines$12.$$arity = 0);\n      Opal.alias(self, \"readlines\", \"read_lines\");\n      \n      Opal.def(self, '$read', $Reader_read$13 = function $$read() {\n        var self = this;\n\n        return self.$read_lines().$join($$($nesting, 'LF'))\n      }, $Reader_read$13.$$arity = 0);\n      \n      Opal.def(self, '$advance', $Reader_advance$14 = function $$advance() {\n        var self = this;\n\n        if ($truthy(self.$shift())) {\n          return true\n        } else {\n          return false\n        }\n      }, $Reader_advance$14.$$arity = 0);\n      \n      Opal.def(self, '$unshift_line', $Reader_unshift_line$15 = function $$unshift_line(line_to_restore) {\n        var self = this;\n\n        \n        self.$unshift(line_to_restore);\n        return nil;\n      }, $Reader_unshift_line$15.$$arity = 1);\n      Opal.alias(self, \"restore_line\", \"unshift_line\");\n      \n      Opal.def(self, '$unshift_lines', $Reader_unshift_lines$16 = function $$unshift_lines(lines_to_restore) {\n        var self = this;\n\n        return self.$unshift_all(lines_to_restore)\n      }, $Reader_unshift_lines$16.$$arity = 1);\n      Opal.alias(self, \"restore_lines\", \"unshift_lines\");\n      \n      Opal.def(self, '$replace_next_line', $Reader_replace_next_line$17 = function $$replace_next_line(replacement) {\n        var self = this;\n\n        \n        self.$shift();\n        self.$unshift(replacement);\n        return true;\n      }, $Reader_replace_next_line$17.$$arity = 1);\n      Opal.alias(self, \"replace_line\", \"replace_next_line\");\n      \n      Opal.def(self, '$skip_blank_lines', $Reader_skip_blank_lines$18 = function $$skip_blank_lines() {\n        var $a, self = this, num_skipped = nil, next_line = nil;\n\n        \n        if ($truthy(self['$empty?']())) {\n          return nil};\n        num_skipped = 0;\n        while ($truthy((next_line = self.$peek_line()))) {\n          if ($truthy(next_line['$empty?']())) {\n            \n            self.$shift();\n            num_skipped = $rb_plus(num_skipped, 1);\n          } else {\n            return num_skipped\n          }\n        };\n      }, $Reader_skip_blank_lines$18.$$arity = 0);\n      \n      Opal.def(self, '$skip_comment_lines', $Reader_skip_comment_lines$19 = function $$skip_comment_lines() {\n        var $a, $b, self = this, next_line = nil, ll = nil;\n\n        \n        if ($truthy(self['$empty?']())) {\n          return nil};\n        while ($truthy(($truthy($b = (next_line = self.$peek_line())) ? next_line['$empty?']()['$!']() : $b))) {\n          if ($truthy(next_line['$start_with?'](\"//\"))) {\n            if ($truthy(next_line['$start_with?'](\"///\"))) {\n              if ($truthy(($truthy($b = $rb_gt((ll = next_line.$length()), 3)) ? next_line['$==']($rb_times(\"/\", ll)) : $b))) {\n                self.$read_lines_until($hash2([\"terminator\", \"skip_first_line\", \"read_last_line\", \"skip_processing\", \"context\"], {\"terminator\": next_line, \"skip_first_line\": true, \"read_last_line\": true, \"skip_processing\": true, \"context\": \"comment\"}))\n              } else {\n                break;\n              }\n            } else {\n              self.$shift()\n            }\n          } else {\n            break;\n          }\n        };\n        return nil;\n      }, $Reader_skip_comment_lines$19.$$arity = 0);\n      \n      Opal.def(self, '$skip_line_comments', $Reader_skip_line_comments$20 = function $$skip_line_comments() {\n        var $a, $b, self = this, comment_lines = nil, next_line = nil;\n\n        \n        if ($truthy(self['$empty?']())) {\n          return []};\n        comment_lines = [];\n        while ($truthy(($truthy($b = (next_line = self.$peek_line())) ? next_line['$empty?']()['$!']() : $b))) {\n          if ($truthy(next_line['$start_with?'](\"//\"))) {\n            comment_lines['$<<'](self.$shift())\n          } else {\n            break;\n          }\n        };\n        return comment_lines;\n      }, $Reader_skip_line_comments$20.$$arity = 0);\n      \n      Opal.def(self, '$terminate', $Reader_terminate$21 = function $$terminate() {\n        var self = this;\n\n        \n        self.lineno = $rb_plus(self.lineno, self.lines.$size());\n        self.lines.$clear();\n        self.look_ahead = 0;\n        return nil;\n      }, $Reader_terminate$21.$$arity = 0);\n      \n      Opal.def(self, '$read_lines_until', $Reader_read_lines_until$22 = function $$read_lines_until(options) {\n        var $a, $b, $c, $d, $e, $f, $iter = $Reader_read_lines_until$22.$$p, $yield = $iter || nil, self = this, result = nil, restore_process_lines = nil, terminator = nil, start_cursor = nil, break_on_blank_lines = nil, break_on_list_continuation = nil, skip_comments = nil, line_read = nil, line_restored = nil, line = nil, $writer = nil, context = nil;\n\n        if ($iter) $Reader_read_lines_until$22.$$p = null;\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        result = [];\n        if ($truthy(($truthy($a = self.process_lines) ? options['$[]'](\"skip_processing\") : $a))) {\n          \n          self.process_lines = false;\n          restore_process_lines = true;};\n        if ($truthy((terminator = options['$[]'](\"terminator\")))) {\n          \n          start_cursor = ($truthy($a = options['$[]'](\"cursor\")) ? $a : self.$cursor());\n          break_on_blank_lines = false;\n          break_on_list_continuation = false;\n        } else {\n          \n          break_on_blank_lines = options['$[]'](\"break_on_blank_lines\");\n          break_on_list_continuation = options['$[]'](\"break_on_list_continuation\");\n        };\n        skip_comments = options['$[]'](\"skip_line_comments\");\n        line_read = (line_restored = nil);\n        if ($truthy(options['$[]'](\"skip_first_line\"))) {\n          self.$shift()};\n        while ($truthy((line = self.$read_line()))) {\n          \n          if ($truthy((function() {if ($truthy(terminator)) {\n            return line['$=='](terminator)\n          } else {\n            \n            return ($truthy($b = ($truthy($c = ($truthy($d = break_on_blank_lines) ? line['$empty?']() : $d)) ? $c : ($truthy($d = ($truthy($e = ($truthy($f = break_on_list_continuation) ? line_read : $f)) ? line['$==']($$($nesting, 'LIST_CONTINUATION')) : $e)) ? (($writer = [\"preserve_last_line\", true]), $send(options, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]) : $d))) ? $b : (($c = ($yield !== nil)) ? Opal.yield1($yield, line) : ($yield !== nil)));\n          }; return nil; })())) {\n            \n            if ($truthy(options['$[]'](\"read_last_line\"))) {\n              result['$<<'](line)};\n            if ($truthy(options['$[]'](\"preserve_last_line\"))) {\n              \n              self.$unshift(line);\n              line_restored = true;};\n            break;;};\n          if ($truthy(($truthy($b = ($truthy($c = skip_comments) ? line['$start_with?'](\"//\") : $c)) ? line['$start_with?'](\"///\")['$!']() : $b))) {\n          } else {\n            \n            result['$<<'](line);\n            line_read = true;\n          };\n        };\n        if ($truthy(restore_process_lines)) {\n          \n          self.process_lines = true;\n          if ($truthy(($truthy($a = line_restored) ? terminator['$!']() : $a))) {\n            self.look_ahead = $rb_minus(self.look_ahead, 1)};};\n        if ($truthy(($truthy($a = ($truthy($b = terminator) ? terminator['$!='](line) : $b)) ? (context = options.$fetch(\"context\", terminator)) : $a))) {\n          \n          if (start_cursor['$=='](\"at_mark\")) {\n            start_cursor = self.$cursor_at_mark()};\n          self.$logger().$warn(self.$message_with_context(\"\" + \"unterminated \" + (context) + \" block\", $hash2([\"source_location\"], {\"source_location\": start_cursor})));\n          self.unterminated = true;};\n        return result;\n      }, $Reader_read_lines_until$22.$$arity = -1);\n      \n      Opal.def(self, '$shift', $Reader_shift$23 = function $$shift() {\n        var self = this;\n\n        \n        self.lineno = $rb_plus(self.lineno, 1);\n        if (self.look_ahead['$=='](0)) {\n        } else {\n          self.look_ahead = $rb_minus(self.look_ahead, 1)\n        };\n        return self.lines.$pop();\n      }, $Reader_shift$23.$$arity = 0);\n      \n      Opal.def(self, '$unshift', $Reader_unshift$24 = function $$unshift(line) {\n        var self = this;\n\n        \n        self.lineno = $rb_minus(self.lineno, 1);\n        self.look_ahead = $rb_plus(self.look_ahead, 1);\n        self.lines.$push(line);\n        return nil;\n      }, $Reader_unshift$24.$$arity = 1);\n      if ($$$('::', 'RUBY_ENGINE')['$=='](\"jruby\")) {\n        \n        Opal.def(self, '$unshift_all', $Reader_unshift_all$25 = function $$unshift_all(lines_to_restore) {\n          var $$26, self = this;\n\n          \n          self.lineno = $rb_minus(self.lineno, lines_to_restore.$size());\n          self.look_ahead = $rb_plus(self.look_ahead, lines_to_restore.$size());\n          if ($truthy(lines_to_restore['$respond_to?'](\"reverse\"))) {\n            $send(self.lines, 'push', Opal.to_a(lines_to_restore.$reverse()))\n          } else {\n            $send(lines_to_restore, 'reverse_each', [], ($$26 = function(it){var self = $$26.$$s || this;\n              if (self.lines == null) self.lines = nil;\n\n            \n              \n              if (it == null) {\n                it = nil;\n              };\n              return self.lines.$push(it);}, $$26.$$s = self, $$26.$$arity = 1, $$26))\n          };\n          return nil;\n        }, $Reader_unshift_all$25.$$arity = 1)\n      } else {\n        \n        Opal.def(self, '$unshift_all', $Reader_unshift_all$27 = function $$unshift_all(lines_to_restore) {\n          var self = this;\n\n          \n          self.lineno = $rb_minus(self.lineno, lines_to_restore.$size());\n          self.look_ahead = $rb_plus(self.look_ahead, lines_to_restore.$size());\n          $send(self.lines, 'push', Opal.to_a(lines_to_restore.$reverse()));\n          return nil;\n        }, $Reader_unshift_all$27.$$arity = 1)\n      };\n      \n      Opal.def(self, '$cursor', $Reader_cursor$28 = function $$cursor() {\n        var self = this;\n\n        return $$($nesting, 'Cursor').$new(self.file, self.dir, self.path, self.lineno)\n      }, $Reader_cursor$28.$$arity = 0);\n      \n      Opal.def(self, '$cursor_at_line', $Reader_cursor_at_line$29 = function $$cursor_at_line(lineno) {\n        var self = this;\n\n        return $$($nesting, 'Cursor').$new(self.file, self.dir, self.path, lineno)\n      }, $Reader_cursor_at_line$29.$$arity = 1);\n      \n      Opal.def(self, '$cursor_at_mark', $Reader_cursor_at_mark$30 = function $$cursor_at_mark() {\n        var self = this;\n\n        if ($truthy(self.mark)) {\n          return $send($$($nesting, 'Cursor'), 'new', Opal.to_a(self.mark))\n        } else {\n          return self.$cursor()\n        }\n      }, $Reader_cursor_at_mark$30.$$arity = 0);\n      \n      Opal.def(self, '$cursor_before_mark', $Reader_cursor_before_mark$31 = function $$cursor_before_mark() {\n        var $a, $b, self = this, m_file = nil, m_dir = nil, m_path = nil, m_lineno = nil;\n\n        if ($truthy(self.mark)) {\n          \n          $b = self.mark, $a = Opal.to_ary($b), (m_file = ($a[0] == null ? nil : $a[0])), (m_dir = ($a[1] == null ? nil : $a[1])), (m_path = ($a[2] == null ? nil : $a[2])), (m_lineno = ($a[3] == null ? nil : $a[3])), $b;\n          return $$($nesting, 'Cursor').$new(m_file, m_dir, m_path, $rb_minus(m_lineno, 1));\n        } else {\n          return $$($nesting, 'Cursor').$new(self.file, self.dir, self.path, $rb_minus(self.lineno, 1))\n        }\n      }, $Reader_cursor_before_mark$31.$$arity = 0);\n      \n      Opal.def(self, '$cursor_at_prev_line', $Reader_cursor_at_prev_line$32 = function $$cursor_at_prev_line() {\n        var self = this;\n\n        return $$($nesting, 'Cursor').$new(self.file, self.dir, self.path, $rb_minus(self.lineno, 1))\n      }, $Reader_cursor_at_prev_line$32.$$arity = 0);\n      \n      Opal.def(self, '$mark', $Reader_mark$33 = function $$mark() {\n        var self = this;\n\n        return (self.mark = [self.file, self.dir, self.path, self.lineno])\n      }, $Reader_mark$33.$$arity = 0);\n      \n      Opal.def(self, '$line_info', $Reader_line_info$34 = function $$line_info() {\n        var self = this;\n\n        return \"\" + (self.path) + \": line \" + (self.lineno)\n      }, $Reader_line_info$34.$$arity = 0);\n      \n      Opal.def(self, '$lines', $Reader_lines$35 = function $$lines() {\n        var self = this;\n\n        return self.lines.$reverse()\n      }, $Reader_lines$35.$$arity = 0);\n      \n      Opal.def(self, '$string', $Reader_string$36 = function $$string() {\n        var self = this;\n\n        return self.lines.$reverse().$join($$($nesting, 'LF'))\n      }, $Reader_string$36.$$arity = 0);\n      \n      Opal.def(self, '$source', $Reader_source$37 = function $$source() {\n        var self = this;\n\n        return self.source_lines.$join($$($nesting, 'LF'))\n      }, $Reader_source$37.$$arity = 0);\n      \n      Opal.def(self, '$save', $Reader_save$38 = function $$save() {\n        var $$39, self = this;\n\n        \n        self.saved = $send($hash2([], {}), 'tap', [], ($$39 = function(accum){var self = $$39.$$s || this, $$40;\n\n        \n          \n          if (accum == null) {\n            accum = nil;\n          };\n          return $send(self.$instance_variables(), 'each', [], ($$40 = function(name){var self = $$40.$$s || this, $a, $writer = nil, val = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            if ($truthy(($truthy($a = name['$=='](\"@saved\")) ? $a : name['$=='](\"@source_lines\")))) {\n              return nil\n            } else {\n              \n              $writer = [name, (function() {if ($truthy($$$('::', 'Array')['$===']((val = self.$instance_variable_get(name))))) {\n                \n                return val.$drop(0);\n              } else {\n                return val\n              }; return nil; })()];\n              $send(accum, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];\n            };}, $$40.$$s = self, $$40.$$arity = 1, $$40));}, $$39.$$s = self, $$39.$$arity = 1, $$39));\n        return nil;\n      }, $Reader_save$38.$$arity = 0);\n      \n      Opal.def(self, '$restore_save', $Reader_restore_save$41 = function $$restore_save() {\n        var $$42, self = this;\n\n        if ($truthy(self.saved)) {\n          \n          $send(self.saved, 'each', [], ($$42 = function(name, val){var self = $$42.$$s || this;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            \n            if (val == null) {\n              val = nil;\n            };\n            return self.$instance_variable_set(name, val);}, $$42.$$s = self, $$42.$$arity = 2, $$42));\n          return (self.saved = nil);\n        } else {\n          return nil\n        }\n      }, $Reader_restore_save$41.$$arity = 0);\n      \n      Opal.def(self, '$discard_save', $Reader_discard_save$43 = function $$discard_save() {\n        var self = this;\n\n        return (self.saved = nil)\n      }, $Reader_discard_save$43.$$arity = 0);\n      \n      Opal.def(self, '$to_s', $Reader_to_s$44 = function $$to_s() {\n        var self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {path: \" + (self.path.$inspect()) + \", line: \" + (self.lineno) + \"}>\"\n      }, $Reader_to_s$44.$$arity = 0);\n      self.$private();\n      \n      Opal.def(self, '$prepare_lines', $Reader_prepare_lines$45 = function $$prepare_lines(data, opts) {\n        var self = this, normalize = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        try {\n          if ($truthy((normalize = opts['$[]'](\"normalize\")))) {\n            if ($truthy($$$('::', 'Array')['$==='](data))) {\n              \n              return $$($nesting, 'Helpers').$prepare_source_array(data, normalize['$!='](\"chomp\"));\n            } else {\n              \n              return $$($nesting, 'Helpers').$prepare_source_string(data, normalize['$!='](\"chomp\"));\n            }\n          } else if ($truthy($$$('::', 'Array')['$==='](data))) {\n            return data.$drop(0)\n          } else if ($truthy(data)) {\n            return data.$chomp().$split($$($nesting, 'LF'), -1)\n          } else {\n            return []\n          }\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n            try {\n              if ($truthy((function() {if ($truthy($$$('::', 'Array')['$==='](data))) {\n                return data.$join()\n              } else {\n                return data.$to_s()\n              }; return nil; })()['$valid_encoding?']())) {\n                return self.$raise()\n              } else {\n                return self.$raise($$$('::', 'ArgumentError'), \"source is either binary or contains invalid Unicode data\")\n              }\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      }, $Reader_prepare_lines$45.$$arity = -2);\n      return (Opal.def(self, '$process_line', $Reader_process_line$46 = function $$process_line(line) {\n        var self = this;\n\n        \n        if ($truthy(self.process_lines)) {\n          self.look_ahead = $rb_plus(self.look_ahead, 1)};\n        return line;\n      }, $Reader_process_line$46.$$arity = 1), nil) && 'process_line';\n    })($nesting[0], null, $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'PreprocessorReader');\n\n      var $nesting = [self].concat($parent_nesting), $PreprocessorReader_initialize$47, $PreprocessorReader_has_more_lines$ques$48, $PreprocessorReader_empty$ques$49, $PreprocessorReader_peek_line$50, $PreprocessorReader_push_include$51, $PreprocessorReader_include_depth$52, $PreprocessorReader_exceeds_max_depth$ques$53, $PreprocessorReader_shift$54, $PreprocessorReader_include_processors$ques$55, $PreprocessorReader_create_include_cursor$56, $PreprocessorReader_to_s$57, $PreprocessorReader_prepare_lines$59, $PreprocessorReader_process_line$60, $PreprocessorReader_preprocess_conditional_directive$61, $PreprocessorReader_preprocess_include_directive$66, $PreprocessorReader_resolve_include_path$79, $PreprocessorReader_pop_include$81, $PreprocessorReader_split_delimited_value$82, $PreprocessorReader_skip_front_matter$excl$83, $PreprocessorReader_resolve_expr_val$84;\n\n      self.$$prototype.include_stack = self.$$prototype.lines = self.$$prototype.file = self.$$prototype.dir = self.$$prototype.path = self.$$prototype.lineno = self.$$prototype.maxdepth = self.$$prototype.process_lines = self.$$prototype.includes = self.$$prototype.document = self.$$prototype.unescape_next_line = self.$$prototype.include_processor_extensions = self.$$prototype.look_ahead = self.$$prototype.skipping = self.$$prototype.conditional_stack = nil;\n      \n      self.$attr_reader(\"include_stack\");\n      \n      Opal.def(self, '$initialize', $PreprocessorReader_initialize$47 = function $$initialize(document, data, cursor, opts) {\n        var $a, $iter = $PreprocessorReader_initialize$47.$$p, $yield = $iter || nil, self = this, default_include_depth = nil;\n\n        if ($iter) $PreprocessorReader_initialize$47.$$p = null;\n        \n        \n        if (data == null) {\n          data = nil;\n        };\n        \n        if (cursor == null) {\n          cursor = nil;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        self.document = document;\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $PreprocessorReader_initialize$47, false), [data, cursor, opts], null);\n        if ($truthy($rb_gt((default_include_depth = ($truthy($a = document.$attributes()['$[]'](\"max-include-depth\")) ? $a : 64).$to_i()), 0))) {\n          self.maxdepth = $hash2([\"abs\", \"curr\", \"rel\"], {\"abs\": default_include_depth, \"curr\": default_include_depth, \"rel\": default_include_depth})\n        } else {\n          self.maxdepth = nil\n        };\n        self.include_stack = [];\n        self.includes = document.$catalog()['$[]'](\"includes\");\n        self.skipping = false;\n        self.conditional_stack = [];\n        return (self.include_processor_extensions = nil);\n      }, $PreprocessorReader_initialize$47.$$arity = -2);\n      \n      Opal.def(self, '$has_more_lines?', $PreprocessorReader_has_more_lines$ques$48 = function() {\n        var self = this;\n\n        if ($truthy(self.$peek_line())) {\n          return true\n        } else {\n          return false\n        }\n      }, $PreprocessorReader_has_more_lines$ques$48.$$arity = 0);\n      \n      Opal.def(self, '$empty?', $PreprocessorReader_empty$ques$49 = function() {\n        var self = this;\n\n        if ($truthy(self.$peek_line())) {\n          return false\n        } else {\n          return true\n        }\n      }, $PreprocessorReader_empty$ques$49.$$arity = 0);\n      Opal.alias(self, \"eof?\", \"empty?\");\n      \n      Opal.def(self, '$peek_line', $PreprocessorReader_peek_line$50 = function $$peek_line(direct) {\n        var $iter = $PreprocessorReader_peek_line$50.$$p, $yield = $iter || nil, self = this, line = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $PreprocessorReader_peek_line$50.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (direct == null) {\n          direct = false;\n        };\n        if ($truthy((line = $send(self, Opal.find_super_dispatcher(self, 'peek_line', $PreprocessorReader_peek_line$50, false), $zuper, $iter)))) {\n          return line\n        } else if ($truthy(self.include_stack['$empty?']())) {\n          return nil\n        } else {\n          \n          self.$pop_include();\n          return self.$peek_line(direct);\n        };\n      }, $PreprocessorReader_peek_line$50.$$arity = -1);\n      \n      Opal.def(self, '$push_include', $PreprocessorReader_push_include$51 = function $$push_include(data, file, path, lineno, attributes) {\n        var $a, self = this, $writer = nil, dir = nil, rel_maxdepth = nil, curr_maxdepth = nil, abs_maxdepth = nil, leveloffset = nil;\n\n        \n        \n        if (file == null) {\n          file = nil;\n        };\n        \n        if (path == null) {\n          path = nil;\n        };\n        \n        if (lineno == null) {\n          lineno = 1;\n        };\n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        self.include_stack['$<<']([self.lines, self.file, self.dir, self.path, self.lineno, self.maxdepth, self.process_lines]);\n        if ($truthy((self.file = file))) {\n          \n          if ($truthy($$$('::', 'String')['$==='](file))) {\n            self.dir = $$$('::', 'File').$dirname(file)\n          } else if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n            self.dir = $$$('::', 'URI').$parse($$$('::', 'File').$dirname((file = file.$to_s())))\n          } else {\n            \n            \n            $writer = [(function() {if ((dir = $$$('::', 'File').$dirname(file.$path()))['$=='](\"/\")) {\n              return \"\"\n            } else {\n              return dir\n            }; return nil; })()];\n            $send((self.dir = file.$dup()), 'path=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            file = file.$to_s();\n          };\n          self.path = (path = ($truthy($a = path) ? $a : $$$('::', 'File').$basename(file)));\n          if ($truthy((self.process_lines = $send(file, 'end_with?', Opal.to_a($$($nesting, 'ASCIIDOC_EXTENSIONS').$keys()))))) {\n            \n            $writer = [path.$slice(0, path.$rindex(\".\")), (function() {if ($truthy(attributes['$[]'](\"partial-option\"))) {\n              return nil\n            } else {\n              return true\n            }; return nil; })()];\n            $send(self.includes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n        } else {\n          \n          self.dir = \".\";\n          self.process_lines = true;\n          if ($truthy((self.path = path))) {\n            \n            $writer = [$$($nesting, 'Helpers').$rootname(path), (function() {if ($truthy(attributes['$[]'](\"partial-option\"))) {\n              return nil\n            } else {\n              return true\n            }; return nil; })()];\n            $send(self.includes, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            self.path = \"<stdin>\"\n          };\n        };\n        self.lineno = lineno;\n        if ($truthy(($truthy($a = self.maxdepth) ? attributes['$key?'](\"depth\") : $a))) {\n          if ($truthy($rb_gt((rel_maxdepth = attributes['$[]'](\"depth\").$to_i()), 0))) {\n            \n            if ($truthy($rb_gt((curr_maxdepth = $rb_plus(self.include_stack.$size(), rel_maxdepth)), (abs_maxdepth = self.maxdepth['$[]'](\"abs\"))))) {\n              curr_maxdepth = (rel_maxdepth = abs_maxdepth)};\n            self.maxdepth = $hash2([\"abs\", \"curr\", \"rel\"], {\"abs\": abs_maxdepth, \"curr\": curr_maxdepth, \"rel\": rel_maxdepth});\n          } else {\n            self.maxdepth = $hash2([\"abs\", \"curr\", \"rel\"], {\"abs\": self.maxdepth['$[]'](\"abs\"), \"curr\": self.include_stack.$size(), \"rel\": 0})\n          }};\n        if ($truthy((self.lines = self.$prepare_lines(data, $hash2([\"normalize\", \"condense\", \"indent\"], {\"normalize\": ($truthy($a = self.process_lines) ? $a : \"chomp\"), \"condense\": false, \"indent\": attributes['$[]'](\"indent\")})))['$empty?']())) {\n          self.$pop_include()\n        } else {\n          \n          if ($truthy(attributes['$key?'](\"leveloffset\"))) {\n            \n            self.lines = $rb_plus($rb_plus([(function() {if ($truthy((leveloffset = self.document.$attr(\"leveloffset\")))) {\n              return \"\" + \":leveloffset: \" + (leveloffset)\n            } else {\n              return \":leveloffset!:\"\n            }; return nil; })(), \"\"], self.lines.$reverse()), [\"\", \"\" + \":leveloffset: \" + (attributes['$[]'](\"leveloffset\"))]);\n            self.lineno = $rb_minus(self.lineno, 2);\n          } else {\n            self.lines['$reverse!']()\n          };\n          self.look_ahead = 0;\n        };\n        return self;\n      }, $PreprocessorReader_push_include$51.$$arity = -2);\n      \n      Opal.def(self, '$include_depth', $PreprocessorReader_include_depth$52 = function $$include_depth() {\n        var self = this;\n\n        return self.include_stack.$size()\n      }, $PreprocessorReader_include_depth$52.$$arity = 0);\n      \n      Opal.def(self, '$exceeds_max_depth?', $PreprocessorReader_exceeds_max_depth$ques$53 = function() {\n        var $a, $b, self = this;\n\n        return ($truthy($a = ($truthy($b = self.maxdepth) ? $rb_ge(self.include_stack.$size(), self.maxdepth['$[]'](\"curr\")) : $b)) ? self.maxdepth['$[]'](\"rel\") : $a)\n      }, $PreprocessorReader_exceeds_max_depth$ques$53.$$arity = 0);\n      Opal.alias(self, \"exceeded_max_depth?\", \"exceeds_max_depth?\");\n      \n      Opal.def(self, '$shift', $PreprocessorReader_shift$54 = function $$shift() {\n        var $iter = $PreprocessorReader_shift$54.$$p, $yield = $iter || nil, self = this, line = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $PreprocessorReader_shift$54.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        if ($truthy(self.unescape_next_line)) {\n          \n          self.unescape_next_line = false;\n          return (line = $send(self, Opal.find_super_dispatcher(self, 'shift', $PreprocessorReader_shift$54, false), $zuper, $iter)).$slice(1, line.$length());\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'shift', $PreprocessorReader_shift$54, false), $zuper, $iter)\n        }\n      }, $PreprocessorReader_shift$54.$$arity = 0);\n      \n      Opal.def(self, '$include_processors?', $PreprocessorReader_include_processors$ques$55 = function() {\n        var $a, self = this;\n\n        if ($truthy(self.include_processor_extensions['$nil?']())) {\n          if ($truthy(($truthy($a = self.document['$extensions?']()) ? self.document.$extensions()['$include_processors?']() : $a))) {\n            return (self.include_processor_extensions = self.document.$extensions().$include_processors())['$!']()['$!']()\n          } else {\n            return (self.include_processor_extensions = false)\n          }\n        } else {\n          return self.include_processor_extensions['$!='](false)\n        }\n      }, $PreprocessorReader_include_processors$ques$55.$$arity = 0);\n      \n      Opal.def(self, '$create_include_cursor', $PreprocessorReader_create_include_cursor$56 = function $$create_include_cursor(file, path, lineno) {\n        var self = this, dir = nil;\n\n        \n        if ($truthy($$$('::', 'String')['$==='](file))) {\n          dir = $$$('::', 'File').$dirname(file)\n        } else if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n          dir = $$$('::', 'File').$dirname((file = file.$to_s()))\n        } else {\n          \n          dir = (function() {if ((dir = $$$('::', 'File').$dirname(file.$path()))['$=='](\"\")) {\n            return \"/\"\n          } else {\n            return dir\n          }; return nil; })();\n          file = file.$to_s();\n        };\n        return $$($nesting, 'Cursor').$new(file, dir, path, lineno);\n      }, $PreprocessorReader_create_include_cursor$56.$$arity = 3);\n      \n      Opal.def(self, '$to_s', $PreprocessorReader_to_s$57 = function $$to_s() {\n        var $$58, self = this;\n\n        return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {path: \" + (self.path.$inspect()) + \", line: \" + (self.lineno) + \", include depth: \" + (self.include_stack.$size()) + \", include stack: [\" + ($send(self.include_stack, 'map', [], ($$58 = function(inc){var self = $$58.$$s || this;\n\n        \n          \n          if (inc == null) {\n            inc = nil;\n          };\n          return inc.$to_s();}, $$58.$$s = self, $$58.$$arity = 1, $$58)).$join(\", \")) + \"]}>\"\n      }, $PreprocessorReader_to_s$57.$$arity = 0);\n      self.$private();\n      \n      Opal.def(self, '$prepare_lines', $PreprocessorReader_prepare_lines$59 = function $$prepare_lines(data, opts) {\n        var $a, $b, $iter = $PreprocessorReader_prepare_lines$59.$$p, $yield = $iter || nil, self = this, result = nil, front_matter = nil, $writer = nil, last = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $PreprocessorReader_prepare_lines$59.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        result = $send(self, Opal.find_super_dispatcher(self, 'prepare_lines', $PreprocessorReader_prepare_lines$59, false), $zuper, $iter);\n        if ($truthy(($truthy($a = ($truthy($b = self.document) ? self.document.$attributes()['$[]'](\"skip-front-matter\") : $b)) ? (front_matter = self['$skip_front_matter!'](result)) : $a))) {\n          \n          $writer = [\"front-matter\", front_matter.$join($$($nesting, 'LF'))];\n          $send(self.document.$attributes(), '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(opts.$fetch(\"condense\", true))) {\n          while ($truthy(($truthy($b = (last = result['$[]'](-1))) ? last['$empty?']() : $b))) {\n            result.$pop()\n          }};\n        if ($truthy(opts['$[]'](\"indent\"))) {\n          $$($nesting, 'Parser')['$adjust_indentation!'](result, opts['$[]'](\"indent\").$to_i(), self.document.$attr(\"tabsize\").$to_i())};\n        return result;\n      }, $PreprocessorReader_prepare_lines$59.$$arity = -2);\n      \n      Opal.def(self, '$process_line', $PreprocessorReader_process_line$60 = function $$process_line(line) {\n        var $a, $b, self = this;\n\n        \n        if ($truthy(self.process_lines)) {\n        } else {\n          return line\n        };\n        if ($truthy(line['$empty?']())) {\n          \n          self.look_ahead = $rb_plus(self.look_ahead, 1);\n          return line;};\n        if ($truthy(($truthy($a = ($truthy($b = line['$end_with?'](\"]\")) ? line['$start_with?'](\"[\")['$!']() : $b)) ? line['$include?'](\"::\") : $a))) {\n          if ($truthy(($truthy($a = line['$include?'](\"if\")) ? $$($nesting, 'ConditionalDirectiveRx')['$=~'](line) : $a))) {\n            if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](1))['$=='](\"\\\\\")) {\n              \n              self.unescape_next_line = true;\n              self.look_ahead = $rb_plus(self.look_ahead, 1);\n              return line.$slice(1, line.$length());\n            } else if ($truthy(self.$preprocess_conditional_directive((($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](3)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](4)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](5))))) {\n              \n              self.$shift();\n              return nil;\n            } else {\n              \n              self.look_ahead = $rb_plus(self.look_ahead, 1);\n              return line;\n            }\n          } else if ($truthy(self.skipping)) {\n            \n            self.$shift();\n            return nil;\n          } else if ($truthy(($truthy($a = line['$start_with?'](\"inc\", \"\\\\inc\")) ? $$($nesting, 'IncludeDirectiveRx')['$=~'](line) : $a))) {\n            if ((($a = $gvars['~']) === nil ? nil : $a['$[]'](1))['$=='](\"\\\\\")) {\n              \n              self.unescape_next_line = true;\n              self.look_ahead = $rb_plus(self.look_ahead, 1);\n              return line.$slice(1, line.$length());\n            } else if ($truthy(self.$preprocess_include_directive((($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](3))))) {\n              return nil\n            } else {\n              \n              self.look_ahead = $rb_plus(self.look_ahead, 1);\n              return line;\n            }\n          } else {\n            \n            self.look_ahead = $rb_plus(self.look_ahead, 1);\n            return line;\n          }\n        } else if ($truthy(self.skipping)) {\n          \n          self.$shift();\n          return nil;\n        } else {\n          \n          self.look_ahead = $rb_plus(self.look_ahead, 1);\n          return line;\n        };\n      }, $PreprocessorReader_process_line$60.$$arity = 1);\n      \n      Opal.def(self, '$preprocess_conditional_directive', $PreprocessorReader_preprocess_conditional_directive$61 = function $$preprocess_conditional_directive(keyword, target, delimiter, text) {\n        var $a, $$62, $$63, $$64, $$65, self = this, no_target = nil, pair = nil, skip = nil, $case = nil, lhs = nil, op = nil, rhs = nil;\n\n        \n        if ($truthy((no_target = target['$empty?']()))) {\n        } else {\n          target = target.$downcase()\n        };\n        if (keyword['$=='](\"endif\")) {\n          \n          if ($truthy(text)) {\n            self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - text not permitted: endif::\" + (target) + \"[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})))\n          } else if ($truthy(self.conditional_stack['$empty?']())) {\n            self.$logger().$error(self.$message_with_context(\"\" + \"unmatched preprocessor directive: endif::\" + (target) + \"[]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})))\n          } else if ($truthy(($truthy($a = no_target) ? $a : target['$==']((pair = self.conditional_stack['$[]'](-1))['$[]'](\"target\"))))) {\n            \n            self.conditional_stack.$pop();\n            self.skipping = (function() {if ($truthy(self.conditional_stack['$empty?']())) {\n              return false\n            } else {\n              return self.conditional_stack['$[]'](-1)['$[]'](\"skipping\")\n            }; return nil; })();\n          } else {\n            self.$logger().$error(self.$message_with_context(\"\" + \"mismatched preprocessor directive: endif::\" + (target) + \"[], expected endif::\" + (pair['$[]'](\"target\")) + \"[]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})))\n          };\n          return true;\n        } else if ($truthy(self.skipping)) {\n          skip = false\n        } else {\n          $case = keyword;\n          if (\"ifdef\"['$===']($case)) {\n          if ($truthy(no_target)) {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - missing target: ifdef::[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return true;};\n          $case = delimiter;\n          if (\",\"['$===']($case)) {skip = $send(target.$split(\",\", -1), 'none?', [], ($$62 = function(name){var self = $$62.$$s || this;\n            if (self.document == null) self.document = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return self.document.$attributes()['$key?'](name);}, $$62.$$s = self, $$62.$$arity = 1, $$62))}\n          else if (\"+\"['$===']($case)) {skip = $send(target.$split(\"+\", -1), 'any?', [], ($$63 = function(name){var self = $$63.$$s || this;\n            if (self.document == null) self.document = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return self.document.$attributes()['$key?'](name)['$!']();}, $$63.$$s = self, $$63.$$arity = 1, $$63))}\n          else {skip = self.document.$attributes()['$key?'](target)['$!']()};}\n          else if (\"ifndef\"['$===']($case)) {\n          if ($truthy(no_target)) {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - missing target: ifndef::[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return true;};\n          $case = delimiter;\n          if (\",\"['$===']($case)) {skip = $send(target.$split(\",\", -1), 'any?', [], ($$64 = function(name){var self = $$64.$$s || this;\n            if (self.document == null) self.document = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return self.document.$attributes()['$key?'](name);}, $$64.$$s = self, $$64.$$arity = 1, $$64))}\n          else if (\"+\"['$===']($case)) {skip = $send(target.$split(\"+\", -1), 'all?', [], ($$65 = function(name){var self = $$65.$$s || this;\n            if (self.document == null) self.document = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return self.document.$attributes()['$key?'](name);}, $$65.$$s = self, $$65.$$arity = 1, $$65))}\n          else {skip = self.document.$attributes()['$key?'](target)};}\n          else if (\"ifeval\"['$===']($case)) {if ($truthy(no_target)) {\n            if ($truthy(($truthy($a = text) ? $$($nesting, 'EvalExpressionRx')['$=~'](text.$strip()) : $a))) {\n              \n              lhs = (($a = $gvars['~']) === nil ? nil : $a['$[]'](1));\n              op = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2));\n              rhs = (($a = $gvars['~']) === nil ? nil : $a['$[]'](3));\n              skip = (function() { try {\n                if ($truthy(self.$resolve_expr_val(lhs).$send(op, self.$resolve_expr_val(rhs)))) {\n                  return false\n                } else {\n                  return true\n                }\n              } catch ($err) {\n                if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                  try {\n                    return true\n                  } finally { Opal.pop_exception() }\n                } else { throw $err; }\n              }})();\n            } else {\n              \n              self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - \" + ((function() {if ($truthy(text)) {\n                return \"invalid expression\"\n              } else {\n                return \"missing expression\"\n              }; return nil; })()) + \": ifeval::[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n              return true;\n            }\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"malformed preprocessor directive - target not permitted: ifeval::\" + (target) + \"[\" + (text) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return true;\n          }}\n        };\n        if ($truthy(($truthy($a = keyword['$=='](\"ifeval\")) ? $a : text['$!']()))) {\n          \n          if ($truthy(skip)) {\n            self.skipping = true};\n          self.conditional_stack['$<<']($hash2([\"target\", \"skip\", \"skipping\"], {\"target\": target, \"skip\": skip, \"skipping\": self.skipping}));\n        } else if ($truthy(($truthy($a = self.skipping) ? $a : skip))) {\n        } else {\n          \n          self.$replace_next_line(text.$rstrip());\n          self.$unshift(\"\");\n          if ($truthy(text['$start_with?'](\"include::\"))) {\n            self.look_ahead = $rb_minus(self.look_ahead, 1)};\n        };\n        return true;\n      }, $PreprocessorReader_preprocess_conditional_directive$61.$$arity = 4);\n      \n      Opal.def(self, '$preprocess_include_directive', $PreprocessorReader_preprocess_include_directive$66 = function $$preprocess_include_directive(target, attrlist) {\n        var $a, $b, $$67, $$68, $$69, $$70, $$71, $$72, $$74, $$77, $$78, self = this, doc = nil, expanded_target = nil, attr_missing = nil, ext = nil, parsed_attrs = nil, inc_path = nil, target_type = nil, relpath = nil, $case = nil, reader = nil, read_mode = nil, enc = nil, $writer = nil, read_mode_params = nil, inc_linenos = nil, inc_tags = nil, tag = nil, inc_lines = nil, inc_offset = nil, inc_lineno = nil, tag_stack = nil, tags_used = nil, active_tag = nil, select = nil, base_select = nil, wildcard = nil, missing_tags = nil, inc_content = nil;\n\n        \n        doc = self.document;\n        if ($truthy(($truthy($a = (expanded_target = target)['$include?']($$($nesting, 'ATTR_REF_HEAD'))) ? (expanded_target = doc.$sub_attributes(target, $hash2([\"attribute_missing\"], {\"attribute_missing\": (function() {if ((attr_missing = ($truthy($b = doc.$attributes()['$[]'](\"attribute-missing\")) ? $b : $$($nesting, 'Compliance').$attribute_missing()))['$=='](\"warn\")) {\n          return \"drop-line\"\n        } else {\n          return attr_missing\n        }; return nil; })()})))['$empty?']() : $a))) {\n          if ($truthy((($a = attr_missing['$=='](\"drop-line\")) ? doc.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : attr_missing['$=='](\"drop-line\")))) {\n            \n            $send(self.$logger(), 'info', [], ($$67 = function(){var self = $$67.$$s || this;\n\n            return self.$message_with_context(\"\" + \"include dropped due to missing attribute: include::\" + (target) + \"[\" + (attrlist) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()}))}, $$67.$$s = self, $$67.$$arity = 0, $$67));\n            self.$shift();\n            return true;\n          } else if ($truthy(doc.$parse_attributes(attrlist, [], $hash2([\"sub_input\"], {\"sub_input\": true}))['$[]'](\"optional-option\"))) {\n            \n            $send(self.$logger(), 'info', [], ($$68 = function(){var self = $$68.$$s || this, $c;\n\n            return self.$message_with_context(\"\" + \"optional include dropped \" + ((function() {if ($truthy((($c = attr_missing['$=='](\"warn\")) ? doc.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : attr_missing['$=='](\"warn\")))) {\n                return \"due to missing attribute\"\n              } else {\n                return \"because resolved target is blank\"\n              }; return nil; })()) + \": include::\" + (target) + \"[\" + (attrlist) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()}))}, $$68.$$s = self, $$68.$$arity = 0, $$68));\n            self.$shift();\n            return true;\n          } else {\n            \n            self.$logger().$warn(self.$message_with_context(\"\" + \"include dropped \" + ((function() {if ($truthy((($a = attr_missing['$=='](\"warn\")) ? doc.$sub_attributes($rb_plus(target, \" \"), $hash2([\"attribute_missing\", \"drop_line_severity\"], {\"attribute_missing\": \"drop-line\", \"drop_line_severity\": \"ignore\"}))['$empty?']() : attr_missing['$=='](\"warn\")))) {\n              return \"due to missing attribute\"\n            } else {\n              return \"because resolved target is blank\"\n            }; return nil; })()) + \": include::\" + (target) + \"[\" + (attrlist) + \"]\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (target) + \"[\" + (attrlist) + \"]\");\n          }\n        } else if ($truthy(($truthy($a = self['$include_processors?']()) ? (ext = $send(self.include_processor_extensions, 'find', [], ($$69 = function(candidate){var self = $$69.$$s || this;\n\n        \n          \n          if (candidate == null) {\n            candidate = nil;\n          };\n          return candidate.$instance()['$handles?'](expanded_target);}, $$69.$$s = self, $$69.$$arity = 1, $$69))) : $a))) {\n          \n          self.$shift();\n          ext.$process_method()['$[]'](doc, self, expanded_target, doc.$parse_attributes(attrlist, [], $hash2([\"sub_input\"], {\"sub_input\": true})));\n          return true;\n        } else if ($truthy($rb_ge(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')))) {\n          return self.$replace_next_line(\"\" + \"link:\" + (expanded_target) + \"[]\")\n        } else if ($truthy(self.maxdepth)) {\n          \n          if ($truthy($rb_ge(self.include_stack.$size(), self.maxdepth['$[]'](\"curr\")))) {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"maximum include depth of \" + (self.maxdepth['$[]'](\"rel\")) + \" exceeded\", $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return nil;};\n          parsed_attrs = doc.$parse_attributes(attrlist, [], $hash2([\"sub_input\"], {\"sub_input\": true}));\n          $b = self.$resolve_include_path(expanded_target, attrlist, parsed_attrs), $a = Opal.to_ary($b), (inc_path = ($a[0] == null ? nil : $a[0])), (target_type = ($a[1] == null ? nil : $a[1])), (relpath = ($a[2] == null ? nil : $a[2])), $b;\n          $case = target_type;\n          if (\"file\"['$===']($case)) {\n          reader = $$$('::', 'File').$method(\"open\");\n          read_mode = $$($nesting, 'FILE_READ_MODE');}\n          else if (\"uri\"['$===']($case)) {\n          reader = $$$('::', 'OpenURI').$method(\"open_uri\");\n          read_mode = $$($nesting, 'URI_READ_MODE');}\n          else {return inc_path};\n          if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n          } else if ($truthy(($truthy($a = (enc = parsed_attrs['$[]'](\"encoding\"))) ? (function() { try {\n            return $$$('::', 'Encoding').$find(enc)\n          } catch ($err) {\n            if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n              try {\n                return nil\n              } finally { Opal.pop_exception() }\n            } else { throw $err; }\n          }})() : $a))) {\n            \n            \n            $writer = [1, enc];\n            $send((read_mode_params = read_mode.$split(\":\")), '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            read_mode = read_mode_params.$join(\":\");};\n          inc_linenos = (inc_tags = nil);\n          if ($truthy(attrlist)) {\n            if ($truthy(parsed_attrs['$key?'](\"lines\"))) {\n              \n              inc_linenos = [];\n              $send(self.$split_delimited_value(parsed_attrs['$[]'](\"lines\")), 'each', [], ($$70 = function(linedef){var self = $$70.$$s || this, $c, $d, from = nil, _ = nil, to = nil;\n\n              \n                \n                if (linedef == null) {\n                  linedef = nil;\n                };\n                if ($truthy(linedef['$include?'](\"..\"))) {\n                  \n                  $d = linedef.$partition(\"..\"), $c = Opal.to_ary($d), (from = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (to = ($c[2] == null ? nil : $c[2])), $d;\n                  return (inc_linenos = $rb_plus(inc_linenos, (function() {if ($truthy(($truthy($c = to['$empty?']()) ? $c : $rb_lt((to = to.$to_i()), 0)))) {\n                    return [from.$to_i(), $$$($$$('::', 'Float'), 'INFINITY')]\n                  } else {\n                    return Opal.Range.$new(from.$to_i(), to, false).$to_a()\n                  }; return nil; })()));\n                } else {\n                  return inc_linenos['$<<'](linedef.$to_i())\n                };}, $$70.$$s = self, $$70.$$arity = 1, $$70));\n              inc_linenos = (function() {if ($truthy(inc_linenos['$empty?']())) {\n                return nil\n              } else {\n                return inc_linenos.$sort().$uniq()\n              }; return nil; })();\n            } else if ($truthy(parsed_attrs['$key?'](\"tag\"))) {\n              if ($truthy(($truthy($a = (tag = parsed_attrs['$[]'](\"tag\"))['$empty?']()) ? $a : tag['$=='](\"!\")))) {\n              } else {\n                inc_tags = (function() {if ($truthy(tag['$start_with?'](\"!\"))) {\n                  return $hash(tag.$slice(1, tag.$length()), false)\n                } else {\n                  return $hash(tag, true)\n                }; return nil; })()\n              }\n            } else if ($truthy(parsed_attrs['$key?'](\"tags\"))) {\n              \n              inc_tags = $hash2([], {});\n              $send(self.$split_delimited_value(parsed_attrs['$[]'](\"tags\")), 'each', [], ($$71 = function(tagdef){var self = $$71.$$s || this, $c;\n\n              \n                \n                if (tagdef == null) {\n                  tagdef = nil;\n                };\n                if ($truthy(($truthy($c = tagdef['$empty?']()) ? $c : tagdef['$=='](\"!\")))) {\n                  return nil\n                } else if ($truthy(tagdef['$start_with?'](\"!\"))) {\n                  \n                  $writer = [tagdef.$slice(1, tagdef.$length()), false];\n                  $send(inc_tags, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                } else {\n                  \n                  $writer = [tagdef, true];\n                  $send(inc_tags, '[]=', Opal.to_a($writer));\n                  return $writer[$rb_minus($writer[\"length\"], 1)];\n                };}, $$71.$$s = self, $$71.$$arity = 1, $$71));\n              if ($truthy(inc_tags['$empty?']())) {\n                inc_tags = nil};}};\n          if ($truthy(inc_linenos)) {\n            \n            $a = [[], nil, 0], (inc_lines = $a[0]), (inc_offset = $a[1]), (inc_lineno = $a[2]), $a;\n            \n            try {\n              (function(){var $brk = Opal.new_brk(); try {return $send(reader, 'call', [inc_path, read_mode], ($$72 = function(f){var self = $$72.$$s || this, $$73, select_remaining = nil;\n\n              \n                \n                if (f == null) {\n                  f = nil;\n                };\n                select_remaining = nil;\n                return (function(){var $brk = Opal.new_brk(); try {return $send(f, 'each_line', [], ($$73 = function(l){var self = $$73.$$s || this, $c, $d, select = nil;\n\n                \n                  \n                  if (l == null) {\n                    l = nil;\n                  };\n                  inc_lineno = $rb_plus(inc_lineno, 1);\n                  if ($truthy(($truthy($c = select_remaining) ? $c : ($truthy($d = $$$('::', 'Float')['$===']((select = inc_linenos['$[]'](0)))) ? (select_remaining = select['$infinite?']()) : $d)))) {\n                    \n                    inc_offset = ($truthy($c = inc_offset) ? $c : inc_lineno);\n                    return inc_lines['$<<'](l);\n                  } else {\n                    \n                    if (select['$=='](inc_lineno)) {\n                      \n                      inc_offset = ($truthy($c = inc_offset) ? $c : inc_lineno);\n                      inc_lines['$<<'](l);\n                      inc_linenos.$shift();};\n                    if ($truthy(inc_linenos['$empty?']())) {\n                      \n                      Opal.brk(nil, $brk)\n                    } else {\n                      return nil\n                    };\n                  };}, $$73.$$s = self, $$73.$$brk = $brk, $$73.$$arity = 1, $$73))\n                } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})();}, $$72.$$s = self, $$72.$$brk = $brk, $$72.$$arity = 1, $$72))\n              } catch (err) { if (err === $brk) { return err.$v } else { throw err } }})()\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  self.$logger().$error(self.$message_with_context(\"\" + \"include \" + (target_type) + \" not readable: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n                  return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (expanded_target) + \"[\" + (attrlist) + \"]\");\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };;\n            self.$shift();\n            if ($truthy(inc_offset)) {\n              \n              \n              $writer = [\"partial-option\", \"\"];\n              $send(parsed_attrs, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;\n              self.$push_include(inc_lines, inc_path, relpath, inc_offset, parsed_attrs);};\n          } else if ($truthy(inc_tags)) {\n            \n            $a = [[], nil, 0, [], $$$('::', 'Set').$new(), nil], (inc_lines = $a[0]), (inc_offset = $a[1]), (inc_lineno = $a[2]), (tag_stack = $a[3]), (tags_used = $a[4]), (active_tag = $a[5]), $a;\n            if ($truthy(inc_tags['$key?'](\"**\"))) {\n              \n              select = (base_select = inc_tags.$delete(\"**\"));\n              if ($truthy(inc_tags['$key?'](\"*\"))) {\n                wildcard = inc_tags.$delete(\"*\")\n              } else if ($truthy(($truthy($a = select['$!']()) ? inc_tags.$values().$first()['$=='](false) : $a))) {\n                wildcard = true};\n            } else if ($truthy(inc_tags['$key?'](\"*\"))) {\n              if (inc_tags.$keys().$first()['$=='](\"*\")) {\n                select = (base_select = (wildcard = inc_tags.$delete(\"*\"))['$!']())\n              } else {\n                \n                select = (base_select = false);\n                wildcard = inc_tags.$delete(\"*\");\n              }\n            } else {\n              select = (base_select = inc_tags['$value?'](true)['$!']())\n            };\n            \n            try {\n              $send(reader, 'call', [inc_path, read_mode], ($$74 = function(f){var self = $$74.$$s || this, $c, $$75, dbl_co = nil, dbl_sb = nil;\n\n              \n                \n                if (f == null) {\n                  f = nil;\n                };\n                $c = [\"::\", \"[]\"], (dbl_co = $c[0]), (dbl_sb = $c[1]), $c;\n                return $send(f, 'each_line', [], ($$75 = function(l){var self = $$75.$$s || this, $d, $e, $$76, this_tag = nil, include_cursor = nil, idx = nil;\n\n                \n                  \n                  if (l == null) {\n                    l = nil;\n                  };\n                  inc_lineno = $rb_plus(inc_lineno, 1);\n                  if ($truthy(($truthy($d = ($truthy($e = l['$include?'](dbl_co)) ? l['$include?'](dbl_sb) : $e)) ? $$($nesting, 'TagDirectiveRx')['$=~'](l) : $d))) {\n                    \n                    this_tag = (($d = $gvars['~']) === nil ? nil : $d['$[]'](2));\n                    if ($truthy((($d = $gvars['~']) === nil ? nil : $d['$[]'](1)))) {\n                      if (this_tag['$=='](active_tag)) {\n                        \n                        tag_stack.$pop();\n                        return $e = (function() {if ($truthy(tag_stack['$empty?']())) {\n                          return [nil, base_select]\n                        } else {\n                          return tag_stack['$[]'](-1)\n                        }; return nil; })(), $d = Opal.to_ary($e), (active_tag = ($d[0] == null ? nil : $d[0])), (select = ($d[1] == null ? nil : $d[1])), $e;\n                      } else if ($truthy(inc_tags['$key?'](this_tag))) {\n                        \n                        include_cursor = self.$create_include_cursor(inc_path, expanded_target, inc_lineno);\n                        if ($truthy((idx = $send(tag_stack, 'rindex', [], ($$76 = function(key){var self = $$76.$$s || this;\n\n                        \n                          \n                          if (key == null) {\n                            key = nil;\n                          };\n                          return key['$=='](this_tag);}, $$76.$$s = self, $$76.$$arity = 1, $$76.$$has_trailing_comma_in_args = true, $$76))))) {\n                          \n                          if (idx['$=='](0)) {\n                            tag_stack.$shift()\n                          } else {\n                            \n                            tag_stack.$delete_at(idx);\n                          };\n                          return self.$logger().$warn(self.$message_with_context(\"\" + \"mismatched end tag (expected '\" + (active_tag) + \"' but found '\" + (this_tag) + \"') at line \" + (inc_lineno) + \" of include \" + (target_type) + \": \" + (inc_path), $hash2([\"source_location\", \"include_location\"], {\"source_location\": self.$cursor(), \"include_location\": include_cursor})));\n                        } else {\n                          return self.$logger().$warn(self.$message_with_context(\"\" + \"unexpected end tag '\" + (this_tag) + \"' at line \" + (inc_lineno) + \" of include \" + (target_type) + \": \" + (inc_path), $hash2([\"source_location\", \"include_location\"], {\"source_location\": self.$cursor(), \"include_location\": include_cursor})))\n                        };\n                      } else {\n                        return nil\n                      }\n                    } else if ($truthy(inc_tags['$key?'](this_tag))) {\n                      \n                      tags_used['$<<'](this_tag);\n                      return tag_stack['$<<']([(active_tag = this_tag), (select = inc_tags['$[]'](this_tag)), inc_lineno]);\n                    } else if ($truthy(wildcard['$nil?']()['$!']())) {\n                      \n                      select = (function() {if ($truthy(($truthy($d = active_tag) ? select['$!']() : $d))) {\n                        return false\n                      } else {\n                        return wildcard\n                      }; return nil; })();\n                      return tag_stack['$<<']([(active_tag = this_tag), select, inc_lineno]);\n                    } else {\n                      return nil\n                    };\n                  } else if ($truthy(select)) {\n                    \n                    inc_offset = ($truthy($d = inc_offset) ? $d : inc_lineno);\n                    return inc_lines['$<<'](l);\n                  } else {\n                    return nil\n                  };}, $$75.$$s = self, $$75.$$arity = 1, $$75));}, $$74.$$s = self, $$74.$$arity = 1, $$74))\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  self.$logger().$error(self.$message_with_context(\"\" + \"include \" + (target_type) + \" not readable: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n                  return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (expanded_target) + \"[\" + (attrlist) + \"]\");\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };;\n            if ($truthy(tag_stack['$empty?']())) {\n            } else {\n              $send(tag_stack, 'each', [], ($$77 = function(tag_name, _, tag_lineno){var self = $$77.$$s || this;\n\n              \n                \n                if (tag_name == null) {\n                  tag_name = nil;\n                };\n                \n                if (_ == null) {\n                  _ = nil;\n                };\n                \n                if (tag_lineno == null) {\n                  tag_lineno = nil;\n                };\n                return self.$logger().$warn(self.$message_with_context(\"\" + \"detected unclosed tag '\" + (tag_name) + \"' starting at line \" + (tag_lineno) + \" of include \" + (target_type) + \": \" + (inc_path), $hash2([\"source_location\", \"include_location\"], {\"source_location\": self.$cursor(), \"include_location\": self.$create_include_cursor(inc_path, expanded_target, tag_lineno)})));}, $$77.$$s = self, $$77.$$arity = 3, $$77))\n            };\n            if ($truthy((missing_tags = $rb_minus(inc_tags.$keys(), tags_used.$to_a()))['$empty?']())) {\n            } else {\n              self.$logger().$warn(self.$message_with_context(\"\" + \"tag\" + ((function() {if ($truthy($rb_gt(missing_tags.$size(), 1))) {\n                return \"s\"\n              } else {\n                return \"\"\n              }; return nil; })()) + \" '\" + (missing_tags.$join(\", \")) + \"' not found in include \" + (target_type) + \": \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})))\n            };\n            self.$shift();\n            if ($truthy(inc_offset)) {\n              \n              if ($truthy(($truthy($a = ($truthy($b = base_select) ? wildcard['$!='](false) : $b)) ? inc_tags['$empty?']() : $a))) {\n              } else {\n                \n                $writer = [\"partial-option\", \"\"];\n                $send(parsed_attrs, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];\n              };\n              self.$push_include(inc_lines, inc_path, relpath, inc_offset, parsed_attrs);};\n          } else {\n            \n            try {\n              \n              inc_content = $send(reader, 'call', [inc_path, read_mode], ($$78 = function(f){var self = $$78.$$s || this;\n\n              \n                \n                if (f == null) {\n                  f = nil;\n                };\n                return f.$read();}, $$78.$$s = self, $$78.$$arity = 1, $$78));\n              self.$shift();\n              self.$push_include(inc_content, inc_path, relpath, 1, parsed_attrs);\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  \n                  self.$logger().$error(self.$message_with_context(\"\" + \"include \" + (target_type) + \" not readable: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n                  return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (expanded_target) + \"[\" + (attrlist) + \"]\");\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };\n          };\n          return true;\n        } else {\n          return nil\n        };\n      }, $PreprocessorReader_preprocess_include_directive$66.$$arity = 2);\n      \n      Opal.def(self, '$resolve_include_path', $PreprocessorReader_resolve_include_path$79 = function $$resolve_include_path(target, attrlist, attributes) {\n        var $a, $b, $$80, self = this, doc = nil, inc_path = nil, relpath = nil;\n\n        \n        doc = self.document;\n        if ($truthy(($truthy($a = $$($nesting, 'Helpers')['$uriish?'](target)) ? $a : (function() {if ($truthy($$$('::', 'String')['$==='](self.dir))) {\n          return nil\n        } else {\n          \n          return (target = \"\" + (self.dir) + \"/\" + (target));\n        }; return nil; })()))) {\n          \n          if ($truthy(doc['$attr?'](\"allow-uri-read\"))) {\n          } else {\n            return self.$replace_next_line(\"\" + \"link:\" + (target) + \"[\" + (attrlist) + \"]\")\n          };\n          if ($truthy(doc['$attr?'](\"cache-uri\"))) {\n            if ($truthy((($b = $$$('::', 'OpenURI', 'skip_raise')) && ($a = $$$($b, 'Cache', 'skip_raise')) ? 'constant' : nil))) {\n            } else {\n              $$($nesting, 'Helpers').$require_library(\"open-uri/cached\", \"open-uri-cached\")\n            }\n          } else if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL')['$!']())) {\n            $$$('::', 'OpenURI')};\n          return [$$$('::', 'URI').$parse(target), \"uri\", target];\n        } else {\n          \n          inc_path = doc.$normalize_system_path(target, self.dir, nil, $hash2([\"target_name\"], {\"target_name\": \"include file\"}));\n          if ($truthy($$$('::', 'File')['$file?'](inc_path))) {\n          } else if ($truthy(attributes['$[]'](\"optional-option\"))) {\n            \n            $send(self.$logger(), 'info', [], ($$80 = function(){var self = $$80.$$s || this;\n\n            return self.$message_with_context(\"\" + \"optional include dropped because include file not found: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()}))}, $$80.$$s = self, $$80.$$arity = 0, $$80));\n            self.$shift();\n            return true;\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"include file not found: \" + (inc_path), $hash2([\"source_location\"], {\"source_location\": self.$cursor()})));\n            return self.$replace_next_line(\"\" + \"Unresolved directive in \" + (self.path) + \" - include::\" + (target) + \"[\" + (attrlist) + \"]\");\n          };\n          relpath = doc.$path_resolver().$relative_path(inc_path, doc.$base_dir());\n          return [inc_path, \"file\", relpath];\n        };\n      }, $PreprocessorReader_resolve_include_path$79.$$arity = 3);\n      \n      Opal.def(self, '$pop_include', $PreprocessorReader_pop_include$81 = function $$pop_include() {\n        var $a, $b, self = this;\n\n        if ($truthy(self.include_stack['$empty?']())) {\n          return nil\n        } else {\n          \n          $b = self.include_stack.$pop(), $a = Opal.to_ary($b), (self.lines = ($a[0] == null ? nil : $a[0])), (self.file = ($a[1] == null ? nil : $a[1])), (self.dir = ($a[2] == null ? nil : $a[2])), (self.path = ($a[3] == null ? nil : $a[3])), (self.lineno = ($a[4] == null ? nil : $a[4])), (self.maxdepth = ($a[5] == null ? nil : $a[5])), (self.process_lines = ($a[6] == null ? nil : $a[6])), $b;\n          self.look_ahead = 0;\n          return nil;\n        }\n      }, $PreprocessorReader_pop_include$81.$$arity = 0);\n      \n      Opal.def(self, '$split_delimited_value', $PreprocessorReader_split_delimited_value$82 = function $$split_delimited_value(val) {\n        var self = this;\n\n        if ($truthy(val['$include?'](\",\"))) {\n          \n          return val.$split(\",\");\n        } else {\n          \n          return val.$split(\";\");\n        }\n      }, $PreprocessorReader_split_delimited_value$82.$$arity = 1);\n      \n      Opal.def(self, '$skip_front_matter!', $PreprocessorReader_skip_front_matter$excl$83 = function(data, increment_linenos) {\n        var $a, $b, self = this, front_matter = nil, original_data = nil;\n\n        \n        \n        if (increment_linenos == null) {\n          increment_linenos = true;\n        };\n        front_matter = nil;\n        if (data['$[]'](0)['$=='](\"---\")) {\n          \n          original_data = data.$drop(0);\n          data.$shift();\n          front_matter = [];\n          if ($truthy(increment_linenos)) {\n            self.lineno = $rb_plus(self.lineno, 1)};\n          while ($truthy(($truthy($b = data['$empty?']()['$!']()) ? data['$[]'](0)['$!='](\"---\") : $b))) {\n            \n            front_matter['$<<'](data.$shift());\n            if ($truthy(increment_linenos)) {\n              self.lineno = $rb_plus(self.lineno, 1)};\n          };\n          if ($truthy(data['$empty?']())) {\n            \n            $send(data, 'unshift', Opal.to_a(original_data));\n            if ($truthy(increment_linenos)) {\n              self.lineno = 0};\n            front_matter = nil;\n          } else {\n            \n            data.$shift();\n            if ($truthy(increment_linenos)) {\n              self.lineno = $rb_plus(self.lineno, 1)};\n          };};\n        return front_matter;\n      }, $PreprocessorReader_skip_front_matter$excl$83.$$arity = -2);\n      return (Opal.def(self, '$resolve_expr_val', $PreprocessorReader_resolve_expr_val$84 = function $$resolve_expr_val(val) {\n        var $a, $b, self = this, quoted = nil;\n\n        \n        if ($truthy(($truthy($a = ($truthy($b = val['$start_with?'](\"\\\"\")) ? val['$end_with?'](\"\\\"\") : $b)) ? $a : ($truthy($b = val['$start_with?'](\"'\")) ? val['$end_with?'](\"'\") : $b)))) {\n          \n          quoted = true;\n          val = val.$slice(1, $rb_minus(val.$length(), 1));\n        } else {\n          quoted = false\n        };\n        if ($truthy(val['$include?']($$($nesting, 'ATTR_REF_HEAD')))) {\n          val = self.document.$sub_attributes(val, $hash2([\"attribute_missing\"], {\"attribute_missing\": \"drop\"}))};\n        if ($truthy(quoted)) {\n          return val\n        } else if ($truthy(val['$empty?']())) {\n          return nil\n        } else if (val['$=='](\"true\")) {\n          return true\n        } else if (val['$=='](\"false\")) {\n          return false\n        } else if ($truthy(val.$rstrip()['$empty?']())) {\n          return \" \"\n        } else if ($truthy(val['$include?'](\".\"))) {\n          return val.$to_f()\n        } else {\n          return val.$to_i()\n        };\n      }, $PreprocessorReader_resolve_expr_val$84.$$arity = 1), nil) && 'resolve_expr_val';\n    })($nesting[0], $$($nesting, 'Reader'), $nesting);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/section\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_accessor', '$attr_reader', '$===', '$+', '$level', '$special', '$generate_id', '$title', '$==', '$>', '$sectnum', '$reftext', '$!', '$empty?', '$sub_placeholder', '$sub_quotes', '$compat_mode', '$[]', '$attributes', '$context', '$assign_numeral', '$class', '$object_id', '$inspect', '$size', '$length', '$chr', '$[]=', '$-', '$gsub', '$downcase', '$delete', '$tr_s', '$end_with?', '$chop', '$start_with?', '$slice', '$key?', '$catalog', '$unique_id_start_index']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Section');\n\n      var $nesting = [self].concat($parent_nesting), $Section_initialize$1, $Section_generate_id$2, $Section_sectnum$3, $Section_xreftext$4, $Section_$lt$lt$5, $Section_to_s$6, $Section_generate_id$7;\n\n      self.$$prototype.document = self.$$prototype.level = self.$$prototype.parent = self.$$prototype.numeral = self.$$prototype.numbered = self.$$prototype.sectname = self.$$prototype.title = self.$$prototype.blocks = nil;\n      \n      self.$attr_accessor(\"index\");\n      self.$attr_accessor(\"sectname\");\n      self.$attr_accessor(\"special\");\n      self.$attr_accessor(\"numbered\");\n      self.$attr_reader(\"caption\");\n      \n      Opal.def(self, '$initialize', $Section_initialize$1 = function $$initialize(parent, level, numbered, opts) {\n        var $a, $b, $iter = $Section_initialize$1.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $Section_initialize$1.$$p = null;\n        \n        \n        if (parent == null) {\n          parent = nil;\n        };\n        \n        if (level == null) {\n          level = nil;\n        };\n        \n        if (numbered == null) {\n          numbered = false;\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Section_initialize$1, false), [parent, \"section\", opts], null);\n        if ($truthy($$($nesting, 'Section')['$==='](parent))) {\n          $a = [($truthy($b = level) ? $b : $rb_plus(parent.$level(), 1)), parent.$special()], (self.level = $a[0]), (self.special = $a[1]), $a\n        } else {\n          $a = [($truthy($b = level) ? $b : 1), false], (self.level = $a[0]), (self.special = $a[1]), $a\n        };\n        self.numbered = numbered;\n        return (self.index = 0);\n      }, $Section_initialize$1.$$arity = -1);\n      Opal.alias(self, \"name\", \"title\");\n      \n      Opal.def(self, '$generate_id', $Section_generate_id$2 = function $$generate_id() {\n        var self = this;\n\n        return $$($nesting, 'Section').$generate_id(self.$title(), self.document)\n      }, $Section_generate_id$2.$$arity = 0);\n      \n      Opal.def(self, '$sectnum', $Section_sectnum$3 = function $$sectnum(delimiter, append) {\n        var $a, self = this;\n\n        \n        \n        if (delimiter == null) {\n          delimiter = \".\";\n        };\n        \n        if (append == null) {\n          append = nil;\n        };\n        append = ($truthy($a = append) ? $a : (function() {if (append['$=='](false)) {\n          return \"\"\n        } else {\n          return delimiter\n        }; return nil; })());\n        if ($truthy(($truthy($a = $rb_gt(self.level, 1)) ? $$($nesting, 'Section')['$==='](self.parent) : $a))) {\n          return \"\" + (self.parent.$sectnum(delimiter, delimiter)) + (self.numeral) + (append)\n        } else {\n          return \"\" + (self.numeral) + (append)\n        };\n      }, $Section_sectnum$3.$$arity = -1);\n      \n      Opal.def(self, '$xreftext', $Section_xreftext$4 = function $$xreftext(xrefstyle) {\n        var $a, self = this, val = nil, $case = nil, type = nil, quoted_title = nil, signifier = nil;\n\n        \n        \n        if (xrefstyle == null) {\n          xrefstyle = nil;\n        };\n        if ($truthy(($truthy($a = (val = self.$reftext())) ? val['$empty?']()['$!']() : $a))) {\n          return val\n        } else if ($truthy(xrefstyle)) {\n          if ($truthy(self.numbered)) {\n            return (function() {$case = xrefstyle;\n            if (\"full\"['$===']($case)) {\n            if ($truthy(($truthy($a = (type = self.sectname)['$=='](\"chapter\")) ? $a : type['$=='](\"appendix\")))) {\n              quoted_title = self.$sub_placeholder(self.$sub_quotes(\"_%s_\"), self.$title())\n            } else {\n              quoted_title = self.$sub_placeholder(self.$sub_quotes((function() {if ($truthy(self.document.$compat_mode())) {\n                return \"``%s''\"\n              } else {\n                return \"\\\"`%s`\\\"\"\n              }; return nil; })()), self.$title())\n            };\n            if ($truthy((signifier = self.document.$attributes()['$[]'](\"\" + (type) + \"-refsig\")))) {\n              return \"\" + (signifier) + \" \" + (self.$sectnum(\".\", \",\")) + \" \" + (quoted_title)\n            } else {\n              return \"\" + (self.$sectnum(\".\", \",\")) + \" \" + (quoted_title)\n            };}\n            else if (\"short\"['$===']($case)) {if ($truthy((signifier = self.document.$attributes()['$[]'](\"\" + (self.sectname) + \"-refsig\")))) {\n              return \"\" + (signifier) + \" \" + (self.$sectnum(\".\", \"\"))\n            } else {\n              return self.$sectnum(\".\", \"\")\n            }}\n            else {if ($truthy(($truthy($a = (type = self.sectname)['$=='](\"chapter\")) ? $a : type['$=='](\"appendix\")))) {\n              \n              return self.$sub_placeholder(self.$sub_quotes(\"_%s_\"), self.$title());\n            } else {\n              return self.$title()\n            }}})()\n          } else if ($truthy(($truthy($a = (type = self.sectname)['$=='](\"chapter\")) ? $a : type['$=='](\"appendix\")))) {\n            \n            return self.$sub_placeholder(self.$sub_quotes(\"_%s_\"), self.$title());\n          } else {\n            return self.$title()\n          }\n        } else {\n          return self.$title()\n        };\n      }, $Section_xreftext$4.$$arity = -1);\n      \n      Opal.def(self, '$<<', $Section_$lt$lt$5 = function(block) {\n        var $iter = $Section_$lt$lt$5.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Section_$lt$lt$5.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        if (block.$context()['$=='](\"section\")) {\n          self.$assign_numeral(block)};\n        return $send(self, Opal.find_super_dispatcher(self, '<<', $Section_$lt$lt$5, false), $zuper, $iter);\n      }, $Section_$lt$lt$5.$$arity = 1);\n      \n      Opal.def(self, '$to_s', $Section_to_s$6 = function $$to_s() {\n        var $iter = $Section_to_s$6.$$p, $yield = $iter || nil, self = this, formal_title = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Section_to_s$6.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        if ($truthy(self.title)) {\n          \n          formal_title = (function() {if ($truthy(self.numbered)) {\n            return \"\" + (self.$sectnum()) + \" \" + (self.title)\n          } else {\n            return self.title\n          }; return nil; })();\n          return \"\" + \"#<\" + (self.$class()) + \"@\" + (self.$object_id()) + \" {level: \" + (self.level) + \", title: \" + (formal_title.$inspect()) + \", blocks: \" + (self.blocks.$size()) + \"}>\";\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'to_s', $Section_to_s$6, false), $zuper, $iter)\n        }\n      }, $Section_to_s$6.$$arity = 0);\n      return (Opal.defs(self, '$generate_id', $Section_generate_id$7 = function $$generate_id(title, document) {\n        var $a, $b, self = this, attrs = nil, pre = nil, sep = nil, no_sep = nil, $writer = nil, sep_sub = nil, gen_id = nil, ids = nil, cnt = nil, candidate_id = nil;\n\n        \n        attrs = document.$attributes();\n        pre = ($truthy($a = attrs['$[]'](\"idprefix\")) ? $a : \"_\");\n        if ($truthy((sep = attrs['$[]'](\"idseparator\")))) {\n          if ($truthy(($truthy($a = sep.$length()['$=='](1)) ? $a : ($truthy($b = (no_sep = sep['$empty?']())['$!']()) ? (sep = (($writer = [\"idseparator\", sep.$chr()]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])) : $b)))) {\n            sep_sub = (function() {if ($truthy(($truthy($a = sep['$=='](\"-\")) ? $a : sep['$=='](\".\")))) {\n              return \" .-\"\n            } else {\n              return \"\" + \" \" + (sep) + \".-\"\n            }; return nil; })()}\n        } else {\n          $a = [\"_\", \" _.-\"], (sep = $a[0]), (sep_sub = $a[1]), $a\n        };\n        gen_id = \"\" + (pre) + (title.$downcase().$gsub($$($nesting, 'InvalidSectionIdCharsRx'), \"\"));\n        if ($truthy(no_sep)) {\n          gen_id = gen_id.$delete(\" \")\n        } else {\n          \n          gen_id = gen_id.$tr_s(sep_sub, sep);\n          if ($truthy(gen_id['$end_with?'](sep))) {\n            gen_id = gen_id.$chop()};\n          if ($truthy(($truthy($a = pre['$empty?']()) ? gen_id['$start_with?'](sep) : $a))) {\n            gen_id = gen_id.$slice(1, gen_id.$length())};\n        };\n        if ($truthy(document.$catalog()['$[]'](\"refs\")['$key?'](gen_id))) {\n          \n          ids = document.$catalog()['$[]'](\"refs\");\n          cnt = $$($nesting, 'Compliance').$unique_id_start_index();\n          while ($truthy(ids['$[]']((candidate_id = \"\" + (gen_id) + (sep) + (cnt))))) {\n            cnt = $rb_plus(cnt, 1)\n          };\n          return candidate_id;\n        } else {\n          return gen_id\n        };\n      }, $Section_generate_id$7.$$arity = 2), nil) && 'generate_id';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/stylesheets\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$join', '$new', '$rstrip', '$read', '$primary_stylesheet_data', '$write', '$primary_stylesheet_name', '$stylesheet_basename', '$for', '$read_stylesheet', '$coderay_stylesheet_data', '$coderay_stylesheet_name', '$pygments_stylesheet_data', '$pygments_stylesheet_name']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Stylesheets');\n\n      var $nesting = [self].concat($parent_nesting), $Stylesheets_instance$1, $Stylesheets_primary_stylesheet_name$2, $Stylesheets_primary_stylesheet_data$3, $Stylesheets_embed_primary_stylesheet$4, $Stylesheets_write_primary_stylesheet$5, $Stylesheets_coderay_stylesheet_name$6, $Stylesheets_coderay_stylesheet_data$7, $Stylesheets_embed_coderay_stylesheet$8, $Stylesheets_write_coderay_stylesheet$9, $Stylesheets_pygments_stylesheet_name$10, $Stylesheets_pygments_stylesheet_data$11, $Stylesheets_embed_pygments_stylesheet$12, $Stylesheets_write_pygments_stylesheet$13;\n\n      self.$$prototype.primary_stylesheet_data = nil;\n      \n      Opal.const_set($nesting[0], 'DEFAULT_STYLESHEET_NAME', \"asciidoctor.css\");\n      Opal.const_set($nesting[0], 'STYLESHEETS_DIR', $$$('::', 'File').$join($$($nesting, 'DATA_DIR'), \"stylesheets\"));\n      self.__instance__ = self.$new();\n      Opal.defs(self, '$instance', $Stylesheets_instance$1 = function $$instance() {\n        var self = this;\n        if (self.__instance__ == null) self.__instance__ = nil;\n\n        return self.__instance__\n      }, $Stylesheets_instance$1.$$arity = 0);\n      \n      Opal.def(self, '$primary_stylesheet_name', $Stylesheets_primary_stylesheet_name$2 = function $$primary_stylesheet_name() {\n        var self = this;\n\n        return $$($nesting, 'DEFAULT_STYLESHEET_NAME')\n      }, $Stylesheets_primary_stylesheet_name$2.$$arity = 0);\n      \n      Opal.def(self, '$primary_stylesheet_data', $Stylesheets_primary_stylesheet_data$3 = function $$primary_stylesheet_data() {\n        var $a, self = this;\n\n        return (self.primary_stylesheet_data = ($truthy($a = self.primary_stylesheet_data) ? $a : $$$('::', 'File').$read($$$('::', 'File').$join($$($nesting, 'STYLESHEETS_DIR'), \"asciidoctor-default.css\"), $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_READ_MODE')})).$rstrip()))\n      }, $Stylesheets_primary_stylesheet_data$3.$$arity = 0);\n      \n      Opal.def(self, '$embed_primary_stylesheet', $Stylesheets_embed_primary_stylesheet$4 = function $$embed_primary_stylesheet() {\n        var self = this;\n\n        return \"\" + \"<style>\\n\" + (self.$primary_stylesheet_data()) + \"\\n\" + \"</style>\"\n      }, $Stylesheets_embed_primary_stylesheet$4.$$arity = 0);\n      \n      Opal.def(self, '$write_primary_stylesheet', $Stylesheets_write_primary_stylesheet$5 = function $$write_primary_stylesheet(target_dir) {\n        var self = this;\n\n        \n        \n        if (target_dir == null) {\n          target_dir = \".\";\n        };\n        return $$$('::', 'File').$write($$$('::', 'File').$join(target_dir, self.$primary_stylesheet_name()), self.$primary_stylesheet_data(), $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}));\n      }, $Stylesheets_write_primary_stylesheet$5.$$arity = -1);\n      \n      Opal.def(self, '$coderay_stylesheet_name', $Stylesheets_coderay_stylesheet_name$6 = function $$coderay_stylesheet_name() {\n        var self = this;\n\n        return $$($nesting, 'SyntaxHighlighter').$for(\"coderay\").$stylesheet_basename()\n      }, $Stylesheets_coderay_stylesheet_name$6.$$arity = 0);\n      \n      Opal.def(self, '$coderay_stylesheet_data', $Stylesheets_coderay_stylesheet_data$7 = function $$coderay_stylesheet_data() {\n        var self = this;\n\n        return $$($nesting, 'SyntaxHighlighter').$for(\"coderay\").$read_stylesheet()\n      }, $Stylesheets_coderay_stylesheet_data$7.$$arity = 0);\n      \n      Opal.def(self, '$embed_coderay_stylesheet', $Stylesheets_embed_coderay_stylesheet$8 = function $$embed_coderay_stylesheet() {\n        var self = this;\n\n        return \"\" + \"<style>\\n\" + (self.$coderay_stylesheet_data()) + \"\\n\" + \"</style>\"\n      }, $Stylesheets_embed_coderay_stylesheet$8.$$arity = 0);\n      \n      Opal.def(self, '$write_coderay_stylesheet', $Stylesheets_write_coderay_stylesheet$9 = function $$write_coderay_stylesheet(target_dir) {\n        var self = this;\n\n        \n        \n        if (target_dir == null) {\n          target_dir = \".\";\n        };\n        return $$$('::', 'File').$write($$$('::', 'File').$join(target_dir, self.$coderay_stylesheet_name()), self.$coderay_stylesheet_data(), $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}));\n      }, $Stylesheets_write_coderay_stylesheet$9.$$arity = -1);\n      \n      Opal.def(self, '$pygments_stylesheet_name', $Stylesheets_pygments_stylesheet_name$10 = function $$pygments_stylesheet_name(style) {\n        var self = this;\n\n        \n        \n        if (style == null) {\n          style = nil;\n        };\n        return $$($nesting, 'SyntaxHighlighter').$for(\"pygments\").$stylesheet_basename(style);\n      }, $Stylesheets_pygments_stylesheet_name$10.$$arity = -1);\n      \n      Opal.def(self, '$pygments_stylesheet_data', $Stylesheets_pygments_stylesheet_data$11 = function $$pygments_stylesheet_data(style) {\n        var self = this;\n\n        \n        \n        if (style == null) {\n          style = nil;\n        };\n        return $$($nesting, 'SyntaxHighlighter').$for(\"pygments\").$read_stylesheet(style);\n      }, $Stylesheets_pygments_stylesheet_data$11.$$arity = -1);\n      \n      Opal.def(self, '$embed_pygments_stylesheet', $Stylesheets_embed_pygments_stylesheet$12 = function $$embed_pygments_stylesheet(style) {\n        var self = this;\n\n        \n        \n        if (style == null) {\n          style = nil;\n        };\n        return \"\" + \"<style>\\n\" + (self.$pygments_stylesheet_data(style)) + \"\\n\" + \"</style>\";\n      }, $Stylesheets_embed_pygments_stylesheet$12.$$arity = -1);\n      return (Opal.def(self, '$write_pygments_stylesheet', $Stylesheets_write_pygments_stylesheet$13 = function $$write_pygments_stylesheet(target_dir, style) {\n        var self = this;\n\n        \n        \n        if (target_dir == null) {\n          target_dir = \".\";\n        };\n        \n        if (style == null) {\n          style = nil;\n        };\n        return $$$('::', 'File').$write($$$('::', 'File').$join(target_dir, self.$pygments_stylesheet_name(style)), self.$pygments_stylesheet_data(style), $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}));\n      }, $Stylesheets_write_pygments_stylesheet$13.$$arity = -1), nil) && 'write_pygments_stylesheet';\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/table\"] = function(Opal) {\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  function $rb_divide(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$attr_accessor', '$attr_reader', '$new', '$[]', '$>', '$to_i', '$<', '$==', '$[]=', '$-', '$attributes', '$truncate', '$*', '$/', '$to_f', '$empty?', '$body', '$each', '$<<', '$size', '$+', '$assign_column_widths', '$warn', '$logger', '$update_attributes', '$assign_width', '$round', '$map', '$shift', '$reinitialize', '$head=', '$nil?', '$unshift', '$pop', '$foot=', '$parent', '$sourcemap', '$dup', '$header_row?', '$table', '$style', '$merge', '$delete', '$===', '$start_with?', '$rstrip', '$slice', '$length', '$advance', '$lstrip', '$strip', '$split', '$include?', '$readlines', '$catalog_inline_anchor', '$=~', '$apply_subs', '$attr_writer', '$convert', '$text', '$!=', '$file', '$lineno', '$include', '$to_set', '$mark', '$key?', '$nested?', '$document', '$error', '$message_with_context', '$cursor_at_prev_line', '$nil_or_empty?', '$escape', '$columns', '$match', '$chop', '$end_with?', '$gsub', '$!', '$push_cellspec', '$cell_open?', '$close_cell', '$take_cellspec', '$squeeze', '$upto', '$times', '$cursor_before_mark', '$rowspan', '$activate_rowspan', '$colspan', '$end_of_row?', '$close_row', '$private', '$rows', '$effective_column_visits']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Table');\n\n      var $nesting = [self].concat($parent_nesting), $Table_initialize$4, $Table_header_row$ques$5, $Table_create_columns$6, $Table_assign_column_widths$8, $Table_partition_header_footer$12;\n\n      self.$$prototype.attributes = self.$$prototype.document = self.$$prototype.has_header_option = self.$$prototype.rows = self.$$prototype.columns = nil;\n      \n      Opal.const_set($nesting[0], 'DEFAULT_PRECISION', 4);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Rows');\n\n        var $nesting = [self].concat($parent_nesting), $Rows_initialize$1, $Rows_by_section$2, $Rows_to_h$3;\n\n        self.$$prototype.head = self.$$prototype.body = self.$$prototype.foot = nil;\n        \n        self.$attr_accessor(\"head\", \"foot\", \"body\");\n        \n        Opal.def(self, '$initialize', $Rows_initialize$1 = function $$initialize(head, foot, body) {\n          var self = this;\n\n          \n          \n          if (head == null) {\n            head = [];\n          };\n          \n          if (foot == null) {\n            foot = [];\n          };\n          \n          if (body == null) {\n            body = [];\n          };\n          self.head = head;\n          self.foot = foot;\n          return (self.body = body);\n        }, $Rows_initialize$1.$$arity = -1);\n        Opal.alias(self, \"[]\", \"send\");\n        \n        Opal.def(self, '$by_section', $Rows_by_section$2 = function $$by_section() {\n          var self = this;\n\n          return [[\"head\", self.head], [\"body\", self.body], [\"foot\", self.foot]]\n        }, $Rows_by_section$2.$$arity = 0);\n        return (Opal.def(self, '$to_h', $Rows_to_h$3 = function $$to_h() {\n          var self = this;\n\n          return $hash2([\"head\", \"body\", \"foot\"], {\"head\": self.head, \"body\": self.body, \"foot\": self.foot})\n        }, $Rows_to_h$3.$$arity = 0), nil) && 'to_h';\n      })($nesting[0], null, $nesting);\n      self.$attr_accessor(\"columns\");\n      self.$attr_accessor(\"rows\");\n      self.$attr_accessor(\"has_header_option\");\n      self.$attr_reader(\"caption\");\n      \n      Opal.def(self, '$initialize', $Table_initialize$4 = function $$initialize(parent, attributes) {\n        var $a, $b, $iter = $Table_initialize$4.$$p, $yield = $iter || nil, self = this, pcwidth = nil, pcwidth_intval = nil, $writer = nil, abswidth_val = nil;\n\n        if ($iter) $Table_initialize$4.$$p = null;\n        \n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Table_initialize$4, false), [parent, \"table\"], null);\n        self.rows = $$($nesting, 'Rows').$new();\n        self.columns = [];\n        self.has_header_option = false;\n        if ($truthy((pcwidth = attributes['$[]'](\"width\")))) {\n          if ($truthy(($truthy($a = $rb_gt((pcwidth_intval = pcwidth.$to_i()), 100)) ? $a : $rb_lt(pcwidth_intval, 1)))) {\n            if ($truthy((($a = pcwidth_intval['$=='](0)) ? ($truthy($b = pcwidth['$=='](\"0\")) ? $b : pcwidth['$=='](\"0%\")) : pcwidth_intval['$=='](0)))) {\n            } else {\n              pcwidth_intval = 100\n            }}\n        } else {\n          pcwidth_intval = 100\n        };\n        \n        $writer = [\"tablepcwidth\", pcwidth_intval];\n        $send(self.attributes, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        if ($truthy(self.document.$attributes()['$[]'](\"pagewidth\"))) {\n          \n          $writer = [\"tableabswidth\", (function() {if ((abswidth_val = $rb_times($rb_divide(pcwidth_intval, 100), self.document.$attributes()['$[]'](\"pagewidth\").$to_f()).$truncate($$($nesting, 'DEFAULT_PRECISION')))['$=='](abswidth_val.$to_i())) {\n            return abswidth_val.$to_i()\n          } else {\n            return abswidth_val\n          }; return nil; })()];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(attributes['$[]'](\"rotate-option\"))) {\n          \n          $writer = [\"orientation\", \"landscape\"];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        } else {\n          return nil\n        };\n      }, $Table_initialize$4.$$arity = 2);\n      \n      Opal.def(self, '$header_row?', $Table_header_row$ques$5 = function() {\n        var $a, self = this, val = nil;\n\n        if ($truthy(($truthy($a = (val = self.has_header_option)) ? self.rows.$body()['$empty?']() : $a))) {\n          return val\n        } else {\n          return nil\n        }\n      }, $Table_header_row$ques$5.$$arity = 0);\n      \n      Opal.def(self, '$create_columns', $Table_create_columns$6 = function $$create_columns(colspecs) {\n        var $$7, $a, self = this, cols = nil, autowidth_cols = nil, width_base = nil, num_cols = nil, $writer = nil;\n\n        \n        cols = [];\n        autowidth_cols = nil;\n        width_base = 0;\n        $send(colspecs, 'each', [], ($$7 = function(colspec){var self = $$7.$$s || this, $a, colwidth = nil;\n\n        \n          \n          if (colspec == null) {\n            colspec = nil;\n          };\n          colwidth = colspec['$[]'](\"width\");\n          cols['$<<']($$($nesting, 'Column').$new(self, cols.$size(), colspec));\n          if ($truthy($rb_lt(colwidth, 0))) {\n            return (autowidth_cols = ($truthy($a = autowidth_cols) ? $a : []))['$<<'](cols['$[]'](-1))\n          } else {\n            return (width_base = $rb_plus(width_base, colwidth))\n          };}, $$7.$$s = self, $$7.$$arity = 1, $$7));\n        if ($truthy($rb_gt((num_cols = (self.columns = cols).$size()), 0))) {\n          \n          \n          $writer = [\"colcount\", num_cols];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          if ($truthy(($truthy($a = $rb_gt(width_base, 0)) ? $a : autowidth_cols))) {\n          } else {\n            width_base = nil\n          };\n          self.$assign_column_widths(width_base, autowidth_cols);};\n        return nil;\n      }, $Table_create_columns$6.$$arity = 1);\n      \n      Opal.def(self, '$assign_column_widths', $Table_assign_column_widths$8 = function $$assign_column_widths(width_base, autowidth_cols) {\n        var $$9, $$10, $$11, self = this, precision = nil, total_width = nil, col_pcwidth = nil, autowidth = nil, autowidth_attrs = nil;\n\n        \n        \n        if (width_base == null) {\n          width_base = nil;\n        };\n        \n        if (autowidth_cols == null) {\n          autowidth_cols = nil;\n        };\n        precision = $$($nesting, 'DEFAULT_PRECISION');\n        total_width = (col_pcwidth = 0);\n        if ($truthy(width_base)) {\n          \n          if ($truthy(autowidth_cols)) {\n            \n            if ($truthy($rb_gt(width_base, 100))) {\n              \n              autowidth = 0;\n              self.$logger().$warn(\"\" + \"total column width must not exceed 100% when using autowidth columns; got \" + (width_base) + \"%\");\n            } else {\n              \n              autowidth = $rb_divide($rb_minus(100, width_base), autowidth_cols.$size()).$truncate(precision);\n              if (autowidth.$to_i()['$=='](autowidth)) {\n                autowidth = autowidth.$to_i()};\n              width_base = 100;\n            };\n            autowidth_attrs = $hash2([\"width\", \"autowidth-option\"], {\"width\": autowidth, \"autowidth-option\": \"\"});\n            $send(autowidth_cols, 'each', [], ($$9 = function(col){var self = $$9.$$s || this;\n\n            \n              \n              if (col == null) {\n                col = nil;\n              };\n              return col.$update_attributes(autowidth_attrs);}, $$9.$$s = self, $$9.$$arity = 1, $$9));};\n          $send(self.columns, 'each', [], ($$10 = function(col){var self = $$10.$$s || this;\n\n          \n            \n            if (col == null) {\n              col = nil;\n            };\n            return (total_width = $rb_plus(total_width, (col_pcwidth = col.$assign_width(nil, width_base, precision))));}, $$10.$$s = self, $$10.$$arity = 1, $$10));\n        } else {\n          \n          col_pcwidth = $rb_divide(100, self.columns.$size()).$truncate(precision);\n          if (col_pcwidth.$to_i()['$=='](col_pcwidth)) {\n            col_pcwidth = col_pcwidth.$to_i()};\n          $send(self.columns, 'each', [], ($$11 = function(col){var self = $$11.$$s || this;\n\n          \n            \n            if (col == null) {\n              col = nil;\n            };\n            return (total_width = $rb_plus(total_width, col.$assign_width(col_pcwidth, nil, precision)));}, $$11.$$s = self, $$11.$$arity = 1, $$11));\n        };\n        if (total_width['$=='](100)) {\n        } else {\n          self.columns['$[]'](-1).$assign_width($rb_plus($rb_minus(100, total_width), col_pcwidth).$round(precision), nil, precision)\n        };\n        return nil;\n      }, $Table_assign_column_widths$8.$$arity = -1);\n      return (Opal.def(self, '$partition_header_footer', $Table_partition_header_footer$12 = function $$partition_header_footer(attrs) {\n        var $$13, $$14, $a, self = this, num_body_rows = nil, $writer = nil, body = nil;\n\n        \n        num_body_rows = (($writer = [\"rowcount\", (body = self.rows.$body()).$size()]), $send(self.attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]);\n        if ($truthy($rb_gt(num_body_rows, 0))) {\n          if ($truthy(self.has_header_option)) {\n            \n            \n            $writer = [[$send(body.$shift(), 'map', [], ($$13 = function(cell){var self = $$13.$$s || this;\n\n            \n              \n              if (cell == null) {\n                cell = nil;\n              };\n              return cell.$reinitialize(true);}, $$13.$$s = self, $$13.$$arity = 1, $$13))]];\n            $send(self.rows, 'head=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            num_body_rows = $rb_minus(num_body_rows, 1);\n          } else if ($truthy(self.has_header_option['$nil?']())) {\n            \n            self.has_header_option = false;\n            body.$unshift($send(body.$shift(), 'map', [], ($$14 = function(cell){var self = $$14.$$s || this;\n\n            \n              \n              if (cell == null) {\n                cell = nil;\n              };\n              return cell.$reinitialize(false);}, $$14.$$s = self, $$14.$$arity = 1, $$14)));}};\n        if ($truthy(($truthy($a = $rb_gt(num_body_rows, 0)) ? attrs['$[]'](\"footer-option\") : $a))) {\n          \n          $writer = [[body.$pop()]];\n          $send(self.rows, 'foot=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        return nil;\n      }, $Table_partition_header_footer$12.$$arity = 1), nil) && 'partition_header_footer';\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Column');\n\n      var $nesting = [self].concat($parent_nesting), $Column_initialize$15, $Column_assign_width$16, $Column_block$ques$17, $Column_inline$ques$18;\n\n      self.$$prototype.attributes = nil;\n      \n      self.$attr_accessor(\"style\");\n      \n      Opal.def(self, '$initialize', $Column_initialize$15 = function $$initialize(table, index, attributes) {\n        var $a, $iter = $Column_initialize$15.$$p, $yield = $iter || nil, self = this, $writer = nil;\n\n        if ($iter) $Column_initialize$15.$$p = null;\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Column_initialize$15, false), [table, \"table_column\"], null);\n        self.style = attributes['$[]'](\"style\");\n        \n        $writer = [\"colnumber\", $rb_plus(index, 1)];\n        $send(attributes, '[]=', Opal.to_a($writer));\n        $writer[$rb_minus($writer[\"length\"], 1)];;\n        ($truthy($a = attributes['$[]'](\"width\")) ? $a : (($writer = [\"width\", 1]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attributes['$[]'](\"halign\")) ? $a : (($writer = [\"halign\", \"left\"]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        ($truthy($a = attributes['$[]'](\"valign\")) ? $a : (($writer = [\"valign\", \"top\"]), $send(attributes, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        return self.$update_attributes(attributes);\n      }, $Column_initialize$15.$$arity = -3);\n      Opal.alias(self, \"table\", \"parent\");\n      \n      Opal.def(self, '$assign_width', $Column_assign_width$16 = function $$assign_width(col_pcwidth, width_base, precision) {\n        var self = this, $writer = nil, col_abswidth = nil;\n\n        \n        if ($truthy(width_base)) {\n          \n          col_pcwidth = $rb_divide($rb_times(self.attributes['$[]'](\"width\").$to_f(), 100), width_base).$truncate(precision);\n          if (col_pcwidth.$to_i()['$=='](col_pcwidth)) {\n            col_pcwidth = col_pcwidth.$to_i()};};\n        if ($truthy(self.$parent().$attributes()['$[]'](\"tableabswidth\"))) {\n          \n          $writer = [\"colabswidth\", (function() {if ((col_abswidth = $rb_times($rb_divide(col_pcwidth, 100), self.$parent().$attributes()['$[]'](\"tableabswidth\")).$truncate(precision))['$=='](col_abswidth.$to_i())) {\n            return col_abswidth.$to_i()\n          } else {\n            return col_abswidth\n          }; return nil; })()];\n          $send(self.attributes, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        \n        $writer = [\"colpcwidth\", col_pcwidth];\n        $send(self.attributes, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];;\n      }, $Column_assign_width$16.$$arity = 3);\n      \n      Opal.def(self, '$block?', $Column_block$ques$17 = function() {\n        var self = this;\n\n        return false\n      }, $Column_block$ques$17.$$arity = 0);\n      return (Opal.def(self, '$inline?', $Column_inline$ques$18 = function() {\n        var self = this;\n\n        return false\n      }, $Column_inline$ques$18.$$arity = 0), nil) && 'inline?';\n    })($$($nesting, 'Table'), $$($nesting, 'AbstractNode'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Cell');\n\n      var $nesting = [self].concat($parent_nesting), $Cell_initialize$19, $Cell_reinitialize$20, $Cell_catalog_inline_anchor$21, $Cell_text$22, $Cell_content$23, $Cell_lines$25, $Cell_source$26, $Cell_file$27, $Cell_lineno$28, $Cell_to_s$29;\n\n      self.$$prototype.document = self.$$prototype.reinitialize_args = self.$$prototype.attributes = self.$$prototype.cursor = self.$$prototype.text = self.$$prototype.subs = self.$$prototype.style = self.$$prototype.inner_document = self.$$prototype.source_location = self.$$prototype.colspan = self.$$prototype.rowspan = nil;\n      \n      Opal.const_set($nesting[0], 'DOUBLE_LF', $rb_times($$($nesting, 'LF'), 2));\n      self.$attr_accessor(\"colspan\");\n      self.$attr_accessor(\"rowspan\");\n      Opal.alias(self, \"column\", \"parent\");\n      self.$attr_reader(\"inner_document\");\n      \n      Opal.def(self, '$initialize', $Cell_initialize$19 = function $$initialize(column, cell_text, attributes, opts) {\n        var $a, $b, $c, $iter = $Cell_initialize$19.$$p, $yield = $iter || nil, self = this, in_header_row = nil, cell_style = nil, $case = nil, asciidoc = nil, inner_document_cursor = nil, lines_advanced = nil, literal = nil, normal_psv = nil, parent_doctitle = nil, inner_document_lines = nil, unprocessed_line1 = nil, preprocessed_lines = nil, $writer = nil;\n\n        if ($iter) $Cell_initialize$19.$$p = null;\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $Cell_initialize$19, false), [column, \"table_cell\"], null);\n        self.cursor = (self.reinitialize_args = nil);\n        if ($truthy(self.document.$sourcemap())) {\n          self.source_location = opts['$[]'](\"cursor\").$dup()};\n        if ($truthy(column)) {\n          \n          if ($truthy((in_header_row = column.$table()['$header_row?']()))) {\n            if ($truthy((($a = in_header_row['$=='](\"implicit\")) ? (cell_style = ($truthy($b = column.$style()) ? $b : ($truthy($c = attributes) ? attributes['$[]'](\"style\") : $c))) : in_header_row['$=='](\"implicit\")))) {\n              \n              if ($truthy(($truthy($a = cell_style['$=='](\"asciidoc\")) ? $a : cell_style['$=='](\"literal\")))) {\n                self.reinitialize_args = [column, cell_text, ($truthy($a = attributes) ? attributes.$merge() : $a), opts]};\n              cell_style = nil;}\n          } else {\n            cell_style = column.$style()\n          };\n          self.$update_attributes(column.$attributes());};\n        if ($truthy(attributes)) {\n          \n          if ($truthy(attributes['$empty?']())) {\n            self.colspan = (self.rowspan = nil)\n          } else {\n            \n            $a = [attributes.$delete(\"colspan\"), attributes.$delete(\"rowspan\")], (self.colspan = $a[0]), (self.rowspan = $a[1]), $a;\n            if ($truthy(in_header_row)) {\n            } else {\n              cell_style = ($truthy($a = attributes['$[]'](\"style\")) ? $a : cell_style)\n            };\n            self.$update_attributes(attributes);\n          };\n          $case = cell_style;\n          if (\"asciidoc\"['$===']($case)) {\n          asciidoc = true;\n          inner_document_cursor = opts['$[]'](\"cursor\");\n          if ($truthy((cell_text = cell_text.$rstrip())['$start_with?']($$($nesting, 'LF')))) {\n            \n            lines_advanced = 1;\n            while ($truthy((cell_text = cell_text.$slice(1, cell_text.$length()))['$start_with?']($$($nesting, 'LF')))) {\n              lines_advanced = $rb_plus(lines_advanced, 1)\n            };\n            inner_document_cursor.$advance(lines_advanced);\n          } else {\n            cell_text = cell_text.$lstrip()\n          };}\n          else if (\"literal\"['$===']($case)) {\n          literal = true;\n          cell_text = cell_text.$rstrip();\n          while ($truthy(cell_text['$start_with?']($$($nesting, 'LF')))) {\n            cell_text = cell_text.$slice(1, cell_text.$length())\n          };}\n          else {\n          normal_psv = true;\n          cell_text = (function() {if ($truthy(cell_text)) {\n            return cell_text.$strip()\n          } else {\n            return \"\"\n          }; return nil; })();};\n        } else {\n          \n          self.colspan = (self.rowspan = nil);\n          if (cell_style['$=='](\"asciidoc\")) {\n            \n            asciidoc = true;\n            inner_document_cursor = opts['$[]'](\"cursor\");};\n        };\n        if ($truthy(asciidoc)) {\n          \n          parent_doctitle = self.document.$attributes().$delete(\"doctitle\");\n          inner_document_lines = cell_text.$split($$($nesting, 'LF'), -1);\n          if ($truthy(inner_document_lines['$empty?']())) {\n          } else if ($truthy((unprocessed_line1 = inner_document_lines['$[]'](0))['$include?'](\"::\"))) {\n            \n            preprocessed_lines = $$($nesting, 'PreprocessorReader').$new(self.document, [unprocessed_line1]).$readlines();\n            if ($truthy((($a = unprocessed_line1['$=='](preprocessed_lines['$[]'](0))) ? $rb_lt(preprocessed_lines.$size(), 2) : unprocessed_line1['$=='](preprocessed_lines['$[]'](0))))) {\n            } else {\n              \n              inner_document_lines.$shift();\n              if ($truthy(preprocessed_lines['$empty?']())) {\n              } else {\n                $send(inner_document_lines, 'unshift', Opal.to_a(preprocessed_lines))\n              };\n            };};\n          self.inner_document = $$($nesting, 'Document').$new(inner_document_lines, $hash2([\"standalone\", \"parent\", \"cursor\"], {\"standalone\": false, \"parent\": self.document, \"cursor\": inner_document_cursor}));\n          if ($truthy(parent_doctitle['$nil?']())) {\n          } else {\n            \n            $writer = [\"doctitle\", parent_doctitle];\n            $send(self.document.$attributes(), '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          self.subs = nil;\n        } else if ($truthy(literal)) {\n          \n          self.content_model = \"verbatim\";\n          self.subs = $$($nesting, 'BASIC_SUBS');\n        } else {\n          \n          if ($truthy(normal_psv)) {\n            if ($truthy(in_header_row)) {\n              self.cursor = opts['$[]'](\"cursor\")\n            } else {\n              self.$catalog_inline_anchor(cell_text, opts['$[]'](\"cursor\"))\n            }};\n          self.content_model = \"simple\";\n          self.subs = $$($nesting, 'NORMAL_SUBS');\n        };\n        self.text = cell_text;\n        return (self.style = cell_style);\n      }, $Cell_initialize$19.$$arity = -3);\n      \n      Opal.def(self, '$reinitialize', $Cell_reinitialize$20 = function $$reinitialize(has_header) {\n        var self = this;\n\n        \n        if ($truthy(has_header)) {\n          self.reinitialize_args = nil\n        } else if ($truthy(self.reinitialize_args)) {\n          return $send($$$($$($nesting, 'Table'), 'Cell'), 'new', Opal.to_a(self.reinitialize_args))\n        } else {\n          self.style = self.attributes['$[]'](\"style\")\n        };\n        if ($truthy(self.cursor)) {\n          self.$catalog_inline_anchor()};\n        return self;\n      }, $Cell_reinitialize$20.$$arity = 1);\n      \n      Opal.def(self, '$catalog_inline_anchor', $Cell_catalog_inline_anchor$21 = function $$catalog_inline_anchor(cell_text, cursor) {\n        var $a, self = this;\n\n        \n        \n        if (cell_text == null) {\n          cell_text = self.text;\n        };\n        \n        if (cursor == null) {\n          cursor = nil;\n        };\n        if ($truthy(cursor)) {\n        } else {\n          $a = [self.cursor, nil], (cursor = $a[0]), (self.cursor = $a[1]), $a\n        };\n        if ($truthy(($truthy($a = cell_text['$start_with?'](\"[[\")) ? $$($nesting, 'LeadingInlineAnchorRx')['$=~'](cell_text) : $a))) {\n          return $$($nesting, 'Parser').$catalog_inline_anchor((($a = $gvars['~']) === nil ? nil : $a['$[]'](1)), (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)), self, cursor, self.document)\n        } else {\n          return nil\n        };\n      }, $Cell_catalog_inline_anchor$21.$$arity = -1);\n      \n      Opal.def(self, '$text', $Cell_text$22 = function $$text() {\n        var self = this;\n\n        return self.$apply_subs(self.text, self.subs)\n      }, $Cell_text$22.$$arity = 0);\n      self.$attr_writer(\"text\");\n      \n      Opal.def(self, '$content', $Cell_content$23 = function $$content() {\n        var $$24, $a, self = this, cell_style = nil, subbed_text = nil;\n\n        if ((cell_style = self.style)['$=='](\"asciidoc\")) {\n          return self.inner_document.$convert()\n        } else if ($truthy(self.text['$include?']($$($nesting, 'DOUBLE_LF')))) {\n          return $send(self.$text().$split($$($nesting, 'BlankLineRx')), 'map', [], ($$24 = function(para){var self = $$24.$$s || this, $a;\n\n          \n            \n            if (para == null) {\n              para = nil;\n            };\n            if ($truthy(($truthy($a = cell_style) ? cell_style['$!='](\"header\") : $a))) {\n              return $$($nesting, 'Inline').$new(self.$parent(), \"quoted\", para, $hash2([\"type\"], {\"type\": cell_style})).$convert()\n            } else {\n              return para\n            };}, $$24.$$s = self, $$24.$$arity = 1, $$24))\n        } else if ($truthy((subbed_text = self.$text())['$empty?']())) {\n          return []\n        } else if ($truthy(($truthy($a = cell_style) ? cell_style['$!='](\"header\") : $a))) {\n          return [$$($nesting, 'Inline').$new(self.$parent(), \"quoted\", subbed_text, $hash2([\"type\"], {\"type\": cell_style})).$convert()]\n        } else {\n          return [subbed_text]\n        }\n      }, $Cell_content$23.$$arity = 0);\n      \n      Opal.def(self, '$lines', $Cell_lines$25 = function $$lines() {\n        var self = this;\n\n        return self.text.$split($$($nesting, 'LF'))\n      }, $Cell_lines$25.$$arity = 0);\n      \n      Opal.def(self, '$source', $Cell_source$26 = function $$source() {\n        var self = this;\n\n        return self.text\n      }, $Cell_source$26.$$arity = 0);\n      \n      Opal.def(self, '$file', $Cell_file$27 = function $$file() {\n        var $a, self = this;\n\n        return ($truthy($a = self.source_location) ? self.source_location.$file() : $a)\n      }, $Cell_file$27.$$arity = 0);\n      \n      Opal.def(self, '$lineno', $Cell_lineno$28 = function $$lineno() {\n        var $a, self = this;\n\n        return ($truthy($a = self.source_location) ? self.source_location.$lineno() : $a)\n      }, $Cell_lineno$28.$$arity = 0);\n      return (Opal.def(self, '$to_s', $Cell_to_s$29 = function $$to_s() {\n        var $a, $iter = $Cell_to_s$29.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Cell_to_s$29.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        return \"\" + ($send(self, Opal.find_super_dispatcher(self, 'to_s', $Cell_to_s$29, false), $zuper, $iter)) + \" - [text: \" + (self.text) + \", colspan: \" + (($truthy($a = self.colspan) ? $a : 1)) + \", rowspan: \" + (($truthy($a = self.rowspan) ? $a : 1)) + \", attributes: \" + (self.attributes) + \"]\"\n      }, $Cell_to_s$29.$$arity = 0), nil) && 'to_s';\n    })($$($nesting, 'Table'), $$($nesting, 'AbstractBlock'), $nesting);\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'ParserContext');\n\n      var $nesting = [self].concat($parent_nesting), $ParserContext_initialize$30, $ParserContext_starts_with_delimiter$ques$31, $ParserContext_match_delimiter$32, $ParserContext_skip_past_delimiter$33, $ParserContext_skip_past_escaped_delimiter$34, $ParserContext_buffer_has_unclosed_quotes$ques$35, $ParserContext_take_cellspec$36, $ParserContext_push_cellspec$37, $ParserContext_keep_cell_open$38, $ParserContext_mark_cell_closed$39, $ParserContext_cell_open$ques$40, $ParserContext_cell_closed$ques$41, $ParserContext_close_open_cell$42, $ParserContext_close_cell$43, $ParserContext_close_row$46, $ParserContext_activate_rowspan$47, $ParserContext_end_of_row$ques$49, $ParserContext_effective_column_visits$50, $ParserContext_advance$51;\n\n      self.$$prototype.delimiter = self.$$prototype.delimiter_rx = self.$$prototype.buffer = self.$$prototype.cellspecs = self.$$prototype.cell_open = self.$$prototype.format = self.$$prototype.start_cursor_data = self.$$prototype.reader = self.$$prototype.table = self.$$prototype.current_row = self.$$prototype.colcount = self.$$prototype.column_visits = self.$$prototype.active_rowspans = self.$$prototype.linenum = nil;\n      \n      self.$include($$($nesting, 'Logging'));\n      Opal.const_set($nesting[0], 'FORMATS', [\"psv\", \"csv\", \"dsv\", \"tsv\"].$to_set());\n      Opal.const_set($nesting[0], 'DELIMITERS', $hash2([\"psv\", \"csv\", \"dsv\", \"tsv\", \"!sv\"], {\"psv\": [\"|\", /\\|/], \"csv\": [\",\", /,/], \"dsv\": [\":\", /:/], \"tsv\": [\"\\t\", /\\t/], \"!sv\": [\"!\", /!/]}));\n      self.$attr_accessor(\"table\");\n      self.$attr_accessor(\"format\");\n      self.$attr_reader(\"colcount\");\n      self.$attr_accessor(\"buffer\");\n      self.$attr_reader(\"delimiter\");\n      self.$attr_reader(\"delimiter_re\");\n      \n      Opal.def(self, '$initialize', $ParserContext_initialize$30 = function $$initialize(reader, table, attributes) {\n        var $a, $b, self = this, xsv = nil, sep = nil;\n\n        \n        \n        if (attributes == null) {\n          attributes = $hash2([], {});\n        };\n        self.start_cursor_data = (self.reader = reader).$mark();\n        self.table = table;\n        if ($truthy(attributes['$key?'](\"format\"))) {\n          if ($truthy($$($nesting, 'FORMATS')['$include?']((xsv = attributes['$[]'](\"format\"))))) {\n            if (xsv['$=='](\"tsv\")) {\n              self.format = \"csv\"\n            } else if ($truthy((($a = (self.format = xsv)['$=='](\"psv\")) ? table.$document()['$nested?']() : (self.format = xsv)['$=='](\"psv\")))) {\n              xsv = \"!sv\"}\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"\" + \"illegal table format: \" + (xsv), $hash2([\"source_location\"], {\"source_location\": reader.$cursor_at_prev_line()})));\n            $a = [\"psv\", (function() {if ($truthy(table.$document()['$nested?']())) {\n              return \"!sv\"\n            } else {\n              return \"psv\"\n            }; return nil; })()], (self.format = $a[0]), (xsv = $a[1]), $a;\n          }\n        } else {\n          $a = [\"psv\", (function() {if ($truthy(table.$document()['$nested?']())) {\n            return \"!sv\"\n          } else {\n            return \"psv\"\n          }; return nil; })()], (self.format = $a[0]), (xsv = $a[1]), $a\n        };\n        if ($truthy(attributes['$key?'](\"separator\"))) {\n          if ($truthy((sep = attributes['$[]'](\"separator\"))['$nil_or_empty?']())) {\n            $b = $$($nesting, 'DELIMITERS')['$[]'](xsv), $a = Opal.to_ary($b), (self.delimiter = ($a[0] == null ? nil : $a[0])), (self.delimiter_rx = ($a[1] == null ? nil : $a[1])), $b\n          } else if (sep['$=='](\"\\\\t\")) {\n            $b = $$($nesting, 'DELIMITERS')['$[]'](\"tsv\"), $a = Opal.to_ary($b), (self.delimiter = ($a[0] == null ? nil : $a[0])), (self.delimiter_rx = ($a[1] == null ? nil : $a[1])), $b\n          } else {\n            $a = [sep, new RegExp($$$('::', 'Regexp').$escape(sep))], (self.delimiter = $a[0]), (self.delimiter_rx = $a[1]), $a\n          }\n        } else {\n          $b = $$($nesting, 'DELIMITERS')['$[]'](xsv), $a = Opal.to_ary($b), (self.delimiter = ($a[0] == null ? nil : $a[0])), (self.delimiter_rx = ($a[1] == null ? nil : $a[1])), $b\n        };\n        self.colcount = (function() {if ($truthy(table.$columns()['$empty?']())) {\n          return -1\n        } else {\n          return table.$columns().$size()\n        }; return nil; })();\n        self.buffer = \"\";\n        self.cellspecs = [];\n        self.cell_open = false;\n        self.active_rowspans = [0];\n        self.column_visits = 0;\n        self.current_row = [];\n        return (self.linenum = -1);\n      }, $ParserContext_initialize$30.$$arity = -3);\n      \n      Opal.def(self, '$starts_with_delimiter?', $ParserContext_starts_with_delimiter$ques$31 = function(line) {\n        var self = this;\n\n        return line['$start_with?'](self.delimiter)\n      }, $ParserContext_starts_with_delimiter$ques$31.$$arity = 1);\n      \n      Opal.def(self, '$match_delimiter', $ParserContext_match_delimiter$32 = function $$match_delimiter(line) {\n        var self = this;\n\n        return self.delimiter_rx.$match(line)\n      }, $ParserContext_match_delimiter$32.$$arity = 1);\n      \n      Opal.def(self, '$skip_past_delimiter', $ParserContext_skip_past_delimiter$33 = function $$skip_past_delimiter(pre) {\n        var self = this;\n\n        \n        self.buffer = \"\" + (self.buffer) + (pre) + (self.delimiter);\n        return nil;\n      }, $ParserContext_skip_past_delimiter$33.$$arity = 1);\n      \n      Opal.def(self, '$skip_past_escaped_delimiter', $ParserContext_skip_past_escaped_delimiter$34 = function $$skip_past_escaped_delimiter(pre) {\n        var self = this;\n\n        \n        self.buffer = \"\" + (self.buffer) + (pre.$chop()) + (self.delimiter);\n        return nil;\n      }, $ParserContext_skip_past_escaped_delimiter$34.$$arity = 1);\n      \n      Opal.def(self, '$buffer_has_unclosed_quotes?', $ParserContext_buffer_has_unclosed_quotes$ques$35 = function(append, q) {\n        var $a, $b, self = this, record = nil, qq = nil, trailing_quote = nil;\n\n        \n        \n        if (append == null) {\n          append = nil;\n        };\n        \n        if (q == null) {\n          q = \"\\\"\";\n        };\n        if ((record = (function() {if ($truthy(append)) {\n          return $rb_plus(self.buffer, append).$strip()\n        } else {\n          return self.buffer.$strip()\n        }; return nil; })())['$=='](q)) {\n          return true\n        } else if ($truthy(record['$start_with?'](q))) {\n          \n          qq = $rb_plus(q, q);\n          if ($truthy(($truthy($a = ($truthy($b = (trailing_quote = record['$end_with?'](q))) ? record['$end_with?'](qq) : $b)) ? $a : record['$start_with?'](qq)))) {\n            return ($truthy($a = (record = record.$gsub(qq, \"\"))['$start_with?'](q)) ? record['$end_with?'](q)['$!']() : $a)\n          } else {\n            return trailing_quote['$!']()\n          };\n        } else {\n          return false\n        };\n      }, $ParserContext_buffer_has_unclosed_quotes$ques$35.$$arity = -1);\n      \n      Opal.def(self, '$take_cellspec', $ParserContext_take_cellspec$36 = function $$take_cellspec() {\n        var self = this;\n\n        return self.cellspecs.$shift()\n      }, $ParserContext_take_cellspec$36.$$arity = 0);\n      \n      Opal.def(self, '$push_cellspec', $ParserContext_push_cellspec$37 = function $$push_cellspec(cellspec) {\n        var $a, self = this;\n\n        \n        \n        if (cellspec == null) {\n          cellspec = $hash2([], {});\n        };\n        self.cellspecs['$<<'](($truthy($a = cellspec) ? $a : $hash2([], {})));\n        return nil;\n      }, $ParserContext_push_cellspec$37.$$arity = -1);\n      \n      Opal.def(self, '$keep_cell_open', $ParserContext_keep_cell_open$38 = function $$keep_cell_open() {\n        var self = this;\n\n        \n        self.cell_open = true;\n        return nil;\n      }, $ParserContext_keep_cell_open$38.$$arity = 0);\n      \n      Opal.def(self, '$mark_cell_closed', $ParserContext_mark_cell_closed$39 = function $$mark_cell_closed() {\n        var self = this;\n\n        \n        self.cell_open = false;\n        return nil;\n      }, $ParserContext_mark_cell_closed$39.$$arity = 0);\n      \n      Opal.def(self, '$cell_open?', $ParserContext_cell_open$ques$40 = function() {\n        var self = this;\n\n        return self.cell_open\n      }, $ParserContext_cell_open$ques$40.$$arity = 0);\n      \n      Opal.def(self, '$cell_closed?', $ParserContext_cell_closed$ques$41 = function() {\n        var self = this;\n\n        return self.cell_open['$!']()\n      }, $ParserContext_cell_closed$ques$41.$$arity = 0);\n      \n      Opal.def(self, '$close_open_cell', $ParserContext_close_open_cell$42 = function $$close_open_cell(next_cellspec) {\n        var self = this;\n\n        \n        \n        if (next_cellspec == null) {\n          next_cellspec = $hash2([], {});\n        };\n        self.$push_cellspec(next_cellspec);\n        if ($truthy(self['$cell_open?']())) {\n          self.$close_cell(true)};\n        self.$advance();\n        return nil;\n      }, $ParserContext_close_open_cell$42.$$arity = -1);\n      \n      Opal.def(self, '$close_cell', $ParserContext_close_cell$43 = function $$close_cell(eol) {try {\n\n        var $a, $b, $$44, self = this, cell_text = nil, cellspec = nil, repeat = nil, q = nil;\n\n        \n        \n        if (eol == null) {\n          eol = false;\n        };\n        if (self.format['$=='](\"psv\")) {\n          \n          cell_text = self.buffer;\n          self.buffer = \"\";\n          if ($truthy((cellspec = self.$take_cellspec()))) {\n            repeat = ($truthy($a = cellspec.$delete(\"repeatcol\")) ? $a : 1)\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"table missing leading separator; recovering automatically\", $hash2([\"source_location\"], {\"source_location\": $send($$$($$($nesting, 'Reader'), 'Cursor'), 'new', Opal.to_a(self.start_cursor_data))})));\n            cellspec = $hash2([], {});\n            repeat = 1;\n          };\n        } else {\n          \n          cell_text = self.buffer.$strip();\n          self.buffer = \"\";\n          cellspec = nil;\n          repeat = 1;\n          if ($truthy(($truthy($a = (($b = self.format['$=='](\"csv\")) ? cell_text['$empty?']()['$!']() : self.format['$=='](\"csv\"))) ? cell_text['$include?']((q = \"\\\"\")) : $a))) {\n            if ($truthy(($truthy($a = cell_text['$start_with?'](q)) ? cell_text['$end_with?'](q) : $a))) {\n              if ($truthy((cell_text = cell_text.$slice(1, $rb_minus(cell_text.$length(), 2))))) {\n                cell_text = cell_text.$strip().$squeeze(q)\n              } else {\n                \n                self.$logger().$error(self.$message_with_context(\"unclosed quote in CSV data; setting cell to empty\", $hash2([\"source_location\"], {\"source_location\": self.reader.$cursor_at_prev_line()})));\n                cell_text = \"\";\n              }\n            } else {\n              cell_text = cell_text.$squeeze(q)\n            }};\n        };\n        $send((1), 'upto', [repeat], ($$44 = function(i){var self = $$44.$$s || this, $c, $d, $$45, $e, column = nil, extra_cols = nil, offset = nil, cell = nil;\n          if (self.colcount == null) self.colcount = nil;\n          if (self.table == null) self.table = nil;\n          if (self.current_row == null) self.current_row = nil;\n          if (self.reader == null) self.reader = nil;\n          if (self.column_visits == null) self.column_visits = nil;\n          if (self.linenum == null) self.linenum = nil;\n\n        \n          \n          if (i == null) {\n            i = nil;\n          };\n          if (self.colcount['$=='](-1)) {\n            \n            self.table.$columns()['$<<']((column = $$$($$($nesting, 'Table'), 'Column').$new(self.table, $rb_minus($rb_plus(self.table.$columns().$size(), i), 1))));\n            if ($truthy(($truthy($c = ($truthy($d = cellspec) ? cellspec['$key?'](\"colspan\") : $d)) ? $rb_gt((extra_cols = $rb_minus(cellspec['$[]'](\"colspan\").$to_i(), 1)), 0) : $c))) {\n              \n              offset = self.table.$columns().$size();\n              $send(extra_cols, 'times', [], ($$45 = function(j){var self = $$45.$$s || this;\n                if (self.table == null) self.table = nil;\n\n              \n                \n                if (j == null) {\n                  j = nil;\n                };\n                return self.table.$columns()['$<<']($$$($$($nesting, 'Table'), 'Column').$new(self.table, $rb_plus(offset, j)));}, $$45.$$s = self, $$45.$$arity = 1, $$45));};\n          } else if ($truthy((column = self.table.$columns()['$[]'](self.current_row.$size())))) {\n          } else {\n            \n            self.$logger().$error(self.$message_with_context(\"dropping cell because it exceeds specified number of columns\", $hash2([\"source_location\"], {\"source_location\": self.reader.$cursor_before_mark()})));\n            Opal.ret(nil);\n          };\n          cell = $$$($$($nesting, 'Table'), 'Cell').$new(column, cell_text, cellspec, $hash2([\"cursor\"], {\"cursor\": self.reader.$cursor_before_mark()}));\n          self.reader.$mark();\n          if ($truthy(($truthy($c = cell.$rowspan()['$!']()) ? $c : cell.$rowspan()['$=='](1)))) {\n          } else {\n            self.$activate_rowspan(cell.$rowspan(), ($truthy($c = cell.$colspan()) ? $c : 1))\n          };\n          self.column_visits = $rb_plus(self.column_visits, ($truthy($c = cell.$colspan()) ? $c : 1));\n          self.current_row['$<<'](cell);\n          if ($truthy(($truthy($c = self['$end_of_row?']()) ? ($truthy($d = ($truthy($e = self.colcount['$!='](-1)) ? $e : $rb_gt(self.linenum, 0))) ? $d : ($truthy($e = eol) ? i['$=='](repeat) : $e)) : $c))) {\n            return self.$close_row()\n          } else {\n            return nil\n          };}, $$44.$$s = self, $$44.$$arity = 1, $$44));\n        self.cell_open = false;\n        return nil;\n        } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n      }, $ParserContext_close_cell$43.$$arity = -1);\n      self.$private();\n      \n      Opal.def(self, '$close_row', $ParserContext_close_row$46 = function $$close_row() {\n        var $a, self = this, $writer = nil;\n\n        \n        self.table.$rows().$body()['$<<'](self.current_row);\n        if (self.colcount['$=='](-1)) {\n          self.colcount = self.column_visits};\n        self.column_visits = 0;\n        self.current_row = [];\n        self.active_rowspans.$shift();\n        ($truthy($a = self.active_rowspans['$[]'](0)) ? $a : (($writer = [0, 0]), $send(self.active_rowspans, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        return nil;\n      }, $ParserContext_close_row$46.$$arity = 0);\n      \n      Opal.def(self, '$activate_rowspan', $ParserContext_activate_rowspan$47 = function $$activate_rowspan(rowspan, colspan) {\n        var $$48, self = this;\n\n        \n        $send((1), 'upto', [$rb_minus(rowspan, 1)], ($$48 = function(i){var self = $$48.$$s || this, $a, $writer = nil;\n          if (self.active_rowspans == null) self.active_rowspans = nil;\n\n        \n          \n          if (i == null) {\n            i = nil;\n          };\n          $writer = [i, $rb_plus(($truthy($a = self.active_rowspans['$[]'](i)) ? $a : 0), colspan)];\n          $send(self.active_rowspans, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$48.$$s = self, $$48.$$arity = 1, $$48));\n        return nil;\n      }, $ParserContext_activate_rowspan$47.$$arity = 2);\n      \n      Opal.def(self, '$end_of_row?', $ParserContext_end_of_row$ques$49 = function() {\n        var $a, self = this;\n\n        return ($truthy($a = self.colcount['$=='](-1)) ? $a : self.$effective_column_visits()['$=='](self.colcount))\n      }, $ParserContext_end_of_row$ques$49.$$arity = 0);\n      \n      Opal.def(self, '$effective_column_visits', $ParserContext_effective_column_visits$50 = function $$effective_column_visits() {\n        var self = this;\n\n        return $rb_plus(self.column_visits, self.active_rowspans['$[]'](0))\n      }, $ParserContext_effective_column_visits$50.$$arity = 0);\n      return (Opal.def(self, '$advance', $ParserContext_advance$51 = function $$advance() {\n        var self = this;\n\n        return (self.linenum = $rb_plus(self.linenum, 1))\n      }, $ParserContext_advance$51.$$arity = 0), nil) && 'advance';\n    })($$($nesting, 'Table'), null, $nesting);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/writer\"] = function(Opal) {\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$respond_to?', '$write', '$+', '$chomp', '$include']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    \n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Writer');\n\n      var $nesting = [self].concat($parent_nesting), $Writer_write$1;\n\n      \n      Opal.def(self, '$write', $Writer_write$1 = function $$write(output, target) {\n        var self = this;\n\n        \n        if ($truthy(target['$respond_to?'](\"write\"))) {\n          target.$write($rb_plus(output.$chomp(), $$($nesting, 'LF')))\n        } else {\n          $$$('::', 'File').$write(target, output, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}))\n        };\n        return nil;\n      }, $Writer_write$1.$$arity = 2)\n    })($nesting[0], $nesting);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'VoidWriter');\n\n      var $nesting = [self].concat($parent_nesting), $VoidWriter_write$2;\n\n      \n      self.$include($$($nesting, 'Writer'));\n      \n      Opal.def(self, '$write', $VoidWriter_write$2 = function $$write(output, target) {\n        var self = this;\n\n        return nil\n      }, $VoidWriter_write$2.$$arity = 2);\n    })($nesting[0], $nesting);\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/load\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$merge', '$[]', '$start', '$key?', '$!=', '$logger', '$new', '$logger=', '$-', '$!', '$===', '$dup', '$tap', '$each', '$partition', '$[]=', '$split', '$gsub', '$+', '$respond_to?', '$keys', '$raise', '$join', '$ancestors', '$class', '$==', '$at', '$to_i', '$mtime', '$absolute_path', '$path', '$dirname', '$basename', '$extname', '$read', '$rewind', '$drop', '$record', '$parse', '$exception', '$message', '$set_backtrace', '$backtrace', '$stack_trace', '$stack_trace=', '$open', '$load']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $load$1, $load_file$8;\n\n      \n      \n      Opal.def(self, '$load', $load$1 = function $$load(input, options) {\n        var $a, $b, $c, $d, $$2, $$4, $$6, self = this, timings = nil, logger = nil, $writer = nil, attrs = nil, input_path = nil, source = nil, doc = nil, e = nil, context = nil, wrapped_e = nil;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        try {\n          \n          options = options.$merge();\n          if ($truthy((timings = options['$[]'](\"timings\")))) {\n            timings.$start(\"read\")};\n          if ($truthy(($truthy($a = options['$key?'](\"logger\")) ? (logger = options['$[]'](\"logger\"))['$!=']($$($nesting, 'LoggerManager').$logger()) : $a))) {\n            \n            $writer = [($truthy($a = logger) ? $a : $$($nesting, 'NullLogger').$new())];\n            $send($$($nesting, 'LoggerManager'), 'logger=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ($truthy((attrs = options['$[]'](\"attributes\"))['$!']())) {\n            attrs = $hash2([], {})\n          } else if ($truthy($$$('::', 'Hash')['$==='](attrs))) {\n            attrs = attrs.$merge()\n          } else if ($truthy(($truthy($a = (($d = $$$('::', 'Java', 'skip_raise')) && ($c = $$$($d, 'JavaUtil', 'skip_raise')) && ($b = $$$($c, 'Map', 'skip_raise')) ? 'constant' : nil)) ? $$$($$$($$$('::', 'Java'), 'JavaUtil'), 'Map')['$==='](attrs) : $a))) {\n            attrs = attrs.$dup()\n          } else if ($truthy($$$('::', 'Array')['$==='](attrs))) {\n            attrs = $send($hash2([], {}), 'tap', [], ($$2 = function(accum){var self = $$2.$$s || this, $$3;\n\n            \n              \n              if (accum == null) {\n                accum = nil;\n              };\n              return $send(attrs, 'each', [], ($$3 = function(entry){var self = $$3.$$s || this, $e, $f, k = nil, _ = nil, v = nil;\n\n              \n                \n                if (entry == null) {\n                  entry = nil;\n                };\n                $f = entry.$partition(\"=\"), $e = Opal.to_ary($f), (k = ($e[0] == null ? nil : $e[0])), (_ = ($e[1] == null ? nil : $e[1])), (v = ($e[2] == null ? nil : $e[2])), $f;\n                \n                $writer = [k, v];\n                $send(accum, '[]=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$3.$$s = self, $$3.$$arity = 1, $$3));}, $$2.$$s = self, $$2.$$arity = 1, $$2))\n          } else if ($truthy($$$('::', 'String')['$==='](attrs))) {\n            attrs = $send($hash2([], {}), 'tap', [], ($$4 = function(accum){var self = $$4.$$s || this, $$5;\n\n            \n              \n              if (accum == null) {\n                accum = nil;\n              };\n              return $send(attrs.$gsub($$($nesting, 'SpaceDelimiterRx'), $rb_plus(\"\\\\1\", $$($nesting, 'NULL'))).$gsub($$($nesting, 'EscapedSpaceRx'), \"\\\\1\").$split($$($nesting, 'NULL')), 'each', [], ($$5 = function(entry){var self = $$5.$$s || this, $e, $f, k = nil, _ = nil, v = nil;\n\n              \n                \n                if (entry == null) {\n                  entry = nil;\n                };\n                $f = entry.$partition(\"=\"), $e = Opal.to_ary($f), (k = ($e[0] == null ? nil : $e[0])), (_ = ($e[1] == null ? nil : $e[1])), (v = ($e[2] == null ? nil : $e[2])), $f;\n                \n                $writer = [k, v];\n                $send(accum, '[]=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];;}, $$5.$$s = self, $$5.$$arity = 1, $$5));}, $$4.$$s = self, $$4.$$arity = 1, $$4))\n          } else if ($truthy(($truthy($a = attrs['$respond_to?'](\"keys\")) ? attrs['$respond_to?'](\"[]\") : $a))) {\n            attrs = $send($hash2([], {}), 'tap', [], ($$6 = function(accum){var self = $$6.$$s || this, $$7;\n\n            \n              \n              if (accum == null) {\n                accum = nil;\n              };\n              return $send(attrs.$keys(), 'each', [], ($$7 = function(k){var self = $$7.$$s || this;\n\n              \n                \n                if (k == null) {\n                  k = nil;\n                };\n                $writer = [k, attrs['$[]'](k)];\n                $send(accum, '[]=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];}, $$7.$$s = self, $$7.$$arity = 1, $$7));}, $$6.$$s = self, $$6.$$arity = 1, $$6))\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"\" + \"illegal type for attributes option: \" + (attrs.$class().$ancestors().$join(\" < \")))\n          };\n          if ($truthy($$$('::', 'File')['$==='](input))) {\n            \n            \n            $writer = [\"input_mtime\", (function() {if ($$($nesting, 'RUBY_ENGINE')['$=='](\"jruby\")) {\n              \n              return $$$('::', 'Time').$at(input.$mtime().$to_i());\n            } else {\n              return input.$mtime()\n            }; return nil; })()];\n            $send(options, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"docfile\", (input_path = $$$('::', 'File').$absolute_path(input.$path()))];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"docdir\", $$$('::', 'File').$dirname(input_path)];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            \n            $writer = [\"docname\", $$($nesting, 'Helpers').$basename(input_path, (($writer = [\"docfilesuffix\", $$($nesting, 'Helpers').$extname(input_path)]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))];\n            $send(attrs, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            source = input.$read();\n          } else if ($truthy(input['$respond_to?'](\"read\"))) {\n            \n            try {\n              input.$rewind()\n            } catch ($err) {\n              if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                try {\n                  nil\n                } finally { Opal.pop_exception() }\n              } else { throw $err; }\n            };\n            source = input.$read();\n          } else if ($truthy($$$('::', 'String')['$==='](input))) {\n            source = input\n          } else if ($truthy($$$('::', 'Array')['$==='](input))) {\n            source = input.$drop(0)\n          } else if ($truthy(input)) {\n            self.$raise($$$('::', 'ArgumentError'), \"\" + \"unsupported input type: \" + (input.$class()))};\n          if ($truthy(timings)) {\n            \n            timings.$record(\"read\");\n            timings.$start(\"parse\");};\n          \n          $writer = [\"attributes\", attrs];\n          $send(options, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];;\n          doc = (function() {if (options['$[]'](\"parse\")['$=='](false)) {\n            \n            return $$($nesting, 'Document').$new(source, options);\n          } else {\n            return $$($nesting, 'Document').$new(source, options).$parse()\n          }; return nil; })();\n          if ($truthy(timings)) {\n            timings.$record(\"parse\")};\n          return doc;\n        } catch ($err) {\n          if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {e = $err;\n            try {\n              \n              \n              try {\n                \n                context = \"\" + \"asciidoctor: FAILED: \" + (($truthy($a = attrs['$[]'](\"docfile\")) ? $a : \"<stdin>\")) + \": Failed to load AsciiDoc document\";\n                if ($truthy(e['$respond_to?'](\"exception\"))) {\n                  \n                  wrapped_e = e.$exception(\"\" + (context) + \" - \" + (e.$message()));\n                  wrapped_e.$set_backtrace(e.$backtrace());\n                } else {\n                  \n                  wrapped_e = e.$class().$new(context, e);\n                  \n                  $writer = [e.$stack_trace()];\n                  $send(wrapped_e, 'stack_trace=', Opal.to_a($writer));\n                  $writer[$rb_minus($writer[\"length\"], 1)];;\n                };\n              } catch ($err) {\n                if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n                  try {\n                    wrapped_e = e\n                  } finally { Opal.pop_exception() }\n                } else { throw $err; }\n              };;\n              return self.$raise(wrapped_e);\n            } finally { Opal.pop_exception() }\n          } else { throw $err; }\n        };\n      }, $load$1.$$arity = -2);\n      return (Opal.def(self, '$load_file', $load_file$8 = function $$load_file(filename, options) {\n        var $$9, self = this;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        return $send($$$('::', 'File'), 'open', [filename, $$($nesting, 'FILE_READ_MODE')], ($$9 = function(file){var self = $$9.$$s || this;\n\n        \n          \n          if (file == null) {\n            file = nil;\n          };\n          return self.$load(file, options);}, $$9.$$s = self, $$9.$$arity = 1, $$9));\n      }, $load_file$8.$$arity = -2), nil) && 'load_file';\n    })(Opal.get_singleton_class(self), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/convert\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_ge(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $truthy = Opal.truthy, $send = Opal.send;\n\n  Opal.add_stubs(['$delete', '$merge', '$===', '$absolute_path', '$path', '$load', '$respond_to?', '$[]=', '$-', '$key?', '$fetch', '$[]', '$dirname', '$expand_path', '$join', '$attributes', '$outfilesuffix', '$==', '$raise', '$pwd', '$>=', '$safe', '$normalize_system_path', '$mkdir_p', '$directory?', '$!', '$convert', '$write', '$<', '$attr?', '$basebackend?', '$attr', '$uriish?', '$include?', '$syntax_highlighter', '$write_stylesheet?', '$write_primary_stylesheet', '$instance', '$to_s', '$!=', '$read_asset', '$file?', '$write_stylesheet', '$open']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function(self, $parent_nesting) {\n      var $nesting = [self].concat($parent_nesting), $convert$1, $convert_file$2;\n\n      \n      \n      Opal.def(self, '$convert', $convert$1 = function $$convert(input, options) {\n        var $a, $b, $c, $d, $e, self = this, to_dir = nil, mkdirs = nil, $case = nil, to_file = nil, write_to_target = nil, sibling_path = nil, stream_output = nil, $writer = nil, outdir = nil, doc = nil, outfile = nil, working_dir = nil, jail = nil, output = nil, stylesdir = nil, stylesheet = nil, copy_asciidoctor_stylesheet = nil, copy_user_stylesheet = nil, copy_syntax_hl_stylesheet = nil, syntax_hl = nil, stylesoutdir = nil, stylesheet_src = nil, stylesheet_dest = nil, stylesheet_data = nil, stylesheet_outdir = nil;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        (options = options.$merge()).$delete(\"parse\");\n        to_dir = options.$delete(\"to_dir\");\n        mkdirs = options.$delete(\"mkdirs\");\n        $case = (to_file = options.$delete(\"to_file\"));\n        if (true['$===']($case) || nil['$===']($case)) {\n        if ($truthy((write_to_target = to_dir))) {\n        } else if ($truthy($$$('::', 'File')['$==='](input))) {\n          sibling_path = $$$('::', 'File').$absolute_path(input.$path())};\n        to_file = nil;}\n        else if (false['$===']($case)) {to_file = nil}\n        else if (\"/dev/null\"['$===']($case)) {return self.$load(input, options)}\n        else {if ($truthy((stream_output = to_file['$respond_to?'](\"write\")))) {\n        } else {\n          \n          $writer = [\"to_file\", (write_to_target = to_file)];\n          $send(options, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        }};\n        if ($truthy(options['$key?'](\"standalone\"))) {\n        } else if ($truthy(($truthy($a = sibling_path) ? $a : write_to_target))) {\n          \n          $writer = [\"standalone\", options.$fetch(\"header_footer\", true)];\n          $send(options, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        } else if ($truthy(options['$key?'](\"header_footer\"))) {\n          \n          $writer = [\"standalone\", options['$[]'](\"header_footer\")];\n          $send(options, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n        if ($truthy(sibling_path)) {\n          \n          $writer = [\"to_dir\", (outdir = $$$('::', 'File').$dirname(sibling_path))];\n          $send(options, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];\n        } else if ($truthy(write_to_target)) {\n          if ($truthy(to_dir)) {\n            if ($truthy(to_file)) {\n              \n              $writer = [\"to_dir\", $$$('::', 'File').$dirname($$$('::', 'File').$expand_path(to_file, to_dir))];\n              $send(options, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              \n              $writer = [\"to_dir\", $$$('::', 'File').$expand_path(to_dir)];\n              $send(options, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            }\n          } else if ($truthy(to_file)) {\n            \n            $writer = [\"to_dir\", $$$('::', 'File').$dirname($$$('::', 'File').$expand_path(to_file))];\n            $send(options, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];}};\n        doc = self.$load(input, options);\n        if ($truthy(sibling_path)) {\n          \n          outfile = $$$('::', 'File').$join(outdir, \"\" + (doc.$attributes()['$[]'](\"docname\")) + (doc.$outfilesuffix()));\n          if (outfile['$=='](sibling_path)) {\n            self.$raise($$$('::', 'IOError'), \"\" + \"input file and output file cannot be the same: \" + (outfile))};\n        } else if ($truthy(write_to_target)) {\n          \n          working_dir = (function() {if ($truthy(options['$key?'](\"base_dir\"))) {\n            \n            return $$$('::', 'File').$expand_path(options['$[]'](\"base_dir\"));\n          } else {\n            return $$$('::', 'Dir').$pwd()\n          }; return nil; })();\n          jail = (function() {if ($truthy($rb_ge(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SAFE')))) {\n            return working_dir\n          } else {\n            return nil\n          }; return nil; })();\n          if ($truthy(to_dir)) {\n            \n            outdir = doc.$normalize_system_path(to_dir, working_dir, jail, $hash2([\"target_name\", \"recover\"], {\"target_name\": \"to_dir\", \"recover\": false}));\n            if ($truthy(to_file)) {\n              \n              outfile = doc.$normalize_system_path(to_file, outdir, nil, $hash2([\"target_name\", \"recover\"], {\"target_name\": \"to_dir\", \"recover\": false}));\n              outdir = $$$('::', 'File').$dirname(outfile);\n            } else {\n              outfile = $$$('::', 'File').$join(outdir, \"\" + (doc.$attributes()['$[]'](\"docname\")) + (doc.$outfilesuffix()))\n            };\n          } else if ($truthy(to_file)) {\n            \n            outfile = doc.$normalize_system_path(to_file, working_dir, jail, $hash2([\"target_name\", \"recover\"], {\"target_name\": \"to_dir\", \"recover\": false}));\n            outdir = $$$('::', 'File').$dirname(outfile);};\n          if ($truthy(($truthy($a = $$$('::', 'File')['$==='](input)) ? outfile['$==']($$$('::', 'File').$absolute_path(input.$path())) : $a))) {\n            self.$raise($$$('::', 'IOError'), \"\" + \"input file and output file cannot be the same: \" + (outfile))};\n          if ($truthy(mkdirs)) {\n            $$($nesting, 'Helpers').$mkdir_p(outdir)\n          } else if ($truthy($$$('::', 'File')['$directory?'](outdir))) {\n          } else {\n            self.$raise($$$('::', 'IOError'), \"\" + \"target directory does not exist: \" + (to_dir) + \" (hint: set :mkdirs option)\")\n          };\n        } else {\n          \n          outfile = to_file;\n          outdir = nil;\n        };\n        if ($truthy(($truthy($a = outfile) ? stream_output['$!']() : $a))) {\n          output = doc.$convert($hash2([\"outfile\", \"outdir\"], {\"outfile\": outfile, \"outdir\": outdir}))\n        } else {\n          output = doc.$convert()\n        };\n        if ($truthy(outfile)) {\n          \n          doc.$write(output, outfile);\n          if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = ($truthy($d = ($truthy($e = stream_output['$!']()) ? $rb_lt(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')) : $e)) ? doc['$attr?'](\"linkcss\") : $d)) ? doc['$attr?'](\"copycss\") : $c)) ? doc['$basebackend?'](\"html\") : $b)) ? ($truthy($b = (stylesdir = doc.$attr(\"stylesdir\"))) ? $$($nesting, 'Helpers')['$uriish?'](stylesdir) : $b)['$!']() : $a))) {\n            \n            if ($truthy((stylesheet = doc.$attr(\"stylesheet\")))) {\n              if ($truthy($$($nesting, 'DEFAULT_STYLESHEET_KEYS')['$include?'](stylesheet))) {\n                copy_asciidoctor_stylesheet = true\n              } else if ($truthy($$($nesting, 'Helpers')['$uriish?'](stylesheet)['$!']())) {\n                copy_user_stylesheet = true}};\n            copy_syntax_hl_stylesheet = ($truthy($a = (syntax_hl = doc.$syntax_highlighter())) ? syntax_hl['$write_stylesheet?'](doc) : $a);\n            if ($truthy(($truthy($a = ($truthy($b = copy_asciidoctor_stylesheet) ? $b : copy_user_stylesheet)) ? $a : copy_syntax_hl_stylesheet))) {\n              \n              stylesoutdir = doc.$normalize_system_path(stylesdir, outdir, (function() {if ($truthy($rb_ge(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SAFE')))) {\n                return outdir\n              } else {\n                return nil\n              }; return nil; })());\n              if ($truthy(mkdirs)) {\n                $$($nesting, 'Helpers').$mkdir_p(stylesoutdir)\n              } else if ($truthy($$$('::', 'File')['$directory?'](stylesoutdir))) {\n              } else {\n                self.$raise($$$('::', 'IOError'), \"\" + \"target stylesheet directory does not exist: \" + (stylesoutdir) + \" (hint: set :mkdirs option)\")\n              };\n              if ($truthy(copy_asciidoctor_stylesheet)) {\n                $$($nesting, 'Stylesheets').$instance().$write_primary_stylesheet(stylesoutdir)\n              } else if ($truthy(copy_user_stylesheet)) {\n                \n                if ($truthy(($truthy($a = (stylesheet_src = doc.$attr(\"copycss\"))['$=='](\"\")) ? $a : stylesheet_src['$=='](true)))) {\n                  stylesheet_src = doc.$normalize_system_path(stylesheet)\n                } else {\n                  stylesheet_src = doc.$normalize_system_path(stylesheet_src.$to_s())\n                };\n                stylesheet_dest = doc.$normalize_system_path(stylesheet, stylesoutdir, (function() {if ($truthy($rb_ge(doc.$safe(), $$$($$($nesting, 'SafeMode'), 'SAFE')))) {\n                  return outdir\n                } else {\n                  return nil\n                }; return nil; })());\n                if ($truthy(($truthy($a = stylesheet_src['$!='](stylesheet_dest)) ? (stylesheet_data = doc.$read_asset(stylesheet_src, $hash2([\"warn_on_failure\", \"label\"], {\"warn_on_failure\": $$$('::', 'File')['$file?'](stylesheet_dest)['$!'](), \"label\": \"stylesheet\"}))) : $a))) {\n                  \n                  if ($truthy(($truthy($a = (stylesheet_outdir = $$$('::', 'File').$dirname(stylesheet_dest))['$!='](stylesoutdir)) ? $$$('::', 'File')['$directory?'](stylesheet_outdir)['$!']() : $a))) {\n                    if ($truthy(mkdirs)) {\n                      $$($nesting, 'Helpers').$mkdir_p(stylesheet_outdir)\n                    } else {\n                      self.$raise($$$('::', 'IOError'), \"\" + \"target stylesheet directory does not exist: \" + (stylesheet_outdir) + \" (hint: set :mkdirs option)\")\n                    }};\n                  $$$('::', 'File').$write(stylesheet_dest, stylesheet_data, $hash2([\"mode\"], {\"mode\": $$($nesting, 'FILE_WRITE_MODE')}));};};\n              if ($truthy(copy_syntax_hl_stylesheet)) {\n                syntax_hl.$write_stylesheet(doc, stylesoutdir)};};};\n          return doc;\n        } else {\n          return output\n        };\n      }, $convert$1.$$arity = -2);\n      \n      Opal.def(self, '$convert_file', $convert_file$2 = function $$convert_file(filename, options) {\n        var $$3, self = this;\n\n        \n        \n        if (options == null) {\n          options = $hash2([], {});\n        };\n        return $send($$$('::', 'File'), 'open', [filename, $$($nesting, 'FILE_READ_MODE')], ($$3 = function(file){var self = $$3.$$s || this;\n\n        \n          \n          if (file == null) {\n            file = nil;\n          };\n          return self.$convert(file, options);}, $$3.$$s = self, $$3.$$arity = 1, $$3));\n      }, $convert_file$2.$$arity = -2);\n      Opal.alias(self, \"render\", \"convert\");\n      return Opal.alias(self, \"render_file\", \"convert_file\");\n    })(Opal.get_singleton_class(self), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/syntax_highlighter/highlightjs\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$register_for', '$merge', '$proc', '$[]=', '$-', '$attr', '$[]', '$==', '$attr?', '$join', '$map', '$split', '$lstrip']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'HighlightJsAdapter');\n\n      var $nesting = [self].concat($parent_nesting), $HighlightJsAdapter_initialize$1, $HighlightJsAdapter_format$2, $HighlightJsAdapter_docinfo$ques$4, $HighlightJsAdapter_docinfo$5;\n\n      \n      self.$register_for(\"highlightjs\", \"highlight.js\");\n      \n      Opal.def(self, '$initialize', $HighlightJsAdapter_initialize$1 = function $$initialize($a) {\n        var $post_args, args, $iter = $HighlightJsAdapter_initialize$1.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $HighlightJsAdapter_initialize$1.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        args = $post_args;;\n        $send(self, Opal.find_super_dispatcher(self, 'initialize', $HighlightJsAdapter_initialize$1, false), $zuper, $iter);\n        return (self.name = (self.pre_class = \"highlightjs\"));\n      }, $HighlightJsAdapter_initialize$1.$$arity = -1);\n      \n      Opal.def(self, '$format', $HighlightJsAdapter_format$2 = function $$format(node, lang, opts) {\n        var $$3, $iter = $HighlightJsAdapter_format$2.$$p, $yield = $iter || nil, self = this;\n\n        if ($iter) $HighlightJsAdapter_format$2.$$p = null;\n        return $send(self, Opal.find_super_dispatcher(self, 'format', $HighlightJsAdapter_format$2, false), [node, lang, opts.$merge($hash2([\"transform\"], {\"transform\": $send(self, 'proc', [], ($$3 = function(_, code){var self = $$3.$$s || this, $a, $writer = nil;\n\n        \n          \n          if (_ == null) {\n            _ = nil;\n          };\n          \n          if (code == null) {\n            code = nil;\n          };\n          $writer = [\"class\", \"\" + \"language-\" + (($truthy($a = lang) ? $a : \"none\")) + \" hljs\"];\n          $send(code, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$3.$$s = self, $$3.$$arity = 2, $$3))}))], null)\n      }, $HighlightJsAdapter_format$2.$$arity = 3);\n      \n      Opal.def(self, '$docinfo?', $HighlightJsAdapter_docinfo$ques$4 = function(location) {\n        var self = this;\n\n        return true\n      }, $HighlightJsAdapter_docinfo$ques$4.$$arity = 1);\n      return (Opal.def(self, '$docinfo', $HighlightJsAdapter_docinfo$5 = function $$docinfo(location, doc, opts) {\n        var $$6, self = this, base_url = nil;\n\n        \n        base_url = doc.$attr(\"highlightjsdir\", \"\" + (opts['$[]'](\"cdn_base_url\")) + \"/highlight.js/\" + ($$($nesting, 'HIGHLIGHT_JS_VERSION')));\n        if (location['$=='](\"head\")) {\n          return \"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (base_url) + \"/styles/\" + (doc.$attr(\"highlightjs-theme\", \"github\")) + \".min.css\\\"\" + (opts['$[]'](\"self_closing_tag_slash\")) + \">\"\n        } else {\n          return \"\" + \"<script src=\\\"\" + (base_url) + \"/highlight.min.js\\\"></script>\\n\" + ((function() {if ($truthy(doc['$attr?'](\"highlightjs-languages\"))) {\n            return $send(doc.$attr(\"highlightjs-languages\").$split(\",\"), 'map', [], ($$6 = function(lang){var self = $$6.$$s || this;\n\n            \n              \n              if (lang == null) {\n                lang = nil;\n              };\n              return \"\" + \"<script src=\\\"\" + (base_url) + \"/languages/\" + (lang.$lstrip()) + \".min.js\\\"></script>\\n\";}, $$6.$$s = self, $$6.$$arity = 1, $$6)).$join()\n          } else {\n            return \"\"\n          }; return nil; })()) + \"<script>\\n\" + \"if (!hljs.initHighlighting.called) {\\n\" + \"  hljs.initHighlighting.called = true\\n\" + \"  ;[].slice.call(document.querySelectorAll('pre.highlight > code')).forEach(function (el) { hljs.highlightBlock(el) })\\n\" + \"}\\n\" + \"</script>\"\n        };\n      }, $HighlightJsAdapter_docinfo$5.$$arity = 3), nil) && 'docinfo';\n    })($$($nesting, 'SyntaxHighlighter'), $$$($$($nesting, 'SyntaxHighlighter'), 'Base'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/syntax_highlighter\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy, $klass = Opal.klass;\n\n  Opal.add_stubs(['$attr_reader', '$raise', '$class', '$extend', '$private_class_method', '$register', '$map', '$to_s', '$each', '$[]=', '$registry', '$-', '$[]', '$for', '$===', '$new', '$name', '$private', '$include', '$==', '$delete', '$join', '$content']);\n  \n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'SyntaxHighlighter');\n\n      var $nesting = [self].concat($parent_nesting), $SyntaxHighlighter_initialize$1, $SyntaxHighlighter_docinfo$ques$2, $SyntaxHighlighter_docinfo$3, $SyntaxHighlighter_highlight$ques$4, $SyntaxHighlighter_highlight$5, $SyntaxHighlighter_format$6, $SyntaxHighlighter_write_stylesheet$ques$7, $SyntaxHighlighter_write_stylesheet$8, $SyntaxHighlighter_included$9;\n\n      \n      self.$attr_reader(\"name\");\n      \n      Opal.def(self, '$initialize', $SyntaxHighlighter_initialize$1 = function $$initialize(name, backend, opts) {\n        var self = this;\n\n        \n        \n        if (backend == null) {\n          backend = \"html5\";\n        };\n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        return (self.name = (self.pre_class = name));\n      }, $SyntaxHighlighter_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$docinfo?', $SyntaxHighlighter_docinfo$ques$2 = function(location) {\n        var self = this;\n\n        return nil\n      }, $SyntaxHighlighter_docinfo$ques$2.$$arity = 1);\n      \n      Opal.def(self, '$docinfo', $SyntaxHighlighter_docinfo$3 = function $$docinfo(location, doc, opts) {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'SyntaxHighlighter')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"docinfo\") + \" method since #docinfo? returns true\")\n      }, $SyntaxHighlighter_docinfo$3.$$arity = 3);\n      \n      Opal.def(self, '$highlight?', $SyntaxHighlighter_highlight$ques$4 = function() {\n        var self = this;\n\n        return nil\n      }, $SyntaxHighlighter_highlight$ques$4.$$arity = 0);\n      \n      Opal.def(self, '$highlight', $SyntaxHighlighter_highlight$5 = function $$highlight(node, source, lang, opts) {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'SyntaxHighlighter')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"highlight\") + \" method since #highlight? returns true\")\n      }, $SyntaxHighlighter_highlight$5.$$arity = 4);\n      \n      Opal.def(self, '$format', $SyntaxHighlighter_format$6 = function $$format(node, lang, opts) {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'SyntaxHighlighter')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"format\") + \" method\")\n      }, $SyntaxHighlighter_format$6.$$arity = 3);\n      \n      Opal.def(self, '$write_stylesheet?', $SyntaxHighlighter_write_stylesheet$ques$7 = function(doc) {\n        var self = this;\n\n        return nil\n      }, $SyntaxHighlighter_write_stylesheet$ques$7.$$arity = 1);\n      \n      Opal.def(self, '$write_stylesheet', $SyntaxHighlighter_write_stylesheet$8 = function $$write_stylesheet(doc, to_dir) {\n        var self = this;\n\n        return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'SyntaxHighlighter')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"write_stylesheet\") + \" method since #write_stylesheet? returns true\")\n      }, $SyntaxHighlighter_write_stylesheet$8.$$arity = 2);\n      Opal.defs(self, '$included', $SyntaxHighlighter_included$9 = function $$included(into) {\n        var self = this;\n\n        return into.$extend($$($nesting, 'Config'))\n      }, $SyntaxHighlighter_included$9.$$arity = 1);\n      self.$private_class_method(\"included\");\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Config');\n\n        var $nesting = [self].concat($parent_nesting), $Config_register_for$10;\n\n        \n        Opal.def(self, '$register_for', $Config_register_for$10 = function $$register_for($a) {\n          var $post_args, names, $$11, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          names = $post_args;;\n          return $send($$($nesting, 'SyntaxHighlighter'), 'register', [self].concat(Opal.to_a($send(names, 'map', [], ($$11 = function(name){var self = $$11.$$s || this;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            return name.$to_s();}, $$11.$$s = self, $$11.$$arity = 1, $$11)))));\n        }, $Config_register_for$10.$$arity = -1)\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Factory');\n\n        var $nesting = [self].concat($parent_nesting), $Factory_register$12, $Factory_for$14, $Factory_create$15, $Factory_registry$16;\n\n        \n        \n        Opal.def(self, '$register', $Factory_register$12 = function $$register(syntax_highlighter, $a) {\n          var $post_args, names, $$13, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 1, arguments.length);\n          \n          names = $post_args;;\n          return $send(names, 'each', [], ($$13 = function(name){var self = $$13.$$s || this, $writer = nil;\n\n          \n            \n            if (name == null) {\n              name = nil;\n            };\n            $writer = [name, syntax_highlighter];\n            $send(self.$registry(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];}, $$13.$$s = self, $$13.$$arity = 1, $$13));\n        }, $Factory_register$12.$$arity = -2);\n        \n        Opal.def(self, '$for', $Factory_for$14 = function(name) {\n          var self = this;\n\n          return self.$registry()['$[]'](name)\n        }, $Factory_for$14.$$arity = 1);\n        \n        Opal.def(self, '$create', $Factory_create$15 = function $$create(name, backend, opts) {\n          var self = this, syntax_hl = nil;\n\n          \n          \n          if (backend == null) {\n            backend = \"html5\";\n          };\n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy((syntax_hl = self.$for(name)))) {\n            \n            if ($truthy($$$('::', 'Class')['$==='](syntax_hl))) {\n              syntax_hl = syntax_hl.$new(name, backend, opts)};\n            if ($truthy(syntax_hl.$name())) {\n            } else {\n              self.$raise($$$('::', 'NameError'), \"\" + (syntax_hl.$class()) + \" must specify a value for `name'\")\n            };\n            return syntax_hl;\n          } else {\n            return nil\n          };\n        }, $Factory_create$15.$$arity = -2);\n        self.$private();\n        \n        Opal.def(self, '$registry', $Factory_registry$16 = function $$registry() {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Factory')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"registry\") + \" method\")\n        }, $Factory_registry$16.$$arity = 0);\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'CustomFactory');\n\n        var $nesting = [self].concat($parent_nesting), $CustomFactory_initialize$17;\n\n        \n        self.$include($$($nesting, 'Factory'));\n        \n        Opal.def(self, '$initialize', $CustomFactory_initialize$17 = function $$initialize(seed_registry) {\n          var $a, self = this;\n\n          \n          \n          if (seed_registry == null) {\n            seed_registry = nil;\n          };\n          return (self.registry = ($truthy($a = seed_registry) ? $a : $hash2([], {})));\n        }, $CustomFactory_initialize$17.$$arity = -1);\n        self.$private();\n        return self.$attr_reader(\"registry\");\n      })($nesting[0], null, $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'DefaultFactory');\n\n        var $nesting = [self].concat($parent_nesting), $DefaultFactory_registry$18;\n\n        \n        self.$include($$($nesting, 'Factory'));\n        (Opal.class_variable_set($nesting[0], '@@registry', $hash2([], {})));\n        self.$private();\n        \n        Opal.def(self, '$registry', $DefaultFactory_registry$18 = function $$registry() {\n          var $a, self = this;\n\n          return (($a = $nesting[0].$$cvars['@@registry']) == null ? nil : $a)\n        }, $DefaultFactory_registry$18.$$arity = 0);\n        if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        } else {\n          nil\n        };\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DefaultFactoryProxy');\n\n        var $nesting = [self].concat($parent_nesting);\n\n        \n        self.$include($$($nesting, 'DefaultFactory'));\n        if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n          return nil\n        } else {\n          return nil\n        };\n      })($nesting[0], $$($nesting, 'CustomFactory'), $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Base');\n\n        var $nesting = [self].concat($parent_nesting), $Base_format$19;\n\n        self.$$prototype.pre_class = nil;\n        \n        self.$include($$($nesting, 'SyntaxHighlighter'));\n        return (Opal.def(self, '$format', $Base_format$19 = function $$format(node, lang, opts) {\n          var $$20, $$21, self = this, class_attr_val = nil, transform = nil, pre = nil, code = nil, $writer = nil;\n\n          \n          class_attr_val = (function() {if ($truthy(opts['$[]'](\"nowrap\"))) {\n            return \"\" + (self.pre_class) + \" highlight nowrap\"\n          } else {\n            return \"\" + (self.pre_class) + \" highlight\"\n          }; return nil; })();\n          if ($truthy((transform = opts['$[]'](\"transform\")))) {\n            \n            transform['$[]']((pre = $hash2([\"class\"], {\"class\": class_attr_val})), (code = (function() {if ($truthy(lang)) {\n              return $hash2([\"data-lang\"], {\"data-lang\": lang})\n            } else {\n              return $hash2([], {})\n            }; return nil; })()));\n            if ($truthy((lang = code.$delete(\"data-lang\")))) {\n              \n              $writer = [\"data-lang\", lang];\n              $send(code, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n            return \"\" + \"<pre\" + ($send(pre, 'map', [], ($$20 = function(k, v){var self = $$20.$$s || this;\n\n            \n              \n              if (k == null) {\n                k = nil;\n              };\n              \n              if (v == null) {\n                v = nil;\n              };\n              return \"\" + \" \" + (k) + \"=\\\"\" + (v) + \"\\\"\";}, $$20.$$s = self, $$20.$$arity = 2, $$20)).$join()) + \"><code\" + ($send(code, 'map', [], ($$21 = function(k, v){var self = $$21.$$s || this;\n\n            \n              \n              if (k == null) {\n                k = nil;\n              };\n              \n              if (v == null) {\n                v = nil;\n              };\n              return \"\" + \" \" + (k) + \"=\\\"\" + (v) + \"\\\"\";}, $$21.$$s = self, $$21.$$arity = 2, $$21)).$join()) + \">\" + (node.$content()) + \"</code></pre>\";\n          } else {\n            return \"\" + \"<pre class=\\\"\" + (class_attr_val) + \"\\\"><code\" + ((function() {if ($truthy(lang)) {\n              return \"\" + \" data-lang=\\\"\" + (lang) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \">\" + (node.$content()) + \"</code></pre>\"\n          };\n        }, $Base_format$19.$$arity = 3), nil) && 'format';\n      })($nesting[0], null, $nesting);\n      self.$extend($$($nesting, 'DefaultFactory'));\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n  self.$require(\"asciidoctor/syntax_highlighter.rb\"+ '/../' + \"syntax_highlighter/highlightjs\");\n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    return nil\n  } else {\n    return nil\n  };\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/timings\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$now', '$[]=', '$-', '$delete', '$reduce', '$+', '$[]', '$>', '$time', '$puts', '$sprintf', '$to_f', '$read_parse', '$convert', '$read_parse_convert', '$private', '$const_defined?', '$==', '$clock_gettime']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Timings');\n\n      var $nesting = [self].concat($parent_nesting), $Timings_initialize$1, $Timings_start$2, $Timings_record$3, $Timings_time$4, $Timings_read$6, $Timings_parse$7, $Timings_read_parse$8, $Timings_convert$9, $Timings_read_parse_convert$10, $Timings_write$11, $Timings_total$12, $Timings_print_report$13, $a, $b, $c, $d, $e, $Timings_now$14, $Timings_now$15;\n\n      self.$$prototype.timers = self.$$prototype.log = nil;\n      \n      \n      Opal.def(self, '$initialize', $Timings_initialize$1 = function $$initialize() {\n        var self = this;\n\n        \n        self.log = $hash2([], {});\n        return (self.timers = $hash2([], {}));\n      }, $Timings_initialize$1.$$arity = 0);\n      \n      Opal.def(self, '$start', $Timings_start$2 = function $$start(key) {\n        var self = this, $writer = nil;\n\n        \n        $writer = [key, self.$now()];\n        $send(self.timers, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];\n      }, $Timings_start$2.$$arity = 1);\n      \n      Opal.def(self, '$record', $Timings_record$3 = function $$record(key) {\n        var self = this, $writer = nil;\n\n        \n        $writer = [key, $rb_minus(self.$now(), self.timers.$delete(key))];\n        $send(self.log, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];\n      }, $Timings_record$3.$$arity = 1);\n      \n      Opal.def(self, '$time', $Timings_time$4 = function $$time($a) {\n        var $post_args, keys, $$5, self = this, time = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 0, arguments.length);\n        \n        keys = $post_args;;\n        time = $send(keys, 'reduce', [0], ($$5 = function(sum, key){var self = $$5.$$s || this, $b;\n          if (self.log == null) self.log = nil;\n\n        \n          \n          if (sum == null) {\n            sum = nil;\n          };\n          \n          if (key == null) {\n            key = nil;\n          };\n          return $rb_plus(sum, ($truthy($b = self.log['$[]'](key)) ? $b : 0));}, $$5.$$s = self, $$5.$$arity = 2, $$5));\n        if ($truthy($rb_gt(time, 0))) {\n          return time\n        } else {\n          return nil\n        };\n      }, $Timings_time$4.$$arity = -1);\n      \n      Opal.def(self, '$read', $Timings_read$6 = function $$read() {\n        var self = this;\n\n        return self.$time(\"read\")\n      }, $Timings_read$6.$$arity = 0);\n      \n      Opal.def(self, '$parse', $Timings_parse$7 = function $$parse() {\n        var self = this;\n\n        return self.$time(\"parse\")\n      }, $Timings_parse$7.$$arity = 0);\n      \n      Opal.def(self, '$read_parse', $Timings_read_parse$8 = function $$read_parse() {\n        var self = this;\n\n        return self.$time(\"read\", \"parse\")\n      }, $Timings_read_parse$8.$$arity = 0);\n      \n      Opal.def(self, '$convert', $Timings_convert$9 = function $$convert() {\n        var self = this;\n\n        return self.$time(\"convert\")\n      }, $Timings_convert$9.$$arity = 0);\n      \n      Opal.def(self, '$read_parse_convert', $Timings_read_parse_convert$10 = function $$read_parse_convert() {\n        var self = this;\n\n        return self.$time(\"read\", \"parse\", \"convert\")\n      }, $Timings_read_parse_convert$10.$$arity = 0);\n      \n      Opal.def(self, '$write', $Timings_write$11 = function $$write() {\n        var self = this;\n\n        return self.$time(\"write\")\n      }, $Timings_write$11.$$arity = 0);\n      \n      Opal.def(self, '$total', $Timings_total$12 = function $$total() {\n        var self = this;\n\n        return self.$time(\"read\", \"parse\", \"convert\", \"write\")\n      }, $Timings_total$12.$$arity = 0);\n      \n      Opal.def(self, '$print_report', $Timings_print_report$13 = function $$print_report(to, subject) {\n        var self = this;\n        if ($gvars.stdout == null) $gvars.stdout = nil;\n\n        \n        \n        if (to == null) {\n          to = $gvars.stdout;\n        };\n        \n        if (subject == null) {\n          subject = nil;\n        };\n        if ($truthy(subject)) {\n          to.$puts(\"\" + \"Input file: \" + (subject))};\n        to.$puts(\"\" + \"  Time to read and parse source: \" + (self.$sprintf(\"%05.5f\", self.$read_parse().$to_f())));\n        to.$puts(\"\" + \"  Time to convert document: \" + (self.$sprintf(\"%05.5f\", self.$convert().$to_f())));\n        return to.$puts(\"\" + \"  Total time (read, parse and convert): \" + (self.$sprintf(\"%05.5f\", self.$read_parse_convert().$to_f())));\n      }, $Timings_print_report$13.$$arity = -1);\n      self.$private();\n      if ($truthy(($truthy($a = $$$('::', 'Process')['$const_defined?'](\"CLOCK_MONOTONIC\", false)) ? ((($b = $$$('::', 'Process', 'skip_raise')) && ($c = $b, $c) && ($d = $c) && ((($e = $d.$clock_gettime) && !$e.$$stub) || $d['$respond_to_missing?']('clock_gettime'))) ? 'method' : nil)['$=='](\"method\") : $a))) {\n        \n        Opal.const_set($nesting[0], 'CLOCK_ID', $$$($$$('::', 'Process'), 'CLOCK_MONOTONIC'));\n        return (Opal.def(self, '$now', $Timings_now$14 = function $$now() {\n          var self = this;\n\n          return $$$('::', 'Process').$clock_gettime($$($nesting, 'CLOCK_ID'))\n        }, $Timings_now$14.$$arity = 0), nil) && 'now';\n      } else {\n        return (Opal.def(self, '$now', $Timings_now$15 = function $$now() {\n          var self = this;\n\n          return $$$('::', 'Time').$now()\n        }, $Timings_now$15.$$arity = 0), nil) && 'now'\n      };\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/converter/composite\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $hash2 = Opal.hash2, $send = Opal.send, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$attr_reader', '$each', '$respond_to?', '$composed', '$init_backend_traits', '$backend_traits', '$new', '$find_converter', '$[]=', '$-', '$convert', '$converter_for', '$node_name', '$[]', '$handles?', '$raise']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'CompositeConverter');\n\n      var $nesting = [self].concat($parent_nesting), $CompositeConverter_initialize$1, $CompositeConverter_convert$4, $CompositeConverter_converter_for$5, $CompositeConverter_find_converter$6;\n\n      self.$$prototype.converter_cache = self.$$prototype.converters = nil;\n      \n      self.$attr_reader(\"converters\");\n      \n      Opal.def(self, '$initialize', $CompositeConverter_initialize$1 = function $$initialize(backend, $a, $b) {\n        var $post_args, $kwargs, converters, backend_traits_source, $$2, $$3, self = this;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 1, arguments.length);\n        \n        $kwargs = Opal.extract_kwargs($post_args);\n        \n        if ($kwargs == null) {\n          $kwargs = $hash2([], {});\n        } else if (!$kwargs.$$is_hash) {\n          throw Opal.ArgumentError.$new('expected kwargs');\n        };\n        \n        converters = $post_args;;\n        \n        backend_traits_source = $kwargs.$$smap[\"backend_traits_source\"];\n        if (backend_traits_source == null) {\n          backend_traits_source = nil\n        };\n        self.backend = backend;\n        $send((self.converters = converters), 'each', [], ($$2 = function(converter){var self = $$2.$$s || this;\n\n        \n          \n          if (converter == null) {\n            converter = nil;\n          };\n          if ($truthy(converter['$respond_to?'](\"composed\"))) {\n            return converter.$composed(self)\n          } else {\n            return nil\n          };}, $$2.$$s = self, $$2.$$arity = 1, $$2));\n        if ($truthy(backend_traits_source)) {\n          self.$init_backend_traits(backend_traits_source.$backend_traits())};\n        return (self.converter_cache = $send($$$('::', 'Hash'), 'new', [], ($$3 = function(hash, key){var self = $$3.$$s || this, $writer = nil;\n\n        \n          \n          if (hash == null) {\n            hash = nil;\n          };\n          \n          if (key == null) {\n            key = nil;\n          };\n          $writer = [key, self.$find_converter(key)];\n          $send(hash, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];}, $$3.$$s = self, $$3.$$arity = 2, $$3)));\n      }, $CompositeConverter_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$convert', $CompositeConverter_convert$4 = function $$convert(node, transform, opts) {\n        var $a, self = this;\n\n        \n        \n        if (transform == null) {\n          transform = nil;\n        };\n        \n        if (opts == null) {\n          opts = nil;\n        };\n        return self.$converter_for((transform = ($truthy($a = transform) ? $a : node.$node_name()))).$convert(node, transform, opts);\n      }, $CompositeConverter_convert$4.$$arity = -2);\n      \n      Opal.def(self, '$converter_for', $CompositeConverter_converter_for$5 = function $$converter_for(transform) {\n        var self = this;\n\n        return self.converter_cache['$[]'](transform)\n      }, $CompositeConverter_converter_for$5.$$arity = 1);\n      return (Opal.def(self, '$find_converter', $CompositeConverter_find_converter$6 = function $$find_converter(transform) {try {\n\n        var $$7, self = this;\n\n        \n        $send(self.converters, 'each', [], ($$7 = function(candidate){var self = $$7.$$s || this;\n\n        \n          \n          if (candidate == null) {\n            candidate = nil;\n          };\n          if ($truthy(candidate['$handles?'](transform))) {\n            Opal.ret(candidate)\n          } else {\n            return nil\n          };}, $$7.$$s = self, $$7.$$arity = 1, $$7));\n        return self.$raise(\"\" + \"Could not find a converter to handle transform: \" + (transform));\n        } catch ($returner) { if ($returner === Opal.returner) { return $returner.$v } throw $returner; }\n      }, $CompositeConverter_find_converter$6.$$arity = 1), nil) && 'find_converter';\n    })($$($nesting, 'Converter'), $$$($$($nesting, 'Converter'), 'Base'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/converter/html5\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_le(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  function $rb_times(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $send = Opal.send, $hash2 = Opal.hash2, $truthy = Opal.truthy, $gvars = Opal.gvars;\n\n  Opal.add_stubs(['$register_for', '$default=', '$-', '$==', '$[]', '$init_backend_traits', '$node_name', '$===', '$convert_inline_quoted', '$convert_paragraph', '$convert_inline_anchor', '$convert_section', '$convert_listing', '$convert_literal', '$convert_ulist', '$convert_olist', '$convert_dlist', '$convert_admonition', '$convert_colist', '$convert_embedded', '$convert_example', '$convert_floating_title', '$convert_image', '$convert_inline_break', '$convert_inline_button', '$convert_inline_callout', '$convert_inline_footnote', '$convert_inline_image', '$convert_inline_indexterm', '$convert_inline_kbd', '$convert_inline_menu', '$convert_open', '$convert_page_break', '$convert_preamble', '$convert_quote', '$convert_sidebar', '$convert_stem', '$convert_table', '$convert_thematic_break', '$convert_verse', '$convert_video', '$convert_document', '$convert_toc', '$convert_pass', '$convert_audio', '$empty?', '$attr', '$attr?', '$<<', '$include?', '$sub_replacements', '$gsub', '$extname', '$slice', '$length', '$doctitle', '$normalize_web_path', '$primary_stylesheet_data', '$instance', '$read_contents', '$syntax_highlighter', '$size', '$docinfo', '$id', '$sections?', '$doctype', '$role?', '$role', '$join', '$noheader', '$convert', '$converter', '$generate_manname_section', '$header?', '$notitle', '$title', '$header', '$each', '$authors', '$>', '$name', '$email', '$sub_macros', '$+', '$downcase', '$concat', '$content', '$footnotes?', '$!', '$footnotes', '$index', '$text', '$nofooter', '$docinfo?', '$[]=', '$delete_at', '$inspect', '$!=', '$to_i', '$attributes', '$document', '$sections', '$level', '$caption', '$captioned_title', '$numbered', '$<=', '$<', '$sectname', '$sectnum', '$convert_outline', '$title?', '$icon_uri', '$compact', '$media_uri', '$option?', '$append_boolean_attribute', '$style', '$items', '$blocks?', '$text?', '$chomp', '$safe', '$read_svg_contents', '$alt', '$image_uri', '$encode_attribute_value', '$append_link_constraint_attrs', '$highlight?', '$to_sym', '$format', '$*', '$count', '$start_with?', '$end_with?', '$list_marker_keyword', '$parent', '$warn', '$logger', '$context', '$error', '$new', '$columns', '$to_h', '$rows', '$colspan', '$rowspan', '$unshift', '$shift', '$pop', '$split', '$nil_or_empty?', '$type', '$catalog', '$get_root_document', '$xreftext', '$target', '$reftext', '$chop', '$sub', '$match', '$private', '$upcase', '$nested?', '$parent_document', '$to_s', '$handles?', '$send']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Html5Converter');\n\n      var $nesting = [self].concat($parent_nesting), $Html5Converter_initialize$1, $Html5Converter_convert$2, $Html5Converter_convert_document$3, $Html5Converter_convert_embedded$6, $Html5Converter_convert_outline$8, $Html5Converter_convert_section$10, $Html5Converter_convert_admonition$11, $Html5Converter_convert_audio$12, $Html5Converter_convert_colist$13, $Html5Converter_convert_dlist$16, $Html5Converter_convert_example$23, $Html5Converter_convert_floating_title$24, $Html5Converter_convert_image$25, $Html5Converter_convert_listing$26, $Html5Converter_convert_literal$27, $Html5Converter_convert_stem$28, $Html5Converter_convert_olist$30, $Html5Converter_convert_open$32, $Html5Converter_convert_page_break$33, $Html5Converter_convert_paragraph$34, $Html5Converter_convert_preamble$35, $Html5Converter_convert_quote$36, $Html5Converter_convert_thematic_break$37, $Html5Converter_convert_sidebar$38, $Html5Converter_convert_table$39, $Html5Converter_convert_toc$44, $Html5Converter_convert_ulist$45, $Html5Converter_convert_verse$47, $Html5Converter_convert_video$48, $Html5Converter_convert_inline_anchor$49, $Html5Converter_convert_inline_break$50, $Html5Converter_convert_inline_button$51, $Html5Converter_convert_inline_callout$52, $Html5Converter_convert_inline_footnote$53, $Html5Converter_convert_inline_image$54, $Html5Converter_convert_inline_indexterm$56, $Html5Converter_convert_inline_kbd$57, $Html5Converter_convert_inline_menu$58, $Html5Converter_convert_inline_quoted$59, $Html5Converter_read_svg_contents$60, $Html5Converter_append_boolean_attribute$62, $Html5Converter_append_link_constraint_attrs$63, $Html5Converter_encode_attribute_value$64, $Html5Converter_generate_manname_section$65, $Html5Converter_get_root_document$66, $Html5Converter_method_missing$67, $Html5Converter_respond_to_missing$ques$68, $writer = nil;\n\n      self.$$prototype.void_element_slash = self.$$prototype.xml_mode = self.$$prototype.refs = self.$$prototype.resolving_xref = nil;\n      \n      self.$register_for(\"html5\");\n      \n      $writer = [[\"\", \"\"]];\n      $send(Opal.const_set($nesting[0], 'QUOTE_TAGS', $hash2([\"monospaced\", \"emphasis\", \"strong\", \"double\", \"single\", \"mark\", \"superscript\", \"subscript\", \"asciimath\", \"latexmath\"], {\"monospaced\": [\"<code>\", \"</code>\", true], \"emphasis\": [\"<em>\", \"</em>\", true], \"strong\": [\"<strong>\", \"</strong>\", true], \"double\": [\"&#8220;\", \"&#8221;\"], \"single\": [\"&#8216;\", \"&#8217;\"], \"mark\": [\"<mark>\", \"</mark>\", true], \"superscript\": [\"<sup>\", \"</sup>\", true], \"subscript\": [\"<sub>\", \"</sub>\", true], \"asciimath\": [\"\\\\$\", \"\\\\$\"], \"latexmath\": [\"\\\\(\", \"\\\\)\"]})), 'default=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      Opal.const_set($nesting[0], 'DropAnchorRx', /<(?:a\\b[^>]*|\\/a)>/);\n      Opal.const_set($nesting[0], 'StemBreakRx', / *\\\\\\n(?:\\\\?\\n)*|\\n\\n+/);\n      if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n        \n        Opal.const_set($nesting[0], 'SvgPreambleRx', new RegExp(\"\" + \"^\" + ($$($nesting, 'CC_ALL')) + \"*?(?=<svg[\\\\s>])\"));\n        Opal.const_set($nesting[0], 'SvgStartTagRx', /^<svg(?:\\s[^>]*)?>/);\n      } else {\n        nil\n      };\n      Opal.const_set($nesting[0], 'DimensionAttributeRx', new RegExp(\"\" + \"\\\\s(?:width|height|style)=([\\\"'])\" + ($$($nesting, 'CC_ANY')) + \"*?\\\\1\"));\n      \n      Opal.def(self, '$initialize', $Html5Converter_initialize$1 = function $$initialize(backend, opts) {\n        var self = this, syntax = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        self.backend = backend;\n        if (opts['$[]'](\"htmlsyntax\")['$=='](\"xml\")) {\n          \n          syntax = \"xml\";\n          self.xml_mode = true;\n          self.void_element_slash = \"/\";\n        } else {\n          \n          syntax = \"html\";\n          self.xml_mode = nil;\n          self.void_element_slash = \"\";\n        };\n        return self.$init_backend_traits($hash2([\"basebackend\", \"filetype\", \"htmlsyntax\", \"outfilesuffix\", \"supports_templates\"], {\"basebackend\": \"html\", \"filetype\": \"html\", \"htmlsyntax\": syntax, \"outfilesuffix\": \".html\", \"supports_templates\": true}));\n      }, $Html5Converter_initialize$1.$$arity = -2);\n      \n      Opal.def(self, '$convert', $Html5Converter_convert$2 = function $$convert(node, transform, opts) {\n        var $iter = $Html5Converter_convert$2.$$p, $yield = $iter || nil, self = this, $case = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Html5Converter_convert$2.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        if (transform == null) {\n          transform = node.$node_name();\n        };\n        \n        if (opts == null) {\n          opts = nil;\n        };\n        return (function() {$case = transform;\n        if (\"inline_quoted\"['$===']($case)) {return self.$convert_inline_quoted(node)}\n        else if (\"paragraph\"['$===']($case)) {return self.$convert_paragraph(node)}\n        else if (\"inline_anchor\"['$===']($case)) {return self.$convert_inline_anchor(node)}\n        else if (\"section\"['$===']($case)) {return self.$convert_section(node)}\n        else if (\"listing\"['$===']($case)) {return self.$convert_listing(node)}\n        else if (\"literal\"['$===']($case)) {return self.$convert_literal(node)}\n        else if (\"ulist\"['$===']($case)) {return self.$convert_ulist(node)}\n        else if (\"olist\"['$===']($case)) {return self.$convert_olist(node)}\n        else if (\"dlist\"['$===']($case)) {return self.$convert_dlist(node)}\n        else if (\"admonition\"['$===']($case)) {return self.$convert_admonition(node)}\n        else if (\"colist\"['$===']($case)) {return self.$convert_colist(node)}\n        else if (\"embedded\"['$===']($case)) {return self.$convert_embedded(node)}\n        else if (\"example\"['$===']($case)) {return self.$convert_example(node)}\n        else if (\"floating_title\"['$===']($case)) {return self.$convert_floating_title(node)}\n        else if (\"image\"['$===']($case)) {return self.$convert_image(node)}\n        else if (\"inline_break\"['$===']($case)) {return self.$convert_inline_break(node)}\n        else if (\"inline_button\"['$===']($case)) {return self.$convert_inline_button(node)}\n        else if (\"inline_callout\"['$===']($case)) {return self.$convert_inline_callout(node)}\n        else if (\"inline_footnote\"['$===']($case)) {return self.$convert_inline_footnote(node)}\n        else if (\"inline_image\"['$===']($case)) {return self.$convert_inline_image(node)}\n        else if (\"inline_indexterm\"['$===']($case)) {return self.$convert_inline_indexterm(node)}\n        else if (\"inline_kbd\"['$===']($case)) {return self.$convert_inline_kbd(node)}\n        else if (\"inline_menu\"['$===']($case)) {return self.$convert_inline_menu(node)}\n        else if (\"open\"['$===']($case)) {return self.$convert_open(node)}\n        else if (\"page_break\"['$===']($case)) {return self.$convert_page_break(node)}\n        else if (\"preamble\"['$===']($case)) {return self.$convert_preamble(node)}\n        else if (\"quote\"['$===']($case)) {return self.$convert_quote(node)}\n        else if (\"sidebar\"['$===']($case)) {return self.$convert_sidebar(node)}\n        else if (\"stem\"['$===']($case)) {return self.$convert_stem(node)}\n        else if (\"table\"['$===']($case)) {return self.$convert_table(node)}\n        else if (\"thematic_break\"['$===']($case)) {return self.$convert_thematic_break(node)}\n        else if (\"verse\"['$===']($case)) {return self.$convert_verse(node)}\n        else if (\"video\"['$===']($case)) {return self.$convert_video(node)}\n        else if (\"document\"['$===']($case)) {return self.$convert_document(node)}\n        else if (\"toc\"['$===']($case)) {return self.$convert_toc(node)}\n        else if (\"pass\"['$===']($case)) {return self.$convert_pass(node)}\n        else if (\"audio\"['$===']($case)) {return self.$convert_audio(node)}\n        else {return $send(self, Opal.find_super_dispatcher(self, 'convert', $Html5Converter_convert$2, false), $zuper, $iter)}})();\n      }, $Html5Converter_convert$2.$$arity = -2);\n      \n      Opal.def(self, '$convert_document', $Html5Converter_convert_document$3 = function $$convert_document(node) {\n        var $a, $b, $c, $$4, $$5, self = this, br = nil, slash = nil, asset_uri_scheme = nil, cdn_base_url = nil, linkcss = nil, max_width_attr = nil, result = nil, lang_attribute = nil, authors = nil, icon_href = nil, icon_type = nil, icon_ext = nil, webfonts = nil, iconfont_stylesheet = nil, syntax_hl = nil, syntax_hl_docinfo_head_idx = nil, docinfo_content = nil, id_attr = nil, sectioned = nil, classes = nil, details = nil, idx = nil, $writer = nil, eqnums_val = nil, eqnums_opt = nil;\n\n        \n        br = \"\" + \"<br\" + ((slash = self.void_element_slash)) + \">\";\n        if ($truthy((asset_uri_scheme = node.$attr(\"asset-uri-scheme\", \"https\"))['$empty?']())) {\n        } else {\n          asset_uri_scheme = \"\" + (asset_uri_scheme) + \":\"\n        };\n        cdn_base_url = \"\" + (asset_uri_scheme) + \"//cdnjs.cloudflare.com/ajax/libs\";\n        linkcss = node['$attr?'](\"linkcss\");\n        max_width_attr = (function() {if ($truthy(node['$attr?'](\"max-width\"))) {\n          return \"\" + \" style=\\\"max-width: \" + (node.$attr(\"max-width\")) + \";\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        result = [\"<!DOCTYPE html>\"];\n        lang_attribute = (function() {if ($truthy(node['$attr?'](\"nolang\"))) {\n          return \"\"\n        } else {\n          return \"\" + \" lang=\\\"\" + (node.$attr(\"lang\", \"en\")) + \"\\\"\"\n        }; return nil; })();\n        result['$<<'](\"\" + \"<html\" + ((function() {if ($truthy(self.xml_mode)) {\n          return \" xmlns=\\\"http://www.w3.org/1999/xhtml\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })()) + (lang_attribute) + \">\");\n        result['$<<'](\"\" + \"<head>\\n\" + \"<meta charset=\\\"\" + (node.$attr(\"encoding\", \"UTF-8\")) + \"\\\"\" + (slash) + \">\\n\" + \"<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"\" + (slash) + \">\\n\" + \"<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"\" + (slash) + \">\\n\" + \"<meta name=\\\"generator\\\" content=\\\"Asciidoctor \" + (node.$attr(\"asciidoctor-version\")) + \"\\\"\" + (slash) + \">\");\n        if ($truthy(node['$attr?'](\"app-name\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"application-name\\\" content=\\\"\" + (node.$attr(\"app-name\")) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"description\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"description\\\" content=\\\"\" + (node.$attr(\"description\")) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"keywords\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"keywords\\\" content=\\\"\" + (node.$attr(\"keywords\")) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"authors\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"author\\\" content=\\\"\" + ((function() {if ($truthy((authors = node.$sub_replacements(node.$attr(\"authors\")))['$include?'](\"<\"))) {\n            \n            return authors.$gsub($$($nesting, 'XmlSanitizeRx'), \"\");\n          } else {\n            return authors\n          }; return nil; })()) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"copyright\"))) {\n          result['$<<'](\"\" + \"<meta name=\\\"copyright\\\" content=\\\"\" + (node.$attr(\"copyright\")) + \"\\\"\" + (slash) + \">\")};\n        if ($truthy(node['$attr?'](\"favicon\"))) {\n          \n          if ($truthy((icon_href = node.$attr(\"favicon\"))['$empty?']())) {\n            \n            icon_href = \"favicon.ico\";\n            icon_type = \"image/x-icon\";\n          } else if ($truthy((icon_ext = $$($nesting, 'Helpers').$extname(icon_href, nil)))) {\n            icon_type = (function() {if (icon_ext['$=='](\".ico\")) {\n              return \"image/x-icon\"\n            } else {\n              return \"\" + \"image/\" + (icon_ext.$slice(1, icon_ext.$length()))\n            }; return nil; })()\n          } else {\n            icon_type = \"image/x-icon\"\n          };\n          result['$<<'](\"\" + \"<link rel=\\\"icon\\\" type=\\\"\" + (icon_type) + \"\\\" href=\\\"\" + (icon_href) + \"\\\"\" + (slash) + \">\");};\n        result['$<<'](\"\" + \"<title>\" + (node.$doctitle($hash2([\"sanitize\", \"use_fallback\"], {\"sanitize\": true, \"use_fallback\": true}))) + \"</title>\");\n        if ($truthy($$($nesting, 'DEFAULT_STYLESHEET_KEYS')['$include?'](node.$attr(\"stylesheet\")))) {\n          \n          if ($truthy((webfonts = node.$attr(\"webfonts\")))) {\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (asset_uri_scheme) + \"//fonts.googleapis.com/css?family=\" + ((function() {if ($truthy(webfonts['$empty?']())) {\n              return \"Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700\"\n            } else {\n              return webfonts\n            }; return nil; })()) + \"\\\"\" + (slash) + \">\")};\n          if ($truthy(linkcss)) {\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (node.$normalize_web_path($$($nesting, 'DEFAULT_STYLESHEET_NAME'), node.$attr(\"stylesdir\", \"\"), false)) + \"\\\"\" + (slash) + \">\")\n          } else {\n            result['$<<'](\"\" + \"<style>\\n\" + ($$($nesting, 'Stylesheets').$instance().$primary_stylesheet_data()) + \"\\n\" + \"</style>\")\n          };\n        } else if ($truthy(node['$attr?'](\"stylesheet\"))) {\n          if ($truthy(linkcss)) {\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (node.$normalize_web_path(node.$attr(\"stylesheet\"), node.$attr(\"stylesdir\", \"\"))) + \"\\\"\" + (slash) + \">\")\n          } else {\n            result['$<<'](\"\" + \"<style>\\n\" + (node.$read_contents(node.$attr(\"stylesheet\"), $hash2([\"start\", \"warn_on_failure\", \"label\"], {\"start\": node.$attr(\"stylesdir\"), \"warn_on_failure\": true, \"label\": \"stylesheet\"}))) + \"\\n\" + \"</style>\")\n          }};\n        if ($truthy(node['$attr?'](\"icons\", \"font\"))) {\n          if ($truthy(node['$attr?'](\"iconfont-remote\"))) {\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (node.$attr(\"iconfont-cdn\", \"\" + (cdn_base_url) + \"/font-awesome/\" + ($$($nesting, 'FONT_AWESOME_VERSION')) + \"/css/font-awesome.min.css\")) + \"\\\"\" + (slash) + \">\")\n          } else {\n            \n            iconfont_stylesheet = \"\" + (node.$attr(\"iconfont-name\", \"font-awesome\")) + \".css\";\n            result['$<<'](\"\" + \"<link rel=\\\"stylesheet\\\" href=\\\"\" + (node.$normalize_web_path(iconfont_stylesheet, node.$attr(\"stylesdir\", \"\"), false)) + \"\\\"\" + (slash) + \">\");\n          }};\n        if ($truthy((syntax_hl = node.$syntax_highlighter()))) {\n          result['$<<']((syntax_hl_docinfo_head_idx = result.$size()))};\n        if ($truthy((docinfo_content = node.$docinfo())['$empty?']())) {\n        } else {\n          result['$<<'](docinfo_content)\n        };\n        result['$<<'](\"</head>\");\n        id_attr = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = (sectioned = node['$sections?']())) ? node['$attr?'](\"toc-class\") : $c)) ? node['$attr?'](\"toc\") : $b)) ? node['$attr?'](\"toc-placement\", \"auto\") : $a))) {\n          classes = [node.$doctype(), node.$attr(\"toc-class\"), \"\" + \"toc-\" + (node.$attr(\"toc-position\", \"header\"))]\n        } else {\n          classes = [node.$doctype()]\n        };\n        if ($truthy(node['$role?']())) {\n          classes['$<<'](node.$role())};\n        result['$<<'](\"\" + \"<body\" + (id_attr) + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\">\");\n        if ($truthy((docinfo_content = node.$docinfo(\"header\"))['$empty?']())) {\n        } else {\n          result['$<<'](docinfo_content)\n        };\n        if ($truthy(node.$noheader())) {\n        } else {\n          \n          result['$<<'](\"\" + \"<div id=\\\"header\\\"\" + (max_width_attr) + \">\");\n          if (node.$doctype()['$=='](\"manpage\")) {\n            \n            result['$<<'](\"\" + \"<h1>\" + (node.$doctitle()) + \" Manual Page</h1>\");\n            if ($truthy(($truthy($a = ($truthy($b = sectioned) ? node['$attr?'](\"toc\") : $b)) ? node['$attr?'](\"toc-placement\", \"auto\") : $a))) {\n              result['$<<'](\"\" + \"<div id=\\\"toc\\\" class=\\\"\" + (node.$attr(\"toc-class\", \"toc\")) + \"\\\">\\n\" + \"<div id=\\\"toctitle\\\">\" + (node.$attr(\"toc-title\")) + \"</div>\\n\" + (node.$converter().$convert(node, \"outline\")) + \"\\n\" + \"</div>\")};\n            if ($truthy(node['$attr?'](\"manpurpose\"))) {\n              result['$<<'](self.$generate_manname_section(node))};\n          } else {\n            \n            if ($truthy(node['$header?']())) {\n              \n              if ($truthy(node.$notitle())) {\n              } else {\n                result['$<<'](\"\" + \"<h1>\" + (node.$header().$title()) + \"</h1>\")\n              };\n              details = [];\n              idx = 1;\n              $send(node.$authors(), 'each', [], ($$4 = function(author){var self = $$4.$$s || this;\n\n              \n                \n                if (author == null) {\n                  author = nil;\n                };\n                details['$<<'](\"\" + \"<span id=\\\"author\" + ((function() {if ($truthy($rb_gt(idx, 1))) {\n                  return idx\n                } else {\n                  return \"\"\n                }; return nil; })()) + \"\\\" class=\\\"author\\\">\" + (node.$sub_replacements(author.$name())) + \"</span>\" + (br));\n                if ($truthy(author.$email())) {\n                  details['$<<'](\"\" + \"<span id=\\\"email\" + ((function() {if ($truthy($rb_gt(idx, 1))) {\n                    return idx\n                  } else {\n                    return \"\"\n                  }; return nil; })()) + \"\\\" class=\\\"email\\\">\" + (node.$sub_macros(author.$email())) + \"</span>\" + (br))};\n                return (idx = $rb_plus(idx, 1));}, $$4.$$s = self, $$4.$$arity = 1, $$4));\n              if ($truthy(node['$attr?'](\"revnumber\"))) {\n                details['$<<'](\"\" + \"<span id=\\\"revnumber\\\">\" + (($truthy($a = node.$attr(\"version-label\")) ? $a : \"\").$downcase()) + \" \" + (node.$attr(\"revnumber\")) + ((function() {if ($truthy(node['$attr?'](\"revdate\"))) {\n                  return \",\"\n                } else {\n                  return \"\"\n                }; return nil; })()) + \"</span>\")};\n              if ($truthy(node['$attr?'](\"revdate\"))) {\n                details['$<<'](\"\" + \"<span id=\\\"revdate\\\">\" + (node.$attr(\"revdate\")) + \"</span>\")};\n              if ($truthy(node['$attr?'](\"revremark\"))) {\n                details['$<<'](\"\" + (br) + \"<span id=\\\"revremark\\\">\" + (node.$attr(\"revremark\")) + \"</span>\")};\n              if ($truthy(details['$empty?']())) {\n              } else {\n                \n                result['$<<'](\"<div class=\\\"details\\\">\");\n                result.$concat(details);\n                result['$<<'](\"</div>\");\n              };};\n            if ($truthy(($truthy($a = ($truthy($b = sectioned) ? node['$attr?'](\"toc\") : $b)) ? node['$attr?'](\"toc-placement\", \"auto\") : $a))) {\n              result['$<<'](\"\" + \"<div id=\\\"toc\\\" class=\\\"\" + (node.$attr(\"toc-class\", \"toc\")) + \"\\\">\\n\" + \"<div id=\\\"toctitle\\\">\" + (node.$attr(\"toc-title\")) + \"</div>\\n\" + (node.$converter().$convert(node, \"outline\")) + \"\\n\" + \"</div>\")};\n          };\n          result['$<<'](\"</div>\");\n        };\n        result['$<<'](\"\" + \"<div id=\\\"content\\\"\" + (max_width_attr) + \">\\n\" + (node.$content()) + \"\\n\" + \"</div>\");\n        if ($truthy(($truthy($a = node['$footnotes?']()) ? node['$attr?'](\"nofootnotes\")['$!']() : $a))) {\n          \n          result['$<<'](\"\" + \"<div id=\\\"footnotes\\\"\" + (max_width_attr) + \">\\n\" + \"<hr\" + (slash) + \">\");\n          $send(node.$footnotes(), 'each', [], ($$5 = function(footnote){var self = $$5.$$s || this;\n\n          \n            \n            if (footnote == null) {\n              footnote = nil;\n            };\n            return result['$<<'](\"\" + \"<div class=\\\"footnote\\\" id=\\\"_footnotedef_\" + (footnote.$index()) + \"\\\">\\n\" + \"<a href=\\\"#_footnoteref_\" + (footnote.$index()) + \"\\\">\" + (footnote.$index()) + \"</a>. \" + (footnote.$text()) + \"\\n\" + \"</div>\");}, $$5.$$s = self, $$5.$$arity = 1, $$5));\n          result['$<<'](\"</div>\");};\n        if ($truthy(node.$nofooter())) {\n        } else {\n          \n          result['$<<'](\"\" + \"<div id=\\\"footer\\\"\" + (max_width_attr) + \">\");\n          result['$<<'](\"<div id=\\\"footer-text\\\">\");\n          if ($truthy(node['$attr?'](\"revnumber\"))) {\n            result['$<<'](\"\" + (node.$attr(\"version-label\")) + \" \" + (node.$attr(\"revnumber\")) + (br))};\n          if ($truthy(($truthy($a = node['$attr?'](\"last-update-label\")) ? node['$attr?'](\"reproducible\")['$!']() : $a))) {\n            result['$<<'](\"\" + (node.$attr(\"last-update-label\")) + \" \" + (node.$attr(\"docdatetime\")))};\n          result['$<<'](\"</div>\");\n          result['$<<'](\"</div>\");\n        };\n        if ($truthy(syntax_hl)) {\n          \n          if ($truthy(syntax_hl['$docinfo?'](\"head\"))) {\n            \n            $writer = [syntax_hl_docinfo_head_idx, syntax_hl.$docinfo(\"head\", node, $hash2([\"cdn_base_url\", \"linkcss\", \"self_closing_tag_slash\"], {\"cdn_base_url\": cdn_base_url, \"linkcss\": linkcss, \"self_closing_tag_slash\": slash}))];\n            $send(result, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          } else {\n            result.$delete_at(syntax_hl_docinfo_head_idx)\n          };\n          if ($truthy(syntax_hl['$docinfo?'](\"footer\"))) {\n            result['$<<'](syntax_hl.$docinfo(\"footer\", node, $hash2([\"cdn_base_url\", \"linkcss\", \"self_closing_tag_slash\"], {\"cdn_base_url\": cdn_base_url, \"linkcss\": linkcss, \"self_closing_tag_slash\": slash})))};};\n        if ($truthy(node['$attr?'](\"stem\"))) {\n          \n          eqnums_val = node.$attr(\"eqnums\", \"none\");\n          if ($truthy(eqnums_val['$empty?']())) {\n            eqnums_val = \"AMS\"};\n          eqnums_opt = \"\" + \" equationNumbers: { autoNumber: \\\"\" + (eqnums_val) + \"\\\" } \";\n          result['$<<'](\"\" + \"<script type=\\\"text/x-mathjax-config\\\">\\n\" + \"MathJax.Hub.Config({\\n\" + \"  messageStyle: \\\"none\\\",\\n\" + \"  tex2jax: {\\n\" + \"    inlineMath: [\" + ($$($nesting, 'INLINE_MATH_DELIMITERS')['$[]'](\"latexmath\").$inspect()) + \"],\\n\" + \"    displayMath: [\" + ($$($nesting, 'BLOCK_MATH_DELIMITERS')['$[]'](\"latexmath\").$inspect()) + \"],\\n\" + \"    ignoreClass: \\\"nostem|nolatexmath\\\"\\n\" + \"  },\\n\" + \"  asciimath2jax: {\\n\" + \"    delimiters: [\" + ($$($nesting, 'BLOCK_MATH_DELIMITERS')['$[]'](\"asciimath\").$inspect()) + \"],\\n\" + \"    ignoreClass: \\\"nostem|noasciimath\\\"\\n\" + \"  },\\n\" + \"  TeX: {\" + (eqnums_opt) + \"}\\n\" + \"})\\n\" + \"MathJax.Hub.Register.StartupHook(\\\"AsciiMath Jax Ready\\\", function () {\\n\" + \"  MathJax.InputJax.AsciiMath.postfilterHooks.Add(function (data, node) {\\n\" + \"    if ((node = data.script.parentNode) && (node = node.parentNode) && node.classList.contains(\\\"stemblock\\\")) {\\n\" + \"      data.math.root.display = \\\"block\\\"\\n\" + \"    }\\n\" + \"    return data\\n\" + \"  })\\n\" + \"})\\n\" + \"</script>\\n\" + \"<script src=\\\"\" + (cdn_base_url) + \"/mathjax/\" + ($$($nesting, 'MATHJAX_VERSION')) + \"/MathJax.js?config=TeX-MML-AM_HTMLorMML\\\"></script>\");};\n        if ($truthy((docinfo_content = node.$docinfo(\"footer\"))['$empty?']())) {\n        } else {\n          result['$<<'](docinfo_content)\n        };\n        result['$<<'](\"</body>\");\n        result['$<<'](\"</html>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_document$3.$$arity = 1);\n      \n      Opal.def(self, '$convert_embedded', $Html5Converter_convert_embedded$6 = function $$convert_embedded(node) {\n        var $a, $b, $c, $$7, self = this, result = nil, id_attr = nil, toc_p = nil;\n\n        \n        result = [];\n        if (node.$doctype()['$=='](\"manpage\")) {\n          \n          if ($truthy(node.$notitle())) {\n          } else {\n            \n            id_attr = (function() {if ($truthy(node.$id())) {\n              return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })();\n            result['$<<'](\"\" + \"<h1\" + (id_attr) + \">\" + (node.$doctitle()) + \" Manual Page</h1>\");\n          };\n          if ($truthy(node['$attr?'](\"manpurpose\"))) {\n            result['$<<'](self.$generate_manname_section(node))};\n        } else if ($truthy(($truthy($a = node['$header?']()) ? node.$notitle()['$!']() : $a))) {\n          \n          id_attr = (function() {if ($truthy(node.$id())) {\n            return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          result['$<<'](\"\" + \"<h1\" + (id_attr) + \">\" + (node.$header().$title()) + \"</h1>\");};\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = node['$sections?']()) ? node['$attr?'](\"toc\") : $c)) ? (toc_p = node.$attr(\"toc-placement\"))['$!='](\"macro\") : $b)) ? toc_p['$!='](\"preamble\") : $a))) {\n          result['$<<'](\"\" + \"<div id=\\\"toc\\\" class=\\\"toc\\\">\\n\" + \"<div id=\\\"toctitle\\\">\" + (node.$attr(\"toc-title\")) + \"</div>\\n\" + (node.$converter().$convert(node, \"outline\")) + \"\\n\" + \"</div>\")};\n        result['$<<'](node.$content());\n        if ($truthy(($truthy($a = node['$footnotes?']()) ? node['$attr?'](\"nofootnotes\")['$!']() : $a))) {\n          \n          result['$<<'](\"\" + \"<div id=\\\"footnotes\\\">\\n\" + \"<hr\" + (self.void_element_slash) + \">\");\n          $send(node.$footnotes(), 'each', [], ($$7 = function(footnote){var self = $$7.$$s || this;\n\n          \n            \n            if (footnote == null) {\n              footnote = nil;\n            };\n            return result['$<<'](\"\" + \"<div class=\\\"footnote\\\" id=\\\"_footnotedef_\" + (footnote.$index()) + \"\\\">\\n\" + \"<a href=\\\"#_footnoteref_\" + (footnote.$index()) + \"\\\">\" + (footnote.$index()) + \"</a>. \" + (footnote.$text()) + \"\\n\" + \"</div>\");}, $$7.$$s = self, $$7.$$arity = 1, $$7));\n          result['$<<'](\"</div>\");};\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_embedded$6.$$arity = 1);\n      \n      Opal.def(self, '$convert_outline', $Html5Converter_convert_outline$8 = function $$convert_outline(node, opts) {\n        var $a, $b, $$9, self = this, sectnumlevels = nil, toclevels = nil, sections = nil, result = nil;\n\n        \n        \n        if (opts == null) {\n          opts = $hash2([], {});\n        };\n        if ($truthy(node['$sections?']())) {\n        } else {\n          return nil\n        };\n        sectnumlevels = ($truthy($a = opts['$[]'](\"sectnumlevels\")) ? $a : ($truthy($b = node.$document().$attributes()['$[]'](\"sectnumlevels\")) ? $b : 3).$to_i());\n        toclevels = ($truthy($a = opts['$[]'](\"toclevels\")) ? $a : ($truthy($b = node.$document().$attributes()['$[]'](\"toclevels\")) ? $b : 2).$to_i());\n        sections = node.$sections();\n        result = [\"\" + \"<ul class=\\\"sectlevel\" + (sections['$[]'](0).$level()) + \"\\\">\"];\n        $send(sections, 'each', [], ($$9 = function(section){var self = $$9.$$s || this, $c, slevel = nil, stitle = nil, $case = nil, signifier = nil, child_toc_level = nil;\n\n        \n          \n          if (section == null) {\n            section = nil;\n          };\n          slevel = section.$level();\n          if ($truthy(section.$caption())) {\n            stitle = section.$captioned_title()\n          } else if ($truthy(($truthy($c = section.$numbered()) ? $rb_le(slevel, sectnumlevels) : $c))) {\n            if ($truthy(($truthy($c = $rb_lt(slevel, 2)) ? node.$document().$doctype()['$=='](\"book\") : $c))) {\n              $case = section.$sectname();\n              if (\"chapter\"['$===']($case)) {stitle = \"\" + ((function() {if ($truthy((signifier = node.$document().$attributes()['$[]'](\"chapter-signifier\")))) {\n                return \"\" + (signifier) + \" \"\n              } else {\n                return \"\"\n              }; return nil; })()) + (section.$sectnum()) + \" \" + (section.$title())}\n              else if (\"part\"['$===']($case)) {stitle = \"\" + ((function() {if ($truthy((signifier = node.$document().$attributes()['$[]'](\"part-signifier\")))) {\n                return \"\" + (signifier) + \" \"\n              } else {\n                return \"\"\n              }; return nil; })()) + (section.$sectnum(nil, \":\")) + \" \" + (section.$title())}\n              else {stitle = \"\" + (section.$sectnum()) + \" \" + (section.$title())}\n            } else {\n              stitle = \"\" + (section.$sectnum()) + \" \" + (section.$title())\n            }\n          } else {\n            stitle = section.$title()\n          };\n          if ($truthy(stitle['$include?'](\"<a\"))) {\n            stitle = stitle.$gsub($$($nesting, 'DropAnchorRx'), \"\")};\n          if ($truthy(($truthy($c = $rb_lt(slevel, toclevels)) ? (child_toc_level = self.$convert_outline(section, $hash2([\"toclevels\", \"sectnumlevels\"], {\"toclevels\": toclevels, \"sectnumlevels\": sectnumlevels}))) : $c))) {\n            \n            result['$<<'](\"\" + \"<li><a href=\\\"#\" + (section.$id()) + \"\\\">\" + (stitle) + \"</a>\");\n            result['$<<'](child_toc_level);\n            return result['$<<'](\"</li>\");\n          } else {\n            return result['$<<'](\"\" + \"<li><a href=\\\"#\" + (section.$id()) + \"\\\">\" + (stitle) + \"</a></li>\")\n          };}, $$9.$$s = self, $$9.$$arity = 1, $$9));\n        result['$<<'](\"</ul>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_outline$8.$$arity = -2);\n      \n      Opal.def(self, '$convert_section', $Html5Converter_convert_section$10 = function $$convert_section(node) {\n        var $a, $b, self = this, doc_attrs = nil, level = nil, title = nil, $case = nil, signifier = nil, id_attr = nil, id = nil, role = nil;\n\n        \n        doc_attrs = node.$document().$attributes();\n        level = node.$level();\n        if ($truthy(node.$caption())) {\n          title = node.$captioned_title()\n        } else if ($truthy(($truthy($a = node.$numbered()) ? $rb_le(level, ($truthy($b = doc_attrs['$[]'](\"sectnumlevels\")) ? $b : 3).$to_i()) : $a))) {\n          if ($truthy(($truthy($a = $rb_lt(level, 2)) ? node.$document().$doctype()['$=='](\"book\") : $a))) {\n            $case = node.$sectname();\n            if (\"chapter\"['$===']($case)) {title = \"\" + ((function() {if ($truthy((signifier = doc_attrs['$[]'](\"chapter-signifier\")))) {\n              return \"\" + (signifier) + \" \"\n            } else {\n              return \"\"\n            }; return nil; })()) + (node.$sectnum()) + \" \" + (node.$title())}\n            else if (\"part\"['$===']($case)) {title = \"\" + ((function() {if ($truthy((signifier = doc_attrs['$[]'](\"part-signifier\")))) {\n              return \"\" + (signifier) + \" \"\n            } else {\n              return \"\"\n            }; return nil; })()) + (node.$sectnum(nil, \":\")) + \" \" + (node.$title())}\n            else {title = \"\" + (node.$sectnum()) + \" \" + (node.$title())}\n          } else {\n            title = \"\" + (node.$sectnum()) + \" \" + (node.$title())\n          }\n        } else {\n          title = node.$title()\n        };\n        if ($truthy(node.$id())) {\n          \n          id_attr = \"\" + \" id=\\\"\" + ((id = node.$id())) + \"\\\"\";\n          if ($truthy(doc_attrs['$[]'](\"sectlinks\"))) {\n            title = \"\" + \"<a class=\\\"link\\\" href=\\\"#\" + (id) + \"\\\">\" + (title) + \"</a>\"};\n          if ($truthy(doc_attrs['$[]'](\"sectanchors\"))) {\n            if (doc_attrs['$[]'](\"sectanchors\")['$=='](\"after\")) {\n              title = \"\" + (title) + \"<a class=\\\"anchor\\\" href=\\\"#\" + (id) + \"\\\"></a>\"\n            } else {\n              title = \"\" + \"<a class=\\\"anchor\\\" href=\\\"#\" + (id) + \"\\\"></a>\" + (title)\n            }};\n        } else {\n          id_attr = \"\"\n        };\n        if (level['$=='](0)) {\n          return \"\" + \"<h1\" + (id_attr) + \" class=\\\"sect0\" + ((function() {if ($truthy((role = node.$role()))) {\n            return \"\" + \" \" + (role)\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\" + (title) + \"</h1>\\n\" + (node.$content())\n        } else {\n          return \"\" + \"<div class=\\\"sect\" + (level) + ((function() {if ($truthy((role = node.$role()))) {\n            return \"\" + \" \" + (role)\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\\n\" + \"<h\" + ($rb_plus(level, 1)) + (id_attr) + \">\" + (title) + \"</h\" + ($rb_plus(level, 1)) + \">\\n\" + ((function() {if (level['$=='](1)) {\n            return \"\" + \"<div class=\\\"sectionbody\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\"\n          } else {\n            return node.$content()\n          }; return nil; })()) + \"\\n\" + \"</div>\"\n        };\n      }, $Html5Converter_convert_section$10.$$arity = 1);\n      \n      Opal.def(self, '$convert_admonition', $Html5Converter_convert_admonition$11 = function $$convert_admonition(node) {\n        var $a, self = this, id_attr = nil, name = nil, title_element = nil, label = nil, role = nil;\n\n        \n        id_attr = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        name = node.$attr(\"name\");\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(node.$document()['$attr?'](\"icons\"))) {\n          if ($truthy(($truthy($a = node.$document()['$attr?'](\"icons\", \"font\")) ? node['$attr?'](\"icon\")['$!']() : $a))) {\n            label = \"\" + \"<i class=\\\"fa icon-\" + (name) + \"\\\" title=\\\"\" + (node.$attr(\"textlabel\")) + \"\\\"></i>\"\n          } else {\n            label = \"\" + \"<img src=\\\"\" + (node.$icon_uri(name)) + \"\\\" alt=\\\"\" + (node.$attr(\"textlabel\")) + \"\\\"\" + (self.void_element_slash) + \">\"\n          }\n        } else {\n          label = \"\" + \"<div class=\\\"title\\\">\" + (node.$attr(\"textlabel\")) + \"</div>\"\n        };\n        return \"\" + \"<div\" + (id_attr) + \" class=\\\"admonitionblock \" + (name) + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + \"<table>\\n\" + \"<tr>\\n\" + \"<td class=\\\"icon\\\">\\n\" + (label) + \"\\n\" + \"</td>\\n\" + \"<td class=\\\"content\\\">\\n\" + (title_element) + (node.$content()) + \"\\n\" + \"</td>\\n\" + \"</tr>\\n\" + \"</table>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_admonition$11.$$arity = 1);\n      \n      Opal.def(self, '$convert_audio', $Html5Converter_convert_audio$12 = function $$convert_audio(node) {\n        var $a, self = this, xml = nil, id_attribute = nil, classes = nil, class_attribute = nil, title_element = nil, start_t = nil, end_t = nil, time_anchor = nil;\n\n        \n        xml = self.xml_mode;\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"audioblock\", node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        start_t = node.$attr(\"start\");\n        end_t = node.$attr(\"end\");\n        time_anchor = (function() {if ($truthy(($truthy($a = start_t) ? $a : end_t))) {\n          return \"\" + \"#t=\" + (($truthy($a = start_t) ? $a : \"\")) + ((function() {if ($truthy(end_t)) {\n            return \"\" + \",\" + (end_t)\n          } else {\n            return \"\"\n          }; return nil; })())\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + \"<audio src=\\\"\" + (node.$media_uri(node.$attr(\"target\"))) + (time_anchor) + \"\\\"\" + ((function() {if ($truthy(node['$option?'](\"autoplay\"))) {\n          \n          return self.$append_boolean_attribute(\"autoplay\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"nocontrols\"))) {\n          return \"\"\n        } else {\n          \n          return self.$append_boolean_attribute(\"controls\", xml);\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"loop\"))) {\n          \n          return self.$append_boolean_attribute(\"loop\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + \">\\n\" + \"Your browser does not support the audio tag.\\n\" + \"</audio>\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_audio$12.$$arity = 1);\n      \n      Opal.def(self, '$convert_colist', $Html5Converter_convert_colist$13 = function $$convert_colist(node) {\n        var $a, $$14, $$15, self = this, result = nil, id_attribute = nil, classes = nil, class_attribute = nil, font_icons = nil, num = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"colist\", node.$style(), node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        result['$<<'](\"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\")};\n        if ($truthy(node.$document()['$attr?'](\"icons\"))) {\n          \n          result['$<<'](\"<table>\");\n          $a = [node.$document()['$attr?'](\"icons\", \"font\"), 0], (font_icons = $a[0]), (num = $a[1]), $a;\n          $send(node.$items(), 'each', [], ($$14 = function(item){var self = $$14.$$s || this, num_label = nil;\n            if (self.void_element_slash == null) self.void_element_slash = nil;\n\n          \n            \n            if (item == null) {\n              item = nil;\n            };\n            num = $rb_plus(num, 1);\n            if ($truthy(font_icons)) {\n              num_label = \"\" + \"<i class=\\\"conum\\\" data-value=\\\"\" + (num) + \"\\\"></i><b>\" + (num) + \"</b>\"\n            } else {\n              num_label = \"\" + \"<img src=\\\"\" + (node.$icon_uri(\"\" + \"callouts/\" + (num))) + \"\\\" alt=\\\"\" + (num) + \"\\\"\" + (self.void_element_slash) + \">\"\n            };\n            return result['$<<'](\"\" + \"<tr>\\n\" + \"<td>\" + (num_label) + \"</td>\\n\" + \"<td>\" + (item.$text()) + ((function() {if ($truthy(item['$blocks?']())) {\n              return $rb_plus($$($nesting, 'LF'), item.$content())\n            } else {\n              return \"\"\n            }; return nil; })()) + \"</td>\\n\" + \"</tr>\");}, $$14.$$s = self, $$14.$$arity = 1, $$14));\n          result['$<<'](\"</table>\");\n        } else {\n          \n          result['$<<'](\"<ol>\");\n          $send(node.$items(), 'each', [], ($$15 = function(item){var self = $$15.$$s || this;\n\n          \n            \n            if (item == null) {\n              item = nil;\n            };\n            return result['$<<'](\"\" + \"<li>\\n\" + \"<p>\" + (item.$text()) + \"</p>\" + ((function() {if ($truthy(item['$blocks?']())) {\n              return $rb_plus($$($nesting, 'LF'), item.$content())\n            } else {\n              return \"\"\n            }; return nil; })()) + \"\\n\" + \"</li>\");}, $$15.$$s = self, $$15.$$arity = 1, $$15));\n          result['$<<'](\"</ol>\");\n        };\n        result['$<<'](\"</div>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_colist$13.$$arity = 1);\n      \n      Opal.def(self, '$convert_dlist', $Html5Converter_convert_dlist$16 = function $$convert_dlist(node) {\n        var $$17, $a, $$19, $$21, self = this, result = nil, id_attribute = nil, $case = nil, classes = nil, class_attribute = nil, slash = nil, col_style_attribute = nil, dt_style_attribute = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        $case = node.$style();\n        if (\"qanda\"['$===']($case)) {classes = [\"qlist\", \"qanda\", node.$role()]}\n        else if (\"horizontal\"['$===']($case)) {classes = [\"hdlist\", node.$role()]}\n        else {classes = [\"dlist\", node.$style(), node.$role()]};\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$compact().$join(\" \")) + \"\\\"\";\n        result['$<<'](\"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\")};\n        $case = node.$style();\n        if (\"qanda\"['$===']($case)) {\n        result['$<<'](\"<ol>\");\n        $send(node.$items(), 'each', [], ($$17 = function(terms, dd){var self = $$17.$$s || this, $$18;\n\n        \n          \n          if (terms == null) {\n            terms = nil;\n          };\n          \n          if (dd == null) {\n            dd = nil;\n          };\n          result['$<<'](\"<li>\");\n          $send(terms, 'each', [], ($$18 = function(dt){var self = $$18.$$s || this;\n\n          \n            \n            if (dt == null) {\n              dt = nil;\n            };\n            return result['$<<'](\"\" + \"<p><em>\" + (dt.$text()) + \"</em></p>\");}, $$18.$$s = self, $$18.$$arity = 1, $$18));\n          if ($truthy(dd)) {\n            \n            if ($truthy(dd['$text?']())) {\n              result['$<<'](\"\" + \"<p>\" + (dd.$text()) + \"</p>\")};\n            if ($truthy(dd['$blocks?']())) {\n              result['$<<'](dd.$content())};};\n          return result['$<<'](\"</li>\");}, $$17.$$s = self, $$17.$$arity = 2, $$17));\n        result['$<<'](\"</ol>\");}\n        else if (\"horizontal\"['$===']($case)) {\n        slash = self.void_element_slash;\n        result['$<<'](\"<table>\");\n        if ($truthy(($truthy($a = node['$attr?'](\"labelwidth\")) ? $a : node['$attr?'](\"itemwidth\")))) {\n          \n          result['$<<'](\"<colgroup>\");\n          col_style_attribute = (function() {if ($truthy(node['$attr?'](\"labelwidth\"))) {\n            return \"\" + \" style=\\\"width: \" + (node.$attr(\"labelwidth\").$chomp(\"%\")) + \"%;\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          result['$<<'](\"\" + \"<col\" + (col_style_attribute) + (slash) + \">\");\n          col_style_attribute = (function() {if ($truthy(node['$attr?'](\"itemwidth\"))) {\n            return \"\" + \" style=\\\"width: \" + (node.$attr(\"itemwidth\").$chomp(\"%\")) + \"%;\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          result['$<<'](\"\" + \"<col\" + (col_style_attribute) + (slash) + \">\");\n          result['$<<'](\"</colgroup>\");};\n        $send(node.$items(), 'each', [], ($$19 = function(terms, dd){var self = $$19.$$s || this, $$20, first_term = nil;\n\n        \n          \n          if (terms == null) {\n            terms = nil;\n          };\n          \n          if (dd == null) {\n            dd = nil;\n          };\n          result['$<<'](\"<tr>\");\n          result['$<<'](\"\" + \"<td class=\\\"hdlist1\" + ((function() {if ($truthy(node['$option?'](\"strong\"))) {\n            return \" strong\"\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\");\n          first_term = true;\n          $send(terms, 'each', [], ($$20 = function(dt){var self = $$20.$$s || this;\n\n          \n            \n            if (dt == null) {\n              dt = nil;\n            };\n            if ($truthy(first_term)) {\n            } else {\n              result['$<<'](\"\" + \"<br\" + (slash) + \">\")\n            };\n            result['$<<'](dt.$text());\n            return (first_term = nil);}, $$20.$$s = self, $$20.$$arity = 1, $$20));\n          result['$<<'](\"</td>\");\n          result['$<<'](\"<td class=\\\"hdlist2\\\">\");\n          if ($truthy(dd)) {\n            \n            if ($truthy(dd['$text?']())) {\n              result['$<<'](\"\" + \"<p>\" + (dd.$text()) + \"</p>\")};\n            if ($truthy(dd['$blocks?']())) {\n              result['$<<'](dd.$content())};};\n          result['$<<'](\"</td>\");\n          return result['$<<'](\"</tr>\");}, $$19.$$s = self, $$19.$$arity = 2, $$19));\n        result['$<<'](\"</table>\");}\n        else {\n        result['$<<'](\"<dl>\");\n        dt_style_attribute = (function() {if ($truthy(node.$style())) {\n          return \"\"\n        } else {\n          return \" class=\\\"hdlist1\\\"\"\n        }; return nil; })();\n        $send(node.$items(), 'each', [], ($$21 = function(terms, dd){var self = $$21.$$s || this, $$22;\n\n        \n          \n          if (terms == null) {\n            terms = nil;\n          };\n          \n          if (dd == null) {\n            dd = nil;\n          };\n          $send(terms, 'each', [], ($$22 = function(dt){var self = $$22.$$s || this;\n\n          \n            \n            if (dt == null) {\n              dt = nil;\n            };\n            return result['$<<'](\"\" + \"<dt\" + (dt_style_attribute) + \">\" + (dt.$text()) + \"</dt>\");}, $$22.$$s = self, $$22.$$arity = 1, $$22));\n          if ($truthy(dd)) {\n          } else {\n            return nil;\n          };\n          result['$<<'](\"<dd>\");\n          if ($truthy(dd['$text?']())) {\n            result['$<<'](\"\" + \"<p>\" + (dd.$text()) + \"</p>\")};\n          if ($truthy(dd['$blocks?']())) {\n            result['$<<'](dd.$content())};\n          return result['$<<'](\"</dd>\");}, $$21.$$s = self, $$21.$$arity = 2, $$21));\n        result['$<<'](\"</dl>\");};\n        result['$<<'](\"</div>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_dlist$16.$$arity = 1);\n      \n      Opal.def(self, '$convert_example', $Html5Converter_convert_example$23 = function $$convert_example(node) {\n        var self = this, id_attribute = nil, class_attribute = nil, summary_element = nil, title_element = nil, role = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(node['$option?'](\"collapsible\"))) {\n          \n          class_attribute = (function() {if ($truthy(node.$role())) {\n            return \"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          summary_element = (function() {if ($truthy(node['$title?']())) {\n            return \"\" + \"<summary class=\\\"title\\\">\" + (node.$title()) + \"</summary>\"\n          } else {\n            return \"<summary class=\\\"title\\\">Details</summary>\"\n          }; return nil; })();\n          return \"\" + \"<details\" + (id_attribute) + (class_attribute) + ((function() {if ($truthy(node['$option?'](\"open\"))) {\n            return \" open\"\n          } else {\n            return \"\"\n          }; return nil; })()) + \">\\n\" + (summary_element) + \"\\n\" + \"<div class=\\\"content\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\\n\" + \"</details>\";\n        } else {\n          \n          title_element = (function() {if ($truthy(node['$title?']())) {\n            return \"\" + \"<div class=\\\"title\\\">\" + (node.$captioned_title()) + \"</div>\\n\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          return \"\" + \"<div\" + (id_attribute) + \" class=\\\"exampleblock\" + ((function() {if ($truthy((role = node.$role()))) {\n            return \"\" + \" \" + (role)\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n        };\n      }, $Html5Converter_convert_example$23.$$arity = 1);\n      \n      Opal.def(self, '$convert_floating_title', $Html5Converter_convert_floating_title$24 = function $$convert_floating_title(node) {\n        var self = this, tag_name = nil, id_attribute = nil, classes = nil;\n\n        \n        tag_name = \"\" + \"h\" + ($rb_plus(node.$level(), 1));\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [node.$style(), node.$role()].$compact();\n        return \"\" + \"<\" + (tag_name) + (id_attribute) + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\">\" + (node.$title()) + \"</\" + (tag_name) + \">\";\n      }, $Html5Converter_convert_floating_title$24.$$arity = 1);\n      \n      Opal.def(self, '$convert_image', $Html5Converter_convert_image$25 = function $$convert_image(node) {\n        var $a, $b, $c, self = this, target = nil, width_attr = nil, height_attr = nil, svg = nil, obj = nil, img = nil, fallback = nil, id_attr = nil, classes = nil, class_attr = nil, title_el = nil;\n\n        \n        target = node.$attr(\"target\");\n        width_attr = (function() {if ($truthy(node['$attr?'](\"width\"))) {\n          return \"\" + \" width=\\\"\" + (node.$attr(\"width\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        height_attr = (function() {if ($truthy(node['$attr?'](\"height\"))) {\n          return \"\" + \" height=\\\"\" + (node.$attr(\"height\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = node['$attr?'](\"format\", \"svg\")) ? $c : target['$include?'](\".svg\"))) ? $rb_lt(node.$document().$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')) : $b)) ? ($truthy($b = (svg = node['$option?'](\"inline\"))) ? $b : (obj = node['$option?'](\"interactive\"))) : $a))) {\n          if ($truthy(svg)) {\n            img = ($truthy($a = self.$read_svg_contents(node, target)) ? $a : \"\" + \"<span class=\\\"alt\\\">\" + (node.$alt()) + \"</span>\")\n          } else if ($truthy(obj)) {\n            \n            fallback = (function() {if ($truthy(node['$attr?'](\"fallback\"))) {\n              return \"\" + \"<img src=\\\"\" + (node.$image_uri(node.$attr(\"fallback\"))) + \"\\\" alt=\\\"\" + (self.$encode_attribute_value(node.$alt())) + \"\\\"\" + (width_attr) + (height_attr) + (self.void_element_slash) + \">\"\n            } else {\n              return \"\" + \"<span class=\\\"alt\\\">\" + (node.$alt()) + \"</span>\"\n            }; return nil; })();\n            img = \"\" + \"<object type=\\\"image/svg+xml\\\" data=\\\"\" + (node.$image_uri(target)) + \"\\\"\" + (width_attr) + (height_attr) + \">\" + (fallback) + \"</object>\";}};\n        img = ($truthy($a = img) ? $a : \"\" + \"<img src=\\\"\" + (node.$image_uri(target)) + \"\\\" alt=\\\"\" + (self.$encode_attribute_value(node.$alt())) + \"\\\"\" + (width_attr) + (height_attr) + (self.void_element_slash) + \">\");\n        if ($truthy(node['$attr?'](\"link\"))) {\n          img = \"\" + \"<a class=\\\"image\\\" href=\\\"\" + (node.$attr(\"link\")) + \"\\\"\" + (self.$append_link_constraint_attrs(node).$join()) + \">\" + (img) + \"</a>\"};\n        id_attr = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"imageblock\"];\n        if ($truthy(node['$attr?'](\"float\"))) {\n          classes['$<<'](node.$attr(\"float\"))};\n        if ($truthy(node['$attr?'](\"align\"))) {\n          classes['$<<'](\"\" + \"text-\" + (node.$attr(\"align\")))};\n        if ($truthy(node.$role())) {\n          classes['$<<'](node.$role())};\n        class_attr = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_el = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"\\n<div class=\\\"title\\\">\" + (node.$captioned_title()) + \"</div>\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attr) + (class_attr) + \">\\n\" + \"<div class=\\\"content\\\">\\n\" + (img) + \"\\n\" + \"</div>\" + (title_el) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_image$25.$$arity = 1);\n      \n      Opal.def(self, '$convert_listing', $Html5Converter_convert_listing$26 = function $$convert_listing(node) {\n        var $a, self = this, nowrap = nil, lang = nil, syntax_hl = nil, opts = nil, doc_attrs = nil, $writer = nil, pre_open = nil, pre_close = nil, id_attribute = nil, title_element = nil, role = nil;\n\n        \n        nowrap = ($truthy($a = node['$option?'](\"nowrap\")) ? $a : node.$document()['$attr?'](\"prewrap\")['$!']());\n        if (node.$style()['$=='](\"source\")) {\n          \n          lang = node.$attr(\"language\");\n          if ($truthy((syntax_hl = node.$document().$syntax_highlighter()))) {\n            \n            opts = (function() {if ($truthy(syntax_hl['$highlight?']())) {\n              return $hash2([\"css_mode\", \"style\"], {\"css_mode\": ($truthy($a = (doc_attrs = node.$document().$attributes())['$[]'](\"\" + (syntax_hl.$name()) + \"-css\")) ? $a : \"class\").$to_sym(), \"style\": doc_attrs['$[]'](\"\" + (syntax_hl.$name()) + \"-style\")})\n            } else {\n              return $hash2([], {})\n            }; return nil; })();\n            \n            $writer = [\"nowrap\", nowrap];\n            $send(opts, '[]=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            \n            pre_open = \"\" + \"<pre class=\\\"highlight\" + ((function() {if ($truthy(nowrap)) {\n              return \" nowrap\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \"\\\"><code\" + ((function() {if ($truthy(lang)) {\n              return \"\" + \" class=\\\"language-\" + (lang) + \"\\\" data-lang=\\\"\" + (lang) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \">\";\n            pre_close = \"</code></pre>\";\n          };\n        } else {\n          \n          pre_open = \"\" + \"<pre\" + ((function() {if ($truthy(nowrap)) {\n            return \" class=\\\"nowrap\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })()) + \">\";\n          pre_close = \"</pre>\";\n        };\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$captioned_title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + \" class=\\\"listingblock\" + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + ((function() {if ($truthy(syntax_hl)) {\n          \n          return syntax_hl.$format(node, lang, opts);\n        } else {\n          return $rb_plus($rb_plus(pre_open, ($truthy($a = node.$content()) ? $a : \"\")), pre_close)\n        }; return nil; })()) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_listing$26.$$arity = 1);\n      \n      Opal.def(self, '$convert_literal', $Html5Converter_convert_literal$27 = function $$convert_literal(node) {\n        var $a, self = this, id_attribute = nil, title_element = nil, nowrap = nil, role = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        nowrap = ($truthy($a = node.$document()['$attr?'](\"prewrap\")['$!']()) ? $a : node['$option?'](\"nowrap\"));\n        return \"\" + \"<div\" + (id_attribute) + \" class=\\\"literalblock\" + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + \"<pre\" + ((function() {if ($truthy(nowrap)) {\n          return \" class=\\\"nowrap\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })()) + \">\" + (node.$content()) + \"</pre>\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_literal$27.$$arity = 1);\n      \n      Opal.def(self, '$convert_stem', $Html5Converter_convert_stem$28 = function $$convert_stem(node) {\n        var $a, $b, $$29, self = this, id_attribute = nil, title_element = nil, style = nil, open = nil, close = nil, equation = nil, br = nil, role = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        $b = $$($nesting, 'BLOCK_MATH_DELIMITERS')['$[]']((style = node.$style().$to_sym())), $a = Opal.to_ary($b), (open = ($a[0] == null ? nil : $a[0])), (close = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy((equation = node.$content()))) {\n          \n          if ($truthy((($a = style['$=='](\"asciimath\")) ? equation['$include?']($$($nesting, 'LF')) : style['$=='](\"asciimath\")))) {\n            \n            br = \"\" + ($$($nesting, 'LF')) + \"<br\" + (self.void_element_slash) + \">\";\n            equation = $send(equation, 'gsub', [$$($nesting, 'StemBreakRx')], ($$29 = function(){var self = $$29.$$s || this, $c;\n\n            return \"\" + (close) + ($rb_times(br, $rb_minus((($c = $gvars['~']) === nil ? nil : $c['$[]'](0)).$count($$($nesting, 'LF')), 1))) + ($$($nesting, 'LF')) + (open)}, $$29.$$s = self, $$29.$$arity = 0, $$29));};\n          if ($truthy(($truthy($a = equation['$start_with?'](open)) ? equation['$end_with?'](close) : $a))) {\n          } else {\n            equation = \"\" + (open) + (equation) + (close)\n          };\n        } else {\n          equation = \"\"\n        };\n        return \"\" + \"<div\" + (id_attribute) + \" class=\\\"stemblock\" + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + (title_element) + \"<div class=\\\"content\\\">\\n\" + (equation) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_stem$28.$$arity = 1);\n      \n      Opal.def(self, '$convert_olist', $Html5Converter_convert_olist$30 = function $$convert_olist(node) {\n        var $$31, self = this, result = nil, id_attribute = nil, classes = nil, class_attribute = nil, type_attribute = nil, keyword = nil, start_attribute = nil, reversed_attribute = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"olist\", node.$style(), node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        result['$<<'](\"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\")};\n        type_attribute = (function() {if ($truthy((keyword = node.$list_marker_keyword()))) {\n          return \"\" + \" type=\\\"\" + (keyword) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        start_attribute = (function() {if ($truthy(node['$attr?'](\"start\"))) {\n          return \"\" + \" start=\\\"\" + (node.$attr(\"start\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        reversed_attribute = (function() {if ($truthy(node['$option?'](\"reversed\"))) {\n          \n          return self.$append_boolean_attribute(\"reversed\", self.xml_mode);\n        } else {\n          return \"\"\n        }; return nil; })();\n        result['$<<'](\"\" + \"<ol class=\\\"\" + (node.$style()) + \"\\\"\" + (type_attribute) + (start_attribute) + (reversed_attribute) + \">\");\n        $send(node.$items(), 'each', [], ($$31 = function(item){var self = $$31.$$s || this;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          if ($truthy(item.$id())) {\n            result['$<<'](\"\" + \"<li id=\\\"\" + (item.$id()) + \"\\\"\" + ((function() {if ($truthy(item.$role())) {\n              return \"\" + \" class=\\\"\" + (item.$role()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \">\")\n          } else if ($truthy(item.$role())) {\n            result['$<<'](\"\" + \"<li class=\\\"\" + (item.$role()) + \"\\\">\")\n          } else {\n            result['$<<'](\"<li>\")\n          };\n          result['$<<'](\"\" + \"<p>\" + (item.$text()) + \"</p>\");\n          if ($truthy(item['$blocks?']())) {\n            result['$<<'](item.$content())};\n          return result['$<<'](\"</li>\");}, $$31.$$s = self, $$31.$$arity = 1, $$31));\n        result['$<<'](\"</ol>\");\n        result['$<<'](\"</div>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_olist$30.$$arity = 1);\n      \n      Opal.def(self, '$convert_open', $Html5Converter_convert_open$32 = function $$convert_open(node) {\n        var $a, $b, $c, self = this, style = nil, id_attr = nil, title_el = nil, role = nil;\n\n        if ((style = node.$style())['$=='](\"abstract\")) {\n          if ($truthy((($a = node.$parent()['$=='](node.$document())) ? node.$document().$doctype()['$=='](\"book\") : node.$parent()['$=='](node.$document())))) {\n            \n            self.$logger().$warn(\"abstract block cannot be used in a document without a title when doctype is book. Excluding block content.\");\n            return \"\";\n          } else {\n            \n            id_attr = (function() {if ($truthy(node.$id())) {\n              return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })();\n            title_el = (function() {if ($truthy(node['$title?']())) {\n              return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n            } else {\n              return \"\"\n            }; return nil; })();\n            return \"\" + \"<div\" + (id_attr) + \" class=\\\"quoteblock abstract\" + ((function() {if ($truthy((role = node.$role()))) {\n              return \"\" + \" \" + (role)\n            } else {\n              return \"\"\n            }; return nil; })()) + \"\\\">\\n\" + (title_el) + \"<blockquote>\\n\" + (node.$content()) + \"\\n\" + \"</blockquote>\\n\" + \"</div>\";\n          }\n        } else if ($truthy((($a = style['$=='](\"partintro\")) ? ($truthy($b = ($truthy($c = $rb_gt(node.$level(), 0)) ? $c : node.$parent().$context()['$!='](\"section\"))) ? $b : node.$document().$doctype()['$!='](\"book\")) : style['$=='](\"partintro\")))) {\n          \n          self.$logger().$error(\"partintro block can only be used when doctype is book and must be a child of a book part. Excluding block content.\");\n          return \"\";\n        } else {\n          \n          id_attr = (function() {if ($truthy(node.$id())) {\n            return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          title_el = (function() {if ($truthy(node['$title?']())) {\n            return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          return \"\" + \"<div\" + (id_attr) + \" class=\\\"openblock\" + ((function() {if ($truthy(($truthy($a = style) ? style['$!='](\"open\") : $a))) {\n            return \"\" + \" \" + (style)\n          } else {\n            return \"\"\n          }; return nil; })()) + ((function() {if ($truthy((role = node.$role()))) {\n            return \"\" + \" \" + (role)\n          } else {\n            return \"\"\n          }; return nil; })()) + \"\\\">\\n\" + (title_el) + \"<div class=\\\"content\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n        }\n      }, $Html5Converter_convert_open$32.$$arity = 1);\n      \n      Opal.def(self, '$convert_page_break', $Html5Converter_convert_page_break$33 = function $$convert_page_break(node) {\n        var self = this;\n\n        return \"<div style=\\\"page-break-after: always;\\\"></div>\"\n      }, $Html5Converter_convert_page_break$33.$$arity = 1);\n      \n      Opal.def(self, '$convert_paragraph', $Html5Converter_convert_paragraph$34 = function $$convert_paragraph(node) {\n        var self = this, attributes = nil;\n\n        \n        if ($truthy(node.$role())) {\n          attributes = \"\" + ((function() {if ($truthy(node.$id())) {\n            return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })()) + \" class=\\\"paragraph \" + (node.$role()) + \"\\\"\"\n        } else if ($truthy(node.$id())) {\n          attributes = \"\" + \" id=\\\"\" + (node.$id()) + \"\\\" class=\\\"paragraph\\\"\"\n        } else {\n          attributes = \" class=\\\"paragraph\\\"\"\n        };\n        if ($truthy(node['$title?']())) {\n          return \"\" + \"<div\" + (attributes) + \">\\n\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\" + \"<p>\" + (node.$content()) + \"</p>\\n\" + \"</div>\"\n        } else {\n          return \"\" + \"<div\" + (attributes) + \">\\n\" + \"<p>\" + (node.$content()) + \"</p>\\n\" + \"</div>\"\n        };\n      }, $Html5Converter_convert_paragraph$34.$$arity = 1);\n      Opal.alias(self, \"convert_pass\", \"content_only\");\n      \n      Opal.def(self, '$convert_preamble', $Html5Converter_convert_preamble$35 = function $$convert_preamble(node) {\n        var $a, $b, self = this, doc = nil, toc = nil;\n\n        \n        if ($truthy(($truthy($a = ($truthy($b = (doc = node.$document())['$attr?'](\"toc-placement\", \"preamble\")) ? doc['$sections?']() : $b)) ? doc['$attr?'](\"toc\") : $a))) {\n          toc = \"\" + \"\\n\" + \"<div id=\\\"toc\\\" class=\\\"\" + (doc.$attr(\"toc-class\", \"toc\")) + \"\\\">\\n\" + \"<div id=\\\"toctitle\\\">\" + (doc.$attr(\"toc-title\")) + \"</div>\\n\" + (doc.$converter().$convert(doc, \"outline\")) + \"\\n\" + \"</div>\"\n        } else {\n          toc = \"\"\n        };\n        return \"\" + \"<div id=\\\"preamble\\\">\\n\" + \"<div class=\\\"sectionbody\\\">\\n\" + (node.$content()) + \"\\n\" + \"</div>\" + (toc) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_preamble$35.$$arity = 1);\n      \n      Opal.def(self, '$convert_quote', $Html5Converter_convert_quote$36 = function $$convert_quote(node) {\n        var $a, self = this, id_attribute = nil, classes = nil, class_attribute = nil, title_element = nil, attribution = nil, citetitle = nil, cite_element = nil, attribution_text = nil, attribution_element = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"quoteblock\", node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"\\n<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        attribution = (function() {if ($truthy(node['$attr?'](\"attribution\"))) {\n          \n          return node.$attr(\"attribution\");\n        } else {\n          return nil\n        }; return nil; })();\n        citetitle = (function() {if ($truthy(node['$attr?'](\"citetitle\"))) {\n          \n          return node.$attr(\"citetitle\");\n        } else {\n          return nil\n        }; return nil; })();\n        if ($truthy(($truthy($a = attribution) ? $a : citetitle))) {\n          \n          cite_element = (function() {if ($truthy(citetitle)) {\n            return \"\" + \"<cite>\" + (citetitle) + \"</cite>\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          attribution_text = (function() {if ($truthy(attribution)) {\n            return \"\" + \"&#8212; \" + (attribution) + ((function() {if ($truthy(citetitle)) {\n              return \"\" + \"<br\" + (self.void_element_slash) + \">\\n\"\n            } else {\n              return \"\"\n            }; return nil; })())\n          } else {\n            return \"\"\n          }; return nil; })();\n          attribution_element = \"\" + \"\\n<div class=\\\"attribution\\\">\\n\" + (attribution_text) + (cite_element) + \"\\n</div>\";\n        } else {\n          attribution_element = \"\"\n        };\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<blockquote>\\n\" + (node.$content()) + \"\\n\" + \"</blockquote>\" + (attribution_element) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_quote$36.$$arity = 1);\n      \n      Opal.def(self, '$convert_thematic_break', $Html5Converter_convert_thematic_break$37 = function $$convert_thematic_break(node) {\n        var self = this;\n\n        return \"\" + \"<hr\" + (self.void_element_slash) + \">\"\n      }, $Html5Converter_convert_thematic_break$37.$$arity = 1);\n      \n      Opal.def(self, '$convert_sidebar', $Html5Converter_convert_sidebar$38 = function $$convert_sidebar(node) {\n        var self = this, id_attribute = nil, title_element = nil, role = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\\n\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + \" class=\\\"sidebarblock\" + ((function() {if ($truthy((role = node.$role()))) {\n          return \"\" + \" \" + (role)\n        } else {\n          return \"\"\n        }; return nil; })()) + \"\\\">\\n\" + \"<div class=\\\"content\\\">\\n\" + (title_element) + (node.$content()) + \"\\n\" + \"</div>\\n\" + \"</div>\";\n      }, $Html5Converter_convert_sidebar$38.$$arity = 1);\n      \n      Opal.def(self, '$convert_table', $Html5Converter_convert_table$39 = function $$convert_table(node) {\n        var $a, $$40, $$41, self = this, result = nil, id_attribute = nil, frame = nil, classes = nil, stripes = nil, styles = nil, autowidth = nil, tablewidth = nil, role = nil, class_attribute = nil, style_attribute = nil, slash = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ((frame = node.$attr(\"frame\", \"all\", \"table-frame\"))['$=='](\"topbot\")) {\n          frame = \"ends\"};\n        classes = [\"tableblock\", \"\" + \"frame-\" + (frame), \"\" + \"grid-\" + (node.$attr(\"grid\", \"all\", \"table-grid\"))];\n        if ($truthy((stripes = node.$attr(\"stripes\", nil, \"table-stripes\")))) {\n          classes['$<<'](\"\" + \"stripes-\" + (stripes))};\n        styles = [];\n        if ($truthy(($truthy($a = (autowidth = node['$option?'](\"autowidth\"))) ? node['$attr?'](\"width\")['$!']() : $a))) {\n          classes['$<<'](\"fit-content\")\n        } else if ((tablewidth = node.$attr(\"tablepcwidth\"))['$=='](100)) {\n          classes['$<<'](\"stretch\")\n        } else {\n          styles['$<<'](\"\" + \"width: \" + (tablewidth) + \"%;\")\n        };\n        if ($truthy(node['$attr?'](\"float\"))) {\n          classes['$<<'](node.$attr(\"float\"))};\n        if ($truthy((role = node.$role()))) {\n          classes['$<<'](role)};\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        style_attribute = (function() {if ($truthy(styles['$empty?']())) {\n          return \"\"\n        } else {\n          return \"\" + \" style=\\\"\" + (styles.$join(\" \")) + \"\\\"\"\n        }; return nil; })();\n        result['$<<'](\"\" + \"<table\" + (id_attribute) + (class_attribute) + (style_attribute) + \">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<caption class=\\\"title\\\">\" + (node.$captioned_title()) + \"</caption>\")};\n        if ($truthy($rb_gt(node.$attr(\"rowcount\"), 0))) {\n          \n          slash = self.void_element_slash;\n          result['$<<'](\"<colgroup>\");\n          if ($truthy(autowidth)) {\n            result = $rb_plus(result, $$($nesting, 'Array').$new(node.$columns().$size(), \"\" + \"<col\" + (slash) + \">\"))\n          } else {\n            $send(node.$columns(), 'each', [], ($$40 = function(col){var self = $$40.$$s || this;\n\n            \n              \n              if (col == null) {\n                col = nil;\n              };\n              return result['$<<']((function() {if ($truthy(col['$option?'](\"autowidth\"))) {\n                return \"\" + \"<col\" + (slash) + \">\"\n              } else {\n                return \"\" + \"<col style=\\\"width: \" + (col.$attr(\"colpcwidth\")) + \"%;\\\"\" + (slash) + \">\"\n              }; return nil; })());}, $$40.$$s = self, $$40.$$arity = 1, $$40))\n          };\n          result['$<<'](\"</colgroup>\");\n          $send(node.$rows().$to_h(), 'each', [], ($$41 = function(tsec, rows){var self = $$41.$$s || this, $$42;\n\n          \n            \n            if (tsec == null) {\n              tsec = nil;\n            };\n            \n            if (rows == null) {\n              rows = nil;\n            };\n            if ($truthy(rows['$empty?']())) {\n              return nil;};\n            result['$<<'](\"\" + \"<t\" + (tsec) + \">\");\n            $send(rows, 'each', [], ($$42 = function(row){var self = $$42.$$s || this, $$43;\n\n            \n              \n              if (row == null) {\n                row = nil;\n              };\n              result['$<<'](\"<tr>\");\n              $send(row, 'each', [], ($$43 = function(cell){var self = $$43.$$s || this, $b, cell_content = nil, $case = nil, cell_tag_name = nil, cell_class_attribute = nil, cell_colspan_attribute = nil, cell_rowspan_attribute = nil, cell_style_attribute = nil;\n\n              \n                \n                if (cell == null) {\n                  cell = nil;\n                };\n                if (tsec['$=='](\"head\")) {\n                  cell_content = cell.$text()\n                } else {\n                  $case = cell.$style();\n                  if (\"asciidoc\"['$===']($case)) {cell_content = \"\" + \"<div class=\\\"content\\\">\" + (cell.$content()) + \"</div>\"}\n                  else if (\"literal\"['$===']($case)) {cell_content = \"\" + \"<div class=\\\"literal\\\"><pre>\" + (cell.$text()) + \"</pre></div>\"}\n                  else {cell_content = (function() {if ($truthy((cell_content = cell.$content())['$empty?']())) {\n                    return \"\"\n                  } else {\n                    return \"\" + \"<p class=\\\"tableblock\\\">\" + (cell_content.$join(\"\" + \"</p>\\n\" + \"<p class=\\\"tableblock\\\">\")) + \"</p>\"\n                  }; return nil; })()}\n                };\n                cell_tag_name = (function() {if ($truthy(($truthy($b = tsec['$=='](\"head\")) ? $b : cell.$style()['$=='](\"header\")))) {\n                  return \"th\"\n                } else {\n                  return \"td\"\n                }; return nil; })();\n                cell_class_attribute = \"\" + \" class=\\\"tableblock halign-\" + (cell.$attr(\"halign\")) + \" valign-\" + (cell.$attr(\"valign\")) + \"\\\"\";\n                cell_colspan_attribute = (function() {if ($truthy(cell.$colspan())) {\n                  return \"\" + \" colspan=\\\"\" + (cell.$colspan()) + \"\\\"\"\n                } else {\n                  return \"\"\n                }; return nil; })();\n                cell_rowspan_attribute = (function() {if ($truthy(cell.$rowspan())) {\n                  return \"\" + \" rowspan=\\\"\" + (cell.$rowspan()) + \"\\\"\"\n                } else {\n                  return \"\"\n                }; return nil; })();\n                cell_style_attribute = (function() {if ($truthy(node.$document()['$attr?'](\"cellbgcolor\"))) {\n                  return \"\" + \" style=\\\"background-color: \" + (node.$document().$attr(\"cellbgcolor\")) + \";\\\"\"\n                } else {\n                  return \"\"\n                }; return nil; })();\n                return result['$<<'](\"\" + \"<\" + (cell_tag_name) + (cell_class_attribute) + (cell_colspan_attribute) + (cell_rowspan_attribute) + (cell_style_attribute) + \">\" + (cell_content) + \"</\" + (cell_tag_name) + \">\");}, $$43.$$s = self, $$43.$$arity = 1, $$43));\n              return result['$<<'](\"</tr>\");}, $$42.$$s = self, $$42.$$arity = 1, $$42));\n            return result['$<<'](\"\" + \"</t\" + (tsec) + \">\");}, $$41.$$s = self, $$41.$$arity = 2, $$41));};\n        result['$<<'](\"</table>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_table$39.$$arity = 1);\n      \n      Opal.def(self, '$convert_toc', $Html5Converter_convert_toc$44 = function $$convert_toc(node) {\n        var $a, $b, self = this, doc = nil, id_attr = nil, title_id_attr = nil, title = nil, levels = nil, role = nil;\n\n        \n        if ($truthy(($truthy($a = ($truthy($b = (doc = node.$document())['$attr?'](\"toc-placement\", \"macro\")) ? doc['$sections?']() : $b)) ? doc['$attr?'](\"toc\") : $a))) {\n        } else {\n          return \"<!-- toc disabled -->\"\n        };\n        if ($truthy(node.$id())) {\n          \n          id_attr = \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\";\n          title_id_attr = \"\" + \" id=\\\"\" + (node.$id()) + \"title\\\"\";\n        } else {\n          \n          id_attr = \" id=\\\"toc\\\"\";\n          title_id_attr = \" id=\\\"toctitle\\\"\";\n        };\n        title = (function() {if ($truthy(node['$title?']())) {\n          return node.$title()\n        } else {\n          \n          return doc.$attr(\"toc-title\");\n        }; return nil; })();\n        levels = (function() {if ($truthy(node['$attr?'](\"levels\"))) {\n          return node.$attr(\"levels\").$to_i()\n        } else {\n          return nil\n        }; return nil; })();\n        role = (function() {if ($truthy(node['$role?']())) {\n          return node.$role()\n        } else {\n          \n          return doc.$attr(\"toc-class\", \"toc\");\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attr) + \" class=\\\"\" + (role) + \"\\\">\\n\" + \"<div\" + (title_id_attr) + \" class=\\\"title\\\">\" + (title) + \"</div>\\n\" + (doc.$converter().$convert(doc, \"outline\", $hash2([\"toclevels\"], {\"toclevels\": levels}))) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_toc$44.$$arity = 1);\n      \n      Opal.def(self, '$convert_ulist', $Html5Converter_convert_ulist$45 = function $$convert_ulist(node) {\n        var $$46, self = this, result = nil, id_attribute = nil, div_classes = nil, marker_checked = nil, marker_unchecked = nil, checklist = nil, ul_class_attribute = nil;\n\n        \n        result = [];\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        div_classes = [\"ulist\", node.$style(), node.$role()].$compact();\n        marker_checked = (marker_unchecked = \"\");\n        if ($truthy((checklist = node['$option?'](\"checklist\")))) {\n          \n          div_classes.$unshift(div_classes.$shift(), \"checklist\");\n          ul_class_attribute = \" class=\\\"checklist\\\"\";\n          if ($truthy(node['$option?'](\"interactive\"))) {\n            if ($truthy(self.xml_mode)) {\n              \n              marker_checked = \"<input type=\\\"checkbox\\\" data-item-complete=\\\"1\\\" checked=\\\"checked\\\"/> \";\n              marker_unchecked = \"<input type=\\\"checkbox\\\" data-item-complete=\\\"0\\\"/> \";\n            } else {\n              \n              marker_checked = \"<input type=\\\"checkbox\\\" data-item-complete=\\\"1\\\" checked> \";\n              marker_unchecked = \"<input type=\\\"checkbox\\\" data-item-complete=\\\"0\\\"> \";\n            }\n          } else if ($truthy(node.$document()['$attr?'](\"icons\", \"font\"))) {\n            \n            marker_checked = \"<i class=\\\"fa fa-check-square-o\\\"></i> \";\n            marker_unchecked = \"<i class=\\\"fa fa-square-o\\\"></i> \";\n          } else {\n            \n            marker_checked = \"&#10003; \";\n            marker_unchecked = \"&#10063; \";\n          };\n        } else {\n          ul_class_attribute = (function() {if ($truthy(node.$style())) {\n            return \"\" + \" class=\\\"\" + (node.$style()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })()\n        };\n        result['$<<'](\"\" + \"<div\" + (id_attribute) + \" class=\\\"\" + (div_classes.$join(\" \")) + \"\\\">\");\n        if ($truthy(node['$title?']())) {\n          result['$<<'](\"\" + \"<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\")};\n        result['$<<'](\"\" + \"<ul\" + (ul_class_attribute) + \">\");\n        $send(node.$items(), 'each', [], ($$46 = function(item){var self = $$46.$$s || this, $a;\n\n        \n          \n          if (item == null) {\n            item = nil;\n          };\n          if ($truthy(item.$id())) {\n            result['$<<'](\"\" + \"<li id=\\\"\" + (item.$id()) + \"\\\"\" + ((function() {if ($truthy(item.$role())) {\n              return \"\" + \" class=\\\"\" + (item.$role()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })()) + \">\")\n          } else if ($truthy(item.$role())) {\n            result['$<<'](\"\" + \"<li class=\\\"\" + (item.$role()) + \"\\\">\")\n          } else {\n            result['$<<'](\"<li>\")\n          };\n          if ($truthy(($truthy($a = checklist) ? item['$attr?'](\"checkbox\") : $a))) {\n            result['$<<'](\"\" + \"<p>\" + ((function() {if ($truthy(item['$attr?'](\"checked\"))) {\n              return marker_checked\n            } else {\n              return marker_unchecked\n            }; return nil; })()) + (item.$text()) + \"</p>\")\n          } else {\n            result['$<<'](\"\" + \"<p>\" + (item.$text()) + \"</p>\")\n          };\n          if ($truthy(item['$blocks?']())) {\n            result['$<<'](item.$content())};\n          return result['$<<'](\"</li>\");}, $$46.$$s = self, $$46.$$arity = 1, $$46));\n        result['$<<'](\"</ul>\");\n        result['$<<'](\"</div>\");\n        return result.$join($$($nesting, 'LF'));\n      }, $Html5Converter_convert_ulist$45.$$arity = 1);\n      \n      Opal.def(self, '$convert_verse', $Html5Converter_convert_verse$47 = function $$convert_verse(node) {\n        var $a, self = this, id_attribute = nil, classes = nil, class_attribute = nil, title_element = nil, attribution = nil, citetitle = nil, cite_element = nil, attribution_text = nil, attribution_element = nil;\n\n        \n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"verseblock\", node.$role()].$compact();\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"\\n<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        attribution = (function() {if ($truthy(node['$attr?'](\"attribution\"))) {\n          \n          return node.$attr(\"attribution\");\n        } else {\n          return nil\n        }; return nil; })();\n        citetitle = (function() {if ($truthy(node['$attr?'](\"citetitle\"))) {\n          \n          return node.$attr(\"citetitle\");\n        } else {\n          return nil\n        }; return nil; })();\n        if ($truthy(($truthy($a = attribution) ? $a : citetitle))) {\n          \n          cite_element = (function() {if ($truthy(citetitle)) {\n            return \"\" + \"<cite>\" + (citetitle) + \"</cite>\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          attribution_text = (function() {if ($truthy(attribution)) {\n            return \"\" + \"&#8212; \" + (attribution) + ((function() {if ($truthy(citetitle)) {\n              return \"\" + \"<br\" + (self.void_element_slash) + \">\\n\"\n            } else {\n              return \"\"\n            }; return nil; })())\n          } else {\n            return \"\"\n          }; return nil; })();\n          attribution_element = \"\" + \"\\n<div class=\\\"attribution\\\">\\n\" + (attribution_text) + (cite_element) + \"\\n</div>\";\n        } else {\n          attribution_element = \"\"\n        };\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<pre class=\\\"content\\\">\" + (node.$content()) + \"</pre>\" + (attribution_element) + \"\\n\" + \"</div>\";\n      }, $Html5Converter_convert_verse$47.$$arity = 1);\n      \n      Opal.def(self, '$convert_video', $Html5Converter_convert_video$48 = function $$convert_video(node) {\n        var $a, $b, self = this, xml = nil, id_attribute = nil, classes = nil, class_attribute = nil, title_element = nil, width_attribute = nil, height_attribute = nil, $case = nil, asset_uri_scheme = nil, start_anchor = nil, delimiter = nil, autoplay_param = nil, loop_param = nil, muted_param = nil, rel_param_val = nil, start_param = nil, end_param = nil, has_loop_param = nil, mute_param = nil, controls_param = nil, fs_param = nil, fs_attribute = nil, modest_param = nil, theme_param = nil, hl_param = nil, target = nil, list = nil, list_param = nil, playlist = nil, poster_attribute = nil, val = nil, preload_attribute = nil, start_t = nil, end_t = nil, time_anchor = nil;\n\n        \n        xml = self.xml_mode;\n        id_attribute = (function() {if ($truthy(node.$id())) {\n          return \"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        classes = [\"videoblock\"];\n        if ($truthy(node['$attr?'](\"float\"))) {\n          classes['$<<'](node.$attr(\"float\"))};\n        if ($truthy(node['$attr?'](\"align\"))) {\n          classes['$<<'](\"\" + \"text-\" + (node.$attr(\"align\")))};\n        if ($truthy(node.$role())) {\n          classes['$<<'](node.$role())};\n        class_attribute = \"\" + \" class=\\\"\" + (classes.$join(\" \")) + \"\\\"\";\n        title_element = (function() {if ($truthy(node['$title?']())) {\n          return \"\" + \"\\n<div class=\\\"title\\\">\" + (node.$title()) + \"</div>\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        width_attribute = (function() {if ($truthy(node['$attr?'](\"width\"))) {\n          return \"\" + \" width=\\\"\" + (node.$attr(\"width\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        height_attribute = (function() {if ($truthy(node['$attr?'](\"height\"))) {\n          return \"\" + \" height=\\\"\" + (node.$attr(\"height\")) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return (function() {$case = node.$attr(\"poster\");\n        if (\"vimeo\"['$===']($case)) {\n        if ($truthy((asset_uri_scheme = node.$document().$attr(\"asset-uri-scheme\", \"https\"))['$empty?']())) {\n        } else {\n          asset_uri_scheme = \"\" + (asset_uri_scheme) + \":\"\n        };\n        start_anchor = (function() {if ($truthy(node['$attr?'](\"start\"))) {\n          return \"\" + \"#at=\" + (node.$attr(\"start\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        delimiter = [\"?\"];\n        autoplay_param = (function() {if ($truthy(node['$option?'](\"autoplay\"))) {\n          return \"\" + (($truthy($a = delimiter.$pop()) ? $a : \"&amp;\")) + \"autoplay=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        loop_param = (function() {if ($truthy(node['$option?'](\"loop\"))) {\n          return \"\" + (($truthy($a = delimiter.$pop()) ? $a : \"&amp;\")) + \"loop=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        muted_param = (function() {if ($truthy(node['$option?'](\"muted\"))) {\n          return \"\" + (($truthy($a = delimiter.$pop()) ? $a : \"&amp;\")) + \"muted=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<div class=\\\"content\\\">\\n\" + \"<iframe\" + (width_attribute) + (height_attribute) + \" src=\\\"\" + (asset_uri_scheme) + \"//player.vimeo.com/video/\" + (node.$attr(\"target\")) + (autoplay_param) + (loop_param) + (muted_param) + (start_anchor) + \"\\\" frameborder=\\\"0\\\"\" + ((function() {if ($truthy(node['$option?'](\"nofullscreen\"))) {\n          return \"\"\n        } else {\n          \n          return self.$append_boolean_attribute(\"allowfullscreen\", xml);\n        }; return nil; })()) + \"></iframe>\\n\" + \"</div>\\n\" + \"</div>\";}\n        else if (\"youtube\"['$===']($case)) {\n        if ($truthy((asset_uri_scheme = node.$document().$attr(\"asset-uri-scheme\", \"https\"))['$empty?']())) {\n        } else {\n          asset_uri_scheme = \"\" + (asset_uri_scheme) + \":\"\n        };\n        rel_param_val = (function() {if ($truthy(node['$option?'](\"related\"))) {\n          return 1\n        } else {\n          return 0\n        }; return nil; })();\n        start_param = (function() {if ($truthy(node['$attr?'](\"start\"))) {\n          return \"\" + \"&amp;start=\" + (node.$attr(\"start\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        end_param = (function() {if ($truthy(node['$attr?'](\"end\"))) {\n          return \"\" + \"&amp;end=\" + (node.$attr(\"end\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        autoplay_param = (function() {if ($truthy(node['$option?'](\"autoplay\"))) {\n          return \"&amp;autoplay=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        loop_param = (function() {if ($truthy((has_loop_param = node['$option?'](\"loop\")))) {\n          return \"&amp;loop=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        mute_param = (function() {if ($truthy(node['$option?'](\"muted\"))) {\n          return \"&amp;mute=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        controls_param = (function() {if ($truthy(node['$option?'](\"nocontrols\"))) {\n          return \"&amp;controls=0\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        if ($truthy(node['$option?'](\"nofullscreen\"))) {\n          \n          fs_param = \"&amp;fs=0\";\n          fs_attribute = \"\";\n        } else {\n          \n          fs_param = \"\";\n          fs_attribute = self.$append_boolean_attribute(\"allowfullscreen\", xml);\n        };\n        modest_param = (function() {if ($truthy(node['$option?'](\"modest\"))) {\n          return \"&amp;modestbranding=1\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        theme_param = (function() {if ($truthy(node['$attr?'](\"theme\"))) {\n          return \"\" + \"&amp;theme=\" + (node.$attr(\"theme\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        hl_param = (function() {if ($truthy(node['$attr?'](\"lang\"))) {\n          return \"\" + \"&amp;hl=\" + (node.$attr(\"lang\"))\n        } else {\n          return \"\"\n        }; return nil; })();\n        $b = node.$attr(\"target\").$split(\"/\", 2), $a = Opal.to_ary($b), (target = ($a[0] == null ? nil : $a[0])), (list = ($a[1] == null ? nil : $a[1])), $b;\n        if ($truthy((list = ($truthy($a = list) ? $a : node.$attr(\"list\"))))) {\n          list_param = \"\" + \"&amp;list=\" + (list)\n        } else {\n          \n          $b = target.$split(\",\", 2), $a = Opal.to_ary($b), (target = ($a[0] == null ? nil : $a[0])), (playlist = ($a[1] == null ? nil : $a[1])), $b;\n          if ($truthy((playlist = ($truthy($a = playlist) ? $a : node.$attr(\"playlist\"))))) {\n            list_param = \"\" + \"&amp;playlist=\" + (playlist)\n          } else {\n            list_param = (function() {if ($truthy(has_loop_param)) {\n              return \"\" + \"&amp;playlist=\" + (target)\n            } else {\n              return \"\"\n            }; return nil; })()\n          };\n        };\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<div class=\\\"content\\\">\\n\" + \"<iframe\" + (width_attribute) + (height_attribute) + \" src=\\\"\" + (asset_uri_scheme) + \"//www.youtube.com/embed/\" + (target) + \"?rel=\" + (rel_param_val) + (start_param) + (end_param) + (autoplay_param) + (loop_param) + (mute_param) + (controls_param) + (list_param) + (fs_param) + (modest_param) + (theme_param) + (hl_param) + \"\\\" frameborder=\\\"0\\\"\" + (fs_attribute) + \"></iframe>\\n\" + \"</div>\\n\" + \"</div>\";}\n        else {\n        poster_attribute = (function() {if ($truthy((val = node.$attr(\"poster\"))['$nil_or_empty?']())) {\n          return \"\"\n        } else {\n          return \"\" + \" poster=\\\"\" + (node.$media_uri(val)) + \"\\\"\"\n        }; return nil; })();\n        preload_attribute = (function() {if ($truthy((val = node.$attr(\"preload\"))['$nil_or_empty?']())) {\n          return \"\"\n        } else {\n          return \"\" + \" preload=\\\"\" + (val) + \"\\\"\"\n        }; return nil; })();\n        start_t = node.$attr(\"start\");\n        end_t = node.$attr(\"end\");\n        time_anchor = (function() {if ($truthy(($truthy($a = start_t) ? $a : end_t))) {\n          return \"\" + \"#t=\" + (($truthy($a = start_t) ? $a : \"\")) + ((function() {if ($truthy(end_t)) {\n            return \"\" + \",\" + (end_t)\n          } else {\n            return \"\"\n          }; return nil; })())\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<div\" + (id_attribute) + (class_attribute) + \">\" + (title_element) + \"\\n\" + \"<div class=\\\"content\\\">\\n\" + \"<video src=\\\"\" + (node.$media_uri(node.$attr(\"target\"))) + (time_anchor) + \"\\\"\" + (width_attribute) + (height_attribute) + (poster_attribute) + ((function() {if ($truthy(node['$option?'](\"autoplay\"))) {\n          \n          return self.$append_boolean_attribute(\"autoplay\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"muted\"))) {\n          \n          return self.$append_boolean_attribute(\"muted\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"nocontrols\"))) {\n          return \"\"\n        } else {\n          \n          return self.$append_boolean_attribute(\"controls\", xml);\n        }; return nil; })()) + ((function() {if ($truthy(node['$option?'](\"loop\"))) {\n          \n          return self.$append_boolean_attribute(\"loop\", xml);\n        } else {\n          return \"\"\n        }; return nil; })()) + (preload_attribute) + \">\\n\" + \"Your browser does not support the video tag.\\n\" + \"</video>\\n\" + \"</div>\\n\" + \"</div>\";}})();\n      }, $Html5Converter_convert_video$48.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_anchor', $Html5Converter_convert_inline_anchor$49 = function $$convert_inline_anchor(node) {\n        var $a, $b, self = this, $case = nil, path = nil, attrs = nil, text = nil, ref = nil, refid = nil, top = nil, outer = nil;\n\n        return (function() {$case = node.$type();\n        if (\"xref\"['$===']($case)) {\n        if ($truthy((path = node.$attributes()['$[]'](\"path\")))) {\n          \n          attrs = self.$append_link_constraint_attrs(node, (function() {if ($truthy(node.$role())) {\n            return [\"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\"]\n          } else {\n            return []\n          }; return nil; })()).$join();\n          text = ($truthy($a = node.$text()) ? $a : path);\n        } else {\n          \n          attrs = (function() {if ($truthy(node.$role())) {\n            return \"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          if ($truthy((text = node.$text()))) {\n          } else if ($truthy($$($nesting, 'AbstractNode')['$===']((ref = ($truthy($a = (self.refs = ($truthy($b = self.refs) ? $b : node.$document().$catalog()['$[]'](\"refs\")))['$[]']((refid = node.$attributes()['$[]'](\"refid\")))) ? $a : (function() {if ($truthy(refid['$nil_or_empty?']())) {\n            \n            return (top = self.$get_root_document(node));\n          } else {\n            return nil\n          }; return nil; })()))))) {\n            if ($truthy(($truthy($a = (self.resolving_xref = ($truthy($b = self.resolving_xref) ? $b : (outer = true)))) ? outer : $a))) {\n              \n              if ($truthy((text = ref.$xreftext(node.$attr(\"xrefstyle\", nil, true))))) {\n                if ($truthy(text['$include?'](\"<a\"))) {\n                  text = text.$gsub($$($nesting, 'DropAnchorRx'), \"\")}\n              } else {\n                text = (function() {if ($truthy(top)) {\n                  return \"[^top]\"\n                } else {\n                  return \"\" + \"[\" + (refid) + \"]\"\n                }; return nil; })()\n              };\n              self.resolving_xref = nil;\n            } else {\n              text = (function() {if ($truthy(top)) {\n                return \"[^top]\"\n              } else {\n                return \"\" + \"[\" + (refid) + \"]\"\n              }; return nil; })()\n            }\n          } else {\n            text = \"\" + \"[\" + (refid) + \"]\"\n          };\n        };\n        return \"\" + \"<a href=\\\"\" + (node.$target()) + \"\\\"\" + (attrs) + \">\" + (text) + \"</a>\";}\n        else if (\"ref\"['$===']($case)) {return \"\" + \"<a id=\\\"\" + (node.$id()) + \"\\\"></a>\"}\n        else if (\"link\"['$===']($case)) {\n        attrs = (function() {if ($truthy(node.$id())) {\n          return [\"\" + \" id=\\\"\" + (node.$id()) + \"\\\"\"]\n        } else {\n          return []\n        }; return nil; })();\n        if ($truthy(node.$role())) {\n          attrs['$<<'](\"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\")};\n        if ($truthy(node['$attr?'](\"title\"))) {\n          attrs['$<<'](\"\" + \" title=\\\"\" + (node.$attr(\"title\")) + \"\\\"\")};\n        return \"\" + \"<a href=\\\"\" + (node.$target()) + \"\\\"\" + (self.$append_link_constraint_attrs(node, attrs).$join()) + \">\" + (node.$text()) + \"</a>\";}\n        else if (\"bibref\"['$===']($case)) {return \"\" + \"<a id=\\\"\" + (node.$id()) + \"\\\"></a>[\" + (($truthy($a = node.$reftext()) ? $a : node.$id())) + \"]\"}\n        else {\n        self.$logger().$warn(\"\" + \"unknown anchor type: \" + (node.$type().$inspect()));\n        return nil;}})()\n      }, $Html5Converter_convert_inline_anchor$49.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_break', $Html5Converter_convert_inline_break$50 = function $$convert_inline_break(node) {\n        var self = this;\n\n        return \"\" + (node.$text()) + \"<br\" + (self.void_element_slash) + \">\"\n      }, $Html5Converter_convert_inline_break$50.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_button', $Html5Converter_convert_inline_button$51 = function $$convert_inline_button(node) {\n        var self = this;\n\n        return \"\" + \"<b class=\\\"button\\\">\" + (node.$text()) + \"</b>\"\n      }, $Html5Converter_convert_inline_button$51.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_callout', $Html5Converter_convert_inline_callout$52 = function $$convert_inline_callout(node) {\n        var self = this, src = nil, guard = nil;\n\n        if ($truthy(node.$document()['$attr?'](\"icons\", \"font\"))) {\n          return \"\" + \"<i class=\\\"conum\\\" data-value=\\\"\" + (node.$text()) + \"\\\"></i><b>(\" + (node.$text()) + \")</b>\"\n        } else if ($truthy(node.$document()['$attr?'](\"icons\"))) {\n          \n          src = node.$icon_uri(\"\" + \"callouts/\" + (node.$text()));\n          return \"\" + \"<img src=\\\"\" + (src) + \"\\\" alt=\\\"\" + (node.$text()) + \"\\\"\" + (self.void_element_slash) + \">\";\n        } else if ($truthy($$$('::', 'Array')['$===']((guard = node.$attributes()['$[]'](\"guard\"))))) {\n          return \"\" + \"&lt;!--<b class=\\\"conum\\\">(\" + (node.$text()) + \")</b>--&gt;\"\n        } else {\n          return \"\" + (guard) + \"<b class=\\\"conum\\\">(\" + (node.$text()) + \")</b>\"\n        }\n      }, $Html5Converter_convert_inline_callout$52.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_footnote', $Html5Converter_convert_inline_footnote$53 = function $$convert_inline_footnote(node) {\n        var self = this, index = nil, id_attr = nil;\n\n        if ($truthy((index = node.$attr(\"index\")))) {\n          if (node.$type()['$=='](\"xref\")) {\n            return \"\" + \"<sup class=\\\"footnoteref\\\">[<a class=\\\"footnote\\\" href=\\\"#_footnotedef_\" + (index) + \"\\\" title=\\\"View footnote.\\\">\" + (index) + \"</a>]</sup>\"\n          } else {\n            \n            id_attr = (function() {if ($truthy(node.$id())) {\n              return \"\" + \" id=\\\"_footnote_\" + (node.$id()) + \"\\\"\"\n            } else {\n              return \"\"\n            }; return nil; })();\n            return \"\" + \"<sup class=\\\"footnote\\\"\" + (id_attr) + \">[<a id=\\\"_footnoteref_\" + (index) + \"\\\" class=\\\"footnote\\\" href=\\\"#_footnotedef_\" + (index) + \"\\\" title=\\\"View footnote.\\\">\" + (index) + \"</a>]</sup>\";\n          }\n        } else if (node.$type()['$=='](\"xref\")) {\n          return \"\" + \"<sup class=\\\"footnoteref red\\\" title=\\\"Unresolved footnote reference.\\\">[\" + (node.$text()) + \"]</sup>\"\n        } else {\n          return nil\n        }\n      }, $Html5Converter_convert_inline_footnote$53.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_image', $Html5Converter_convert_inline_image$54 = function $$convert_inline_image(node) {\n        var $a, $b, $$55, $c, $d, self = this, type = nil, class_attr_val = nil, title_attr = nil, img = nil, target = nil, attrs = nil, svg = nil, obj = nil, fallback = nil, role = nil;\n\n        \n        if ($truthy((($a = (type = ($truthy($b = node.$type()) ? $b : \"image\"))['$=='](\"icon\")) ? node.$document()['$attr?'](\"icons\", \"font\") : (type = ($truthy($b = node.$type()) ? $b : \"image\"))['$=='](\"icon\")))) {\n          \n          class_attr_val = \"\" + \"fa fa-\" + (node.$target());\n          $send($hash2([\"size\", \"rotate\", \"flip\"], {\"size\": \"fa-\", \"rotate\": \"fa-rotate-\", \"flip\": \"fa-flip-\"}), 'each', [], ($$55 = function(key, prefix){var self = $$55.$$s || this;\n\n          \n            \n            if (key == null) {\n              key = nil;\n            };\n            \n            if (prefix == null) {\n              prefix = nil;\n            };\n            if ($truthy(node['$attr?'](key))) {\n              return (class_attr_val = \"\" + (class_attr_val) + \" \" + (prefix) + (node.$attr(key)))\n            } else {\n              return nil\n            };}, $$55.$$s = self, $$55.$$arity = 2, $$55));\n          title_attr = (function() {if ($truthy(node['$attr?'](\"title\"))) {\n            return \"\" + \" title=\\\"\" + (node.$attr(\"title\")) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          img = \"\" + \"<i class=\\\"\" + (class_attr_val) + \"\\\"\" + (title_attr) + \"></i>\";\n        } else if ($truthy((($a = type['$=='](\"icon\")) ? node.$document()['$attr?'](\"icons\")['$!']() : type['$=='](\"icon\")))) {\n          img = \"\" + \"[\" + (node.$alt()) + \"]\"\n        } else {\n          \n          target = node.$target();\n          attrs = [];\n          if ($truthy(node['$attr?'](\"width\"))) {\n            attrs['$<<'](\"\" + \" width=\\\"\" + (node.$attr(\"width\")) + \"\\\"\")};\n          if ($truthy(node['$attr?'](\"height\"))) {\n            attrs['$<<'](\"\" + \" height=\\\"\" + (node.$attr(\"height\")) + \"\\\"\")};\n          if ($truthy(node['$attr?'](\"title\"))) {\n            attrs['$<<'](\"\" + \" title=\\\"\" + (node.$attr(\"title\")) + \"\\\"\")};\n          attrs = (function() {if ($truthy(attrs['$empty?']())) {\n            return \"\"\n          } else {\n            return attrs.$join()\n          }; return nil; })();\n          if ($truthy(($truthy($a = ($truthy($b = ($truthy($c = type['$!='](\"icon\")) ? ($truthy($d = node['$attr?'](\"format\", \"svg\")) ? $d : target['$include?'](\".svg\")) : $c)) ? $rb_lt(node.$document().$safe(), $$$($$($nesting, 'SafeMode'), 'SECURE')) : $b)) ? ($truthy($b = (svg = node['$option?'](\"inline\"))) ? $b : (obj = node['$option?'](\"interactive\"))) : $a))) {\n            if ($truthy(svg)) {\n              img = ($truthy($a = self.$read_svg_contents(node, target)) ? $a : \"\" + \"<span class=\\\"alt\\\">\" + (node.$alt()) + \"</span>\")\n            } else if ($truthy(obj)) {\n              \n              fallback = (function() {if ($truthy(node['$attr?'](\"fallback\"))) {\n                return \"\" + \"<img src=\\\"\" + (node.$image_uri(node.$attr(\"fallback\"))) + \"\\\" alt=\\\"\" + (self.$encode_attribute_value(node.$alt())) + \"\\\"\" + (attrs) + (self.void_element_slash) + \">\"\n              } else {\n                return \"\" + \"<span class=\\\"alt\\\">\" + (node.$alt()) + \"</span>\"\n              }; return nil; })();\n              img = \"\" + \"<object type=\\\"image/svg+xml\\\" data=\\\"\" + (node.$image_uri(target)) + \"\\\"\" + (attrs) + \">\" + (fallback) + \"</object>\";}};\n          img = ($truthy($a = img) ? $a : \"\" + \"<img src=\\\"\" + ((function() {if (type['$=='](\"icon\")) {\n            \n            return node.$icon_uri(target);\n          } else {\n            \n            return node.$image_uri(target);\n          }; return nil; })()) + \"\\\" alt=\\\"\" + (self.$encode_attribute_value(node.$alt())) + \"\\\"\" + (attrs) + (self.void_element_slash) + \">\");\n        };\n        if ($truthy(node['$attr?'](\"link\"))) {\n          img = \"\" + \"<a class=\\\"image\\\" href=\\\"\" + (node.$attr(\"link\")) + \"\\\"\" + (self.$append_link_constraint_attrs(node).$join()) + \">\" + (img) + \"</a>\"};\n        if ($truthy((role = node.$role()))) {\n          if ($truthy(node['$attr?'](\"float\"))) {\n            class_attr_val = \"\" + (type) + \" \" + (node.$attr(\"float\")) + \" \" + (role)\n          } else {\n            class_attr_val = \"\" + (type) + \" \" + (role)\n          }\n        } else if ($truthy(node['$attr?'](\"float\"))) {\n          class_attr_val = \"\" + (type) + \" \" + (node.$attr(\"float\"))\n        } else {\n          class_attr_val = type\n        };\n        return \"\" + \"<span class=\\\"\" + (class_attr_val) + \"\\\">\" + (img) + \"</span>\";\n      }, $Html5Converter_convert_inline_image$54.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_indexterm', $Html5Converter_convert_inline_indexterm$56 = function $$convert_inline_indexterm(node) {\n        var self = this;\n\n        if (node.$type()['$=='](\"visible\")) {\n          return node.$text()\n        } else {\n          return \"\"\n        }\n      }, $Html5Converter_convert_inline_indexterm$56.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_kbd', $Html5Converter_convert_inline_kbd$57 = function $$convert_inline_kbd(node) {\n        var self = this, keys = nil;\n\n        if ((keys = node.$attr(\"keys\")).$size()['$=='](1)) {\n          return \"\" + \"<kbd>\" + (keys['$[]'](0)) + \"</kbd>\"\n        } else {\n          return \"\" + \"<span class=\\\"keyseq\\\"><kbd>\" + (keys.$join(\"</kbd>+<kbd>\")) + \"</kbd></span>\"\n        }\n      }, $Html5Converter_convert_inline_kbd$57.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_menu', $Html5Converter_convert_inline_menu$58 = function $$convert_inline_menu(node) {\n        var self = this, caret = nil, submenu_joiner = nil, menu = nil, submenus = nil, menuitem = nil;\n\n        \n        caret = (function() {if ($truthy(node.$document()['$attr?'](\"icons\", \"font\"))) {\n          return \"&#160;<i class=\\\"fa fa-angle-right caret\\\"></i> \"\n        } else {\n          return \"&#160;<b class=\\\"caret\\\">&#8250;</b> \"\n        }; return nil; })();\n        submenu_joiner = \"\" + \"</b>\" + (caret) + \"<b class=\\\"submenu\\\">\";\n        menu = node.$attr(\"menu\");\n        if ($truthy((submenus = node.$attr(\"submenus\"))['$empty?']())) {\n          if ($truthy((menuitem = node.$attr(\"menuitem\")))) {\n            return \"\" + \"<span class=\\\"menuseq\\\"><b class=\\\"menu\\\">\" + (menu) + \"</b>\" + (caret) + \"<b class=\\\"menuitem\\\">\" + (menuitem) + \"</b></span>\"\n          } else {\n            return \"\" + \"<b class=\\\"menuref\\\">\" + (menu) + \"</b>\"\n          }\n        } else {\n          return \"\" + \"<span class=\\\"menuseq\\\"><b class=\\\"menu\\\">\" + (menu) + \"</b>\" + (caret) + \"<b class=\\\"submenu\\\">\" + (submenus.$join(submenu_joiner)) + \"</b>\" + (caret) + \"<b class=\\\"menuitem\\\">\" + (node.$attr(\"menuitem\")) + \"</b></span>\"\n        };\n      }, $Html5Converter_convert_inline_menu$58.$$arity = 1);\n      \n      Opal.def(self, '$convert_inline_quoted', $Html5Converter_convert_inline_quoted$59 = function $$convert_inline_quoted(node) {\n        var $a, $b, self = this, open = nil, close = nil, tag = nil, class_attr = nil;\n\n        \n        $b = $$($nesting, 'QUOTE_TAGS')['$[]'](node.$type()), $a = Opal.to_ary($b), (open = ($a[0] == null ? nil : $a[0])), (close = ($a[1] == null ? nil : $a[1])), (tag = ($a[2] == null ? nil : $a[2])), $b;\n        if ($truthy(node.$id())) {\n          \n          class_attr = (function() {if ($truthy(node.$role())) {\n            return \"\" + \" class=\\\"\" + (node.$role()) + \"\\\"\"\n          } else {\n            return \"\"\n          }; return nil; })();\n          if ($truthy(tag)) {\n            return \"\" + (open.$chop()) + \" id=\\\"\" + (node.$id()) + \"\\\"\" + (class_attr) + \">\" + (node.$text()) + (close)\n          } else {\n            return \"\" + \"<span id=\\\"\" + (node.$id()) + \"\\\"\" + (class_attr) + \">\" + (open) + (node.$text()) + (close) + \"</span>\"\n          };\n        } else if ($truthy(node.$role())) {\n          if ($truthy(tag)) {\n            return \"\" + (open.$chop()) + \" class=\\\"\" + (node.$role()) + \"\\\">\" + (node.$text()) + (close)\n          } else {\n            return \"\" + \"<span class=\\\"\" + (node.$role()) + \"\\\">\" + (open) + (node.$text()) + (close) + \"</span>\"\n          }\n        } else {\n          return \"\" + (open) + (node.$text()) + (close)\n        };\n      }, $Html5Converter_convert_inline_quoted$59.$$arity = 1);\n      \n      Opal.def(self, '$read_svg_contents', $Html5Converter_read_svg_contents$60 = function $$read_svg_contents(node, target) {\n        var $$61, self = this, svg = nil, old_start_tag = nil, new_start_tag = nil, start_tag_match = nil;\n\n        \n        if ($truthy((svg = node.$read_contents(target, $hash2([\"start\", \"normalize\", \"label\", \"warn_if_empty\"], {\"start\": node.$document().$attr(\"imagesdir\"), \"normalize\": true, \"label\": \"SVG\", \"warn_if_empty\": true}))))) {\n          \n          if ($truthy(svg['$empty?']())) {\n            return nil};\n          if ($truthy(svg['$start_with?'](\"<svg\"))) {\n          } else {\n            svg = svg.$sub($$($nesting, 'SvgPreambleRx'), \"\")\n          };\n          old_start_tag = (new_start_tag = (start_tag_match = nil));\n          $send([\"width\", \"height\"], 'each', [], ($$61 = function(dim){var self = $$61.$$s || this, $a, $b;\n\n          \n            \n            if (dim == null) {\n              dim = nil;\n            };\n            if ($truthy(node['$attr?'](dim))) {\n            } else {\n              return nil;\n            };\n            if ($truthy(new_start_tag)) {\n            } else {\n              \n              if ((start_tag_match = ($truthy($a = start_tag_match) ? $a : ($truthy($b = svg.$match($$($nesting, 'SvgStartTagRx'))) ? $b : \"no_match\")))['$=='](\"no_match\")) {\n                return nil;};\n              new_start_tag = (old_start_tag = start_tag_match['$[]'](0)).$gsub($$($nesting, 'DimensionAttributeRx'), \"\");\n            };\n            return (new_start_tag = \"\" + (new_start_tag.$chop()) + \" \" + (dim) + \"=\\\"\" + (node.$attr(dim)) + \"\\\">\");}, $$61.$$s = self, $$61.$$arity = 1, $$61));\n          if ($truthy(new_start_tag)) {\n            svg = \"\" + (new_start_tag) + (svg['$[]'](Opal.Range.$new(old_start_tag.$length(), -1, false)))};};\n        return svg;\n      }, $Html5Converter_read_svg_contents$60.$$arity = 2);\n      self.$private();\n      \n      Opal.def(self, '$append_boolean_attribute', $Html5Converter_append_boolean_attribute$62 = function $$append_boolean_attribute(name, xml) {\n        var self = this;\n\n        if ($truthy(xml)) {\n          return \"\" + \" \" + (name) + \"=\\\"\" + (name) + \"\\\"\"\n        } else {\n          return \"\" + \" \" + (name)\n        }\n      }, $Html5Converter_append_boolean_attribute$62.$$arity = 2);\n      \n      Opal.def(self, '$append_link_constraint_attrs', $Html5Converter_append_link_constraint_attrs$63 = function $$append_link_constraint_attrs(node, attrs) {\n        var $a, self = this, rel = nil, window = nil;\n\n        \n        \n        if (attrs == null) {\n          attrs = [];\n        };\n        if ($truthy(node['$option?'](\"nofollow\"))) {\n          rel = \"nofollow\"};\n        if ($truthy((window = node.$attributes()['$[]'](\"window\")))) {\n          \n          attrs['$<<'](\"\" + \" target=\\\"\" + (window) + \"\\\"\");\n          if ($truthy(($truthy($a = window['$=='](\"_blank\")) ? $a : node['$option?'](\"noopener\")))) {\n            attrs['$<<']((function() {if ($truthy(rel)) {\n              return \"\" + \" rel=\\\"\" + (rel) + \" noopener\\\"\"\n            } else {\n              return \" rel=\\\"noopener\\\"\"\n            }; return nil; })())};\n        } else if ($truthy(rel)) {\n          attrs['$<<'](\"\" + \" rel=\\\"\" + (rel) + \"\\\"\")};\n        return attrs;\n      }, $Html5Converter_append_link_constraint_attrs$63.$$arity = -2);\n      \n      Opal.def(self, '$encode_attribute_value', $Html5Converter_encode_attribute_value$64 = function $$encode_attribute_value(val) {\n        var self = this;\n\n        if ($truthy(val['$include?'](\"\\\"\"))) {\n          \n          return val.$gsub(\"\\\"\", \"&quot;\");\n        } else {\n          return val\n        }\n      }, $Html5Converter_encode_attribute_value$64.$$arity = 1);\n      \n      Opal.def(self, '$generate_manname_section', $Html5Converter_generate_manname_section$65 = function $$generate_manname_section(node) {\n        var $a, self = this, manname_title = nil, next_section = nil, next_section_title = nil, manname_id_attr = nil, manname_id = nil;\n\n        \n        manname_title = node.$attr(\"manname-title\", \"Name\");\n        if ($truthy(($truthy($a = (next_section = node.$sections()['$[]'](0))) ? (next_section_title = next_section.$title())['$=='](next_section_title.$upcase()) : $a))) {\n          manname_title = manname_title.$upcase()};\n        manname_id_attr = (function() {if ($truthy((manname_id = node.$attr(\"manname-id\")))) {\n          return \"\" + \" id=\\\"\" + (manname_id) + \"\\\"\"\n        } else {\n          return \"\"\n        }; return nil; })();\n        return \"\" + \"<h2\" + (manname_id_attr) + \">\" + (manname_title) + \"</h2>\\n\" + \"<div class=\\\"sectionbody\\\">\\n\" + \"<p>\" + (node.$attr(\"mannames\").$join(\", \")) + \" - \" + (node.$attr(\"manpurpose\")) + \"</p>\\n\" + \"</div>\";\n      }, $Html5Converter_generate_manname_section$65.$$arity = 1);\n      \n      Opal.def(self, '$get_root_document', $Html5Converter_get_root_document$66 = function $$get_root_document(node) {\n        var $a, self = this;\n\n        \n        while ($truthy((node = node.$document())['$nested?']())) {\n          node = node.$parent_document()\n        };\n        return node;\n      }, $Html5Converter_get_root_document$66.$$arity = 1);\n      \n      Opal.def(self, '$method_missing', $Html5Converter_method_missing$67 = function $$method_missing(id, $a) {\n        var $post_args, args, $b, $iter = $Html5Converter_method_missing$67.$$p, $yield = $iter || nil, self = this, name = nil, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n        if ($iter) $Html5Converter_method_missing$67.$$p = null;\n        // Prepare super implicit arguments\n        for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n          $zuper[$zuper_i] = arguments[$zuper_i];\n        }\n        \n        \n        $post_args = Opal.slice.call(arguments, 1, arguments.length);\n        \n        args = $post_args;;\n        if ($truthy(($truthy($b = (name = id.$to_s())['$start_with?'](\"convert_\")['$!']()) ? self['$handles?'](name) : $b))) {\n          \n          return $send(self, 'send', [\"\" + \"convert_\" + (name)].concat(Opal.to_a(args)));\n        } else {\n          return $send(self, Opal.find_super_dispatcher(self, 'method_missing', $Html5Converter_method_missing$67, false), $zuper, $iter)\n        };\n      }, $Html5Converter_method_missing$67.$$arity = -2);\n      return (Opal.def(self, '$respond_to_missing?', $Html5Converter_respond_to_missing$ques$68 = function(id, $a) {\n        var $post_args, options, $b, self = this, name = nil;\n\n        \n        \n        $post_args = Opal.slice.call(arguments, 1, arguments.length);\n        \n        options = $post_args;;\n        return ($truthy($b = (name = id.$to_s())['$start_with?'](\"convert_\")['$!']()) ? self['$handles?'](name) : $b);\n      }, $Html5Converter_respond_to_missing$ques$68.$$arity = -2), nil) && 'respond_to_missing?';\n    })($$($nesting, 'Converter'), $$$($$($nesting, 'Converter'), 'Base'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/extensions\"] = function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  function $rb_plus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);\n  }\n  function $rb_gt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs > rhs : lhs['$>'](rhs);\n  }\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $hash2 = Opal.hash2, $send = Opal.send, $hash = Opal.hash;\n\n  Opal.add_stubs(['$==', '$[]=', '$config', '$-', '$const_defined?', '$singleton_class?', '$include', '$const_get', '$extend', '$attr_reader', '$merge', '$class', '$update', '$raise', '$document', '$doctype', '$[]', '$+', '$level', '$delete', '$>', '$casecmp', '$new', '$title=', '$sectname=', '$special=', '$fetch', '$numbered=', '$!', '$key?', '$attr?', '$special', '$numbered', '$generate_id', '$title', '$id=', '$update_attributes', '$tr', '$basename', '$create_block', '$assign_caption', '$===', '$parse_blocks', '$empty?', '$include?', '$sub_attributes', '$parse', '$each', '$define_method', '$unshift', '$shift', '$send', '$size', '$binding', '$receiver', '$define_singleton_method', '$instance_exec', '$to_proc', '$call', '$option', '$flatten', '$respond_to?', '$to_s', '$partition', '$to_i', '$<<', '$compact', '$inspect', '$attr_accessor', '$to_set', '$match?', '$resolve_regexp', '$method', '$register', '$values', '$groups', '$arity', '$activate', '$add_document_processor', '$any?', '$select', '$add_syntax_processor', '$to_sym', '$instance_variable_get', '$kind', '$private', '$join', '$map', '$split', '$capitalize', '$instance_variable_set', '$resolve_args', '$enable_dsl', '$singleton_class', '$process_block_given?', '$source_location', '$freeze', '$resolve_class', '$<', '$update_config', '$as_symbol', '$name', '$name=', '$pop', '$-@', '$next_auto_id', '$generate_name']);\n  \n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n  } else {\n    nil\n  };\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Extensions');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      \n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Processor');\n\n        var $nesting = [self].concat($parent_nesting), $Processor_initialize$4, $Processor_update_config$5, $Processor_process$6, $Processor_create_section$7, $Processor_create_block$8, $Processor_create_list$9, $Processor_create_list_item$10, $Processor_create_image_block$11, $Processor_create_inline$12, $Processor_parse_content$13, $Processor_parse_attributes$14, $Processor$15;\n\n        self.$$prototype.config = nil;\n        \n        (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $config$1, $option$2, $enable_dsl$3;\n\n          \n          \n          Opal.def(self, '$config', $config$1 = function $$config() {\n            var $a, self = this;\n            if (self.config == null) self.config = nil;\n\n            return (self.config = ($truthy($a = self.config) ? $a : $hash2([], {})))\n          }, $config$1.$$arity = 0);\n          \n          Opal.def(self, '$option', $option$2 = function $$option(key, default_value) {\n            var self = this, $writer = nil;\n\n            \n            $writer = [key, default_value];\n            $send(self.$config(), '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];\n          }, $option$2.$$arity = 2);\n          \n          Opal.def(self, '$enable_dsl', $enable_dsl$3 = function $$enable_dsl() {\n            var self = this;\n\n            if ($truthy(self['$const_defined?'](\"DSL\"))) {\n              if ($truthy(self['$singleton_class?']())) {\n                return self.$include(self.$const_get(\"DSL\"))\n              } else {\n                return self.$extend(self.$const_get(\"DSL\"))\n              }\n            } else {\n              return nil\n            }\n          }, $enable_dsl$3.$$arity = 0);\n          return Opal.alias(self, \"use_dsl\", \"enable_dsl\");\n        })(Opal.get_singleton_class(self), $nesting);\n        self.$attr_reader(\"config\");\n        \n        Opal.def(self, '$initialize', $Processor_initialize$4 = function $$initialize(config) {\n          var self = this;\n\n          \n          \n          if (config == null) {\n            config = $hash2([], {});\n          };\n          return (self.config = self.$class().$config().$merge(config));\n        }, $Processor_initialize$4.$$arity = -1);\n        \n        Opal.def(self, '$update_config', $Processor_update_config$5 = function $$update_config(config) {\n          var self = this;\n\n          return self.config.$update(config)\n        }, $Processor_update_config$5.$$arity = 1);\n        \n        Opal.def(self, '$process', $Processor_process$6 = function $$process($a) {\n          var $post_args, args, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Processor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\");\n        }, $Processor_process$6.$$arity = -1);\n        \n        Opal.def(self, '$create_section', $Processor_create_section$7 = function $$create_section(parent, title, attrs, opts) {\n          var $a, self = this, doc = nil, book = nil, doctype = nil, level = nil, style = nil, sectname = nil, special = nil, sect = nil, $writer = nil, id = nil;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          doc = parent.$document();\n          book = (doctype = doc.$doctype())['$=='](\"book\");\n          level = ($truthy($a = opts['$[]'](\"level\")) ? $a : $rb_plus(parent.$level(), 1));\n          if ($truthy((style = attrs.$delete(\"style\")))) {\n            if ($truthy(($truthy($a = book) ? style['$=='](\"abstract\") : $a))) {\n              $a = [\"chapter\", 1], (sectname = $a[0]), (level = $a[1]), $a\n            } else {\n              \n              $a = [style, true], (sectname = $a[0]), (special = $a[1]), $a;\n              if (level['$=='](0)) {\n                level = 1};\n            }\n          } else if ($truthy(book)) {\n            sectname = (function() {if (level['$=='](0)) {\n              return \"part\"\n            } else {\n              \n              if ($truthy($rb_gt(level, 1))) {\n                return \"section\"\n              } else {\n                return \"chapter\"\n              };\n            }; return nil; })()\n          } else if ($truthy((($a = doctype['$=='](\"manpage\")) ? title.$casecmp(\"synopsis\")['$=='](0) : doctype['$=='](\"manpage\")))) {\n            $a = [\"synopsis\", true], (sectname = $a[0]), (special = $a[1]), $a\n          } else {\n            sectname = \"section\"\n          };\n          sect = $$($nesting, 'Section').$new(parent, level);\n          $a = [title, sectname], sect['$title=']($a[0]), sect['$sectname=']($a[1]), $a;\n          if ($truthy(special)) {\n            \n            \n            $writer = [true];\n            $send(sect, 'special=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            if ($truthy(opts.$fetch(\"numbered\", style['$=='](\"appendix\")))) {\n              \n              $writer = [true];\n              $send(sect, 'numbered=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];\n            } else if ($truthy(($truthy($a = opts['$key?'](\"numbered\")['$!']()) ? doc['$attr?'](\"sectnums\", \"all\") : $a))) {\n              \n              $writer = [(function() {if ($truthy(($truthy($a = book) ? level['$=='](1) : $a))) {\n                return \"chapter\"\n              } else {\n                return true\n              }; return nil; })()];\n              $send(sect, 'numbered=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];};\n          } else if ($truthy($rb_gt(level, 0))) {\n            if ($truthy(opts.$fetch(\"numbered\", doc['$attr?'](\"sectnums\")))) {\n              \n              $writer = [(function() {if ($truthy(sect.$special())) {\n                return ($truthy($a = parent.$numbered()) ? true : $a)\n              } else {\n                return true\n              }; return nil; })()];\n              $send(sect, 'numbered=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];}\n          } else if ($truthy(opts.$fetch(\"numbered\", ($truthy($a = book) ? doc['$attr?'](\"partnums\") : $a)))) {\n            \n            $writer = [true];\n            $send(sect, 'numbered=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];};\n          if ((id = attrs['$[]'](\"id\"))['$=='](false)) {\n            attrs.$delete(\"id\")\n          } else {\n            \n            $writer = [(($writer = [\"id\", ($truthy($a = id) ? $a : (function() {if ($truthy(doc['$attr?'](\"sectids\"))) {\n              \n              return $$($nesting, 'Section').$generate_id(sect.$title(), doc);\n            } else {\n              return nil\n            }; return nil; })())]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])];\n            $send(sect, 'id=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];\n          };\n          sect.$update_attributes(attrs);\n          return sect;\n        }, $Processor_create_section$7.$$arity = -4);\n        \n        Opal.def(self, '$create_block', $Processor_create_block$8 = function $$create_block(parent, context, source, attrs, opts) {\n          var self = this;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          return $$($nesting, 'Block').$new(parent, context, $hash2([\"source\", \"attributes\"], {\"source\": source, \"attributes\": attrs}).$merge(opts));\n        }, $Processor_create_block$8.$$arity = -5);\n        \n        Opal.def(self, '$create_list', $Processor_create_list$9 = function $$create_list(parent, context, attrs) {\n          var self = this, list = nil;\n\n          \n          \n          if (attrs == null) {\n            attrs = nil;\n          };\n          list = $$($nesting, 'List').$new(parent, context);\n          if ($truthy(attrs)) {\n            list.$update_attributes(attrs)};\n          return list;\n        }, $Processor_create_list$9.$$arity = -3);\n        \n        Opal.def(self, '$create_list_item', $Processor_create_list_item$10 = function $$create_list_item(parent, text) {\n          var self = this;\n\n          \n          \n          if (text == null) {\n            text = nil;\n          };\n          return $$($nesting, 'ListItem').$new(parent, text);\n        }, $Processor_create_list_item$10.$$arity = -2);\n        \n        Opal.def(self, '$create_image_block', $Processor_create_image_block$11 = function $$create_image_block(parent, attrs, opts) {\n          var $a, self = this, target = nil, $writer = nil, title = nil, block = nil;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy((target = attrs['$[]'](\"target\")))) {\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"Unable to create an image block, target attribute is required\")\n          };\n          ($truthy($a = attrs['$[]'](\"alt\")) ? $a : (($writer = [\"alt\", (($writer = [\"default-alt\", $$($nesting, 'Helpers').$basename(target, true).$tr(\"_-\", \" \")]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)])]), $send(attrs, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n          title = (function() {if ($truthy(attrs['$key?'](\"title\"))) {\n            \n            return attrs.$delete(\"title\");\n          } else {\n            return nil\n          }; return nil; })();\n          block = self.$create_block(parent, \"image\", nil, attrs, opts);\n          if ($truthy(title)) {\n            \n            \n            $writer = [title];\n            $send(block, 'title=', Opal.to_a($writer));\n            $writer[$rb_minus($writer[\"length\"], 1)];;\n            block.$assign_caption(attrs.$delete(\"caption\"), \"figure\");};\n          return block;\n        }, $Processor_create_image_block$11.$$arity = -3);\n        \n        Opal.def(self, '$create_inline', $Processor_create_inline$12 = function $$create_inline(parent, context, text, opts) {\n          var self = this;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          return $$($nesting, 'Inline').$new(parent, context, text, (function() {if (context['$=='](\"quoted\")) {\n            \n            return $hash2([\"type\"], {\"type\": \"unquoted\"}).$merge(opts);\n          } else {\n            return opts\n          }; return nil; })());\n        }, $Processor_create_inline$12.$$arity = -4);\n        \n        Opal.def(self, '$parse_content', $Processor_parse_content$13 = function $$parse_content(parent, content, attributes) {\n          var self = this, reader = nil;\n\n          \n          \n          if (attributes == null) {\n            attributes = nil;\n          };\n          reader = (function() {if ($truthy($$($nesting, 'Reader')['$==='](content))) {\n            return content\n          } else {\n            \n            return $$($nesting, 'Reader').$new(content);\n          }; return nil; })();\n          $$($nesting, 'Parser').$parse_blocks(reader, parent, attributes);\n          return parent;\n        }, $Processor_parse_content$13.$$arity = -3);\n        \n        Opal.def(self, '$parse_attributes', $Processor_parse_attributes$14 = function $$parse_attributes(block, attrlist, opts) {\n          var $a, self = this;\n\n          \n          \n          if (opts == null) {\n            opts = $hash2([], {});\n          };\n          if ($truthy((function() {if ($truthy(attrlist)) {\n            return attrlist['$empty?']()\n          } else {\n            return true\n          }; return nil; })())) {\n            return $hash2([], {})};\n          if ($truthy(($truthy($a = opts['$[]'](\"sub_attributes\")) ? attrlist['$include?']($$($nesting, 'ATTR_REF_HEAD')) : $a))) {\n            attrlist = block.$sub_attributes(attrlist)};\n          return $$($nesting, 'AttributeList').$new(attrlist).$parse(($truthy($a = opts['$[]'](\"positional_attributes\")) ? $a : []));\n        }, $Processor_parse_attributes$14.$$arity = -3);\n        return $send([[\"create_paragraph\", \"create_block\", \"paragraph\"], [\"create_open_block\", \"create_block\", \"open\"], [\"create_example_block\", \"create_block\", \"example\"], [\"create_pass_block\", \"create_block\", \"pass\"], [\"create_listing_block\", \"create_block\", \"listing\"], [\"create_literal_block\", \"create_block\", \"literal\"], [\"create_anchor\", \"create_inline\", \"anchor\"], [\"create_inline_pass\", \"create_inline\", \"quoted\"]], 'each', [], ($Processor$15 = function(method_name, delegate_method_name, context){var self = $Processor$15.$$s || this, $$16;\n\n        \n          \n          if (method_name == null) {\n            method_name = nil;\n          };\n          \n          if (delegate_method_name == null) {\n            delegate_method_name = nil;\n          };\n          \n          if (context == null) {\n            context = nil;\n          };\n          return $send(self, 'define_method', [method_name], ($$16 = function($a){var self = $$16.$$s || this, $post_args, args;\n\n          \n            \n            $post_args = Opal.slice.call(arguments, 0, arguments.length);\n            \n            args = $post_args;;\n            args.$unshift(args.$shift(), context);\n            return $send(self, 'send', [delegate_method_name].concat(Opal.to_a(args)));}, $$16.$$s = self, $$16.$$arity = -1, $$16));}, $Processor$15.$$s = self, $Processor$15.$$arity = 3, $Processor$15));\n      })($nesting[0], null, $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'ProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $ProcessorDsl_option$17, $ProcessorDsl_process$18, $ProcessorDsl_process_block_given$ques$20;\n\n        \n        \n        Opal.def(self, '$option', $ProcessorDsl_option$17 = function $$option(key, value) {\n          var self = this, $writer = nil;\n\n          \n          $writer = [key, value];\n          $send(self.$config(), '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        }, $ProcessorDsl_option$17.$$arity = 2);\n        \n        Opal.def(self, '$process', $ProcessorDsl_process$18 = function $$process($a) {\n          var $iter = $ProcessorDsl_process$18.$$p, block = $iter || nil, $post_args, args, $b, $$19, self = this, context = nil;\n          if (self.process_block == null) self.process_block = nil;\n\n          if ($iter) $ProcessorDsl_process$18.$$p = null;\n          \n          \n          if ($iter) $ProcessorDsl_process$18.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          if ((block !== nil)) {\n            \n            if ($truthy(args['$empty?']())) {\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"wrong number of arguments (given \" + (args.$size()) + \", expected 0)\")\n            };\n            if ($truthy(($truthy($b = block.$binding()) ? self['$=='](block.$binding().$receiver()) : $b))) {\n            } else {\n              \n              context = self;\n              $send(block, 'define_singleton_method', [\"call\"], ($$19 = function($c){var self = $$19.$$s || this, $post_args, m_args;\n\n              \n                \n                $post_args = Opal.slice.call(arguments, 0, arguments.length);\n                \n                m_args = $post_args;;\n                return $send(context, 'instance_exec', Opal.to_a(m_args), block.$to_proc());}, $$19.$$s = self, $$19.$$arity = -1, $$19));\n            };\n            return (self.process_block = block);\n          } else if ($truthy((($b = self['process_block'], $b != null && $b !== nil) ? 'instance-variable' : nil))) {\n            return $send(self.process_block, 'call', Opal.to_a(args))\n          } else {\n            return self.$raise($$$('::', 'NotImplementedError'), \"\" + (self.$class()) + \" #\" + (\"process\") + \" method called before being registered\")\n          };\n        }, $ProcessorDsl_process$18.$$arity = -1);\n        \n        Opal.def(self, '$process_block_given?', $ProcessorDsl_process_block_given$ques$20 = function() {\n          var $a, self = this;\n\n          return (($a = self['process_block'], $a != null && $a !== nil) ? 'instance-variable' : nil)\n        }, $ProcessorDsl_process_block_given$ques$20.$$arity = 0);\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'DocumentProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $DocumentProcessorDsl_prefer$21;\n\n        \n        self.$include($$($nesting, 'ProcessorDsl'));\n        \n        Opal.def(self, '$prefer', $DocumentProcessorDsl_prefer$21 = function $$prefer() {\n          var self = this;\n\n          return self.$option(\"position\", \">>\")\n        }, $DocumentProcessorDsl_prefer$21.$$arity = 0);\n      })($nesting[0], $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'SyntaxProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $SyntaxProcessorDsl_named$22, $SyntaxProcessorDsl_content_model$23, $SyntaxProcessorDsl_positional_attributes$24, $SyntaxProcessorDsl_default_attributes$25, $SyntaxProcessorDsl_resolve_attributes$26;\n\n        \n        self.$include($$($nesting, 'ProcessorDsl'));\n        \n        Opal.def(self, '$named', $SyntaxProcessorDsl_named$22 = function $$named(value) {\n          var self = this;\n\n          if ($truthy($$($nesting, 'Processor')['$==='](self))) {\n            return (self.name = value)\n          } else {\n            return self.$option(\"name\", value)\n          }\n        }, $SyntaxProcessorDsl_named$22.$$arity = 1);\n        \n        Opal.def(self, '$content_model', $SyntaxProcessorDsl_content_model$23 = function $$content_model(value) {\n          var self = this;\n\n          return self.$option(\"content_model\", value)\n        }, $SyntaxProcessorDsl_content_model$23.$$arity = 1);\n        Opal.alias(self, \"parse_content_as\", \"content_model\");\n        \n        Opal.def(self, '$positional_attributes', $SyntaxProcessorDsl_positional_attributes$24 = function $$positional_attributes($a) {\n          var $post_args, value, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          return self.$option(\"positional_attrs\", value.$flatten());\n        }, $SyntaxProcessorDsl_positional_attributes$24.$$arity = -1);\n        Opal.alias(self, \"name_positional_attributes\", \"positional_attributes\");\n        Opal.alias(self, \"positional_attrs\", \"positional_attributes\");\n        \n        Opal.def(self, '$default_attributes', $SyntaxProcessorDsl_default_attributes$25 = function $$default_attributes(value) {\n          var self = this;\n\n          return self.$option(\"default_attrs\", value)\n        }, $SyntaxProcessorDsl_default_attributes$25.$$arity = 1);\n        Opal.alias(self, \"default_attrs\", \"default_attributes\");\n        \n        Opal.def(self, '$resolve_attributes', $SyntaxProcessorDsl_resolve_attributes$26 = function $$resolve_attributes($a) {\n          var $post_args, args, $b, $$27, $$28, self = this, $case = nil, names = nil, defaults = nil;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy($rb_gt(args.$size(), 1))) {\n          } else if ($truthy((args = args.$fetch(0, true))['$respond_to?'](\"to_sym\"))) {\n            args = [args]};\n          return (function() {$case = args;\n          if (true['$===']($case)) {\n          self.$option(\"positional_attrs\", []);\n          return self.$option(\"default_attrs\", $hash2([], {}));}\n          else if ($$$('::', 'Array')['$===']($case)) {\n          $b = [[], $hash2([], {})], (names = $b[0]), (defaults = $b[1]), $b;\n          $send(args, 'each', [], ($$27 = function(arg){var self = $$27.$$s || this, $c, $d, name = nil, _ = nil, value = nil, idx = nil, $writer = nil;\n\n          \n            \n            if (arg == null) {\n              arg = nil;\n            };\n            if ($truthy((arg = arg.$to_s())['$include?'](\"=\"))) {\n              \n              $d = arg.$partition(\"=\"), $c = Opal.to_ary($d), (name = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (value = ($c[2] == null ? nil : $c[2])), $d;\n              if ($truthy(name['$include?'](\":\"))) {\n                \n                $d = name.$partition(\":\"), $c = Opal.to_ary($d), (idx = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (name = ($c[2] == null ? nil : $c[2])), $d;\n                idx = (function() {if (idx['$=='](\"@\")) {\n                  return names.$size()\n                } else {\n                  return idx.$to_i()\n                }; return nil; })();\n                \n                $writer = [idx, name];\n                $send(names, '[]=', Opal.to_a($writer));\n                $writer[$rb_minus($writer[\"length\"], 1)];;};\n              \n              $writer = [name, value];\n              $send(defaults, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else if ($truthy(arg['$include?'](\":\"))) {\n              \n              $d = arg.$partition(\":\"), $c = Opal.to_ary($d), (idx = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (name = ($c[2] == null ? nil : $c[2])), $d;\n              idx = (function() {if (idx['$=='](\"@\")) {\n                return names.$size()\n              } else {\n                return idx.$to_i()\n              }; return nil; })();\n              \n              $writer = [idx, name];\n              $send(names, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else {\n              return names['$<<'](arg)\n            };}, $$27.$$s = self, $$27.$$arity = 1, $$27));\n          self.$option(\"positional_attrs\", names.$compact());\n          return self.$option(\"default_attrs\", defaults);}\n          else if ($$$('::', 'Hash')['$===']($case)) {\n          $b = [[], $hash2([], {})], (names = $b[0]), (defaults = $b[1]), $b;\n          $send(args, 'each', [], ($$28 = function(key, val){var self = $$28.$$s || this, $c, $d, name = nil, idx = nil, _ = nil, $writer = nil;\n\n          \n            \n            if (key == null) {\n              key = nil;\n            };\n            \n            if (val == null) {\n              val = nil;\n            };\n            if ($truthy((name = key.$to_s())['$include?'](\":\"))) {\n              \n              $d = name.$partition(\":\"), $c = Opal.to_ary($d), (idx = ($c[0] == null ? nil : $c[0])), (_ = ($c[1] == null ? nil : $c[1])), (name = ($c[2] == null ? nil : $c[2])), $d;\n              idx = (function() {if (idx['$=='](\"@\")) {\n                return names.$size()\n              } else {\n                return idx.$to_i()\n              }; return nil; })();\n              \n              $writer = [idx, name];\n              $send(names, '[]=', Opal.to_a($writer));\n              $writer[$rb_minus($writer[\"length\"], 1)];;};\n            if ($truthy(val)) {\n              \n              $writer = [name, val];\n              $send(defaults, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];\n            } else {\n              return nil\n            };}, $$28.$$s = self, $$28.$$arity = 2, $$28));\n          self.$option(\"positional_attrs\", names.$compact());\n          return self.$option(\"default_attrs\", defaults);}\n          else {return self.$raise($$$('::', 'ArgumentError'), \"\" + \"unsupported attributes specification for macro: \" + (args.$inspect()))}})();\n        }, $SyntaxProcessorDsl_resolve_attributes$26.$$arity = -1);\n        Opal.alias(self, \"resolves_attributes\", \"resolve_attributes\");\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Preprocessor');\n\n        var $nesting = [self].concat($parent_nesting), $Preprocessor_process$29;\n\n        return (Opal.def(self, '$process', $Preprocessor_process$29 = function $$process(document, reader) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Preprocessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $Preprocessor_process$29.$$arity = 2), nil) && 'process'\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      Opal.const_set($$($nesting, 'Preprocessor'), 'DSL', $$($nesting, 'DocumentProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'TreeProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $TreeProcessor_process$30;\n\n        return (Opal.def(self, '$process', $TreeProcessor_process$30 = function $$process(document) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'TreeProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $TreeProcessor_process$30.$$arity = 1), nil) && 'process'\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      Opal.const_set($$($nesting, 'TreeProcessor'), 'DSL', $$($nesting, 'DocumentProcessorDsl'));\n      Opal.const_set($nesting[0], 'Treeprocessor', $$($nesting, 'TreeProcessor'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Postprocessor');\n\n        var $nesting = [self].concat($parent_nesting), $Postprocessor_process$31;\n\n        return (Opal.def(self, '$process', $Postprocessor_process$31 = function $$process(document, output) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'Postprocessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $Postprocessor_process$31.$$arity = 2), nil) && 'process'\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      Opal.const_set($$($nesting, 'Postprocessor'), 'DSL', $$($nesting, 'DocumentProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'IncludeProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $IncludeProcessor_process$32, $IncludeProcessor_handles$ques$33;\n\n        \n        \n        Opal.def(self, '$process', $IncludeProcessor_process$32 = function $$process(document, reader, target, attributes) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'IncludeProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $IncludeProcessor_process$32.$$arity = 4);\n        return (Opal.def(self, '$handles?', $IncludeProcessor_handles$ques$33 = function(target) {\n          var self = this;\n\n          return true\n        }, $IncludeProcessor_handles$ques$33.$$arity = 1), nil) && 'handles?';\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'IncludeProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $IncludeProcessorDsl_handles$ques$34;\n\n        \n        self.$include($$($nesting, 'DocumentProcessorDsl'));\n        \n        Opal.def(self, '$handles?', $IncludeProcessorDsl_handles$ques$34 = function($a) {\n          var $iter = $IncludeProcessorDsl_handles$ques$34.$$p, block = $iter || nil, $post_args, args, $b, self = this;\n          if (self.handles_block == null) self.handles_block = nil;\n\n          if ($iter) $IncludeProcessorDsl_handles$ques$34.$$p = null;\n          \n          \n          if ($iter) $IncludeProcessorDsl_handles$ques$34.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          if ((block !== nil)) {\n            \n            if ($truthy(args['$empty?']())) {\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"wrong number of arguments (given \" + (args.$size()) + \", expected 0)\")\n            };\n            return (self.handles_block = block);\n          } else if ($truthy((($b = self['handles_block'], $b != null && $b !== nil) ? 'instance-variable' : nil))) {\n            return self.handles_block.$call(args['$[]'](0))\n          } else {\n            return true\n          };\n        }, $IncludeProcessorDsl_handles$ques$34.$$arity = -1);\n      })($nesting[0], $nesting);\n      Opal.const_set($$($nesting, 'IncludeProcessor'), 'DSL', $$($nesting, 'IncludeProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'DocinfoProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $DocinfoProcessor_initialize$35, $DocinfoProcessor_process$36;\n\n        self.$$prototype.config = nil;\n        \n        \n        Opal.def(self, '$initialize', $DocinfoProcessor_initialize$35 = function $$initialize(config) {\n          var $a, $iter = $DocinfoProcessor_initialize$35.$$p, $yield = $iter || nil, self = this, $writer = nil;\n\n          if ($iter) $DocinfoProcessor_initialize$35.$$p = null;\n          \n          \n          if (config == null) {\n            config = $hash2([], {});\n          };\n          $send(self, Opal.find_super_dispatcher(self, 'initialize', $DocinfoProcessor_initialize$35, false), [config], null);\n          return ($truthy($a = self.config['$[]'](\"location\")) ? $a : (($writer = [\"location\", \"head\"]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        }, $DocinfoProcessor_initialize$35.$$arity = -1);\n        return (Opal.def(self, '$process', $DocinfoProcessor_process$36 = function $$process(document) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'DocinfoProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $DocinfoProcessor_process$36.$$arity = 1), nil) && 'process';\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'DocinfoProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $DocinfoProcessorDsl_at_location$37;\n\n        \n        self.$include($$($nesting, 'DocumentProcessorDsl'));\n        \n        Opal.def(self, '$at_location', $DocinfoProcessorDsl_at_location$37 = function $$at_location(value) {\n          var self = this;\n\n          return self.$option(\"location\", value)\n        }, $DocinfoProcessorDsl_at_location$37.$$arity = 1);\n      })($nesting[0], $nesting);\n      Opal.const_set($$($nesting, 'DocinfoProcessor'), 'DSL', $$($nesting, 'DocinfoProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'BlockProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $BlockProcessor_initialize$38, $BlockProcessor_process$39;\n\n        self.$$prototype.config = nil;\n        \n        self.$attr_accessor(\"name\");\n        \n        Opal.def(self, '$initialize', $BlockProcessor_initialize$38 = function $$initialize(name, config) {\n          var $a, $iter = $BlockProcessor_initialize$38.$$p, $yield = $iter || nil, self = this, $case = nil, $writer = nil;\n\n          if ($iter) $BlockProcessor_initialize$38.$$p = null;\n          \n          \n          if (name == null) {\n            name = nil;\n          };\n          \n          if (config == null) {\n            config = $hash2([], {});\n          };\n          $send(self, Opal.find_super_dispatcher(self, 'initialize', $BlockProcessor_initialize$38, false), [config], null);\n          self.name = ($truthy($a = name) ? $a : self.config['$[]'](\"name\"));\n          $case = self.config['$[]'](\"contexts\");\n          if ($$$('::', 'NilClass')['$===']($case)) {($truthy($a = self.config['$[]'](\"contexts\")) ? $a : (($writer = [\"contexts\", [\"open\", \"paragraph\"].$to_set()]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))}\n          else if ($$$('::', 'Symbol')['$===']($case)) {\n          $writer = [\"contexts\", [self.config['$[]'](\"contexts\")].$to_set()];\n          $send(self.config, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];}\n          else {\n          $writer = [\"contexts\", self.config['$[]'](\"contexts\").$to_set()];\n          $send(self.config, '[]=', Opal.to_a($writer));\n          $writer[$rb_minus($writer[\"length\"], 1)];};\n          return ($truthy($a = self.config['$[]'](\"content_model\")) ? $a : (($writer = [\"content_model\", \"compound\"]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        }, $BlockProcessor_initialize$38.$$arity = -1);\n        return (Opal.def(self, '$process', $BlockProcessor_process$39 = function $$process(parent, reader, attributes) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'BlockProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $BlockProcessor_process$39.$$arity = 3), nil) && 'process';\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'BlockProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $BlockProcessorDsl_contexts$40;\n\n        \n        self.$include($$($nesting, 'SyntaxProcessorDsl'));\n        \n        Opal.def(self, '$contexts', $BlockProcessorDsl_contexts$40 = function $$contexts($a) {\n          var $post_args, value, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          value = $post_args;;\n          return self.$option(\"contexts\", value.$flatten().$to_set());\n        }, $BlockProcessorDsl_contexts$40.$$arity = -1);\n        Opal.alias(self, \"on_contexts\", \"contexts\");\n        Opal.alias(self, \"on_context\", \"contexts\");\n        Opal.alias(self, \"bind_to\", \"contexts\");\n      })($nesting[0], $nesting);\n      Opal.const_set($$($nesting, 'BlockProcessor'), 'DSL', $$($nesting, 'BlockProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'MacroProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $MacroProcessor_initialize$41, $MacroProcessor_process$42;\n\n        self.$$prototype.config = nil;\n        \n        self.$attr_accessor(\"name\");\n        \n        Opal.def(self, '$initialize', $MacroProcessor_initialize$41 = function $$initialize(name, config) {\n          var $a, $iter = $MacroProcessor_initialize$41.$$p, $yield = $iter || nil, self = this, $writer = nil;\n\n          if ($iter) $MacroProcessor_initialize$41.$$p = null;\n          \n          \n          if (name == null) {\n            name = nil;\n          };\n          \n          if (config == null) {\n            config = $hash2([], {});\n          };\n          $send(self, Opal.find_super_dispatcher(self, 'initialize', $MacroProcessor_initialize$41, false), [config], null);\n          self.name = ($truthy($a = name) ? $a : self.config['$[]'](\"name\"));\n          return ($truthy($a = self.config['$[]'](\"content_model\")) ? $a : (($writer = [\"content_model\", \"attributes\"]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        }, $MacroProcessor_initialize$41.$$arity = -1);\n        return (Opal.def(self, '$process', $MacroProcessor_process$42 = function $$process(parent, target, attributes) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'), \"\" + ($$($nesting, 'MacroProcessor')) + \" subclass \" + (self.$class()) + \" must implement the #\" + (\"process\") + \" method\")\n        }, $MacroProcessor_process$42.$$arity = 3), nil) && 'process';\n      })($nesting[0], $$($nesting, 'Processor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'MacroProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $MacroProcessorDsl_resolve_attributes$43;\n\n        \n        self.$include($$($nesting, 'SyntaxProcessorDsl'));\n        \n        Opal.def(self, '$resolve_attributes', $MacroProcessorDsl_resolve_attributes$43 = function $$resolve_attributes($a) {\n          var $post_args, args, $b, $iter = $MacroProcessorDsl_resolve_attributes$43.$$p, $yield = $iter || nil, self = this, $zuper = nil, $zuper_i = nil, $zuper_ii = nil;\n\n          if ($iter) $MacroProcessorDsl_resolve_attributes$43.$$p = null;\n          // Prepare super implicit arguments\n          for($zuper_i = 0, $zuper_ii = arguments.length, $zuper = new Array($zuper_ii); $zuper_i < $zuper_ii; $zuper_i++) {\n            $zuper[$zuper_i] = arguments[$zuper_i];\n          }\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          if ($truthy((($b = args.$size()['$=='](1)) ? args['$[]'](0)['$!']() : args.$size()['$=='](1)))) {\n            return self.$option(\"content_model\", \"text\")\n          } else {\n            \n            $send(self, Opal.find_super_dispatcher(self, 'resolve_attributes', $MacroProcessorDsl_resolve_attributes$43, false), $zuper, $iter);\n            return self.$option(\"content_model\", \"attributes\");\n          };\n        }, $MacroProcessorDsl_resolve_attributes$43.$$arity = -1);\n        Opal.alias(self, \"resolves_attributes\", \"resolve_attributes\");\n      })($nesting[0], $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'BlockMacroProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $BlockMacroProcessor_name$44;\n\n        self.$$prototype.name = nil;\n        return (Opal.def(self, '$name', $BlockMacroProcessor_name$44 = function $$name() {\n          var self = this;\n\n          \n          if ($truthy($$($nesting, 'MacroNameRx')['$match?'](self.name.$to_s()))) {\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"\" + \"invalid name for block macro: \" + (self.name))\n          };\n          return self.name;\n        }, $BlockMacroProcessor_name$44.$$arity = 0), nil) && 'name'\n      })($nesting[0], $$($nesting, 'MacroProcessor'), $nesting);\n      Opal.const_set($$($nesting, 'BlockMacroProcessor'), 'DSL', $$($nesting, 'MacroProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'InlineMacroProcessor');\n\n        var $nesting = [self].concat($parent_nesting), $InlineMacroProcessor_regexp$45, $InlineMacroProcessor_resolve_regexp$46;\n\n        self.$$prototype.config = self.$$prototype.name = nil;\n        \n        (Opal.class_variable_set($nesting[0], '@@rx_cache', $hash2([], {})));\n        \n        Opal.def(self, '$regexp', $InlineMacroProcessor_regexp$45 = function $$regexp() {\n          var $a, self = this, $writer = nil;\n\n          return ($truthy($a = self.config['$[]'](\"regexp\")) ? $a : (($writer = [\"regexp\", self.$resolve_regexp(self.name.$to_s(), self.config['$[]'](\"format\"))]), $send(self.config, '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]))\n        }, $InlineMacroProcessor_regexp$45.$$arity = 0);\n        return (Opal.def(self, '$resolve_regexp', $InlineMacroProcessor_resolve_regexp$46 = function $$resolve_regexp(name, format) {\n          var $a, $b, self = this, $writer = nil;\n\n          \n          if ($truthy($$($nesting, 'MacroNameRx')['$match?'](name))) {\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"\" + \"invalid name for inline macro: \" + (name))\n          };\n          return ($truthy($a = (($b = $nesting[0].$$cvars['@@rx_cache']) == null ? nil : $b)['$[]']([name, format])) ? $a : (($writer = [[name, format], new RegExp(\"\" + \"\\\\\\\\?\" + (name) + \":\" + ((function() {if (format['$=='](\"short\")) {\n            return \"(){0}\"\n          } else {\n            return \"(\\\\S+?)\"\n          }; return nil; })()) + \"\\\\[(|\" + ($$($nesting, 'CC_ANY')) + \"*?[^\\\\\\\\])\\\\]\")]), $send((($b = $nesting[0].$$cvars['@@rx_cache']) == null ? nil : $b), '[]=', Opal.to_a($writer)), $writer[$rb_minus($writer[\"length\"], 1)]));\n        }, $InlineMacroProcessor_resolve_regexp$46.$$arity = 2), nil) && 'resolve_regexp';\n      })($nesting[0], $$($nesting, 'MacroProcessor'), $nesting);\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'InlineMacroProcessorDsl');\n\n        var $nesting = [self].concat($parent_nesting), $InlineMacroProcessorDsl_format$47, $InlineMacroProcessorDsl_match$48;\n\n        \n        self.$include($$($nesting, 'MacroProcessorDsl'));\n        \n        Opal.def(self, '$format', $InlineMacroProcessorDsl_format$47 = function $$format(value) {\n          var self = this;\n\n          return self.$option(\"format\", value)\n        }, $InlineMacroProcessorDsl_format$47.$$arity = 1);\n        Opal.alias(self, \"match_format\", \"format\");\n        Opal.alias(self, \"using_format\", \"format\");\n        \n        Opal.def(self, '$match', $InlineMacroProcessorDsl_match$48 = function $$match(value) {\n          var self = this;\n\n          return self.$option(\"regexp\", value)\n        }, $InlineMacroProcessorDsl_match$48.$$arity = 1);\n      })($nesting[0], $nesting);\n      Opal.const_set($$($nesting, 'InlineMacroProcessor'), 'DSL', $$($nesting, 'InlineMacroProcessorDsl'));\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Extension');\n\n        var $nesting = [self].concat($parent_nesting), $Extension_initialize$49;\n\n        \n        self.$attr_reader(\"kind\");\n        self.$attr_reader(\"config\");\n        self.$attr_reader(\"instance\");\n        return (Opal.def(self, '$initialize', $Extension_initialize$49 = function $$initialize(kind, instance, config) {\n          var self = this;\n\n          \n          self.kind = kind;\n          self.instance = instance;\n          return (self.config = config);\n        }, $Extension_initialize$49.$$arity = 3), nil) && 'initialize';\n      })($nesting[0], null, $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'ProcessorExtension');\n\n        var $nesting = [self].concat($parent_nesting), $ProcessorExtension_initialize$50;\n\n        \n        self.$attr_reader(\"process_method\");\n        return (Opal.def(self, '$initialize', $ProcessorExtension_initialize$50 = function $$initialize(kind, instance, process_method) {\n          var $a, $iter = $ProcessorExtension_initialize$50.$$p, $yield = $iter || nil, self = this;\n\n          if ($iter) $ProcessorExtension_initialize$50.$$p = null;\n          \n          \n          if (process_method == null) {\n            process_method = nil;\n          };\n          $send(self, Opal.find_super_dispatcher(self, 'initialize', $ProcessorExtension_initialize$50, false), [kind, instance, instance.$config()], null);\n          return (self.process_method = ($truthy($a = process_method) ? $a : instance.$method(\"process\")));\n        }, $ProcessorExtension_initialize$50.$$arity = -3), nil) && 'initialize';\n      })($nesting[0], $$($nesting, 'Extension'), $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Group');\n\n        var $nesting = [self].concat($parent_nesting), $Group_activate$52;\n\n        \n        (function(self, $parent_nesting) {\n          var $nesting = [self].concat($parent_nesting), $register$51;\n\n          return (Opal.def(self, '$register', $register$51 = function $$register(name) {\n            var self = this;\n\n            \n            \n            if (name == null) {\n              name = nil;\n            };\n            return $$($nesting, 'Extensions').$register(name, self);\n          }, $register$51.$$arity = -1), nil) && 'register'\n        })(Opal.get_singleton_class(self), $nesting);\n        return (Opal.def(self, '$activate', $Group_activate$52 = function $$activate(registry) {\n          var self = this;\n\n          return self.$raise($$$('::', 'NotImplementedError'))\n        }, $Group_activate$52.$$arity = 1), nil) && 'activate';\n      })($nesting[0], null, $nesting);\n      (function($base, $super, $parent_nesting) {\n        var self = $klass($base, $super, 'Registry');\n\n        var $nesting = [self].concat($parent_nesting), $Registry_initialize$53, $Registry_activate$54, $Registry_preprocessor$56, $Registry_preprocessors$ques$57, $Registry_preprocessors$58, $Registry_tree_processor$59, $Registry_tree_processors$ques$60, $Registry_tree_processors$61, $Registry_postprocessor$62, $Registry_postprocessors$ques$63, $Registry_postprocessors$64, $Registry_include_processor$65, $Registry_include_processors$ques$66, $Registry_include_processors$67, $Registry_docinfo_processor$68, $Registry_docinfo_processors$ques$69, $Registry_docinfo_processors$71, $Registry_block$73, $Registry_blocks$ques$74, $Registry_registered_for_block$ques$75, $Registry_find_block_extension$76, $Registry_block_macro$77, $Registry_block_macros$ques$78, $Registry_registered_for_block_macro$ques$79, $Registry_find_block_macro_extension$80, $Registry_inline_macro$81, $Registry_inline_macros$ques$82, $Registry_registered_for_inline_macro$ques$83, $Registry_find_inline_macro_extension$84, $Registry_inline_macros$85, $Registry_prefer$86, $Registry_add_document_processor$87, $Registry_add_syntax_processor$89, $Registry_resolve_args$91, $Registry_as_symbol$92;\n\n        self.$$prototype.groups = self.$$prototype.preprocessor_extensions = self.$$prototype.tree_processor_extensions = self.$$prototype.postprocessor_extensions = self.$$prototype.include_processor_extensions = self.$$prototype.docinfo_processor_extensions = self.$$prototype.block_extensions = self.$$prototype.block_macro_extensions = self.$$prototype.inline_macro_extensions = nil;\n        \n        self.$attr_reader(\"document\");\n        self.$attr_reader(\"groups\");\n        \n        Opal.def(self, '$initialize', $Registry_initialize$53 = function $$initialize(groups) {\n          var self = this;\n\n          \n          \n          if (groups == null) {\n            groups = $hash2([], {});\n          };\n          self.groups = groups;\n          self.preprocessor_extensions = (self.tree_processor_extensions = (self.postprocessor_extensions = (self.include_processor_extensions = (self.docinfo_processor_extensions = (self.block_extensions = (self.block_macro_extensions = (self.inline_macro_extensions = nil)))))));\n          return (self.document = nil);\n        }, $Registry_initialize$53.$$arity = -1);\n        \n        Opal.def(self, '$activate', $Registry_activate$54 = function $$activate(document) {\n          var $$55, self = this, ext_groups = nil;\n\n          \n          self.document = document;\n          if ($truthy((ext_groups = $rb_plus($$($nesting, 'Extensions').$groups().$values(), self.groups.$values()))['$empty?']())) {\n          } else {\n            $send(ext_groups, 'each', [], ($$55 = function(group){var self = $$55.$$s || this, $case = nil;\n\n            \n              \n              if (group == null) {\n                group = nil;\n              };\n              return (function() {$case = group;\n              if ($$$('::', 'Proc')['$===']($case)) {return (function() {$case = group.$arity();\n              if ((0)['$===']($case) || (-1)['$===']($case)) {return $send(self, 'instance_exec', [], group.$to_proc())}\n              else if ((1)['$===']($case)) {return group.$call(self)}\n              else { return nil }})()}\n              else if ($$$('::', 'Class')['$===']($case)) {return group.$new().$activate(self)}\n              else {return group.$activate(self)}})();}, $$55.$$s = self, $$55.$$arity = 1, $$55))\n          };\n          return self;\n        }, $Registry_activate$54.$$arity = 1);\n        \n        Opal.def(self, '$preprocessor', $Registry_preprocessor$56 = function $$preprocessor($a) {\n          var $iter = $Registry_preprocessor$56.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_preprocessor$56.$$p = null;\n          \n          \n          if ($iter) $Registry_preprocessor$56.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"preprocessor\", args], block.$to_proc());\n        }, $Registry_preprocessor$56.$$arity = -1);\n        \n        Opal.def(self, '$preprocessors?', $Registry_preprocessors$ques$57 = function() {\n          var self = this;\n\n          return self.preprocessor_extensions['$!']()['$!']()\n        }, $Registry_preprocessors$ques$57.$$arity = 0);\n        \n        Opal.def(self, '$preprocessors', $Registry_preprocessors$58 = function $$preprocessors() {\n          var self = this;\n\n          return self.preprocessor_extensions\n        }, $Registry_preprocessors$58.$$arity = 0);\n        \n        Opal.def(self, '$tree_processor', $Registry_tree_processor$59 = function $$tree_processor($a) {\n          var $iter = $Registry_tree_processor$59.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_tree_processor$59.$$p = null;\n          \n          \n          if ($iter) $Registry_tree_processor$59.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"tree_processor\", args], block.$to_proc());\n        }, $Registry_tree_processor$59.$$arity = -1);\n        \n        Opal.def(self, '$tree_processors?', $Registry_tree_processors$ques$60 = function() {\n          var self = this;\n\n          return self.tree_processor_extensions['$!']()['$!']()\n        }, $Registry_tree_processors$ques$60.$$arity = 0);\n        \n        Opal.def(self, '$tree_processors', $Registry_tree_processors$61 = function $$tree_processors() {\n          var self = this;\n\n          return self.tree_processor_extensions\n        }, $Registry_tree_processors$61.$$arity = 0);\n        Opal.alias(self, \"treeprocessor\", \"tree_processor\");\n        Opal.alias(self, \"treeprocessors?\", \"tree_processors?\");\n        Opal.alias(self, \"treeprocessors\", \"tree_processors\");\n        \n        Opal.def(self, '$postprocessor', $Registry_postprocessor$62 = function $$postprocessor($a) {\n          var $iter = $Registry_postprocessor$62.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_postprocessor$62.$$p = null;\n          \n          \n          if ($iter) $Registry_postprocessor$62.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"postprocessor\", args], block.$to_proc());\n        }, $Registry_postprocessor$62.$$arity = -1);\n        \n        Opal.def(self, '$postprocessors?', $Registry_postprocessors$ques$63 = function() {\n          var self = this;\n\n          return self.postprocessor_extensions['$!']()['$!']()\n        }, $Registry_postprocessors$ques$63.$$arity = 0);\n        \n        Opal.def(self, '$postprocessors', $Registry_postprocessors$64 = function $$postprocessors() {\n          var self = this;\n\n          return self.postprocessor_extensions\n        }, $Registry_postprocessors$64.$$arity = 0);\n        \n        Opal.def(self, '$include_processor', $Registry_include_processor$65 = function $$include_processor($a) {\n          var $iter = $Registry_include_processor$65.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_include_processor$65.$$p = null;\n          \n          \n          if ($iter) $Registry_include_processor$65.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"include_processor\", args], block.$to_proc());\n        }, $Registry_include_processor$65.$$arity = -1);\n        \n        Opal.def(self, '$include_processors?', $Registry_include_processors$ques$66 = function() {\n          var self = this;\n\n          return self.include_processor_extensions['$!']()['$!']()\n        }, $Registry_include_processors$ques$66.$$arity = 0);\n        \n        Opal.def(self, '$include_processors', $Registry_include_processors$67 = function $$include_processors() {\n          var self = this;\n\n          return self.include_processor_extensions\n        }, $Registry_include_processors$67.$$arity = 0);\n        \n        Opal.def(self, '$docinfo_processor', $Registry_docinfo_processor$68 = function $$docinfo_processor($a) {\n          var $iter = $Registry_docinfo_processor$68.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_docinfo_processor$68.$$p = null;\n          \n          \n          if ($iter) $Registry_docinfo_processor$68.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_document_processor', [\"docinfo_processor\", args], block.$to_proc());\n        }, $Registry_docinfo_processor$68.$$arity = -1);\n        \n        Opal.def(self, '$docinfo_processors?', $Registry_docinfo_processors$ques$69 = function(location) {\n          var $$70, self = this;\n\n          \n          \n          if (location == null) {\n            location = nil;\n          };\n          if ($truthy(self.docinfo_processor_extensions)) {\n            if ($truthy(location)) {\n              return $send(self.docinfo_processor_extensions, 'any?', [], ($$70 = function(ext){var self = $$70.$$s || this;\n\n              \n                \n                if (ext == null) {\n                  ext = nil;\n                };\n                return ext.$config()['$[]'](\"location\")['$=='](location);}, $$70.$$s = self, $$70.$$arity = 1, $$70))\n            } else {\n              return true\n            }\n          } else {\n            return false\n          };\n        }, $Registry_docinfo_processors$ques$69.$$arity = -1);\n        \n        Opal.def(self, '$docinfo_processors', $Registry_docinfo_processors$71 = function $$docinfo_processors(location) {\n          var $$72, self = this;\n\n          \n          \n          if (location == null) {\n            location = nil;\n          };\n          if ($truthy(self.docinfo_processor_extensions)) {\n            if ($truthy(location)) {\n              return $send(self.docinfo_processor_extensions, 'select', [], ($$72 = function(ext){var self = $$72.$$s || this;\n\n              \n                \n                if (ext == null) {\n                  ext = nil;\n                };\n                return ext.$config()['$[]'](\"location\")['$=='](location);}, $$72.$$s = self, $$72.$$arity = 1, $$72))\n            } else {\n              return self.docinfo_processor_extensions\n            }\n          } else {\n            return nil\n          };\n        }, $Registry_docinfo_processors$71.$$arity = -1);\n        \n        Opal.def(self, '$block', $Registry_block$73 = function $$block($a) {\n          var $iter = $Registry_block$73.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_block$73.$$p = null;\n          \n          \n          if ($iter) $Registry_block$73.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_syntax_processor', [\"block\", args], block.$to_proc());\n        }, $Registry_block$73.$$arity = -1);\n        \n        Opal.def(self, '$blocks?', $Registry_blocks$ques$74 = function() {\n          var self = this;\n\n          return self.block_extensions['$!']()['$!']()\n        }, $Registry_blocks$ques$74.$$arity = 0);\n        \n        Opal.def(self, '$registered_for_block?', $Registry_registered_for_block$ques$75 = function(name, context) {\n          var self = this, ext = nil;\n\n          if ($truthy((ext = self.block_extensions['$[]'](name.$to_sym())))) {\n            if ($truthy(ext.$config()['$[]'](\"contexts\")['$include?'](context))) {\n              return ext\n            } else {\n              return false\n            }\n          } else {\n            return false\n          }\n        }, $Registry_registered_for_block$ques$75.$$arity = 2);\n        \n        Opal.def(self, '$find_block_extension', $Registry_find_block_extension$76 = function $$find_block_extension(name) {\n          var self = this;\n\n          return self.block_extensions['$[]'](name.$to_sym())\n        }, $Registry_find_block_extension$76.$$arity = 1);\n        \n        Opal.def(self, '$block_macro', $Registry_block_macro$77 = function $$block_macro($a) {\n          var $iter = $Registry_block_macro$77.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_block_macro$77.$$p = null;\n          \n          \n          if ($iter) $Registry_block_macro$77.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_syntax_processor', [\"block_macro\", args], block.$to_proc());\n        }, $Registry_block_macro$77.$$arity = -1);\n        \n        Opal.def(self, '$block_macros?', $Registry_block_macros$ques$78 = function() {\n          var self = this;\n\n          return self.block_macro_extensions['$!']()['$!']()\n        }, $Registry_block_macros$ques$78.$$arity = 0);\n        \n        Opal.def(self, '$registered_for_block_macro?', $Registry_registered_for_block_macro$ques$79 = function(name) {\n          var self = this, ext = nil;\n\n          if ($truthy((ext = self.block_macro_extensions['$[]'](name.$to_sym())))) {\n            return ext\n          } else {\n            return false\n          }\n        }, $Registry_registered_for_block_macro$ques$79.$$arity = 1);\n        \n        Opal.def(self, '$find_block_macro_extension', $Registry_find_block_macro_extension$80 = function $$find_block_macro_extension(name) {\n          var self = this;\n\n          return self.block_macro_extensions['$[]'](name.$to_sym())\n        }, $Registry_find_block_macro_extension$80.$$arity = 1);\n        \n        Opal.def(self, '$inline_macro', $Registry_inline_macro$81 = function $$inline_macro($a) {\n          var $iter = $Registry_inline_macro$81.$$p, block = $iter || nil, $post_args, args, self = this;\n\n          if ($iter) $Registry_inline_macro$81.$$p = null;\n          \n          \n          if ($iter) $Registry_inline_macro$81.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          return $send(self, 'add_syntax_processor', [\"inline_macro\", args], block.$to_proc());\n        }, $Registry_inline_macro$81.$$arity = -1);\n        \n        Opal.def(self, '$inline_macros?', $Registry_inline_macros$ques$82 = function() {\n          var self = this;\n\n          return self.inline_macro_extensions['$!']()['$!']()\n        }, $Registry_inline_macros$ques$82.$$arity = 0);\n        \n        Opal.def(self, '$registered_for_inline_macro?', $Registry_registered_for_inline_macro$ques$83 = function(name) {\n          var self = this, ext = nil;\n\n          if ($truthy((ext = self.inline_macro_extensions['$[]'](name.$to_sym())))) {\n            return ext\n          } else {\n            return false\n          }\n        }, $Registry_registered_for_inline_macro$ques$83.$$arity = 1);\n        \n        Opal.def(self, '$find_inline_macro_extension', $Registry_find_inline_macro_extension$84 = function $$find_inline_macro_extension(name) {\n          var self = this;\n\n          return self.inline_macro_extensions['$[]'](name.$to_sym())\n        }, $Registry_find_inline_macro_extension$84.$$arity = 1);\n        \n        Opal.def(self, '$inline_macros', $Registry_inline_macros$85 = function $$inline_macros() {\n          var self = this;\n\n          return self.inline_macro_extensions.$values()\n        }, $Registry_inline_macros$85.$$arity = 0);\n        \n        Opal.def(self, '$prefer', $Registry_prefer$86 = function $$prefer($a) {\n          var $iter = $Registry_prefer$86.$$p, block = $iter || nil, $post_args, args, self = this, extension = nil, arg0 = nil, extensions_store = nil;\n\n          if ($iter) $Registry_prefer$86.$$p = null;\n          \n          \n          if ($iter) $Registry_prefer$86.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          extension = (function() {if ($truthy($$($nesting, 'ProcessorExtension')['$===']((arg0 = args.$shift())))) {\n            return arg0\n          } else {\n            \n            return $send(self, 'send', [arg0].concat(Opal.to_a(args)), block.$to_proc());\n          }; return nil; })();\n          extensions_store = self.$instance_variable_get((((\"\" + \"@\") + (extension.$kind())) + \"_extensions\").$to_sym());\n          extensions_store.$unshift(extensions_store.$delete(extension));\n          return extension;\n        }, $Registry_prefer$86.$$arity = -1);\n        self.$private();\n        \n        Opal.def(self, '$add_document_processor', $Registry_add_document_processor$87 = function $$add_document_processor(kind, args) {\n          var $iter = $Registry_add_document_processor$87.$$p, block = $iter || nil, $$88, $a, $b, $c, self = this, kind_name = nil, kind_class_symbol = nil, kind_class = nil, kind_java_class = nil, kind_store = nil, config = nil, processor = nil, extension = nil, processor_class = nil, processor_instance = nil;\n\n          if ($iter) $Registry_add_document_processor$87.$$p = null;\n          \n          \n          if ($iter) $Registry_add_document_processor$87.$$p = null;;\n          kind_name = kind.$to_s().$tr(\"_\", \" \");\n          kind_class_symbol = $send(kind_name.$split(), 'map', [], ($$88 = function(it){var self = $$88.$$s || this;\n\n          \n            \n            if (it == null) {\n              it = nil;\n            };\n            return it.$capitalize();}, $$88.$$s = self, $$88.$$arity = 1, $$88)).$join().$to_sym();\n          kind_class = $$($nesting, 'Extensions').$const_get(kind_class_symbol, false);\n          kind_java_class = (function() {if ($truthy((($a = $$$('::', 'AsciidoctorJ', 'skip_raise')) ? 'constant' : nil))) {\n            \n            return $$$($$$('::', 'AsciidoctorJ'), 'Extensions').$const_get(kind_class_symbol, false);\n          } else {\n            return nil\n          }; return nil; })();\n          kind_store = ($truthy($b = self.$instance_variable_get((((\"\" + \"@\") + (kind)) + \"_extensions\").$to_sym())) ? $b : self.$instance_variable_set((((\"\" + \"@\") + (kind)) + \"_extensions\").$to_sym(), []));\n          if ((block !== nil)) {\n            \n            config = self.$resolve_args(args, 1);\n            (processor = kind_class.$new(config)).$singleton_class().$enable_dsl();\n            if (block.$arity()['$=='](0)) {\n              $send(processor, 'instance_exec', [], block.$to_proc())\n            } else {\n              Opal.yield1(block, processor)\n            };\n            if ($truthy(processor['$process_block_given?']())) {\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"No block specified to process \" + (kind_name) + \" extension at \" + (block.$source_location()))\n            };\n            processor.$freeze();\n            extension = $$($nesting, 'ProcessorExtension').$new(kind, processor);\n          } else {\n            \n            $c = self.$resolve_args(args, 2), $b = Opal.to_ary($c), (processor = ($b[0] == null ? nil : $b[0])), (config = ($b[1] == null ? nil : $b[1])), $c;\n            if ($truthy((processor_class = $$($nesting, 'Helpers').$resolve_class(processor)))) {\n              \n              if ($truthy(($truthy($b = $rb_lt(processor_class, kind_class)) ? $b : ($truthy($c = kind_java_class) ? $rb_lt(processor_class, kind_java_class) : $c)))) {\n              } else {\n                self.$raise($$$('::', 'ArgumentError'), \"\" + \"Invalid type for \" + (kind_name) + \" extension: \" + (processor))\n              };\n              processor_instance = processor_class.$new(config);\n              processor_instance.$freeze();\n              extension = $$($nesting, 'ProcessorExtension').$new(kind, processor_instance);\n            } else if ($truthy(($truthy($b = kind_class['$==='](processor)) ? $b : ($truthy($c = kind_java_class) ? kind_java_class['$==='](processor) : $c)))) {\n              \n              processor.$update_config(config);\n              processor.$freeze();\n              extension = $$($nesting, 'ProcessorExtension').$new(kind, processor);\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"Invalid arguments specified for registering \" + (kind_name) + \" extension: \" + (args))\n            };\n          };\n          if (extension.$config()['$[]'](\"position\")['$=='](\">>\")) {\n            \n            kind_store.$unshift(extension);\n          } else {\n            \n            kind_store['$<<'](extension);\n          };\n          return extension;\n        }, $Registry_add_document_processor$87.$$arity = 2);\n        \n        Opal.def(self, '$add_syntax_processor', $Registry_add_syntax_processor$89 = function $$add_syntax_processor(kind, args) {\n          var $iter = $Registry_add_syntax_processor$89.$$p, block = $iter || nil, $$90, $a, $b, $c, self = this, kind_name = nil, kind_class_symbol = nil, kind_class = nil, kind_java_class = nil, kind_store = nil, name = nil, config = nil, processor = nil, $writer = nil, processor_class = nil, processor_instance = nil;\n\n          if ($iter) $Registry_add_syntax_processor$89.$$p = null;\n          \n          \n          if ($iter) $Registry_add_syntax_processor$89.$$p = null;;\n          kind_name = kind.$to_s().$tr(\"_\", \" \");\n          kind_class_symbol = $send(kind_name.$split(), 'map', [], ($$90 = function(it){var self = $$90.$$s || this;\n\n          \n            \n            if (it == null) {\n              it = nil;\n            };\n            return it.$capitalize();}, $$90.$$s = self, $$90.$$arity = 1, $$90))['$<<'](\"Processor\").$join().$to_sym();\n          kind_class = $$($nesting, 'Extensions').$const_get(kind_class_symbol, false);\n          kind_java_class = (function() {if ($truthy((($a = $$$('::', 'AsciidoctorJ', 'skip_raise')) ? 'constant' : nil))) {\n            \n            return $$$($$$('::', 'AsciidoctorJ'), 'Extensions').$const_get(kind_class_symbol, false);\n          } else {\n            return nil\n          }; return nil; })();\n          kind_store = ($truthy($b = self.$instance_variable_get((((\"\" + \"@\") + (kind)) + \"_extensions\").$to_sym())) ? $b : self.$instance_variable_set((((\"\" + \"@\") + (kind)) + \"_extensions\").$to_sym(), $hash2([], {})));\n          if ((block !== nil)) {\n            \n            $c = self.$resolve_args(args, 2), $b = Opal.to_ary($c), (name = ($b[0] == null ? nil : $b[0])), (config = ($b[1] == null ? nil : $b[1])), $c;\n            (processor = kind_class.$new(self.$as_symbol(name), config)).$singleton_class().$enable_dsl();\n            if (block.$arity()['$=='](0)) {\n              $send(processor, 'instance_exec', [], block.$to_proc())\n            } else {\n              Opal.yield1(block, processor)\n            };\n            if ($truthy((name = self.$as_symbol(processor.$name())))) {\n            } else {\n              self.$raise($$$('::', 'ArgumentError'), \"\" + \"No name specified for \" + (kind_name) + \" extension at \" + (block.$source_location()))\n            };\n            if ($truthy(processor['$process_block_given?']())) {\n            } else {\n              self.$raise($$$('::', 'NoMethodError'), \"\" + \"No block specified to process \" + (kind_name) + \" extension at \" + (block.$source_location()))\n            };\n            processor.$freeze();\n            \n            $writer = [name, $$($nesting, 'ProcessorExtension').$new(kind, processor)];\n            $send(kind_store, '[]=', Opal.to_a($writer));\n            return $writer[$rb_minus($writer[\"length\"], 1)];;\n          } else {\n            \n            $c = self.$resolve_args(args, 3), $b = Opal.to_ary($c), (processor = ($b[0] == null ? nil : $b[0])), (name = ($b[1] == null ? nil : $b[1])), (config = ($b[2] == null ? nil : $b[2])), $c;\n            if ($truthy((processor_class = $$($nesting, 'Helpers').$resolve_class(processor)))) {\n              \n              if ($truthy(($truthy($b = $rb_lt(processor_class, kind_class)) ? $b : ($truthy($c = kind_java_class) ? $rb_lt(processor_class, kind_java_class) : $c)))) {\n              } else {\n                self.$raise($$$('::', 'ArgumentError'), \"\" + \"Class specified for \" + (kind_name) + \" extension does not inherit from \" + (kind_class) + \": \" + (processor))\n              };\n              processor_instance = processor_class.$new(self.$as_symbol(name), config);\n              if ($truthy((name = self.$as_symbol(processor_instance.$name())))) {\n              } else {\n                self.$raise($$$('::', 'ArgumentError'), \"\" + \"No name specified for \" + (kind_name) + \" extension: \" + (processor))\n              };\n              processor_instance.$freeze();\n              \n              $writer = [name, $$($nesting, 'ProcessorExtension').$new(kind, processor_instance)];\n              $send(kind_store, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else if ($truthy(($truthy($b = kind_class['$==='](processor)) ? $b : ($truthy($c = kind_java_class) ? kind_java_class['$==='](processor) : $c)))) {\n              \n              processor.$update_config(config);\n              if ($truthy((name = (function() {if ($truthy(name)) {\n                \n                \n                $writer = [self.$as_symbol(name)];\n                $send(processor, 'name=', Opal.to_a($writer));\n                return $writer[$rb_minus($writer[\"length\"], 1)];;\n              } else {\n                \n                return self.$as_symbol(processor.$name());\n              }; return nil; })()))) {\n              } else {\n                self.$raise($$$('::', 'ArgumentError'), \"\" + \"No name specified for \" + (kind_name) + \" extension: \" + (processor))\n              };\n              processor.$freeze();\n              \n              $writer = [name, $$($nesting, 'ProcessorExtension').$new(kind, processor)];\n              $send(kind_store, '[]=', Opal.to_a($writer));\n              return $writer[$rb_minus($writer[\"length\"], 1)];;\n            } else {\n              return self.$raise($$$('::', 'ArgumentError'), \"\" + \"Invalid arguments specified for registering \" + (kind_name) + \" extension: \" + (args))\n            };\n          };\n        }, $Registry_add_syntax_processor$89.$$arity = 2);\n        \n        Opal.def(self, '$resolve_args', $Registry_resolve_args$91 = function $$resolve_args(args, expect) {\n          var self = this, opts = nil, missing = nil;\n\n          \n          opts = (function() {if ($truthy($$$('::', 'Hash')['$==='](args['$[]'](-1)))) {\n            return args.$pop()\n          } else {\n            return $hash2([], {})\n          }; return nil; })();\n          if (expect['$=='](1)) {\n            return opts};\n          if ($truthy($rb_gt((missing = $rb_minus($rb_minus(expect, 1), args.$size())), 0))) {\n            args = $rb_plus(args, $$$('::', 'Array').$new(missing))\n          } else if ($truthy($rb_lt(missing, 0))) {\n            args.$pop(missing['$-@']())};\n          args['$<<'](opts);\n          return args;\n        }, $Registry_resolve_args$91.$$arity = 2);\n        return (Opal.def(self, '$as_symbol', $Registry_as_symbol$92 = function $$as_symbol(name) {\n          var self = this;\n\n          if ($truthy(name)) {\n            return name.$to_sym()\n          } else {\n            return nil\n          }\n        }, $Registry_as_symbol$92.$$arity = 1), nil) && 'as_symbol';\n      })($nesting[0], null, $nesting);\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $generate_name$93, $next_auto_id$94, $groups$95, $create$96, $register$97, $unregister_all$98, $unregister$99;\n\n        \n        \n        Opal.def(self, '$generate_name', $generate_name$93 = function $$generate_name() {\n          var self = this;\n\n          return \"\" + \"extgrp\" + (self.$next_auto_id())\n        }, $generate_name$93.$$arity = 0);\n        \n        Opal.def(self, '$next_auto_id', $next_auto_id$94 = function $$next_auto_id() {\n          var $a, self = this;\n          if (self.auto_id == null) self.auto_id = nil;\n\n          \n          self.auto_id = ($truthy($a = self.auto_id) ? $a : -1);\n          return (self.auto_id = $rb_plus(self.auto_id, 1));\n        }, $next_auto_id$94.$$arity = 0);\n        \n        Opal.def(self, '$groups', $groups$95 = function $$groups() {\n          var $a, self = this;\n          if (self.groups == null) self.groups = nil;\n\n          return (self.groups = ($truthy($a = self.groups) ? $a : $hash2([], {})))\n        }, $groups$95.$$arity = 0);\n        \n        Opal.def(self, '$create', $create$96 = function $$create(name) {\n          var $iter = $create$96.$$p, block = $iter || nil, $a, self = this;\n\n          if ($iter) $create$96.$$p = null;\n          \n          \n          if ($iter) $create$96.$$p = null;;\n          \n          if (name == null) {\n            name = nil;\n          };\n          if ((block !== nil)) {\n            return $$($nesting, 'Registry').$new($hash(($truthy($a = name) ? $a : self.$generate_name()), block))\n          } else {\n            return $$($nesting, 'Registry').$new()\n          };\n        }, $create$96.$$arity = -1);\n        \n        Opal.def(self, '$register', $register$97 = function $$register($a) {\n          var $iter = $register$97.$$p, block = $iter || nil, $post_args, args, $b, self = this, argc = nil, resolved_group = nil, group = nil, name = nil, $writer = nil;\n\n          if ($iter) $register$97.$$p = null;\n          \n          \n          if ($iter) $register$97.$$p = null;;\n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          args = $post_args;;\n          argc = args.$size();\n          if ((block !== nil)) {\n            resolved_group = block\n          } else if ($truthy((group = args.$pop()))) {\n            resolved_group = ($truthy($b = $$($nesting, 'Helpers').$resolve_class(group)) ? $b : group)\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"Extension group to register not specified\")\n          };\n          name = ($truthy($b = args.$pop()) ? $b : self.$generate_name());\n          if ($truthy(args['$empty?']())) {\n          } else {\n            self.$raise($$$('::', 'ArgumentError'), \"\" + \"Wrong number of arguments (\" + (argc) + \" for 1..2)\")\n          };\n          \n          $writer = [name.$to_sym(), resolved_group];\n          $send(self.$groups(), '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];;\n        }, $register$97.$$arity = -1);\n        \n        Opal.def(self, '$unregister_all', $unregister_all$98 = function $$unregister_all() {\n          var self = this;\n\n          \n          self.groups = $hash2([], {});\n          return nil;\n        }, $unregister_all$98.$$arity = 0);\n        return (Opal.def(self, '$unregister', $unregister$99 = function $$unregister($a) {\n          var $post_args, names, $$100, self = this;\n\n          \n          \n          $post_args = Opal.slice.call(arguments, 0, arguments.length);\n          \n          names = $post_args;;\n          $send(names, 'each', [], ($$100 = function(group){var self = $$100.$$s || this;\n            if (self.groups == null) self.groups = nil;\n\n          \n            \n            if (group == null) {\n              group = nil;\n            };\n            return self.groups.$delete(group.$to_sym());}, $$100.$$s = self, $$100.$$arity = 1, $$100));\n          return nil;\n        }, $unregister$99.$$arity = -1), nil) && 'unregister';\n      })(Opal.get_singleton_class(self), $nesting);\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting);\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/stylesheet\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$rstrip', '$read', '$join']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Stylesheets');\n\n      var $nesting = [self].concat($parent_nesting), $Stylesheets_primary_stylesheet_data$1;\n\n      self.$$prototype.primary_stylesheet_data = nil;\n      return (Opal.def(self, '$primary_stylesheet_data', $Stylesheets_primary_stylesheet_data$1 = function $$primary_stylesheet_data() {\n        var $a, self = this;\n\n        return (self.primary_stylesheet_data = ($truthy($a = self.primary_stylesheet_data) ? $a : $$$('::', 'IO').$read($$$('::', 'File').$join(\"css\", \"asciidoctor.css\")).$rstrip()))\n      }, $Stylesheets_primary_stylesheet_data$1.$$arity = 0), nil) && 'primary_stylesheet_data'\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/document\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Document');\n\n      var $nesting = [self].concat($parent_nesting), $Document_fill_datetime_attributes$1;\n\n      return (Opal.def(self, '$fill_datetime_attributes', $Document_fill_datetime_attributes$1 = function $$fill_datetime_attributes(attrs, input_mtime) {\n        var self = this;\n\n        \n      var $truthy = Opal.truthy\n      var $falsy = Opal.falsy\n      var nil = Opal.nil\n      var utc_offset\n      var source_date_epoch\n\n      var getYear = function (time, utc_offset) {\n        return utc_offset === 0 ? time.getUTCFullYear() : time.getFullYear()\n      }\n      var getMonth = function (time, utc_offset) {\n        return utc_offset === 0 ? time.getUTCMonth() : time.getMonth()\n      }\n      var getDay = function (time, utc_offset) {\n        return utc_offset === 0 ? time.getUTCDate() : time.getDate()\n      }\n      var getHours = function (time, utc_offset) {\n        return utc_offset === 0 ? time.getUTCHours() : time.getHours()\n      }\n\n      var now = new Date()\n      // See https://reproducible-builds.org/specs/source-date-epoch/\n      if (Opal.const_get_qualified('::', 'ENV')['$key?']('SOURCE_DATE_EPOCH')) {\n        now.setTime(parseInt(Opal.const_get_qualified('::', 'ENV')['$[]']('SOURCE_DATE_EPOCH')) * 1000)\n        source_date_epoch = now\n        utc_offset = 0  // utc\n      } else {\n        utc_offset = -now.getTimezoneOffset() / 60 // local date\n      }\n      // localdate and localyear\n      if ($truthy((localdate = attrs['$[]']('localdate')))) {\n        if ($falsy(localyear = attrs['$[]']('localyear'))) {\n          localyear = localdate.indexOf('-') === 4 ? localdate.substring(0, 4) : nil\n          attrs['$[]=']('localyear', localyear)\n        }\n      } else {\n        var now_year = getYear(now, utc_offset).toString()\n        var now_month = ('0' + (getMonth(now, utc_offset) + 1)).slice(-2)\n        var now_day = ('0' + getDay(now, utc_offset)).slice(-2)\n        localdate = now_year + '-' + now_month + '-' + now_day\n        attrs['$[]=']('localdate', localdate)\n        localyear = now_year\n        attrs['$[]=']('localyear', now_year)\n      }\n      // localtime\n      if ($falsy((localtime = attrs['$[]']('localtime')))) {\n        var hours = ('0' + (getHours(now, utc_offset))).slice(-2)\n        var minutes = ('0' + (now.getMinutes())).slice(-2)\n        var seconds = ('0' + (now.getSeconds())).slice(-2)\n        var utc_offset_format\n        if (utc_offset === 0) {\n          utc_offset_format = 'UTC'\n        } else if (utc_offset > 0) {\n          utc_offset_format = ('+0' + (utc_offset * 100)).slice(-5)\n        } else {\n          utc_offset_format = ('-0' + (-utc_offset * 100)).slice(-5)\n        }\n        localtime = hours + ':' + minutes + ':' + seconds + ' ' + utc_offset_format\n        attrs['$[]=']('localtime', localtime)\n      }\n      // localdatetime\n      if ($falsy((localdatetime = attrs['$[]']('localdatetime')))) {\n        localdatetime = localdate + ' ' + localtime\n        attrs['$[]=']('localdatetime', localdatetime)\n      }\n\n      // docdate, doctime and docdatetime should default to localdate, localtime and localdatetime if not otherwise set\n      if ($truthy(source_date_epoch)) {\n        input_mtime = source_date_epoch\n      } else if ($truthy(input_mtime)) {\n        utc_offset = -input_mtime.getTimezoneOffset() / 60\n      } else {\n        input_mtime = now\n      }\n\n      // docdate and docyear\n      if ($truthy(docdate = attrs['$[]']('docdate'))) {\n        attrs['$[]=']('docyear', docdate.indexOf('-') === 4 ? docdate.substring(0, 4) : nil)\n      } else {\n        var mtime_year = getYear(input_mtime, utc_offset).toString()\n        var mtime_month = ('0' + (getMonth(input_mtime, utc_offset) + 1)).slice(-2)\n        var mtime_day = ('0' + (getDay(input_mtime, utc_offset))).slice(-2)\n        docdate = mtime_year + '-' + mtime_month + '-' + mtime_day\n        attrs['$[]=']('docdate', docdate)\n        if ($falsy(attrs['$[]']('docyear'))) {\n          attrs['$[]=']('docyear', mtime_year)\n        }\n      }\n      // doctime\n      if ($falsy(doctime = attrs['$[]']('doctime'))) {\n        var mtime_hours = ('0' + (getHours(input_mtime, utc_offset))).slice(-2)\n        var mtime_minutes = ('0' + (input_mtime.getMinutes())).slice(-2)\n        var mtime_seconds = ('0' + (input_mtime.getSeconds())).slice(-2)\n        if (utc_offset === 0) {\n          utc_offset_format = 'UTC'\n        } else if (utc_offset > 0) {\n          utc_offset_format = ('+0' + (utc_offset * 100)).slice(-5)\n        } else {\n          utc_offset_format = ('-0' + (-utc_offset * 100)).slice(-5)\n        }\n        doctime = mtime_hours + ':' + mtime_minutes + ':' + mtime_seconds + ' ' + utc_offset_format\n        attrs['$[]=']('doctime', doctime)\n      }\n      // docdatetime\n      if ($falsy(attrs['$[]']('docdatetime'))) {\n        attrs['$[]=']('docdatetime', docdate + ' ' + doctime)\n      }\n      return nil\n    \n      }, $Document_fill_datetime_attributes$1.$$arity = 2), nil) && 'fill_datetime_attributes'\n    })($nesting[0], $$($nesting, 'AbstractBlock'), $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/substitutors\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Substitutors');\n\n      var $nesting = [self].concat($parent_nesting), $Substitutors_sub_placeholder$1;\n\n      \n      Opal.def(self, '$sub_placeholder', $Substitutors_sub_placeholder$1 = function $$sub_placeholder(format_string, replacement) {\n        var self = this;\n\n        return format_string.replace('%s', replacement);\n      }, $Substitutors_sub_placeholder$1.$$arity = 2)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/parser\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Parser');\n\n      var $nesting = [self].concat($parent_nesting), $Parser_uniform$ques$1, $Parser_uniform$ques$2;\n\n      if ($truthy(String.prototype.repeat)) {\n        return (Opal.defs(self, '$uniform?', $Parser_uniform$ques$1 = function(str, chr, len) {\n          var self = this;\n\n          return chr.repeat(len) === str;\n        }, $Parser_uniform$ques$1.$$arity = 3), nil) && 'uniform?'\n      } else {\n        return (Opal.defs(self, '$uniform?', $Parser_uniform$ques$2 = function(str, chr, len) {\n          var self = this;\n\n          return Array.apply(null, { length: len }).map(function () { return chr }).join('') === str;\n        }, $Parser_uniform$ques$2.$$arity = 3), nil) && 'uniform?'\n      }\n    })($nesting[0], null, $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext/syntax_highlighter\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$key?', '$registry', '$[]', '$include?', '$include', '$empty?', '$debug', '$logger', '$join', '$keys']);\n  return (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting);\n\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'SyntaxHighlighter');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      (function($base, $parent_nesting) {\n        var self = $module($base, 'Factory');\n\n        var $nesting = [self].concat($parent_nesting), $Factory_for$1;\n\n        \n        Opal.def(self, '$for', $Factory_for$1 = function(name) {\n          var self = this;\n\n          if ($truthy(self.$registry()['$key?'](name))) {\n            return self.$registry()['$[]'](name)\n          } else {\n            \n            if ($truthy(self['$include?']($$($nesting, 'Logging')))) {\n            } else {\n              self.$include($$($nesting, 'Logging'))\n            };\n            if ($truthy(self.$registry()['$empty?']())) {\n              self.$logger().$debug(\"no syntax highlighter available, functionality disabled.\")\n            } else {\n              self.$logger().$debug(\"\" + \"syntax highlighter named '\" + (name) + \"' is not available, must be one of: '\" + (self.$registry().$keys().$join(\"', '\")) + \"'.\")\n            };\n            return nil;\n          }\n        }, $Factory_for$1.$$arity = 1)\n      })($nesting[0], $nesting)\n    })($nesting[0], $nesting)\n  })($nesting[0], $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/asciidoctor_ext\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"asciidoctor/js/asciidoctor_ext/stylesheet\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext/document\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext/substitutors\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext/parser\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext/syntax_highlighter\");\n  \n// Load specific runtime\nself.$require(\"asciidoctor/js/asciidoctor_ext/browser\");\n;\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/opal_ext/logger\"] = function(Opal) {\n  function $rb_lt(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $truthy = Opal.truthy;\n\n  Opal.add_stubs(['$chr', '$rjust', '$message_as_string', '$<', '$write', '$call', '$[]']);\n  return (function($base, $super, $parent_nesting) {\n    var self = $klass($base, $super, 'Logger');\n\n    var $nesting = [self].concat($parent_nesting), $Logger_add$2;\n\n    self.$$prototype.level = self.$$prototype.progname = self.$$prototype.pipe = self.$$prototype.formatter = nil;\n    \n    (function($base, $super, $parent_nesting) {\n      var self = $klass($base, $super, 'Formatter');\n\n      var $nesting = [self].concat($parent_nesting), $Formatter_call$1;\n\n      return (Opal.def(self, '$call', $Formatter_call$1 = function $$call(severity, time, progname, msg) {\n        var self = this, time_format = nil;\n\n        \n        time_format = time.getFullYear() + '-' + ('0'+(time.getMonth()+1)).slice(-2) + '-' + ('0'+time.getDate()).slice(-2) + 'T' + ('0'+time.getHours()).slice(-2) + ':' + ('0'+time.getMinutes()).slice(-2) + ':' + ('0'+time.getSeconds()).slice(-2) + '.' + ('00' + new Date().getMilliseconds() * 1000).slice(-6);\n        return \"\" + (severity.$chr()) + \", [\" + (time_format) + \"] \" + (severity.$rjust(5)) + \" -- \" + (progname) + \": \" + (self.$message_as_string(msg));\n      }, $Formatter_call$1.$$arity = 4), nil) && 'call'\n    })($nesting[0], null, $nesting);\n    return (Opal.def(self, '$add', $Logger_add$2 = function $$add(severity, message, progname) {\n      var $iter = $Logger_add$2.$$p, block = $iter || nil, $a, self = this;\n\n      if ($iter) $Logger_add$2.$$p = null;\n      \n      \n      if ($iter) $Logger_add$2.$$p = null;;\n      \n      if (message == null) {\n        message = nil;\n      };\n      \n      if (progname == null) {\n        progname = nil;\n      };\n      if ($truthy($rb_lt((severity = ($truthy($a = severity) ? $a : $$($nesting, 'UNKNOWN'))), self.level))) {\n        return true};\n      progname = ($truthy($a = progname) ? $a : self.progname);\n      if ($truthy(message)) {\n      } else if ((block !== nil)) {\n        message = Opal.yieldX(block, [])\n      } else {\n        \n        message = progname;\n        progname = self.progname;\n      };\n      self.pipe.$write(self.formatter.$call(($truthy($a = $$($nesting, 'SEVERITY_LABELS')['$[]'](severity)) ? $a : \"ANY\"), new Date(), progname, message));\n      return true;\n    }, $Logger_add$2.$$arity = -2), nil) && 'add';\n  })($nesting[0], null, $nesting)\n};\n\n/* Generated by Opal 0.11.99.dev */\nOpal.modules[\"asciidoctor/js/postscript\"] = function(Opal) {\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice;\n\n  Opal.add_stubs(['$require']);\n  \n  self.$require(\"asciidoctor/converter/composite\");\n  self.$require(\"asciidoctor/converter/html5\");\n  self.$require(\"asciidoctor/extensions\");\n  self.$require(\"asciidoctor/js/asciidoctor_ext\");\n  return self.$require(\"asciidoctor/js/opal_ext/logger\");\n};\n\n/* Generated by Opal 0.11.99.dev */\n(function(Opal) {\n  function $rb_minus(lhs, rhs) {\n    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);\n  }\n  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $module = Opal.module, $send = Opal.send, $truthy = Opal.truthy, $hash2 = Opal.hash2;\n\n  Opal.add_stubs(['$require', '$==', '$to_h', '$sort', '$map', '$constants', '$const_get', '$downcase', '$to_s', '$<=>', '$upcase', '$[]', '$values', '$new', '$attr_reader', '$instance_variable_set', '$send', '$singleton_class', '$<<', '$define', '$dirname', '$absolute_path', '$__dir__', '$join', '$home', '$pwd', '$to_set', '$tap', '$each', '$chr', '$each_key', '$slice', '$[]=', '$-', '$length', '$merge', '$default=', '$drop', '$insert']);\n  \n  self.$require(\"set\");\n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    self.$require(\"asciidoctor/js\")\n  } else {\n    nil\n  };\n  (function($base, $parent_nesting) {\n    var self = $module($base, 'Asciidoctor');\n\n    var $nesting = [self].concat($parent_nesting), $a, $b, $Asciidoctor$7, $Asciidoctor$9, $Asciidoctor$11, $Asciidoctor$13, $writer = nil;\n\n    \n    Opal.const_set($nesting[0], 'RUBY_ENGINE_OPAL', Opal.const_set($nesting[0], 'RUBY_ENGINE', $$$('::', 'RUBY_ENGINE'))['$=='](\"opal\"));\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'SafeMode');\n\n      var $nesting = [self].concat($parent_nesting), $SafeMode$1, $SafeMode$2, $SafeMode_value_for_name$3, $SafeMode_name_for_value$4, $SafeMode_names$5;\n\n      \n      Opal.const_set($nesting[0], 'UNSAFE', 0);\n      Opal.const_set($nesting[0], 'SAFE', 1);\n      Opal.const_set($nesting[0], 'SERVER', 10);\n      Opal.const_set($nesting[0], 'SECURE', 20);\n      self.names_by_value = $send($send(self.$constants(false), 'map', [], ($SafeMode$1 = function(sym){var self = $SafeMode$1.$$s || this;\n\n      \n        \n        if (sym == null) {\n          sym = nil;\n        };\n        return [self.$const_get(sym), sym.$to_s().$downcase()];}, $SafeMode$1.$$s = self, $SafeMode$1.$$arity = 1, $SafeMode$1)), 'sort', [], ($SafeMode$2 = function($mlhs_tmp1, $mlhs_tmp2){var self = $SafeMode$2.$$s || this, $a, $b, a = nil, b = nil;\n\n      \n        \n        if ($mlhs_tmp1 == null) {\n          $mlhs_tmp1 = nil;\n        };\n        \n        if ($mlhs_tmp2 == null) {\n          $mlhs_tmp2 = nil;\n        };\n        $b = $mlhs_tmp1, $a = Opal.to_ary($b), (a = ($a[0] == null ? nil : $a[0])), $b;\n        $b = $mlhs_tmp2, $a = Opal.to_ary($b), (b = ($a[0] == null ? nil : $a[0])), $b;\n        return a['$<=>'](b);}, $SafeMode$2.$$s = self, $SafeMode$2.$$arity = 2, $SafeMode$2.$$has_top_level_mlhs_arg = true, $SafeMode$2)).$to_h();\n      Opal.defs(self, '$value_for_name', $SafeMode_value_for_name$3 = function $$value_for_name(name) {\n        var self = this;\n\n        return self.$const_get(name.$upcase(), false)\n      }, $SafeMode_value_for_name$3.$$arity = 1);\n      Opal.defs(self, '$name_for_value', $SafeMode_name_for_value$4 = function $$name_for_value(value) {\n        var self = this;\n        if (self.names_by_value == null) self.names_by_value = nil;\n\n        return self.names_by_value['$[]'](value)\n      }, $SafeMode_name_for_value$4.$$arity = 1);\n      Opal.defs(self, '$names', $SafeMode_names$5 = function $$names() {\n        var self = this;\n        if (self.names_by_value == null) self.names_by_value = nil;\n\n        return self.names_by_value.$values()\n      }, $SafeMode_names$5.$$arity = 0);\n    })($nesting[0], $nesting);\n    (function($base, $parent_nesting) {\n      var self = $module($base, 'Compliance');\n\n      var $nesting = [self].concat($parent_nesting);\n\n      \n      self.keys = $$$('::', 'Set').$new();\n      (function(self, $parent_nesting) {\n        var $nesting = [self].concat($parent_nesting), $define$6;\n\n        \n        self.$attr_reader(\"keys\");\n        return (Opal.def(self, '$define', $define$6 = function $$define(key, value) {\n          var self = this;\n          if (self.keys == null) self.keys = nil;\n\n          \n          self.$instance_variable_set(\"\" + \"@\" + (key), value);\n          self.$singleton_class().$send(\"attr_accessor\", key);\n          self.keys['$<<'](key);\n          return nil;\n        }, $define$6.$$arity = 2), nil) && 'define';\n      })(Opal.get_singleton_class(self), $nesting);\n      self.$define(\"block_terminates_paragraph\", true);\n      self.$define(\"strict_verbatim_paragraphs\", true);\n      self.$define(\"underline_style_section_titles\", true);\n      self.$define(\"unwrap_standalone_preamble\", true);\n      self.$define(\"attribute_missing\", \"skip\");\n      self.$define(\"attribute_undefined\", \"drop-line\");\n      self.$define(\"shorthand_property_syntax\", true);\n      self.$define(\"natural_xrefs\", true);\n      self.$define(\"unique_id_start_index\", 2);\n      self.$define(\"markdown_syntax\", true);\n    })($nesting[0], $nesting);\n    if ($truthy((($a = $$($nesting, 'ROOT_DIR', 'skip_raise')) ? 'constant' : nil))) {\n    } else {\n      Opal.const_set($nesting[0], 'ROOT_DIR', $$$('::', 'File').$dirname($$$('::', 'File').$absolute_path(self.$__dir__())))\n    };\n    Opal.const_set($nesting[0], 'LIB_DIR', $$$('::', 'File').$join($$($nesting, 'ROOT_DIR'), \"lib\"));\n    Opal.const_set($nesting[0], 'DATA_DIR', $$$('::', 'File').$join($$($nesting, 'ROOT_DIR'), \"data\"));\n    Opal.const_set($nesting[0], 'USER_HOME', (function() { try {\n      return $$$('::', 'Dir').$home()\n    } catch ($err) {\n      if (Opal.rescue($err, [$$($nesting, 'StandardError')])) {\n        try {\n          \n          return ($truthy($b = $$$('::', 'ENV')['$[]'](\"HOME\")) ? $b : $$$('::', 'Dir').$pwd());\n        } finally { Opal.pop_exception() }\n      } else { throw $err; }\n    }})());\n    Opal.const_set($nesting[0], 'LF', \"\\n\");\n    Opal.const_set($nesting[0], 'NULL', \"\\u0000\");\n    Opal.const_set($nesting[0], 'TAB', \"\\t\");\n    Opal.const_set($nesting[0], 'MAX_INT', 9007199254740991);\n    Opal.const_set($nesting[0], 'UTF_8', $$$($$$('::', 'Encoding'), 'UTF_8'));\n    Opal.const_set($nesting[0], 'BOM_BYTES_UTF_8', [239, 187, 191]);\n    Opal.const_set($nesting[0], 'BOM_BYTES_UTF_16LE', [255, 254]);\n    Opal.const_set($nesting[0], 'BOM_BYTES_UTF_16BE', [254, 255]);\n    Opal.const_set($nesting[0], 'FILE_READ_MODE', (function() {if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n      return \"r\"\n    } else {\n      return \"rb:utf-8:utf-8\"\n    }; return nil; })());\n    Opal.const_set($nesting[0], 'URI_READ_MODE', $$($nesting, 'FILE_READ_MODE'));\n    Opal.const_set($nesting[0], 'FILE_WRITE_MODE', (function() {if ($truthy($$($nesting, 'RUBY_ENGINE_OPAL'))) {\n      return \"w\"\n    } else {\n      return \"w:utf-8\"\n    }; return nil; })());\n    Opal.const_set($nesting[0], 'DEFAULT_DOCTYPE', \"article\");\n    Opal.const_set($nesting[0], 'DEFAULT_BACKEND', \"html5\");\n    Opal.const_set($nesting[0], 'DEFAULT_STYLESHEET_KEYS', [\"\", \"DEFAULT\"].$to_set());\n    Opal.const_set($nesting[0], 'DEFAULT_STYLESHEET_NAME', \"asciidoctor.css\");\n    Opal.const_set($nesting[0], 'BACKEND_ALIASES', $hash2([\"html\", \"docbook\"], {\"html\": \"html5\", \"docbook\": \"docbook5\"}));\n    Opal.const_set($nesting[0], 'DEFAULT_PAGE_WIDTHS', $hash2([\"docbook\"], {\"docbook\": 425}));\n    Opal.const_set($nesting[0], 'DEFAULT_EXTENSIONS', $hash2([\"html\", \"docbook\", \"pdf\", \"epub\", \"manpage\", \"asciidoc\"], {\"html\": \".html\", \"docbook\": \".xml\", \"pdf\": \".pdf\", \"epub\": \".epub\", \"manpage\": \".man\", \"asciidoc\": \".adoc\"}));\n    Opal.const_set($nesting[0], 'ASCIIDOC_EXTENSIONS', $hash2([\".adoc\", \".asciidoc\", \".asc\", \".ad\", \".txt\"], {\".adoc\": true, \".asciidoc\": true, \".asc\": true, \".ad\": true, \".txt\": true}));\n    Opal.const_set($nesting[0], 'SETEXT_SECTION_LEVELS', $hash2([\"=\", \"-\", \"~\", \"^\", \"+\"], {\"=\": 0, \"-\": 1, \"~\": 2, \"^\": 3, \"+\": 4}));\n    Opal.const_set($nesting[0], 'ADMONITION_STYLES', [\"NOTE\", \"TIP\", \"IMPORTANT\", \"WARNING\", \"CAUTION\"].$to_set());\n    Opal.const_set($nesting[0], 'ADMONITION_STYLE_HEADS', $send($$$('::', 'Set').$new(), 'tap', [], ($Asciidoctor$7 = function(accum){var self = $Asciidoctor$7.$$s || this, $$8;\n\n    \n      \n      if (accum == null) {\n        accum = nil;\n      };\n      return $send($$($nesting, 'ADMONITION_STYLES'), 'each', [], ($$8 = function(s){var self = $$8.$$s || this;\n\n      \n        \n        if (s == null) {\n          s = nil;\n        };\n        return accum['$<<'](s.$chr());}, $$8.$$s = self, $$8.$$arity = 1, $$8));}, $Asciidoctor$7.$$s = self, $Asciidoctor$7.$$arity = 1, $Asciidoctor$7)));\n    Opal.const_set($nesting[0], 'PARAGRAPH_STYLES', [\"comment\", \"example\", \"literal\", \"listing\", \"normal\", \"open\", \"pass\", \"quote\", \"sidebar\", \"source\", \"verse\", \"abstract\", \"partintro\"].$to_set());\n    Opal.const_set($nesting[0], 'VERBATIM_STYLES', [\"literal\", \"listing\", \"source\", \"verse\"].$to_set());\n    Opal.const_set($nesting[0], 'DELIMITED_BLOCKS', $hash2([\"--\", \"----\", \"....\", \"====\", \"****\", \"____\", \"++++\", \"|===\", \",===\", \":===\", \"!===\", \"////\", \"```\"], {\"--\": [\"open\", [\"comment\", \"example\", \"literal\", \"listing\", \"pass\", \"quote\", \"sidebar\", \"source\", \"verse\", \"admonition\", \"abstract\", \"partintro\"].$to_set()], \"----\": [\"listing\", [\"literal\", \"source\"].$to_set()], \"....\": [\"literal\", [\"listing\", \"source\"].$to_set()], \"====\": [\"example\", [\"admonition\"].$to_set()], \"****\": [\"sidebar\", $$$('::', 'Set').$new()], \"____\": [\"quote\", [\"verse\"].$to_set()], \"++++\": [\"pass\", [\"stem\", \"latexmath\", \"asciimath\"].$to_set()], \"|===\": [\"table\", $$$('::', 'Set').$new()], \",===\": [\"table\", $$$('::', 'Set').$new()], \":===\": [\"table\", $$$('::', 'Set').$new()], \"!===\": [\"table\", $$$('::', 'Set').$new()], \"////\": [\"comment\", $$$('::', 'Set').$new()], \"```\": [\"fenced_code\", $$$('::', 'Set').$new()]}));\n    Opal.const_set($nesting[0], 'DELIMITED_BLOCK_HEADS', $send($hash2([], {}), 'tap', [], ($Asciidoctor$9 = function(accum){var self = $Asciidoctor$9.$$s || this, $$10;\n\n    \n      \n      if (accum == null) {\n        accum = nil;\n      };\n      return $send($$($nesting, 'DELIMITED_BLOCKS'), 'each_key', [], ($$10 = function(k){var self = $$10.$$s || this, $writer = nil;\n\n      \n        \n        if (k == null) {\n          k = nil;\n        };\n        $writer = [k.$slice(0, 2), true];\n        $send(accum, '[]=', Opal.to_a($writer));\n        return $writer[$rb_minus($writer[\"length\"], 1)];}, $$10.$$s = self, $$10.$$arity = 1, $$10));}, $Asciidoctor$9.$$s = self, $Asciidoctor$9.$$arity = 1, $Asciidoctor$9)));\n    Opal.const_set($nesting[0], 'DELIMITED_BLOCK_TAILS', $send($hash2([], {}), 'tap', [], ($Asciidoctor$11 = function(accum){var self = $Asciidoctor$11.$$s || this, $$12;\n\n    \n      \n      if (accum == null) {\n        accum = nil;\n      };\n      return $send($$($nesting, 'DELIMITED_BLOCKS'), 'each_key', [], ($$12 = function(k){var self = $$12.$$s || this, $writer = nil;\n\n      \n        \n        if (k == null) {\n          k = nil;\n        };\n        if (k.$length()['$=='](4)) {\n          \n          $writer = [k, k['$[]']($rb_minus(k.$length(), 1))];\n          $send(accum, '[]=', Opal.to_a($writer));\n          return $writer[$rb_minus($writer[\"length\"], 1)];\n        } else {\n          return nil\n        };}, $$12.$$s = self, $$12.$$arity = 1, $$12));}, $Asciidoctor$11.$$s = self, $Asciidoctor$11.$$arity = 1, $Asciidoctor$11)));\n    Opal.const_set($nesting[0], 'CAPTION_ATTRIBUTE_NAMES', $hash2([\"example\", \"figure\", \"listing\", \"table\"], {\"example\": \"example-caption\", \"figure\": \"figure-caption\", \"listing\": \"listing-caption\", \"table\": \"table-caption\"}));\n    Opal.const_set($nesting[0], 'LAYOUT_BREAK_CHARS', $hash2([\"'\", \"<\"], {\"'\": \"thematic_break\", \"<\": \"page_break\"}));\n    Opal.const_set($nesting[0], 'MARKDOWN_THEMATIC_BREAK_CHARS', $hash2([\"-\", \"*\", \"_\"], {\"-\": \"thematic_break\", \"*\": \"thematic_break\", \"_\": \"thematic_break\"}));\n    Opal.const_set($nesting[0], 'HYBRID_LAYOUT_BREAK_CHARS', $$($nesting, 'LAYOUT_BREAK_CHARS').$merge($$($nesting, 'MARKDOWN_THEMATIC_BREAK_CHARS')));\n    Opal.const_set($nesting[0], 'NESTABLE_LIST_CONTEXTS', [\"ulist\", \"olist\", \"dlist\"]);\n    Opal.const_set($nesting[0], 'ORDERED_LIST_STYLES', [\"arabic\", \"loweralpha\", \"lowerroman\", \"upperalpha\", \"upperroman\"]);\n    Opal.const_set($nesting[0], 'ORDERED_LIST_KEYWORDS', $hash2([\"loweralpha\", \"lowerroman\", \"upperalpha\", \"upperroman\"], {\"loweralpha\": \"a\", \"lowerroman\": \"i\", \"upperalpha\": \"A\", \"upperroman\": \"I\"}));\n    Opal.const_set($nesting[0], 'ATTR_REF_HEAD', \"{\");\n    Opal.const_set($nesting[0], 'LIST_CONTINUATION', \"+\");\n    Opal.const_set($nesting[0], 'HARD_LINE_BREAK', \" +\");\n    Opal.const_set($nesting[0], 'LINE_CONTINUATION', \" \\\\\");\n    Opal.const_set($nesting[0], 'LINE_CONTINUATION_LEGACY', \" +\");\n    Opal.const_set($nesting[0], 'BLOCK_MATH_DELIMITERS', $hash2([\"asciimath\", \"latexmath\"], {\"asciimath\": [\"\\\\$\", \"\\\\$\"], \"latexmath\": [\"\\\\[\", \"\\\\]\"]}));\n    Opal.const_set($nesting[0], 'INLINE_MATH_DELIMITERS', $hash2([\"asciimath\", \"latexmath\"], {\"asciimath\": [\"\\\\$\", \"\\\\$\"], \"latexmath\": [\"\\\\(\", \"\\\\)\"]}));\n    \n    $writer = [\"asciimath\"];\n    $send(Opal.const_set($nesting[0], 'STEM_TYPE_ALIASES', $hash2([\"latexmath\", \"latex\", \"tex\"], {\"latexmath\": \"latexmath\", \"latex\": \"latexmath\", \"tex\": \"latexmath\"})), 'default=', Opal.to_a($writer));\n    $writer[$rb_minus($writer[\"length\"], 1)];;\n    Opal.const_set($nesting[0], 'FONT_AWESOME_VERSION', \"4.7.0\");\n    Opal.const_set($nesting[0], 'HIGHLIGHT_JS_VERSION', \"9.18.3\");\n    Opal.const_set($nesting[0], 'MATHJAX_VERSION', \"2.7.9\");\n    Opal.const_set($nesting[0], 'DEFAULT_ATTRIBUTES', $hash2([\"appendix-caption\", \"appendix-refsig\", \"caution-caption\", \"chapter-refsig\", \"example-caption\", \"figure-caption\", \"important-caption\", \"last-update-label\", \"note-caption\", \"part-refsig\", \"prewrap\", \"sectids\", \"section-refsig\", \"table-caption\", \"tip-caption\", \"toc-placement\", \"toc-title\", \"untitled-label\", \"version-label\", \"warning-caption\"], {\"appendix-caption\": \"Appendix\", \"appendix-refsig\": \"Appendix\", \"caution-caption\": \"Caution\", \"chapter-refsig\": \"Chapter\", \"example-caption\": \"Example\", \"figure-caption\": \"Figure\", \"important-caption\": \"Important\", \"last-update-label\": \"Last updated\", \"note-caption\": \"Note\", \"part-refsig\": \"Part\", \"prewrap\": \"\", \"sectids\": \"\", \"section-refsig\": \"Section\", \"table-caption\": \"Table\", \"tip-caption\": \"Tip\", \"toc-placement\": \"auto\", \"toc-title\": \"Table of Contents\", \"untitled-label\": \"Untitled\", \"version-label\": \"Version\", \"warning-caption\": \"Warning\"}));\n    Opal.const_set($nesting[0], 'FLEXIBLE_ATTRIBUTES', [\"sectnums\"]);\n    Opal.const_set($nesting[0], 'INTRINSIC_ATTRIBUTES', $hash2([\"startsb\", \"endsb\", \"vbar\", \"caret\", \"asterisk\", \"tilde\", \"plus\", \"backslash\", \"backtick\", \"blank\", \"empty\", \"sp\", \"two-colons\", \"two-semicolons\", \"nbsp\", \"deg\", \"zwsp\", \"quot\", \"apos\", \"lsquo\", \"rsquo\", \"ldquo\", \"rdquo\", \"wj\", \"brvbar\", \"pp\", \"cpp\", \"amp\", \"lt\", \"gt\"], {\"startsb\": \"[\", \"endsb\": \"]\", \"vbar\": \"|\", \"caret\": \"^\", \"asterisk\": \"*\", \"tilde\": \"~\", \"plus\": \"&#43;\", \"backslash\": \"\\\\\", \"backtick\": \"`\", \"blank\": \"\", \"empty\": \"\", \"sp\": \" \", \"two-colons\": \"::\", \"two-semicolons\": \";;\", \"nbsp\": \"&#160;\", \"deg\": \"&#176;\", \"zwsp\": \"&#8203;\", \"quot\": \"&#34;\", \"apos\": \"&#39;\", \"lsquo\": \"&#8216;\", \"rsquo\": \"&#8217;\", \"ldquo\": \"&#8220;\", \"rdquo\": \"&#8221;\", \"wj\": \"&#8288;\", \"brvbar\": \"&#166;\", \"pp\": \"&#43;&#43;\", \"cpp\": \"C&#43;&#43;\", \"amp\": \"&\", \"lt\": \"<\", \"gt\": \">\"}));\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    } else {\n      nil\n    };\n    Opal.const_set($nesting[0], 'QUOTE_SUBS', $send($hash2([], {}), 'tap', [], ($Asciidoctor$13 = function(accum){var self = $Asciidoctor$13.$$s || this, normal = nil, compat = nil;\n\n    \n      \n      if (accum == null) {\n        accum = nil;\n      };\n      \n      $writer = [false, (normal = [[\"strong\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?\\\\*\\\\*(\" + ($$($nesting, 'CC_ALL')) + \"+?)\\\\*\\\\*\", 'm')], [\"strong\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?\\\\*(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\*(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"double\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?\\\"`(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)`\\\"(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"single\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:`}])(?:\\\\[([^\\\\]]+)\\\\])?'`(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)`'(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"monospaced\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?``(\" + ($$($nesting, 'CC_ALL')) + \"+?)``\", 'm')], [\"monospaced\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:\\\"'`}])(?:\\\\[([^\\\\]]+)\\\\])?`(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)`(?![\" + ($$($nesting, 'CC_WORD')) + \"\\\"'`])\", 'm')], [\"emphasis\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?__(\" + ($$($nesting, 'CC_ALL')) + \"+?)__\", 'm')], [\"emphasis\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?_(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)_(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"mark\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?##(\" + ($$($nesting, 'CC_ALL')) + \"+?)##\", 'm')], [\"mark\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \"&;:}])(?:\\\\[([^\\\\]]+)\\\\])?#(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)#(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')], [\"superscript\", \"unconstrained\", /\\\\?(?:\\[([^\\]]+)\\])?\\^(\\S+?)\\^/], [\"subscript\", \"unconstrained\", /\\\\?(?:\\[([^\\]]+)\\])?~(\\S+?)~/]])];\n      $send(accum, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [true, (compat = normal.$drop(0))];\n      $send(accum, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [2, [\"double\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?``(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)''(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')]];\n      $send(compat, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [3, [\"single\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?`(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)'(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')]];\n      $send(compat, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [4, [\"monospaced\", \"unconstrained\", new RegExp(\"\" + \"\\\\\\\\?(?:\\\\[([^\\\\]]+)\\\\])?\\\\+\\\\+(\" + ($$($nesting, 'CC_ALL')) + \"+?)\\\\+\\\\+\", 'm')]];\n      $send(compat, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      \n      $writer = [5, [\"monospaced\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?\\\\+(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)\\\\+(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')]];\n      $send(compat, '[]=', Opal.to_a($writer));\n      $writer[$rb_minus($writer[\"length\"], 1)];;\n      return compat.$insert(3, [\"emphasis\", \"constrained\", new RegExp(\"\" + \"(^|[^\" + ($$($nesting, 'CC_WORD')) + \";:}])(?:\\\\[([^\\\\]]+)\\\\])?'(\\\\S|\\\\S\" + ($$($nesting, 'CC_ALL')) + \"*?\\\\S)'(?!\" + ($$($nesting, 'CG_WORD')) + \")\", 'm')]);}, $Asciidoctor$13.$$s = self, $Asciidoctor$13.$$arity = 1, $Asciidoctor$13)));\n    Opal.const_set($nesting[0], 'REPLACEMENTS', [[/\\\\?\\(C\\)/, \"&#169;\", \"none\"], [/\\\\?\\(R\\)/, \"&#174;\", \"none\"], [/\\\\?\\(TM\\)/, \"&#8482;\", \"none\"], [/(?: |\\n|^|\\\\)--(?: |\\n|$)/, \"&#8201;&#8212;&#8201;\", \"none\"], [new RegExp(\"\" + \"(\" + ($$($nesting, 'CG_WORD')) + \")\\\\\\\\?--(?=\" + ($$($nesting, 'CG_WORD')) + \")\"), \"&#8212;&#8203;\", \"leading\"], [/\\\\?\\.\\.\\./, \"&#8230;&#8203;\", \"none\"], [/\\\\?`'/, \"&#8217;\", \"none\"], [new RegExp(\"\" + \"(\" + ($$($nesting, 'CG_ALNUM')) + \")\\\\\\\\?'(?=\" + ($$($nesting, 'CG_ALPHA')) + \")\"), \"&#8217;\", \"leading\"], [/\\\\?-&gt;/, \"&#8594;\", \"none\"], [/\\\\?=&gt;/, \"&#8658;\", \"none\"], [/\\\\?&lt;-/, \"&#8592;\", \"none\"], [/\\\\?&lt;=/, \"&#8656;\", \"none\"], [/\\\\?(&)amp;((?:[a-zA-Z][a-zA-Z]+\\d{0,2}|#\\d\\d\\d{0,4}|#x[\\da-fA-F][\\da-fA-F][\\da-fA-F]{0,3});)/, \"\", \"bounding\"]]);\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    } else {\n      nil\n    };\n    if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    } else {\n      nil\n    };\n  })($nesting[0], $nesting);\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/core_ext\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/helpers\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/logging\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/rx\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/substitutors\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/version\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/abstract_node\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/abstract_block\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/attribute_list\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/block\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/callouts\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/converter\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/document\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/inline\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/list\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/parser\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/path_resolver\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/reader\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/section\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/stylesheets\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/table\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/writer\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/load\");\n  self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/convert\");\n  if ($$($nesting, 'RUBY_ENGINE')['$=='](\"opal\")) {\n    \n    self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/syntax_highlighter\");\n    self.$require(\"asciidoctor.rb\"+ '/../' + \"asciidoctor/timings\");\n    return self.$require(\"asciidoctor/js/postscript\");\n  } else {\n    return nil\n  };\n})(Opal);\n\n\n/* global Opal */\n\n/**\n * Convert a JSON to an (Opal) Hash.\n * @private\n */\nvar toHash = function (object) {\n  return object && !object.$$is_hash ? Opal.hash2(Object.keys(object), object) : object\n}\n\n/**\n * Convert an (Opal) Hash to JSON.\n * @private\n */\nvar fromHash = function (hash) {\n  var object = {}\n  if (hash) {\n    var stringMap = hash.$$smap\n    for (var stringMapKey in stringMap) {\n      var stringMapValue = stringMap[stringMapKey]\n      object[stringMapKey] = stringMapValue === Opal.nil ? undefined : stringMapValue\n    }\n    var numericMap = hash.$$map\n    if (numericMap) {\n      var positional = []\n      for (var numericMapKey in numericMap) {\n        var entry = numericMap[numericMapKey]\n        var numericMapValue = entry.value\n        var index = entry.key - 1\n        positional[index] = numericMapValue === Opal.nil ? undefined : numericMapValue\n      }\n      if (positional.length > 0) {\n        object.$positional = positional\n      }\n    }\n  }\n  return object\n}\n\nvar fromHashKeys = function (hash) {\n  var object = {}\n  if (hash) {\n    var data = hash.$$keys\n    for (var key in data) {\n      var value = data[key].value\n      object[key.toString()] = value === Opal.nil ? undefined : value\n    }\n  }\n  return object\n}\n\n/**\n * @private\n */\nvar prepareOptions = function (options) {\n  options = toHash(options)\n  if (options) {\n    var attrs = options['$[]']('attributes')\n    if (attrs && typeof attrs === 'object' && attrs.constructor.name === 'Object') {\n      options = options.$dup()\n      options['$[]=']('attributes', toHash(attrs))\n    }\n  }\n  return options\n}\n\nfunction initializeClass (superClass, className, functions, defaultFunctions, argProxyFunctions) {\n  var scope = Opal.klass(Opal.Object, superClass, className, function () { })\n  var postConstructFunction\n  var initializeFunction\n  var constructorFunction\n  var defaultFunctionsOverridden = {}\n  for (var functionName in functions) {\n    if (Object.prototype.hasOwnProperty.call(functions, functionName)) {\n      (function (functionName) {\n        var userFunction = functions[functionName]\n        if (functionName === 'postConstruct') {\n          postConstructFunction = userFunction\n        } else if (functionName === 'initialize') {\n          initializeFunction = userFunction\n        } else if (functionName === 'constructor') {\n          constructorFunction = userFunction\n        } else {\n          if (defaultFunctions && Object.prototype.hasOwnProperty.call(defaultFunctions, functionName)) {\n            defaultFunctionsOverridden[functionName] = true\n          }\n          Opal.def(scope, '$' + functionName, function () {\n            var args\n            if (argProxyFunctions && Object.prototype.hasOwnProperty.call(argProxyFunctions, functionName)) {\n              args = argProxyFunctions[functionName](arguments)\n            } else {\n              args = arguments\n            }\n            return userFunction.apply(this, args)\n          })\n        }\n      }(functionName))\n    }\n  }\n  var initialize\n  if (typeof constructorFunction === 'function') {\n    initialize = function () {\n      var args = Array.from(arguments)\n      for (var i = 0; i < args.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof args[i] === 'object' && '$$smap' in args[i]) {\n          args[i] = fromHash(args[i])\n        }\n      }\n      args.unshift(null)\n      var result = new (Function.prototype.bind.apply(constructorFunction, args)) // eslint-disable-line\n      Object.assign(this, result)\n      if (typeof postConstructFunction === 'function') {\n        postConstructFunction.bind(this)()\n      }\n    }\n  } else if (typeof initializeFunction === 'function') {\n    initialize = function () {\n      var args = Array.from(arguments)\n      for (var i = 0; i < args.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof args[i] === 'object' && '$$smap' in args[i]) {\n          args[i] = fromHash(args[i])\n        }\n      }\n      initializeFunction.apply(this, args)\n      if (typeof postConstructFunction === 'function') {\n        postConstructFunction.bind(this)()\n      }\n    }\n  } else {\n    initialize = function () {\n      Opal.send(this, Opal.find_super_dispatcher(this, 'initialize', initialize))\n      if (typeof postConstructFunction === 'function') {\n        postConstructFunction.bind(this)()\n      }\n    }\n  }\n  Opal.def(scope, '$initialize', initialize)\n  Opal.def(scope, 'super', function (func) {\n    if (typeof func === 'function') {\n      Opal.send(this, Opal.find_super_dispatcher(this, func.name, func))\n    } else {\n      // Bind the initialize function to super();\n      var argumentsList = Array.from(arguments)\n      for (var i = 0; i < argumentsList.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof argumentsList[i] === 'object') {\n          argumentsList[i] = toHash(argumentsList[i])\n        }\n      }\n      Opal.send(this, Opal.find_super_dispatcher(this, 'initialize', initialize), argumentsList)\n    }\n  })\n  if (defaultFunctions) {\n    for (var defaultFunctionName in defaultFunctions) {\n      if (Object.prototype.hasOwnProperty.call(defaultFunctions, defaultFunctionName) && !Object.prototype.hasOwnProperty.call(defaultFunctionsOverridden, defaultFunctionName)) {\n        (function (defaultFunctionName) {\n          var defaultFunction = defaultFunctions[defaultFunctionName]\n          Opal.def(scope, '$' + defaultFunctionName, function () {\n            return defaultFunction.apply(this, arguments)\n          })\n        }(defaultFunctionName))\n      }\n    }\n  }\n  return scope\n}\n\n// Asciidoctor API\n\n/**\n * @namespace\n * @description\n * The main application interface (API) for Asciidoctor.\n * This API provides methods to parse AsciiDoc content and convert it to various output formats using built-in or third-party converters.\n *\n * An AsciiDoc document can be as simple as a single line of content,\n * though it more commonly starts with a document header that declares the document title and document attribute definitions.\n * The document header is then followed by zero or more section titles, optionally nested, to organize the paragraphs, blocks, lists, etc. of the document.\n *\n * By default, the processor converts the AsciiDoc document to HTML 5 using a built-in converter.\n * However, this behavior can be changed by specifying a different backend (e.g., +docbook+).\n * A backend is a keyword for an output format (e.g., DocBook).\n * That keyword, in turn, is used to select a converter, which carries out the request to convert the document to that format.\n *\n * @example\n * asciidoctor.convertFile('document.adoc', { 'safe': 'safe' }) // Convert an AsciiDoc file\n *\n * asciidoctor.convert(\"I'm using *Asciidoctor* version {asciidoctor-version}.\", { 'safe': 'safe' }) // Convert an AsciiDoc string\n *\n * const doc = asciidoctor.loadFile('document.adoc', { 'safe': 'safe' }) // Parse an AsciiDoc file into a document object\n *\n * const doc = asciidoctor.load(\"= Document Title\\n\\nfirst paragraph\\n\\nsecond paragraph\", { 'safe': 'safe' }) // Parse an AsciiDoc string into a document object\n */\nvar Asciidoctor = Opal.Asciidoctor.$$class\n\n/**\n * Get Asciidoctor core version number.\n *\n * @returns {string} - the version number of Asciidoctor core.\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.getCoreVersion = function () {\n  return this.$$const.VERSION\n}\n\n/**\n * Get Asciidoctor.js runtime environment information.\n *\n * @returns {Object} - the runtime environment including the ioModule, the platform, the engine and the framework.\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.getRuntime = function () {\n  return {\n    ioModule: Opal.const_get_qualified('::', 'JAVASCRIPT_IO_MODULE'),\n    platform: Opal.const_get_qualified('::', 'JAVASCRIPT_PLATFORM'),\n    engine: Opal.const_get_qualified('::', 'JAVASCRIPT_ENGINE'),\n    framework: Opal.const_get_qualified('::', 'JAVASCRIPT_FRAMEWORK')\n  }\n}\n\n/**\n * Parse the AsciiDoc source input into an {@link Document} and convert it to the specified backend format.\n *\n * Accepts input as a Buffer or String.\n *\n * @param {string|Buffer} input - AsciiDoc input as String or Buffer\n * @param {Object} options - a JSON of options to control processing (default: {})\n * @returns {string|Document} - the {@link Document} object if the converted String is written to a file,\n * otherwise the converted String\n * @example\n * var input = '= Hello, AsciiDoc!\\n' +\n *   'Guillaume Grossetie <ggrossetie@example.com>\\n\\n' +\n *   'An introduction to http://asciidoc.org[AsciiDoc].\\n\\n' +\n *   '== First Section\\n\\n' +\n *   '* item 1\\n' +\n *   '* item 2\\n';\n *\n * var html = asciidoctor.convert(input);\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.convert = function (input, options) {\n  if (typeof input === 'object' && input.constructor.name === 'Buffer') {\n    input = input.toString('utf8')\n  }\n  var result = this.$convert(input, prepareOptions(options))\n  return result === Opal.nil ? '' : result\n}\n\n/**\n * Parse the AsciiDoc source input into an {@link Document} and convert it to the specified backend format.\n *\n * @param {string} filename - source filename\n * @param {Object} options - a JSON of options to control processing (default: {})\n * @returns {string|Document} - the {@link Document} object if the converted String is written to a file,\n * otherwise the converted String\n * @example\n * var html = asciidoctor.convertFile('./document.adoc');\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.convertFile = function (filename, options) {\n  return this.$convert_file(filename, prepareOptions(options))\n}\n\n/**\n * Parse the AsciiDoc source input into an {@link Document}\n *\n * Accepts input as a Buffer or String.\n *\n * @param {string|Buffer} input - AsciiDoc input as String or Buffer\n * @param {Object} options - a JSON of options to control processing (default: {})\n * @returns {Document} - the {@link Document} object\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.load = function (input, options) {\n  if (typeof input === 'object' && input.constructor.name === 'Buffer') {\n    input = input.toString('utf8')\n  }\n  return this.$load(input, prepareOptions(options))\n}\n\n/**\n * Parse the contents of the AsciiDoc source file into an {@link Document}\n *\n * @param {string} filename - source filename\n * @param {Object} options - a JSON of options to control processing (default: {})\n * @returns {Document} - the {@link Document} object\n * @memberof Asciidoctor\n */\nAsciidoctor.prototype.loadFile = function (filename, options) {\n  return this.$load_file(filename, prepareOptions(options))\n}\n\n// AbstractBlock API\n\n/**\n * @namespace\n * @extends AbstractNode\n */\nvar AbstractBlock = Opal.Asciidoctor.AbstractBlock\n\n/**\n * Append a block to this block's list of child blocks.\n * @param {AbstractBlock} block - the block to append\n * @returns {AbstractBlock} - the parent block to which this block was appended.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.append = function (block) {\n  this.$append(block)\n  return this\n}\n\n/**\n * Get the String title of this Block with title substitions applied\n *\n * The following substitutions are applied to block and section titles:\n *\n * <code>specialcharacters</code>, <code>quotes</code>, <code>replacements</code>, <code>macros</code>, <code>attributes</code> and <code>post_replacements</code>\n *\n * @returns {string} - the converted String title for this Block, or undefined if the title is not set.\n * @example\n * block.title // \"Foo 3^ # {two-colons} Bar(1)\"\n * block.getTitle(); // \"Foo 3^ # :: Bar(1)\"\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getTitle = function () {\n  var title = this.$title()\n  return title === Opal.nil ? undefined : title\n}\n\n/**\n * Set the String block title.\n *\n * @param {string} title - The block title\n * @returns {string} - the new String title assigned to this Block.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.setTitle = function (title) {\n  title = typeof title === 'undefined' ? Opal.nil : title\n  return this['$title='](title)\n}\n\n/**\n * Generate and assign caption to block if not already assigned.\n *\n * If the block has a title and a caption prefix is available for this block,\n * then build a caption from this information, assign it a number and store it\n * to the caption attribute on the block.\n *\n * If a caption has already been assigned to this block, do nothing.\n *\n * The parts of a complete caption are: <prefix> <number>. <title>\n * This partial caption represents the part the precedes the title.\n *\n * @param {string} value - the String caption to assign to this block or nil to use document attribute.\n * @param {string} captionContext - the String context to use when resolving caption-related attributes.\n * If not provided, the name of the context for this block is used. Only certain contexts allow the caption to be looked up.\n *\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.assignCaption = function (value, captionContext) {\n  value = typeof value === 'undefined' ? Opal.nil : value\n  captionContext = typeof captionContext === 'undefined' ? null : captionContext\n  this.$assign_caption(value, captionContext)\n}\n\n/**\n * Convenience method that returns the interpreted title of the Block\n * with the caption prepended.\n * Concatenates the value of this Block's caption instance variable and the\n * return value of this Block's title method. No space is added between the\n * two values. If the Block does not have a caption, the interpreted title is\n * returned.\n *\n * @returns {string} - the converted String title prefixed with the caption, or just the converted String title if no caption is set\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getCaptionedTitle = function () {\n  return this.$captioned_title()\n}\n\n/**\n * Get the style (block type qualifier) for this block.\n *\n * @returns {string} - the style for this block\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getStyle = function () {\n  var style = this.style\n  return style === Opal.nil ? undefined : style\n}\n\n/**\n * Set the style for this block.\n *\n * @param {string} style - Style\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.setStyle = function (style) {\n  this.style = style\n}\n\n/**\n * Get the location in the AsciiDoc source where this block begins.\n *\n * @returns {string} - the style for this block\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getSourceLocation = function () {\n  var sourceLocation = this.source_location\n  if (sourceLocation === Opal.nil) {\n    return undefined\n  }\n  sourceLocation.getFile = function () {\n    var file = this.file\n    return file === Opal.nil ? undefined : file\n  }\n  sourceLocation.getDirectory = function () {\n    var dir = this.dir\n    return dir === Opal.nil ? undefined : dir\n  }\n  sourceLocation.getPath = function () {\n    var path = this.path\n    return path === Opal.nil ? undefined : path\n  }\n  sourceLocation.getLineNumber = function () {\n    var lineno = this.lineno\n    return lineno === Opal.nil ? undefined : lineno\n  }\n  return sourceLocation\n}\n\n/**\n * Get the caption for this block.\n *\n * @returns {string} - the caption for this block\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getCaption = function () {\n  var caption = this.$caption()\n  return caption === Opal.nil ? undefined : caption\n}\n\n/**\n * Set the caption for this block.\n *\n * @param {string} caption - Caption\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.setCaption = function (caption) {\n  this.caption = typeof caption === 'undefined' ? Opal.nil : caption\n}\n\n/**\n * Get the level of this section or the section level in which this block resides.\n *\n * @returns {number} - the level (Integer) of this section\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getLevel = function () {\n  var level = this.level\n  return level === Opal.nil ? undefined : level\n}\n\n/**\n * Get the substitution keywords to be applied to the contents of this block.\n *\n * @returns {Array<string>} - the list of {string} substitution keywords associated with this block.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getSubstitutions = function () {\n  return this.subs\n}\n\n/**\n * Check whether a given substitution keyword is present in the substitutions for this block.\n *\n * @returns {boolean} - whether the substitution is present on this block.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.hasSubstitution = function (substitution) {\n  return this['$sub?'](substitution)\n}\n\n/**\n * Remove the specified substitution keyword from the list of substitutions for this block.\n *\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.removeSubstitution = function (substitution) {\n  this.$remove_sub(substitution)\n}\n\n/**\n * Checks if the {@link AbstractBlock} contains any child blocks.\n *\n * @returns {boolean} - whether the {@link AbstractBlock} has child blocks.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.hasBlocks = function () {\n  return this.blocks.length > 0\n}\n\n/**\n * Get the list of {@link AbstractBlock} sub-blocks for this block.\n *\n * @returns {Array<AbstractBlock>} - a list of {@link AbstractBlock} sub-blocks\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getBlocks = function () {\n  return this.blocks\n}\n\n/**\n * Get the converted result of the child blocks by converting the children appropriate to content model that this block supports.\n *\n * @returns {string} - the converted result of the child blocks\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getContent = function () {\n  return this.$content()\n}\n\n/**\n * Get the converted content for this block.\n * If the block has child blocks, the content method should cause them to be converted\n * and returned as content that can be included in the parent block's template.\n *\n * @returns {string} - the converted String content for this block\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.convert = function () {\n  return this.$convert()\n}\n\n/**\n * Query for all descendant block-level nodes in the document tree\n * that match the specified selector (context, style, id, and/or role).\n * If a function block is given, it's used as an additional filter.\n * If no selector or function block is supplied, all block-level nodes in the tree are returned.\n * @param {Object} [selector]\n * @param {function} [block]\n * @example\n * doc.findBy({'context': 'section'});\n * // => { level: 0, title: \"Hello, AsciiDoc!\", blocks: 0 }\n * // => { level: 1, title: \"First Section\", blocks: 1 }\n *\n * doc.findBy({'context': 'section'}, function (section) { return section.getLevel() === 1; });\n * // => { level: 1, title: \"First Section\", blocks: 1 }\n *\n * doc.findBy({'context': 'listing', 'style': 'source'});\n * // => { context: :listing, content_model: :verbatim, style: \"source\", lines: 1 }\n *\n * @returns {Array<AbstractBlock>} - a list of block-level nodes that match the filter or an empty list if no matches are found\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.findBy = function (selector, block) {\n  if (typeof block === 'undefined' && typeof selector === 'function') {\n    return Opal.send(this, 'find_by', null, selector)\n  } else if (typeof block === 'function') {\n    return Opal.send(this, 'find_by', [toHash(selector)], block)\n  } else {\n    return this.$find_by(toHash(selector))\n  }\n}\n\n/**\n * Get the source line number where this block started.\n * @returns {number} - the source line number where this block started\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getLineNumber = function () {\n  var lineno = this.$lineno()\n  return lineno === Opal.nil ? undefined : lineno\n}\n\n/**\n * Check whether this block has any child Section objects.\n * Only applies to Document and Section instances.\n * @returns {boolean} - true if this block has child Section objects, otherwise false\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.hasSections = function () {\n  // REMIND: call directly the underlying method \"$sections?\"\n  // once https://github.com/asciidoctor/asciidoctor/pull/3591 is merged and a new version is released.\n  // return this['$sections?']()\n  return this.next_section_index !== Opal.nil && this.next_section_index > 0\n}\n\n/**\n * Get the Array of child Section objects.\n * Only applies to Document and Section instances.\n * @memberof AbstractBlock\n * @returns {Array<Section>} - an {Array} of {@link Section} objects\n */\nAbstractBlock.prototype.getSections = function () {\n  return this.$sections()\n}\n\n/**\n * Get the numeral of this block (if section, relative to parent, otherwise absolute).\n * Only assigned to section if automatic section numbering is enabled.\n * Only assigned to formal block (block with title) if corresponding caption attribute is present.\n * If the section is an appendix, the numeral is a letter (starting with A).\n * @returns {string} - the numeral\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getNumeral = function () {\n  return this.$numeral()\n}\n\n/**\n * Set the numeral of this block.\n * @param {string} value - The numeral value\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.setNumeral = function (value) {\n  this['$numeral='](value)\n}\n\n/**\n * A convenience method that checks whether the title of this block is defined.\n *\n * @returns {boolean} - a {boolean} indicating whether this block has a title.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.hasTitle = function () {\n  return this['$title?']()\n}\n\n/**\n * Returns the converted alt text for this block image.\n * @returns {string} - the {string} value of the alt attribute with XML special character and replacement substitutions applied.\n * @memberof AbstractBlock\n */\nAbstractBlock.prototype.getAlt = function () {\n  return this.$alt()\n}\n\n// Section API\n\n/**\n * @description\n * Methods for managing sections of AsciiDoc content in a document.\n *\n * @example\n * <pre>\n *   section = asciidoctor.Section.create()\n *   section.setTitle('Section 1')\n *   section.setId('sect1')\n *   section.getBlocks().length // 0\n *   section.getId() // \"sect1\"\n *   section.append(newBlock)\n *   section.getBlocks().length // 1\n * </pre>\n * @namespace\n * @extends AbstractBlock\n */\nvar Section = Opal.Asciidoctor.Section\n\n/**\n * Create a {Section} object.\n * @param {AbstractBlock} [parent] - The parent AbstractBlock. If set, must be a Document or Section object (default: undefined)\n * @param {number} [level] - The Integer level of this section (default: 1 more than parent level or 1 if parent not defined)\n * @param {boolean} [numbered] - A Boolean indicating whether numbering is enabled for this Section (default: false)\n * @param {Object} [opts] - An optional JSON of options (default: {})\n * @returns {Section} - a new {Section} object\n * @memberof Section\n */\nSection.create = function (parent, level, numbered, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$new(parent, level, numbered, toHash(opts))\n}\n\n/**\n * Set the level of this section or the section level in which this block resides.\n * @param {number} level - Level (Integer)\n * @memberof AbstractBlock\n */\nSection.prototype.setLevel = function (level) {\n  this.level = level\n}\n\n/**\n * Get the 0-based index order of this section within the parent block.\n * @returns {number}\n * @memberof Section\n */\nSection.prototype.getIndex = function () {\n  return this.index\n}\n\n/**\n * Set the 0-based index order of this section within the parent block.\n * @param {string} index - The index order of this section\n * @memberof Section\n */\nSection.prototype.setIndex = function (index) {\n  this.index = index\n}\n\n/**\n * Get the section name of this section.\n * @returns {string|undefined}\n * @memberof Section\n */\nSection.prototype.getSectionName = function () {\n  var sectname = this.sectname\n  return sectname === Opal.nil ? undefined : sectname\n}\n\n/**\n * Set the section name of this section.\n * @param {string} value - The section name\n * @memberof Section\n */\nSection.prototype.setSectionName = function (value) {\n  this.sectname = value\n}\n\n/**\n * Get the flag to indicate whether this is a special section or a child of one.\n * @returns {boolean}\n * @memberof Section\n */\nSection.prototype.isSpecial = function () {\n  return this.special\n}\n\n/**\n * Set the flag to indicate whether this is a special section or a child of one.\n * @param {boolean} value - A flag to indicated if this is a special section\n * @memberof Section\n */\nSection.prototype.setSpecial = function (value) {\n  this.special = value\n}\n\n/**\n * Get the state of the numbered attribute at this section (need to preserve for creating TOC).\n * @returns {boolean}\n * @memberof Section\n */\nSection.prototype.isNumbered = function () {\n  return this.numbered\n}\n\n/**\n * Get the caption for this section (only relevant for appendices).\n * @returns {string}\n * @memberof Section\n */\nSection.prototype.getCaption = function () {\n  var value = this.caption\n  return value === Opal.nil ? undefined : value\n}\n\n/**\n * Get the name of the Section (title)\n * @returns {string}\n * @see {@link AbstractBlock#getTitle}\n * @memberof Section\n */\nSection.prototype.getName = function () {\n  return this.getTitle()\n}\n\n/**\n * @description\n * Methods for managing AsciiDoc content blocks.\n *\n * @example\n * block = asciidoctor.Block.create(parent, 'paragraph', {source: '_This_ is a <test>'})\n * block.getContent()\n * // \"<em>This</em> is a &lt;test&gt;\"\n *\n * @namespace\n * @extends AbstractBlock\n */\nvar Block = Opal.Asciidoctor.Block\n\n/**\n * Create a {Block} object.\n * @param {AbstractBlock} parent - The parent {AbstractBlock} with a compound content model to which this {Block} will be appended.\n * @param {string} context - The context name for the type of content (e.g., \"paragraph\").\n * @param {Object} [opts] - a JSON of options to customize block initialization: (default: {})\n * @param {string} opts.content_model - indicates whether blocks can be nested in this {Block} (\"compound\"),\n * otherwise how the lines should be processed (\"simple\", \"verbatim\", \"raw\", \"empty\"). (default: \"simple\")\n * @param {Object} opts.attributes - a JSON of attributes (key/value pairs) to assign to this {Block}. (default: {})\n * @param {string|Array<string>} opts.source - a String or {Array} of raw source for this {Block}. (default: undefined)\n *\n * IMPORTANT: If you don't specify the `subs` option, you must explicitly call the `commit_subs` method to resolve and assign the substitutions\n * to this block (which are resolved from the `subs` attribute, if specified, or the default substitutions based on this block's context).\n * If you want to use the default subs for a block, pass the option `subs: \"default\"`.\n * You can override the default subs using the `default_subs` option.\n *\n * @returns {Block} - a new {Block} object\n * @memberof Block\n */\nBlock.create = function (parent, context, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$new(parent, context, toHash(opts))\n}\n\n/**\n * Get the source of this block.\n * @returns {string} - the String source of this block.\n * @memberof Block\n */\nBlock.prototype.getSource = function () {\n  return this.$source()\n}\n\n/**\n * Get the source lines of this block.\n * @returns {Array<string>} - the String {Array} of source lines for this block.\n * @memberof Block\n */\nBlock.prototype.getSourceLines = function () {\n  return this.lines\n}\n\n// AbstractNode API\n\n/**\n * @namespace\n * @description\n * An abstract base class that provides state and methods for managing a node of AsciiDoc content.\n * The state and methods on this class are common to all content segments in an AsciiDoc document.\n */\nvar AbstractNode = Opal.Asciidoctor.AbstractNode\n\n/**\n * Apply the specified substitutions to the text.\n * If no substitutions are specified, the following substitutions are applied:\n * <code>specialcharacters</code>, <code>quotes</code>, <code>attributes</code>, <code>replacements</code>, <code>macros</code>, and <code>post_replacements</code>.\n *\n * @param {string|Array<string>} text - The String or String Array of text to process; must not be undefined.\n * @param {Array<string>} [subs] - The substitutions to perform; must be an Array or undefined.\n * @returns {string|Array<string>} - a String or String Array to match the type of the text argument with substitutions applied.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.applySubstitutions = function (text, subs) {\n  return this.$apply_subs(text, subs)\n}\n\n/**\n * Resolve the list of comma-delimited subs against the possible options.\n *\n * @param {string} subs - The comma-delimited String of substitution names or aliases.\n * @param {string} [type] - A String representing the context for which the subs are being resolved (default: 'block').\n * @param {Array<string>} [defaults] - An Array of substitutions to start with when computing incremental substitutions (default: undefined).\n * @param {string} [subject] - The String to use in log messages to communicate the subject for which subs are being resolved (default: undefined)\n *\n * @returns {Array<string>} - An Array of Strings representing the substitution operation or nothing if no subs are found.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.resolveSubstitutions = function (subs, type, defaults, subject) {\n  if (typeof type === 'undefined') {\n    type = 'block'\n  }\n  if (typeof defaults === 'undefined') {\n    defaults = Opal.nil\n  }\n  if (typeof subject === 'undefined') {\n    subject = Opal.nil\n  }\n  const value = this.$resolve_subs(subs, type, defaults, subject)\n  return value === Opal.nil ? undefined : value\n}\n\n/**\n * Call {@link AbstractNode#resolveSubstitutions} for the 'block' type.\n *\n * @see {@link AbstractNode#resolveSubstitutions}\n */\nAbstractNode.prototype.resolveBlockSubstitutions = function (subs, defaults, subject) {\n  return this.resolveSubstitutions(subs, 'block', defaults, subject)\n}\n\n/**\n * Call {@link AbstractNode#resolveSubstitutions} for the 'inline' type with the subject set as passthrough macro.\n *\n * @see {@link AbstractNode#resolveSubstitutions}\n */\nAbstractNode.prototype.resolvePassSubstitutions = function (subs) {\n  return this.resolveSubstitutions(subs, 'inline', undefined, 'passthrough macro')\n}\n\n/**\n * @returns {string} - the String name of this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getNodeName = function () {\n  return this.node_name\n}\n\n/**\n * @returns {Object} - the JSON of attributes for this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getAttributes = function () {\n  return fromHash(this.attributes)\n}\n\n/**\n * Get the value of the specified attribute.\n * If the attribute is not found on this node, fallback_name is set, and this node is not the Document node, get the value of the specified attribute from the Document node.\n *\n * Look for the specified attribute in the attributes on this node and return the value of the attribute, if found.\n * Otherwise, if fallback_name is set (default: same as name) and this node is not the Document node, look for that attribute on the Document node and return its value, if found.\n * Otherwise, return the default value (default: undefined).\n *\n * @param {string} name - The String of the attribute to resolve.\n * @param {*} [defaultValue] - The {Object} value to return if the attribute is not found (default: undefined).\n * @param {string} [fallbackName] - The String of the attribute to resolve on the Document if the attribute is not found on this node (default: same as name).\n *\n * @returns {*} - the {Object} value (typically a String) of the attribute or defaultValue if the attribute is not found.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getAttribute = function (name, defaultValue, fallbackName) {\n  var value = this.$attr(name, defaultValue, fallbackName)\n  return value === Opal.nil ? undefined : value\n}\n\n/**\n * Check whether the specified attribute is present on this node.\n *\n * @param {string} name - The String of the attribute to resolve.\n * @returns {boolean} - true if the attribute is present, otherwise false\n * @memberof AbstractNode\n */\nAbstractNode.prototype.hasAttribute = function (name) {\n  return name in this.attributes.$$smap\n}\n\n/**\n * Check if the specified attribute is defined using the same logic as {AbstractNode#getAttribute}, optionally performing acomparison with the expected value if specified.\n *\n * Look for the specified attribute in the attributes on this node.\n * If not found, fallback_name is specified (default: same as name), and this node is not the Document node, look for that attribute on the Document node.\n * In either case, if the attribute is found, and the comparison value is truthy, return whether the two values match.\n * Otherwise, return whether the attribute was found.\n *\n * @param {string} name - The String name of the attribute to resolve.\n * @param {*} [expectedValue] - The expected Object value of the attribute (default: undefined).\n * @param {string} fallbackName - The String of the attribute to resolve on the Document if the attribute is not found on this node (default: same as name).\n *\n * @returns {boolean} - a Boolean indicating whether the attribute exists and, if a truthy comparison value is specified, whether the value of the attribute matches the comparison value.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isAttribute = function (name, expectedValue, fallbackName) {\n  var result = this['$attr?'](name, expectedValue, fallbackName)\n  return result === Opal.nil ? false : result\n}\n\n/**\n * Assign the value to the attribute name for the current node.\n *\n * @param {string} name - The String attribute name to assign\n * @param {*} value - The Object value to assign to the attribute (default: '')\n * @param {boolean} overwrite - A Boolean indicating whether to assign the attribute if currently present in the attributes JSON (default: true)\n *\n * @returns {boolean} - a Boolean indicating whether the assignment was performed\n * @memberof AbstractNode\n */\nAbstractNode.prototype.setAttribute = function (name, value, overwrite) {\n  if (typeof overwrite === 'undefined') overwrite = true\n  return this.$set_attr(name, value, overwrite)\n}\n\n/**\n * Remove the attribute from the current node.\n * @param {string} name - The String attribute name to remove\n * @returns {string} - the previous {string} value, or undefined if the attribute was not present.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.removeAttribute = function (name) {\n  var value = this.$remove_attr(name)\n  return value === Opal.nil ? undefined : value\n}\n\n/**\n * Get the {@link Document} to which this node belongs.\n *\n * @returns {Document} - the {@link Document} object to which this node belongs.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getDocument = function () {\n  return this.document\n}\n\n/**\n * Get the {@link AbstractNode} to which this node is attached.\n *\n * @memberof AbstractNode\n * @returns {AbstractNode} - the {@link AbstractNode} object to which this node is attached,\n * or undefined if this node has no parent.\n */\nAbstractNode.prototype.getParent = function () {\n  var parent = this.parent\n  return parent === Opal.nil ? undefined : parent\n}\n\n/**\n * @returns {boolean} - true if this {AbstractNode} is an instance of {Inline}\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isInline = function () {\n  return this['$inline?']()\n}\n\n/**\n * @returns {boolean} - true if this {AbstractNode} is an instance of {Block}\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isBlock = function () {\n  return this['$block?']()\n}\n\n/**\n * Checks if the role attribute is set on this node and, if an expected value is given, whether the space-separated role matches that value.\n *\n * @param {string} expectedValue - The expected String value of the role (optional, default: undefined)\n *\n * @returns {boolean} - a Boolean indicating whether the role attribute is set on this node and, if an expected value is given, whether the space-separated role matches that value.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isRole = function (expectedValue) {\n  return this['$role?'](expectedValue)\n}\n\n/**\n * Retrieves the space-separated String role for this node.\n *\n * @returns {string} - the role as a space-separated String.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getRole = function () {\n  return this.$role()\n}\n\n/**\n * Checks if the specified role is present in the list of roles for this node.\n *\n * @param {string} name - The String name of the role to find.\n *\n * @returns {boolean} - a Boolean indicating whether this node has the specified role.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.hasRole = function (name) {\n  return this['$has_role?'](name)\n}\n\n/**\n * Retrieves the String role names for this node as an Array.\n *\n * @returns {Array<string>} - the role names as a String {Array}, which is empty if the role attribute is absent on this node.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getRoles = function () {\n  return this.$roles()\n}\n\n/**\n * Adds the given role directly to this node.\n *\n * @param {string} name - The name of the role to add\n *\n * @returns {boolean} - a Boolean indicating whether the role was added.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.addRole = function (name) {\n  return this.$add_role(name)\n}\n\n/**\n * Public: Removes the given role directly from this node.\n *\n * @param {string} name - The name of the role to remove\n *\n * @returns {boolean} - a Boolean indicating whether the role was removed.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.removeRole = function (name) {\n  return this.$remove_role(name)\n}\n\n/**\n * A convenience method that checks if the reftext attribute is defined.\n * @returns {boolean} - A Boolean indicating whether the reftext attribute is defined\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isReftext = function () {\n  return this['$reftext?']()\n}\n\n/**\n * A convenience method that returns the value of the reftext attribute with substitutions applied.\n * @returns {string|undefined} - the value of the reftext attribute with substitutions applied.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getReftext = function () {\n  var reftext = this.$reftext()\n  return reftext === Opal.nil ? undefined : reftext\n}\n\n/**\n * @returns {string} - Get the context name for this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getContext = function () {\n  var context = this.context\n  // Automatically convert Opal pseudo-symbol to String\n  return typeof context === 'string' ? context : context.toString()\n}\n\n/**\n * @returns {string} - the String id of this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getId = function () {\n  var id = this.id\n  return id === Opal.nil ? undefined : id\n}\n\n/**\n * @param {string} id - the String id of this node\n * @memberof AbstractNode\n */\nAbstractNode.prototype.setId = function (id) {\n  this.id = id\n}\n\n/**\n * A convenience method to check if the specified option attribute is enabled on the current node.\n * Check if the option is enabled. This method simply checks to see if the <name>-option attribute is defined on the current node.\n *\n * @param {string} name - the String name of the option\n *\n * @return {boolean} - a Boolean indicating whether the option has been specified\n * @memberof AbstractNode\n */\nAbstractNode.prototype.isOption = function (name) {\n  return this['$option?'](name)\n}\n\n/**\n * Set the specified option on this node.\n * This method sets the specified option on this node by setting the <name>-option attribute.\n *\n * @param {string} name - the String name of the option\n *\n * @memberof AbstractNode\n */\nAbstractNode.prototype.setOption = function (name) {\n  return this.$set_option(name)\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getIconUri = function (name) {\n  return this.$icon_uri(name)\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getMediaUri = function (target, assetDirKey) {\n  return this.$media_uri(target, assetDirKey)\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getImageUri = function (targetImage, assetDirKey) {\n  return this.$image_uri(targetImage, assetDirKey)\n}\n\n/**\n * Get the {Converter} instance being used to convert the current {Document}.\n * @returns {Object}\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getConverter = function () {\n  return this.$converter()\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.readContents = function (target, options) {\n  return this.$read_contents(target, toHash(options))\n}\n\n/**\n * Read the contents of the file at the specified path.\n * This method assumes that the path is safe to read.\n * It checks that the file is readable before attempting to read it.\n *\n * @param path - the {string} path from which to read the contents\n * @param {Object} options - a JSON {Object} of options to control processing (default: {})\n * @param {boolean} options.warn_on_failure - a {boolean} that controls whether a warning is issued if the file cannot be read (default: false)\n * @param {boolean} options.normalize - a {boolean} that controls whether the lines are normalized and coerced to UTF-8 (default: false)\n *\n * @returns {string} - the String content of the file at the specified path, or undefined if the file does not exist.\n * @memberof AbstractNode\n */\nAbstractNode.prototype.readAsset = function (path, options) {\n  var result = this.$read_asset(path, toHash(options))\n  return result === Opal.nil ? undefined : result\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.normalizeWebPath = function (target, start, preserveTargetUri) {\n  return this.$normalize_web_path(target, start, preserveTargetUri)\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.normalizeSystemPath = function (target, start, jail, options) {\n  return this.$normalize_system_path(target, start, jail, toHash(options))\n}\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.normalizeAssetPath = function (assetRef, assetName, autoCorrect) {\n  return this.$normalize_asset_path(assetRef, assetName, autoCorrect)\n}\n\n// Document API\n\n/**\n * The {@link Document} class represents a parsed AsciiDoc document.\n *\n * Document is the root node of a parsed AsciiDoc document.<br/>\n * It provides an abstract syntax tree (AST) that represents the structure of the AsciiDoc document\n * from which the Document object was parsed.\n *\n * Although the constructor can be used to create an empty document object,\n * more commonly, you'll load the document object from AsciiDoc source\n * using the primary API methods on {@link Asciidoctor}.\n * When using one of these APIs, you almost always want to set the safe mode to 'safe' (or 'unsafe')\n * to enable all of Asciidoctor's features.\n *\n * <pre>\n *   var doc = Asciidoctor.load('= Hello, AsciiDoc!', { 'safe': 'safe' })\n *   // => Asciidoctor::Document { doctype: \"article\", doctitle: \"Hello, AsciiDoc!\", blocks: 0 }\n * </pre>\n *\n * Instances of this class can be used to extract information from the document or alter its structure.\n * As such, the Document object is most often used in extensions and by integrations.\n *\n * The most basic usage of the Document object is to retrieve the document's title.\n *\n * <pre>\n *  var source = '= Document Title'\n *  var doc = asciidoctor.load(source, { 'safe': 'safe' })\n *  console.log(doc.getTitle()) // 'Document Title'\n * </pre>\n *\n * You can also use the Document object to access document attributes defined in the header, such as the author and doctype.\n * @namespace\n * @extends AbstractBlock\n */\nvar Document = Opal.Asciidoctor.Document\n\n/**\n * Returns a JSON {Object} of references captured by the processor.\n *\n * @returns {Object} - a JSON {Object} of {AbstractNode} in the document.\n * @memberof Document\n */\nDocument.prototype.getRefs = function () {\n  return fromHash(this.catalog.$$smap.refs)\n}\n\n/**\n * Returns an {Array} of {Document/ImageReference} captured by the processor.\n *\n * @returns {Array<ImageReference>} - an {Array} of {Document/ImageReference} in the document.\n * Will return an empty array if the option \"catalog_assets: true\" was not defined on the processor.\n * @memberof Document\n */\nDocument.prototype.getImages = function () {\n  return this.catalog.$$smap.images\n}\n\n/**\n * Returns an {Array} of links captured by the processor.\n *\n * @returns {Array<string>} - an {Array} of links in the document.\n * Will return an empty array if:\n * - the function was called before the document was converted\n * - the option \"catalog_assets: true\" was not defined on the processor\n * @memberof Document\n */\nDocument.prototype.getLinks = function () {\n  return this.catalog.$$smap.links\n}\n\n/**\n * @returns {boolean} - true if the document has footnotes otherwise false\n * @memberof Document\n */\nDocument.prototype.hasFootnotes = function () {\n  return this['$footnotes?']()\n}\n\n/**\n * Returns an {Array} of {Document/Footnote} captured by the processor.\n *\n * @returns {Array<Footnote>} - an {Array} of {Document/Footnote} in the document.\n * Will return an empty array if the function was called before the document was converted.\n * @memberof Document\n */\nDocument.prototype.getFootnotes = function () {\n  return this.$footnotes()\n}\n\n/**\n * Returns the level-0 {Section} (i.e. the document title).\n * Only stores the title, not the header attributes.\n *\n * @returns {string} - the level-0 {Section}.\n * @memberof Document\n */\nDocument.prototype.getHeader = function () {\n  return this.header\n}\n\n/**\n * @memberof Document\n */\nDocument.prototype.setAttribute = function (name, value) {\n  return this.$set_attribute(name, value)\n}\n\n/**\n\n * @memberof Document\n */\nDocument.prototype.removeAttribute = function (name) {\n  this.attributes.$delete(name)\n  this.attribute_overrides.$delete(name)\n}\n\n/**\n * Convert the AsciiDoc document using the templates loaded by the Converter.\n * If a \"template_dir\" is not specified, or a template is missing, the converter will fall back to using the appropriate built-in template.\n *\n * @param {Object} [options] - a JSON of options to control processing (default: {})\n *\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.convert = function (options) {\n  var result = this.$convert(toHash(options))\n  return result === Opal.nil ? '' : result\n}\n\n/**\n * Write the output to the specified file.\n *\n * If the converter responds to \"write\", delegate the work of writing the file to that method.\n * Otherwise, write the output the specified file.\n *\n * @param {string} output\n * @param {string} target\n *\n * @memberof Document\n */\nDocument.prototype.write = function (output, target) {\n  return this.$write(output, target)\n}\n\n/**\n * @returns {string} - the full name of the author as a String\n * @memberof Document\n */\nDocument.prototype.getAuthor = function () {\n  return this.$author()\n}\n\n/**\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getSource = function () {\n  return this.$source()\n}\n\n/**\n * @returns {Array<string>}\n * @memberof Document\n */\nDocument.prototype.getSourceLines = function () {\n  return this.$source_lines()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.isNested = function () {\n  return this['$nested?']()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.isEmbedded = function () {\n  return this['$embedded?']()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.hasExtensions = function () {\n  return this['$extensions?']()\n}\n\n/**\n * Get the value of the doctype attribute for this document.\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getDoctype = function () {\n  return this.doctype\n}\n\n/**\n * Get the value of the backend attribute for this document.\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getBackend = function () {\n  return this.backend\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.isBasebackend = function (base) {\n  return this['$basebackend?'](base)\n}\n\n/**\n * Get the title explicitly defined in the document attributes.\n * @returns {string}\n * @see {@link AbstractNode#getAttributes}\n * @memberof Document\n */\nDocument.prototype.getTitle = function () {\n  var title = this.$title()\n  return title === Opal.nil ? undefined : title\n}\n\n/**\n * Set the title on the document header\n *\n * Set the title of the document header to the specified value.\n * If the header does not exist, it is first created.\n *\n * @param {string} title - the String title to assign as the title of the document header\n *\n * @returns {string} - the new String title assigned to the document header\n * @memberof Document\n */\nDocument.prototype.setTitle = function (title) {\n  return this['$title='](title)\n}\n\n/**\n * @returns {Document/Title} - a {@link Document/Title}\n * @memberof Document\n */\nDocument.prototype.getDocumentTitle = function (options) {\n  var doctitle = this.$doctitle(toHash(options))\n  return doctitle === Opal.nil ? undefined : doctitle\n}\n\n/**\n * @see {@link Document#getDocumentTitle}\n * @memberof Document\n */\nDocument.prototype.getDoctitle = Document.prototype.getDocumentTitle\n\n/**\n * Get the document catalog JSON object.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getCatalog = function () {\n  return fromHash(this.catalog)\n}\n\n/**\n *\n * @returns {Object}\n * @see Document#getCatalog\n * @memberof Document\n */\nDocument.prototype.getReferences = Document.prototype.getCatalog\n\n/**\n * Get the document revision date from document header (document attribute <code>revdate</code>).\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getRevisionDate = function () {\n  return this.getAttribute('revdate')\n}\n\n/**\n * @see Document#getRevisionDate\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getRevdate = function () {\n  return this.getRevisionDate()\n}\n\n/**\n * Get the document revision number from document header (document attribute <code>revnumber</code>).\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getRevisionNumber = function () {\n  return this.getAttribute('revnumber')\n}\n\n/**\n * Get the document revision remark from document header (document attribute <code>revremark</code>).\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getRevisionRemark = function () {\n  return this.getAttribute('revremark')\n}\n\n/**\n *  Assign a value to the specified attribute in the document header.\n *\n *  The assignment will be visible when the header attributes are restored,\n *  typically between processor phases (e.g., between parse and convert).\n *\n * @param {string} name - The {string} attribute name to assign\n * @param {Object} value - The {Object} value to assign to the attribute (default: '')\n * @param {boolean} overwrite - A {boolean} indicating whether to assign the attribute\n * if already present in the attributes Hash (default: true)\n *\n * @returns {boolean} - true if the assignment was performed otherwise false\n * @memberof Document\n */\nDocument.prototype.setHeaderAttribute = function (name, value, overwrite) {\n  if (typeof overwrite === 'undefined') overwrite = true\n  if (typeof value === 'undefined') value = ''\n  return this.$set_header_attribute(name, value, overwrite)\n}\n\n/**\n * Convenience method to retrieve the authors of this document as an {Array} of {Document/Author} objects.\n *\n * This method is backed by the author-related attributes on the document.\n *\n * @returns {Array<Author>} - an {Array} of {Document/Author} objects.\n * @memberof Document\n */\nDocument.prototype.getAuthors = function () {\n  return this.$authors()\n}\n\n// Document.Footnote API\n\n/**\n * @namespace\n * @module Document/Footnote\n */\nvar Footnote = Document.Footnote\n\n/**\n * @returns {number} - the footnote's index\n * @memberof Document/Footnote\n */\nFootnote.prototype.getIndex = function () {\n  var index = this.$$data.index\n  return index === Opal.nil ? undefined : index\n}\n\n/**\n * @returns {number} - the footnote's id\n * @memberof Document/Footnote\n */\nFootnote.prototype.getId = function () {\n  var id = this.$$data.id\n  return id === Opal.nil ? undefined : id\n}\n\n/**\n * @returns {string} - the footnote's text\n * @memberof Document/Footnote\n */\nFootnote.prototype.getText = function () {\n  var text = this.$$data.text\n  return text === Opal.nil ? undefined : text\n}\n\n// Document.ImageReference API\n\n/**\n * @class\n * @module Document/ImageReference\n */\nvar ImageReference = Document.ImageReference\n\n/**\n * @returns {string} - the image's target\n * @memberof Document/ImageReference\n */\nImageReference.prototype.getTarget = function () {\n  return this.$$data.target\n}\n\n/**\n * @returns {string} - the image's directory (imagesdir attribute)\n * @memberof Document/ImageReference\n */\nImageReference.prototype.getImagesDirectory = function () {\n  var value = this.$$data.imagesdir\n  return value === Opal.nil ? undefined : value\n}\n\n// Document.Author API\n\n/**\n * The Author class represents information about an author extracted from document attributes.\n * @namespace\n * @module Document/Author\n */\nvar Author = Document.Author\n\n/**\n * @returns {string} - the author's full name\n * @memberof Document/Author\n */\nAuthor.prototype.getName = function () {\n  var name = this.$$data.name\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @returns {string} - the author's first name\n * @memberof Document/Author\n */\nAuthor.prototype.getFirstName = function () {\n  var firstName = this.$$data.firstname\n  return firstName === Opal.nil ? undefined : firstName\n}\n\n/**\n * @returns {string} - the author's middle name (or undefined if the author has no middle name)\n * @memberof Document/Author\n */\nAuthor.prototype.getMiddleName = function () {\n  var middleName = this.$$data.middlename\n  return middleName === Opal.nil ? undefined : middleName\n}\n\n/**\n * @returns {string} - the author's last name\n * @memberof Document/Author\n */\nAuthor.prototype.getLastName = function () {\n  var lastName = this.$$data.lastname\n  return lastName === Opal.nil ? undefined : lastName\n}\n\n/**\n * @returns {string} - the author's initials (by default based on the author's name)\n * @memberof Document/Author\n */\nAuthor.prototype.getInitials = function () {\n  var initials = this.$$data.initials\n  return initials === Opal.nil ? undefined : initials\n}\n\n/**\n * @returns {string} - the author's email\n * @memberof Document/Author\n */\nAuthor.prototype.getEmail = function () {\n  var email = this.$$data.email\n  return email === Opal.nil ? undefined : email\n}\n\n// private constructor\nDocument.RevisionInfo = function (date, number, remark) {\n  this.date = date\n  this.number = number\n  this.remark = remark\n}\n\n/**\n * @class\n * @namespace\n * @module Document/RevisionInfo\n */\nvar RevisionInfo = Document.RevisionInfo\n\n/**\n * Get the document revision date from document header (document attribute <code>revdate</code>).\n * @returns {string}\n * @memberof Document/RevisionInfo\n */\nRevisionInfo.prototype.getDate = function () {\n  return this.date\n}\n\n/**\n * Get the document revision number from document header (document attribute <code>revnumber</code>).\n * @returns {string}\n * @memberof Document/RevisionInfo\n */\nRevisionInfo.prototype.getNumber = function () {\n  return this.number\n}\n\n/**\n * Get the document revision remark from document header (document attribute <code>revremark</code>).\n * A short summary of changes in this document revision.\n * @returns {string}\n * @memberof Document/RevisionInfo\n */\nRevisionInfo.prototype.getRemark = function () {\n  return this.remark\n}\n\n/**\n * @returns {boolean} - true if the revision info is empty (ie. not defined), otherwise false\n * @memberof Document/RevisionInfo\n */\nRevisionInfo.prototype.isEmpty = function () {\n  return this.date === undefined && this.number === undefined && this.remark === undefined\n}\n\n// SafeMode API\n\n/**\n * @namespace\n */\nvar SafeMode = Opal.Asciidoctor.SafeMode\n\n/**\n * @param {string} name - the name of the security level\n * @returns {number} - the integer value of the corresponding security level\n */\nSafeMode.getValueForName = function (name) {\n  return this.$value_for_name(name)\n}\n\n/**\n * @param {number} value - the integer value of the security level\n * @returns {string} - the name of the corresponding security level\n */\nSafeMode.getNameForValue = function (value) {\n  var name = this.$name_for_value(value)\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @returns {Array<string>} - the String {Array} of security levels\n */\nSafeMode.getNames = function () {\n  return this.$names()\n}\n\n// Callouts API\n\n/**\n * Maintains a catalog of callouts and their associations.\n * @namespace\n */\nvar Callouts = Opal.Asciidoctor.Callouts\n\n/**\n * Create a new Callouts.\n * @returns {Callouts} - a new Callouts\n * @memberof Callouts\n */\nCallouts.create = function () {\n  return this.$new()\n}\n\n/**\n * Register a new callout for the given list item ordinal.\n * Generates a unique id for this callout based on the index of the next callout list in the document and the index of this callout since the end of the last callout list.\n *\n * @param {number} ordinal - the Integer ordinal (1-based) of the list item to which this callout is to be associated\n * @returns {string} - The unique String id of this callout\n * @example\n *  callouts = asciidoctor.Callouts.create()\n *  callouts.register(1)\n *  // => \"CO1-1\"\n *  callouts.nextList()\n *  callouts.register(2)\n *  // => \"CO2-1\"\n * @memberof Callouts\n */\n\nCallouts.prototype.register = function (ordinal) {\n  return this.$register(ordinal)\n}\n/**\n * Get the next callout index in the document.\n *\n * Reads the next callout index in the document and advances the pointer.\n * This method is used during conversion to retrieve the unique id of the callout that was generated during parsing.\n *\n * @returns {string} - The unique String id of the next callout in the document\n * @memberof Callouts\n */\nCallouts.prototype.readNextId = function () {\n  return this.$read_next_id()\n}\n\n/**\n * et a space-separated list of callout ids for the specified list item.\n * @param {number} ordinal - the Integer ordinal (1-based) of the list item for which to retrieve the callouts\n * @returns {string} - a space-separated String of callout ids associated with the specified list item\n * @memberof Callouts\n */\nCallouts.prototype.getCalloutIds = function (ordinal) {\n  return this.$callout_ids(ordinal)\n}\n\n/**\n * @memberof Callouts\n */\nCallouts.prototype.getLists = function () {\n  var lists = this.lists\n  if (lists && lists.length > 0) {\n    for (var i = 0; i < lists.length; i++) {\n      var list = lists[i]\n      if (list && list.length > 0) {\n        for (var j = 0; j < list.length; j++) {\n          if (typeof list[j] === 'object' && '$$smap' in list[j]) {\n            list[j] = fromHash(list[j])\n          }\n        }\n      }\n    }\n  }\n  return lists\n}\n\n/**\n * @memberof Callouts\n */\nCallouts.prototype.getListIndex = function () {\n  return this.list_index\n}\n\n/**\n * The current list for which callouts are being collected.\n * @returns {Array} - The Array of callouts at the position of the list index pointer\n * @memberof Callouts\n */\nCallouts.prototype.getCurrentList = function () {\n  var currentList = this.$current_list()\n  if (currentList && currentList.length > 0) {\n    for (var i = 0; i < currentList.length; i++) {\n      if (typeof currentList[i] === 'object' && '$$smap' in currentList[i]) {\n        currentList[i] = fromHash(currentList[i])\n      }\n    }\n  }\n  return currentList\n}\n\n/**\n * Advance to the next callout list in the document.\n * @memberof Callouts\n */\nCallouts.prototype.nextList = function () {\n  return this.$nextList()\n}\n\n/**\n * Rewind the list index pointer, intended to be used when switching from the parsing to conversion phase.\n * @memberof Callouts\n */\nCallouts.prototype.rewind = function () {\n  return this.$rewind()\n}\n\n/**\n * @returns {Document/RevisionInfo} - a {@link Document/RevisionInfo}\n * @memberof Document\n */\nDocument.prototype.getRevisionInfo = function () {\n  return new Document.RevisionInfo(this.getRevisionDate(), this.getRevisionNumber(), this.getRevisionRemark())\n}\n\n/**\n * @returns {boolean} - true if the document contains revision info, otherwise false\n * @memberof Document\n */\nDocument.prototype.hasRevisionInfo = function () {\n  var revisionInfo = this.getRevisionInfo()\n  return !revisionInfo.isEmpty()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getNotitle = function () {\n  return this.$notitle()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getNoheader = function () {\n  return this.$noheader()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getNofooter = function () {\n  return this.$nofooter()\n}\n\n/**\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.hasHeader = function () {\n  return this['$header?']()\n}\n\n/**\n * Replay attribute assignments at the block level.\n *\n * <i>This method belongs to an internal API that deals with how attributes are managed by the processor.</i>\n * If you understand why this group of methods are necessary, and what they do, feel free to use them.\n * <strong>However, keep in mind they are subject to change at any time.</strong>\n *\n * @param {Object} blockAttributes - A JSON of attributes\n * @memberof Document\n */\nDocument.prototype.playbackAttributes = function (blockAttributes) {\n  blockAttributes = toHash(blockAttributes)\n  if (blockAttributes) {\n    var attrEntries = blockAttributes['$[]']('attribute_entries')\n    if (attrEntries && Array.isArray(attrEntries)) {\n      var result = []\n      for (var i = 0; i < attrEntries.length; i++) {\n        var attrEntryObject = attrEntries[i]\n        if (attrEntryObject && typeof attrEntryObject === 'object' && attrEntryObject.constructor.name === 'Object') {\n          attrEntryObject.$name = function () {\n            return this.name\n          }\n          attrEntryObject.$value = function () {\n            return this.value\n          }\n          attrEntryObject.$negate = function () {\n            return this.negate\n          }\n        }\n        result.push(attrEntryObject)\n      }\n      blockAttributes['$[]=']('attribute_entries', result)\n    }\n  }\n  this.$playback_attributes(blockAttributes)\n}\n\n/**\n * Delete the specified attribute from the document if the name is not locked.\n * If the attribute is locked, false is returned.\n * Otherwise, the attribute is deleted.\n *\n * @param {string} name - the String attribute name\n *\n * @returns {boolean} - true if the attribute was deleted, false if it was not because it's locked\n * @memberof Document\n */\nDocument.prototype.deleteAttribute = function (name) {\n  return this.$delete_attribute(name)\n}\n\n/**\n * Determine if the attribute has been locked by being assigned in document options.\n *\n * @param {string} key - The attribute key to check\n *\n * @returns {boolean} - true if the attribute is locked, false otherwise\n * @memberof Document\n */\nDocument.prototype.isAttributeLocked = function (key) {\n  return this['$attribute_locked?'](key)\n}\n\n/**\n * Restore the attributes to the previously saved state (attributes in header).\n *\n * @memberof Document\n */\nDocument.prototype.restoreAttributes = function () {\n  return this.$restore_attributes()\n}\n\n/**\n * Parse the AsciiDoc source stored in the {Reader} into an abstract syntax tree.\n *\n * If the data parameter is not nil, create a new {PreprocessorReader} and assigned it to the reader property of this object.\n * Otherwise, continue with the reader that was created when the {Document} was instantiated.\n * Pass the reader to {Parser.parse} to parse the source data into an abstract syntax tree.\n *\n * If parsing has already been performed, this method returns without performing any processing.\n *\n * @param {string|Array<string>} [data] - The optional replacement AsciiDoc source data as a String or String Array. (default: undefined)\n *\n * @returns {Document} - this {Document}\n * @memberof Document\n */\nDocument.prototype.parse = function (data) {\n  return this.$parse(data)\n}\n\n/**\n * @memberof Document\n */\nDocument.prototype.getDocinfo = function (docinfoLocation, suffix) {\n  return this.$docinfo(docinfoLocation, suffix)\n}\n\n/**\n * @param {string} [docinfoLocation] - A {string} for checking docinfo extensions at a given location (head or footer) (default: head)\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.hasDocinfoProcessors = function (docinfoLocation) {\n  return this['$docinfo_processors?'](docinfoLocation)\n}\n\n/**\n * Increment the specified counter and store it in the block's attributes.\n *\n * @param {string} counterName - the String name of the counter attribute\n * @param {Block} block - the {Block} on which to save the counter\n *\n * @returns {number} - the next number in the sequence for the specified counter\n * @memberof Document\n */\nDocument.prototype.incrementAndStoreCounter = function (counterName, block) {\n  return this.$increment_and_store_counter(counterName, block)\n}\n\n/**\n * @deprecated Please use {Document#incrementAndStoreCounter} method.\n * @memberof Document\n */\nDocument.prototype.counterIncrement = Document.prototype.incrementAndStoreCounter\n\n/**\n * Get the named counter and take the next number in the sequence.\n *\n * @param {string} name - the String name of the counter\n * @param {string|number} seed - the initial value as a String or Integer\n *\n * @returns {number} the next number in the sequence for the specified counter\n * @memberof Document\n */\nDocument.prototype.counter = function (name, seed) {\n  return this.$counter(name, seed)\n}\n\n/**\n * A read-only integer value indicating the level of security that should be enforced while processing this document.\n * The value must be set in the Document constructor using the \"safe\" option.\n *\n * A value of 0 (UNSAFE) disables any of the security features enforced by Asciidoctor.\n *\n * A value of 1 (SAFE) closely parallels safe mode in AsciiDoc.\n * In particular, it prevents access to files which reside outside of the parent directory of the source file and disables any macro other than the include directive.\n *\n * A value of 10 (SERVER) disallows the document from setting attributes that would affect the conversion of the document,\n * in addition to all the security features of SafeMode.SAFE.\n * For instance, this level forbids changing the backend or source-highlighter using an attribute defined in the source document header.\n * This is the most fundamental level of security for server deployments (hence the name).\n *\n * A value of 20 (SECURE) disallows the document from attempting to read files from the file system and including the contents of them into the document,\n * in addition to all the security features of SafeMode.SECURE.\n * In particular, it disallows use of the include::[] directive and the embedding of binary content (data uri), stylesheets and JavaScripts referenced by the document.\n * (Asciidoctor and trusted extensions may still be allowed to embed trusted content into the document).\n *\n * Since Asciidoctor is aiming for wide adoption, 20 (SECURE) is the default value and is recommended for server deployments.\n *\n * A value of 100 (PARANOID) is planned to disallow the use of passthrough macros and prevents the document from setting any known attributes,\n * in addition to all the security features of SafeMode.SECURE.\n * Please note that this level is not currently implemented (and therefore not enforced)!\n *\n * @returns {number} - An integer value indicating the level of security\n * @memberof Document\n */\nDocument.prototype.getSafe = function () {\n  return this.safe\n}\n\n/**\n * Get the Boolean AsciiDoc compatibility mode.\n * Enabling this attribute activates the following syntax changes:\n *\n *   * single quotes as constrained emphasis formatting marks\n *   * single backticks parsed as inline literal, formatted as monospace\n *   * single plus parsed as constrained, monospaced inline formatting\n *   * double plus parsed as constrained, monospaced inline formatting\n *\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getCompatMode = function () {\n  return this.compat_mode\n}\n\n/**\n * Get the Boolean flag that indicates whether source map information should be tracked by the parser.\n * @returns {boolean}\n * @memberof Document\n */\nDocument.prototype.getSourcemap = function () {\n  var sourcemap = this.sourcemap\n  return sourcemap === Opal.nil ? false : sourcemap\n}\n\n/**\n * Set the Boolean flag that indicates whether source map information should be tracked by the parser.\n * @param {boolean} value\n * @memberof Document\n */\nDocument.prototype.setSourcemap = function (value) {\n  this.sourcemap = value\n}\n\n/**\n * Get the JSON of document counters.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getCounters = function () {\n  return fromHash(this.counters)\n}\n\n/**\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getCallouts = function () {\n  return this.$callouts()\n}\n\n/**\n * Get the String base directory for converting this document.\n *\n * Defaults to directory of the source file.\n * If the source is a string, defaults to the current directory.\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getBaseDir = function () {\n  return this.base_dir\n}\n\n/**\n * Get the JSON of resolved options used to initialize this {Document}.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getOptions = function () {\n  return fromHash(this.options)\n}\n\n/**\n * Get the outfilesuffix defined at the end of the header.\n * @returns {string}\n * @memberof Document\n */\nDocument.prototype.getOutfilesuffix = function () {\n  return this.outfilesuffix\n}\n\n/**\n * Get a reference to the parent Document of this nested document.\n * @returns {Document|undefined}\n * @memberof Document\n */\nDocument.prototype.getParentDocument = function () {\n  var parentDocument = this.parent_document\n  return parentDocument === Opal.nil ? undefined : parentDocument\n}\n\n/**\n * Get the {Reader} associated with this document.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getReader = function () {\n  return this.reader\n}\n\n/**\n * Get the {Converter} instance being used to convert the current {Document}.\n * @returns {Object}\n * @memberof Document\n */\nDocument.prototype.getConverter = function () {\n  return this.converter\n}\n\n/**\n * Get the activated {Extensions.Registry} associated with this document.\n * @returns {Extensions/Registry}\n * @memberof Document\n */\nDocument.prototype.getExtensions = function () {\n  var extensions = this.extensions\n  return extensions === Opal.nil ? undefined : extensions\n}\n\n// Document.Title API\n\n/**\n * A partitioned title (i.e., title & subtitle).\n * @namespace\n * @module Document/Title\n */\nvar Title = Document.Title\n\n/**\n * @returns {string}\n * @memberof Document/Title\n */\nTitle.prototype.getMain = function () {\n  return this.main\n}\n\n/**\n * @returns {string}\n * @memberof Document/Title\n */\nTitle.prototype.getCombined = function () {\n  return this.combined\n}\n\n/**\n * @returns {string}\n * @memberof Document/Title\n */\nTitle.prototype.getSubtitle = function () {\n  var subtitle = this.subtitle\n  return subtitle === Opal.nil ? undefined : subtitle\n}\n\n/**\n * @returns {boolean}\n * @memberof Document/Title\n */\nTitle.prototype.isSanitized = function () {\n  var sanitized = this['$sanitized?']()\n  return sanitized === Opal.nil ? false : sanitized\n}\n\n/**\n * @returns {boolean}\n * @memberof Document/Title\n */\nTitle.prototype.hasSubtitle = function () {\n  return this['$subtitle?']()\n}\n\n// Inline API\n\n/**\n * Methods for managing inline elements in AsciiDoc block.\n * @namespace\n * @extends AbstractNode\n */\nvar Inline = Opal.Asciidoctor.Inline\n\n/**\n * Create a new Inline element.\n * @param {AbstractBlock} parent\n * @param {string} context\n * @param {string|undefined} text\n * @param {Object|undefined} opts\n * @returns {Inline} - a new Inline element\n * @memberof Inline\n */\nInline.create = function (parent, context, text, opts) {\n  return this.$new(parent, context, text, prepareOptions(opts))\n}\n\n/**\n * Get the converted content for this inline node.\n *\n * @returns {string} - the converted String content for this inline node\n * @memberof Inline\n */\nInline.prototype.convert = function () {\n  return this.$convert()\n}\n\n/**\n * Get the converted String text of this Inline node, if applicable.\n *\n * @returns {string|undefined} - the converted String text for this Inline node, or undefined if not applicable for this node.\n * @memberof Inline\n */\nInline.prototype.getText = function () {\n  var text = this.$text()\n  return text === Opal.nil ? undefined : text\n}\n\n/**\n * Get the String sub-type (aka qualifier) of this Inline node.\n *\n * This value is used to distinguish different variations of the same node\n * category, such as different types of anchors.\n *\n * @returns {string} - the string sub-type of this Inline node.\n * @memberof Inline\n */\nInline.prototype.getType = function () {\n  return this.$type()\n}\n\n/**\n * Get the primary String target of this Inline node.\n *\n * @returns {string|undefined} - the string target of this Inline node.\n * @memberof Inline\n */\nInline.prototype.getTarget = function () {\n  var target = this.$target()\n  return target === Opal.nil ? undefined : target\n}\n\n/**\n * Returns the converted alt text for this inline image.\n *\n * @returns {string} - the String value of the alt attribute.\n * @memberof Inline\n */\nInline.prototype.getAlt = function () {\n  return this.$alt()\n}\n\n// List API\n\n/**\n * Methods for managing AsciiDoc lists (ordered, unordered and description lists).\n * @namespace\n * @extends AbstractBlock\n */\nvar List = Opal.Asciidoctor.List\n\n/**\n * Checks if the {@link List} contains any child {@link ListItem}.\n *\n * @memberof List\n * @returns {boolean} - whether the {@link List} has child {@link ListItem}.\n */\nList.prototype.hasItems = function () {\n  return this['$items?']()\n}\n\n/**\n * Get the Array of {@link ListItem} nodes for this {@link List}.\n *\n * @returns {Array<ListItem>} - an Array of {@link ListItem} nodes.\n * @memberof List\n */\nList.prototype.getItems = function () {\n  return this.blocks\n}\n\n// ListItem API\n\n/**\n * Methods for managing items for AsciiDoc olists, ulist, and dlists.\n *\n * In a description list (dlist), each item is a tuple that consists of a 2-item Array of ListItem terms and a ListItem description (i.e., [[term, term, ...], desc].\n * If a description is not set, then the second entry in the tuple is nil.\n * @namespace\n * @extends AbstractBlock\n */\nvar ListItem = Opal.Asciidoctor.ListItem\n\n/**\n * Get the converted String text of this {@link ListItem} node.\n *\n * @returns {string} - the converted String text for this {@link ListItem} node.\n * @memberof ListItem\n */\nListItem.prototype.getText = function () {\n  return this.$text()\n}\n\n/**\n * Set the String source text of this {@link ListItem} node.\n *\n * @returns {string} - the new String text assigned to this {@link ListItem}\n * @memberof ListItem\n */\nListItem.prototype.setText = function (text) {\n  return this['$text='](text)\n}\n\n/**\n * A convenience method that checks whether the text of this {@link ListItem} is not blank (i.e. not undefined or empty string).\n *\n * @returns {boolean} - whether the text is not blank\n * @memberof ListItem\n */\nListItem.prototype.hasText = function () {\n  return this['$text?']()\n}\n\n/**\n * Get the {string} used to mark this {@link ListItem}.\n *\n * @returns {string}\n * @memberof ListItem\n */\nListItem.prototype.getMarker = function () {\n  return this.marker\n}\n\n/**\n * Set the {string} used to mark this {@link ListItem}.\n *\n * @param {string} marker - the {string} used to mark this {@link ListItem}\n * @memberof ListItem\n */\nListItem.prototype.setMarker = function (marker) {\n  this.marker = marker\n}\n\n/**\n * Get the {@link List} to which this {@link ListItem} is attached.\n *\n * @returns {List} - the {@link List} object to which this {@link ListItem} is attached,\n * or undefined if this node has no parent.\n * @memberof ListItem\n */\nListItem.prototype.getList = function () {\n  return this.$list()\n}\n\n/**\n * @see {@link ListItem#getList}\n * @memberof ListItem\n */\nListItem.prototype.getParent = ListItem.prototype.getList\n\n// Reader API\n\n/** @namespace */\nvar Reader = Opal.Asciidoctor.Reader\n\n/**\n * Push source onto the front of the reader and switch the context based on the file, document-relative path and line information given.\n *\n * This method is typically used in an IncludeProcessor to add source read from the target specified.\n *\n * @param {string} data\n * @param {string|undefined} file\n * @param {string|undefined} path\n * @param {number} lineno - The line number\n * @param {Object} attributes - a JSON of attributes\n * @returns {Reader} - this {Reader} object.\n * @memberof Reader\n */\nReader.prototype.pushInclude = function (data, file, path, lineno, attributes) {\n  return this.$push_include(data, file, path, lineno, toHash(attributes))\n}\n\n/**\n * Get the current location of the reader's cursor, which encapsulates the file, dir, path, and lineno of the file being read.\n *\n * @returns {Cursor}\n * @memberof Reader\n */\nReader.prototype.getCursor = function () {\n  return this.$cursor()\n}\n\n/**\n * Get the remaining unprocessed lines, without consuming them, as an {Array} of {string}.\n *\n * Lines will not be consumed from the Reader (ie. you will be able to read these lines again).\n *\n * @returns {Array<string>} - the remaining unprocessed lines as an {Array} of {string}.\n * @memberof Reader\n */\nReader.prototype.getLines = function () {\n  return this.$lines()\n}\n\n/**\n * Get the remaining unprocessed lines, without consuming them, as a {string}.\n *\n * Lines will not be consumed from the Reader (ie. you will be able to read these lines again).\n *\n * @returns {string} - the remaining unprocessed lines as a {string} (joined by linefeed characters).\n * @memberof Reader\n */\nReader.prototype.getString = function () {\n  return this.$string()\n}\n\n/**\n * Check whether there are any lines left to read.\n * If a previous call to this method resulted in a value of false, immediately returned the cached value.\n * Otherwise, delegate to peekLine to determine if there is a next line available.\n *\n * @returns {boolean} - true if there are more lines, false if there are not.\n * @memberof Reader\n */\nReader.prototype.hasMoreLines = function () {\n  return this['$has_more_lines?']()\n}\n\n/**\n * Check whether this reader is empty (contains no lines).\n *\n * @returns {boolean} - true if there are no more lines to peek, otherwise false.\n * @memberof Reader\n */\nReader.prototype.isEmpty = function () {\n  return this['$empty?']()\n}\n\n/**\n * Peek at the next line.\n * Processes the line if not already marked as processed, but does not consume it (ie. you will be able to read this line again).\n *\n * This method will probe the reader for more lines.\n * If there is a next line that has not previously been visited, the line is passed to the Reader#processLine method to be initialized.\n * This call gives sub-classes the opportunity to do preprocessing.\n * If the return value of the Reader#processLine is undefined, the data is assumed to be changed and Reader#peekLine is invoked again to perform further processing.\n *\n * If hasMoreLines is called immediately before peekLine, the direct flag is implicitly true (since the line is flagged as visited).\n *\n * @param {boolean} direct - A {boolean} flag to bypasses the check for more lines and immediately returns the first element of the internal lines {Array}. (default: false)\n * @returns {string} - the next line as a {string} if there are lines remaining.\n * @memberof Reader\n */\nReader.prototype.peekLine = function (direct) {\n  direct = direct || false\n  var line = this.$peek_line(direct)\n  return line === Opal.nil ? undefined : line\n}\n\n/**\n * Consume, preprocess, and return the next line.\n *\n * Line will be consumed from the Reader (ie. you won't be able to read this line again).\n *\n * @returns {string} - the next line as a {string} if data is present.\n * @memberof Reader\n */\nReader.prototype.readLine = function () {\n  var line = this.$read_line()\n  return line === Opal.nil ? undefined : line\n}\n\n/**\n * Consume, preprocess, and return the remaining lines.\n *\n * This method calls Reader#readLine repeatedly until all lines are consumed and returns the lines as an {Array} of {string}.\n * This method differs from Reader#getLines in that it processes each line in turn, hence triggering any preprocessors implemented in sub-classes.\n *\n * Lines will be consumed from the Reader (ie. you won't be able to read these lines again).\n *\n * @returns {Array<string>} - the lines read as an {Array} of {string}.\n * @memberof Reader\n */\nReader.prototype.readLines = function () {\n  return this.$read_lines()\n}\n\n/**\n * Consume, preprocess, and return the remaining lines joined as a {string}.\n *\n * Delegates to Reader#readLines, then joins the result.\n *\n * Lines will be consumed from the Reader (ie. you won't be able to read these lines again).\n *\n * @returns {string} - the lines read joined as a {string}\n * @memberof Reader\n */\nReader.prototype.read = function () {\n  return this.$read()\n}\n\n/**\n * Advance to the next line by discarding the line at the front of the stack.\n *\n * @returns {boolean} - a Boolean indicating whether there was a line to discard.\n * @memberof Reader\n */\nReader.prototype.advance = function () {\n  return this.$advance()\n}\n\n// Cursor API\n\n/** @namespace */\nvar Cursor = Opal.Asciidoctor.Reader.Cursor\n\n/**\n * Get the file associated to the cursor.\n * @returns {string|undefined}\n * @memberof Cursor\n */\nCursor.prototype.getFile = function () {\n  var file = this.file\n  return file === Opal.nil ? undefined : file\n}\n\n/**\n * Get the directory associated to the cursor.\n * @returns {string|undefined} - the directory associated to the cursor\n * @memberof Cursor\n */\nCursor.prototype.getDirectory = function () {\n  var dir = this.dir\n  return dir === Opal.nil ? undefined : dir\n}\n\n/**\n * Get the path associated to the cursor.\n * @returns {string|undefined} - the path associated to the cursor (or '<stdin>')\n * @memberof Cursor\n */\nCursor.prototype.getPath = function () {\n  var path = this.path\n  return path === Opal.nil ? undefined : path\n}\n\n/**\n * Get the line number of the cursor.\n * @returns {number|undefined} - the line number of the cursor\n * @memberof Cursor\n */\nCursor.prototype.getLineNumber = function () {\n  return this.lineno\n}\n\n// Logger API (available in Asciidoctor 1.5.7+)\n\nfunction initializeLoggerFormatterClass (className, functions) {\n  var superclass = Opal.const_get_qualified(Opal.Logger, 'Formatter')\n  return initializeClass(superclass, className, functions, {}, {\n    call: function (args) {\n      for (var i = 0; i < args.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof args[i] === 'object' && '$$smap' in args[i]) {\n          args[i] = fromHash(args[i])\n        }\n      }\n      return args\n    }\n  })\n}\n\nfunction initializeLoggerClass (className, functions) {\n  var superClass = Opal.const_get_qualified(Opal.Asciidoctor, 'Logger')\n  return initializeClass(superClass, className, functions, {}, {\n    add: function (args) {\n      if (args.length >= 2 && typeof args[2] === 'object' && '$$smap' in args[2]) {\n        var message = args[2]\n        var messageObject = fromHash(message)\n        messageObject.getText = function () {\n          return this.text\n        }\n        messageObject.getSourceLocation = function () {\n          return this.source_location\n        }\n        messageObject.$inspect = function () {\n          var sourceLocation = this.getSourceLocation()\n          if (sourceLocation) {\n            return sourceLocation.getPath() + ': line ' + sourceLocation.getLineNumber() + ': ' + this.getText()\n          } else {\n            return this.getText()\n          }\n        }\n        args[2] = messageObject\n      }\n      if (args.length >= 1) {\n        args[1] = args[1] === Opal.nil ? undefined : args[1]\n      }\n      return args\n    }\n  })\n}\n\n/**\n * @namespace\n */\nvar LoggerManager = Opal.const_get_qualified(Opal.Asciidoctor, 'LoggerManager', true)\n\n// Alias\nOpal.Asciidoctor.LoggerManager = LoggerManager\n\n/**\n * @memberof LoggerManager\n */\nLoggerManager.getLogger = function () {\n  return this.$logger()\n}\n\n/**\n * @memberof LoggerManager\n */\nLoggerManager.setLogger = function (logger) {\n  this['$logger='](logger)\n}\n\n/**\n * @memberof LoggerManager\n */\nLoggerManager.newLogger = function (name, functions) {\n  return initializeLoggerClass(name, functions).$new()\n}\n\n/**\n * @memberof LoggerManager\n */\nLoggerManager.newFormatter = function (name, functions) {\n  return initializeLoggerFormatterClass(name, functions).$new()\n}\n\n/**\n * @namespace\n */\nvar LoggerSeverity = Opal.const_get_qualified(Opal.Logger, 'Severity', true)\n\n// Alias\nOpal.Asciidoctor.LoggerSeverity = LoggerSeverity\n\n/**\n * @memberof LoggerSeverity\n */\nLoggerSeverity.get = function (severity) {\n  return LoggerSeverity.$constants()[severity]\n}\n\n/**\n * @namespace\n */\nvar LoggerFormatter = Opal.const_get_qualified(Opal.Logger, 'Formatter', true)\n\n// Alias\nOpal.Asciidoctor.LoggerFormatter = LoggerFormatter\n\n/**\n * @memberof LoggerFormatter\n */\nLoggerFormatter.prototype.call = function (severity, time, programName, message) {\n  return this.$call(LoggerSeverity.get(severity), time, programName, message)\n}\n\n/**\n * @namespace\n */\nvar MemoryLogger = Opal.const_get_qualified(Opal.Asciidoctor, 'MemoryLogger', true)\n\n// Alias\nOpal.Asciidoctor.MemoryLogger = MemoryLogger\n\n/**\n * Create a new MemoryLogger.\n * @returns {MemoryLogger} - a MemoryLogger\n * @memberof MemoryLogger\n */\nMemoryLogger.create = function () {\n  return this.$new()\n}\n\n/**\n * @returns {Array<Object>} - a list of messages\n * @memberof MemoryLogger\n */\nMemoryLogger.prototype.getMessages = function () {\n  var messages = this.messages\n  var result = []\n  for (var i = 0; i < messages.length; i++) {\n    var message = messages[i]\n    var messageObject = fromHash(message)\n    if (typeof messageObject.message === 'string') {\n      messageObject.getText = function () {\n        return this.message\n      }\n    } else {\n      // also convert the message attribute\n      messageObject.message = fromHash(messageObject.message)\n      messageObject.getText = function () {\n        return this.message.text\n      }\n    }\n    messageObject.getSeverity = function () {\n      return this.severity.toString()\n    }\n    messageObject.getSourceLocation = function () {\n      return this.message.source_location\n    }\n    result.push(messageObject)\n  }\n  return result\n}\n\nvar Logging = Opal.const_get_qualified(Opal.Asciidoctor, 'Logging', true)\n\nOpal.Asciidoctor.Logging = Logging\n\nLogging.getLogger = function () {\n  return LoggerManager.$logger()\n}\n\nLogging.createLogMessage = function (text, context) {\n  return Logging.prototype.$message_with_context(text, toHash(context))\n}\n\n// alias\n\n/**\n * @memberof Reader\n */\nReader.prototype.getLogger = Logging.getLogger\n/**\n * @memberof Reader\n */\nReader.prototype.createLogMessage = Logging.createLogMessage\n\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.getLogger = Logging.getLogger\n/**\n * @memberof AbstractNode\n */\nAbstractNode.prototype.createLogMessage = Logging.createLogMessage\n\n/**\n * @namespace\n */\nvar Logger = Opal.const_get_qualified(Opal.Asciidoctor, 'Logger', true)\n\n// Alias\nOpal.Asciidoctor.Logger = Logger\n\n/**\n * @returns {number|undefined} - the maximum severity\n * @memberof Logger\n */\nLogger.prototype.getMaxSeverity = function () {\n  var result = this.max_severity\n  return result === Opal.nil ? undefined : result\n}\n/**\n * @returns {LoggerFormatter} - the formatter\n * @memberof Logger\n */\nLogger.prototype.getFormatter = function () {\n  return this.formatter\n}\n/**\n * @param {LoggerFormatter} formatter - the formatter\n * @memberof Logger\n */\nLogger.prototype.setFormatter = function (formatter) {\n  this.formatter = formatter\n}\n/**\n * @returns {number} - the logging severity threshold\n * @memberof Logger\n */\nLogger.prototype.getLevel = function () {\n  return this.level\n}\n/**\n * @param {number} level - the logging severity threshold\n * @memberof Logger\n */\nLogger.prototype.setLevel = function (level) {\n  this.level = level\n}\n/**\n * @returns {string} - the program name\n * @memberof Logger\n */\nLogger.prototype.getProgramName = function () {\n  return this.progname\n}\n/**\n * @param {string} programName - the program name\n * @memberof Logger\n */\nLogger.prototype.setProgramName = function (programName) {\n  this.progname = programName\n}\n\nvar RubyLogger = Opal.const_get_qualified('::', 'Logger')\n\nvar log = function (logger, level, message) {\n  logger['$' + level](message)\n}\nRubyLogger.prototype.add = function (severity, message, programName) {\n  var severityValue = typeof severity === 'string' ? LoggerSeverity[severity.toUpperCase()] : severity\n  this.$add(severityValue, message, programName)\n}\nRubyLogger.prototype.log = RubyLogger.prototype.add\nRubyLogger.prototype.debug = function (message) {\n  log(this, 'debug', message)\n}\nRubyLogger.prototype.info = function (message) {\n  log(this, 'info', message)\n}\nRubyLogger.prototype.warn = function (message) {\n  log(this, 'warn', message)\n}\nRubyLogger.prototype.error = function (message) {\n  log(this, 'error', message)\n}\nRubyLogger.prototype.fatal = function (message) {\n  log(this, 'fatal', message)\n}\nRubyLogger.prototype.isDebugEnabled = function () {\n  return this['$debug?']()\n}\nRubyLogger.prototype.isInfoEnabled = function () {\n  return this['$info?']()\n}\nRubyLogger.prototype.isWarnEnabled = function () {\n  return this['$warn?']()\n}\nRubyLogger.prototype.isErrorEnabled = function () {\n  return this['$error?']()\n}\nRubyLogger.prototype.isFatalEnabled = function () {\n  return this['$fatal?']()\n}\n\n/**\n * @namespace\n */\nvar NullLogger = Opal.const_get_qualified(Opal.Asciidoctor, 'NullLogger', true)\n\n// Alias\nOpal.Asciidoctor.NullLogger = NullLogger\n\n/**\n * Create a new NullLogger.\n * @returns {NullLogger} - a NullLogger\n * @memberof NullLogger\n */\nNullLogger.create = function () {\n  return this.$new()\n}\n\n/**\n * @returns {number|undefined} - the maximum severity\n * @memberof NullLogger\n */\nNullLogger.prototype.getMaxSeverity = function () {\n  return this.max_severity\n}\n\n// Alias\nOpal.Asciidoctor.StopIteration = Opal.StopIteration\n\n/**\n * @namespace\n */\nvar Timings = Opal.const_get_qualified(Opal.Asciidoctor, 'Timings', true)\n\n// Alias\nOpal.Asciidoctor.Timings = Timings\n\n/**\n * Create a new Timings.\n * @returns {Timings} - a Timings\n * @memberof Timings\n */\nTimings.create = function () {\n  return this.$new()\n}\n\n/**\n * Print a report to the specified output.\n * The report will include:\n * - the time to read and parse source\n * - the time to convert document\n * - the total time (read, parse and convert)\n * @param {RubyLogger|console|Object} [to] - an optional output (by default stdout)\n * @param {string} [subject] - an optional subject (usually the file name)\n * @memberof Timings\n */\nTimings.prototype.printReport = function (to, subject) {\n  var outputFunction\n  if (to) {\n    if (typeof to.$add === 'function') {\n      outputFunction = function (message) {\n        to.$add(1, message)\n      }\n    } else if (typeof to.log === 'function') {\n      outputFunction = to.log\n    } else if (typeof to.write === 'function') {\n      outputFunction = function (message) {\n        to.write(message, 'utf-8')\n      }\n    } else {\n      throw new Error('The output should be a Stream (with a write function), an object with a log function or a Ruby Logger (with a add function)')\n    }\n  } else {\n    outputFunction = function (message) {\n      Opal.gvars.stdout.$write(message)\n    }\n  }\n  if (subject) {\n    outputFunction('Input file: ' + subject)\n  }\n  outputFunction(' Time to read and parse source: ' + this.$read_parse().toFixed(2))\n  outputFunction(' Time to convert document: ' + this.$convert().toFixed(2))\n  outputFunction(' Total time (read, parse and convert): ' + this.$read_parse_convert().toFixed(2))\n}\n\n/**\n * @namespace\n * @description\n * This API is experimental and subject to change.\n *\n * A pluggable adapter for integrating a syntax (aka code) highlighter into AsciiDoc processing.\n *\n * There are two types of syntax highlighter adapters. The first performs syntax highlighting during the convert phase.\n * This adapter type must define a \"handlesHighlighting\" method that returns true.\n * The companion \"highlight\" method will then be called to handle the \"specialcharacters\" substitution for source blocks.\n *\n * The second assumes syntax highlighting is performed on the client (e.g., when the HTML document is loaded).\n * This adapter type must define a \"hasDocinfo\" method that returns true.\n * The companion \"docinfo\" method will then be called to insert markup into the output document.\n * The docinfo functionality is available to both adapter types.\n *\n * Asciidoctor.js provides several a built-in adapter for highlight.js.\n * Additional adapters can be registered using SyntaxHighlighter.register.\n */\nvar SyntaxHighlighter = Opal.const_get_qualified(Opal.Asciidoctor, 'SyntaxHighlighter', true)\n\n// Alias\nOpal.Asciidoctor.SyntaxHighlighter = SyntaxHighlighter\n\n/**\n * Associates the syntax highlighter class or object with the specified names.\n *\n * @description This API is experimental and subject to change.\n *\n * @param {string|Array} names - A {string} name or an {Array} of {string} names\n * @param functions - A list of functions representing a {SyntaxHighlighter} or a {SyntaxHighlighter} class to instantiate\n * @memberof SyntaxHighlighter\n */\nSyntaxHighlighter.register = function (names, functions) {\n  var name = typeof names === 'string' ? names : names[0]\n  if (typeof functions === 'function') {\n    var classObject = functions\n    var prototype = classObject.prototype\n    var properties = Object.getOwnPropertyNames(prototype)\n    functions = {}\n    for (var propertyIdx in properties) {\n      var propertyName = properties[propertyIdx]\n      functions[propertyName] = prototype[propertyName]\n    }\n  }\n  var scope = initializeClass(SyntaxHighlighterBase, name, functions, {}, {\n    format: function (args) {\n      if (args.length >= 2 && typeof args[2] === 'object' && '$$smap' in args[2]) {\n        args[2] = fromHash(args[2])\n      }\n      if (args.length >= 1) {\n        args[1] = args[1] === Opal.nil ? undefined : args[1]\n      }\n      return args\n    },\n    highlight: function (args) {\n      if (args.length >= 3 && typeof args[3] === 'object' && '$$smap' in args[3]) {\n        var opts = args[3]\n        opts = fromHash(opts)\n        for (var key in opts) {\n          var value = opts[key]\n          if (key === 'callouts') {\n            var callouts = fromHashKeys(value)\n            for (var idx in callouts) {\n              var callout = callouts[idx]\n              for (var i = 0; i < callout.length; i++) {\n                var items = callout[i]\n                for (var j = 0; j < items.length; j++) {\n                  items[j] = items[j] === Opal.nil ? undefined : items[j]\n                }\n              }\n            }\n            opts[key] = callouts\n          } else {\n            opts[key] = value === Opal.nil ? undefined : value\n          }\n        }\n        args[3] = opts\n      }\n      if (args.length >= 2) {\n        args[2] = args[2] === Opal.nil ? undefined : args[2]\n      }\n      return args\n    }\n  })\n  for (var functionName in functions) {\n    if (Object.prototype.hasOwnProperty.call(functions, functionName)) {\n      (function (functionName) {\n        var userFunction = functions[functionName]\n        if (functionName === 'handlesHighlighting') {\n          Opal.def(scope, '$highlight?', function () {\n            return userFunction.call()\n          })\n        } else if (functionName === 'hasDocinfo') {\n          Opal.def(scope, '$docinfo?', function (location) {\n            return userFunction.apply(this, [location])\n          })\n        }\n      }(functionName))\n    }\n  }\n  Opal.def(scope, '$name', function () {\n    return name\n  })\n  SyntaxHighlighter.$register(scope, names)\n  return scope\n}\n\n/**\n * Retrieves the syntax highlighter class or object registered for the specified name.\n *\n * @description This API is experimental and subject to change.\n *\n * @param {string} name - The {string} name of the syntax highlighter to retrieve.\n * @returns {SyntaxHighlighter} - the {SyntaxHighlighter} registered for this name.\n * @memberof SyntaxHighlighter\n */\nSyntaxHighlighter.get = function (name) {\n  var result = SyntaxHighlighter.$for(name)\n  return result === Opal.nil ? undefined : result\n}\n\n/**\n * @deprecated Please use {SyntaxHighlighter#get} method as \"for\" is a reserved keyword.\n */\nSyntaxHighlighter.for = SyntaxHighlighter.get\n\n/**\n * @namespace\n */\nvar SyntaxHighlighterBase = Opal.const_get_qualified(SyntaxHighlighter, 'Base', true)\n\n// Alias\nOpal.Asciidoctor.SyntaxHighlighterBase = SyntaxHighlighterBase\n\n/**\n * Statically register the current class in the registry for the specified names.\n *\n * @description This API is experimental and subject to change.\n *\n * @param {string|Array<string>} names - A {string} name or an {Array} of {string} names\n * @memberof SyntaxHighlighterBase\n */\nSyntaxHighlighterBase.prototype.registerFor = function (names) {\n  SyntaxHighlighter.$register(this, names)\n}\n\n// Table API\n\n/**\n * Methods for managing AsciiDoc tables.\n * @namespace\n * @extends AbstractBlock\n */\nvar Table = Opal.Asciidoctor.Table\n\n/**\n * Create a new Table element.\n * @param {AbstractBlock} parent\n * @param {Object|undefined} attributes\n * @returns {Table} - a new {Table} object\n */\nTable.create = function (parent, attributes) {\n  return this.$new(parent, toHash(attributes))\n}\n\n/**\n * Get the caption of the table.\n * @returns {string}\n * @memberof Table\n */\nTable.prototype.getCaption = function () {\n  return this.caption\n}\n\n/**\n * Get the rows of this table.\n * @returns {Table.Rows} - an {Table.Rows} object with the members \"head\", \"body\" and \"foot\"\n * @memberof Table\n */\nTable.prototype.getRows = function () {\n  return this.rows\n}\n\n/**\n * Get the columns of this table.\n * @returns {Array<Column>}\n * @memberof Table\n */\nTable.prototype.getColumns = function () {\n  return this.columns\n}\n\n/**\n * Get the head rows of this table.\n * @returns {Array<Array<Cell>>} - an Array of Array of Cell\n * @memberof Table\n */\nTable.prototype.getHeadRows = function () {\n  return this.rows.head\n}\n\n/**\n * Check if the table has a head rows.\n * @returns {boolean}\n * @memberof Table\n */\nTable.prototype.hasHeadRows = function () {\n  return this.rows !== Opal.nil && this.rows.head.length > 0\n}\n\n/**\n * Get the body rows of this table.\n * @returns {Array<Array<Cell>>} - an Array of Array of Cell\n * @memberof Table\n */\nTable.prototype.getBodyRows = function () {\n  return this.rows.body\n}\n\n/**\n * Check if the table has a body rows.\n * @returns {boolean}\n */\nTable.prototype.hasBodyRows = function () {\n  return this.rows !== Opal.nil && this.rows.body.length > 0\n}\n\n/**\n * Get the foot rows of this table.\n * @returns {Array<Array<Cell>>} - an Array of Array of Cell\n * @memberof Table\n */\nTable.prototype.getFootRows = function () {\n  return this.rows.foot\n}\n\n/**\n * Check if the table has a foot rows.\n * @returns {boolean}\n */\nTable.prototype.hasFootRows = function () {\n  return this.rows !== Opal.nil && this.rows.foot.length > 0\n}\n\n/**\n * Check if the table has a header option set.\n * @returns {boolean}\n * @memberof Table\n */\nTable.prototype.hasHeaderOption = function () {\n  return this.has_header_option\n}\n\n/**\n * Check if the table has the footer option set.\n * @returns {boolean}\n * @memberof Table\n */\nTable.prototype.hasFooterOption = function () {\n  var footerOption = this.getAttributes()['footer-option']\n  return footerOption === ''\n}\n\n/**\n * Check if the table has the autowidth option set.\n * @returns {boolean}\n * @memberof Table\n */\nTable.prototype.hasAutowidthOption = function () {\n  var autowidthOption = this.getAttributes()['autowidth-option']\n  return autowidthOption === ''\n}\n\n/**\n * Get the number of rows in the table.\n * Please note that the header and footer rows are also counted.\n * @returns {number|undefined}\n * @memberof Table\n */\nTable.prototype.getRowCount = function () {\n  return this.getAttribute('rowcount')\n}\n\n/**\n * Set the number of rows in the table.\n * Please note that the header and footer rows are also counted.\n * @param {number} value - the value\n * @memberof Table\n */\nTable.prototype.setRowCount = function (value) {\n  this.setAttribute('rowcount', value)\n}\n\n/**\n * Get the number of columns in the table.\n * @returns {number|undefined}\n * @memberof Table\n */\nTable.prototype.getColumnCount = function () {\n  return this.getAttribute('colcount')\n}\n\n/**\n * Set the number of columns in the table.\n * @param {number} value - the value\n * @memberof Table\n */\nTable.prototype.setColumnCount = function (value) {\n  this.setAttribute('colcount', value)\n}\n\n// Rows\n\n/**\n * @namespace\n */\nvar Rows = Opal.Asciidoctor.Table.Rows\n\n/**\n * Create a new Rows element.\n * @param {array<array<Cell>>} head\n * @param {array<array<Cell>>} foot\n * @param {array<array<Cell>>} body\n * @returns Rows\n */\nRows.create = function (head, foot, body) {\n  return this.$new(head, foot, body)\n}\n\n/**\n * Get head rows.\n * @returns {array<array<Cell>>}\n */\nRows.prototype.getHead = function () {\n  return this.head\n}\n\n/**\n * Get foot rows.\n * @returns {array<array<Cell>>}\n */\nRows.prototype.getFoot = function () {\n  return this.foot\n}\n\n/**\n * Get body rows.\n * @returns {array<array<Cell>>}\n */\nRows.prototype.getBody = function () {\n  return this.body\n}\n\n/**\n * Retrieve the rows grouped by section as a nested Array.\n *\n * Creates a 2-dimensional array of two element entries.\n * The first element is the section name as a string.\n * The second element is the Array of rows in that section.\n * The entries are in document order (head, foot, body).\n * @returns {[[string, array<array<Cell>>], [string, array<array<Cell>>], [string, array<array<Cell>>]]}\n */\nRows.prototype.bySection = function () {\n  return [['head', this.head], ['body', this.body], ['foot', this.foot]]\n}\n\n// Table Column\n\n/**\n * Methods to manage the columns of an AsciiDoc table.\n * In particular, it keeps track of the column specs.\n * @namespace\n * @extends AbstractNode\n */\nvar Column = Opal.Asciidoctor.Table.Column\n\n/**\n * Create a new Column element.\n * @param {Table} table\n * @param {number} index\n * @param {Object|undefined} attributes\n * @returns Column\n */\nColumn.create = function (table, index, attributes) {\n  return this.$new(table, index, toHash(attributes))\n}\n\n/**\n * Get the column number of this cell.\n * @returns {number|undefined}\n * @memberof Column\n */\nColumn.prototype.getColumnNumber = function () {\n  return this.getAttribute('colnumber')\n}\n\n/**\n * Get the width of this cell.\n * @returns {string|undefined}\n * @memberof Column\n */\nColumn.prototype.getWidth = function () {\n  return this.getAttribute('width')\n}\n\n/**\n * Get the horizontal align of this cell.\n * @returns {string|undefined}\n * @memberof Column\n */\nColumn.prototype.getHorizontalAlign = function () {\n  return this.getAttribute('halign')\n}\n\n/**\n * Get the vertical align of this cell.\n * @returns {string|undefined}\n * @memberof Column\n */\nColumn.prototype.getVerticalAlign = function () {\n  return this.getAttribute('valign')\n}\n\n/**\n * Get the style of this cell.\n * @returns {string}\n * @memberof Column\n */\nColumn.prototype.getStyle = function () {\n  var style = this.style\n  return style === Opal.nil ? undefined : style\n}\n\n// Table Cell\n\n/**\n * Methods for managing the cells in an AsciiDoc table.\n * @namespace\n * @extends AbstractBlock\n */\nvar Cell = Opal.Asciidoctor.Table.Cell\n\n/**\n * Create a new Cell element\n * @param {Column} column\n * @param {string} cellText\n * @param {Object|undefined} attributes\n * @param {Object|undefined} opts\n * @returns {Cell}\n */\nCell.create = function (column, cellText, attributes, opts) {\n  return this.$new(column, cellText, toHash(attributes), toHash(opts))\n}\n\n/**\n * Get the column span of this {@link Cell} node.\n * @returns {number} - An Integer of the number of columns this cell will span (default: undefined)\n * @memberof Cell\n */\nCell.prototype.getColumnSpan = function () {\n  var colspan = this.colspan\n  return colspan === Opal.nil ? undefined : colspan\n}\n\n/**\n * Set the column span of this {@link Cell} node.\n * @param {number} value\n * @returns {number} - The new colspan value\n * @memberof Cell\n */\nCell.prototype.setColumnSpan = function (value) {\n  return this['$colspan='](value)\n}\n\n/**\n * Get the row span of this {@link Cell} node\n * @returns {number|undefined} - An Integer of the number of rows this cell will span (default: undefined)\n * @memberof Cell\n */\nCell.prototype.getRowSpan = function () {\n  var rowspan = this.rowspan\n  return rowspan === Opal.nil ? undefined : rowspan\n}\n\n/**\n * Set the row span of this {@link Cell} node\n * @param {number} value\n * @returns {number} - The new rowspan value\n * @memberof Cell\n */\nCell.prototype.setRowSpan = function (value) {\n  return this['$rowspan='](value)\n}\n\n/**\n * Get the content of the cell.\n * This method should not be used for cells in the head row or that have the literal style.\n * @returns {string}\n * @memberof Cell\n */\nCell.prototype.getContent = function () {\n  return this.$content()\n}\n\n/**\n * Get the text of the cell.\n * @returns {string}\n * @memberof Cell\n */\nCell.prototype.getText = function () {\n  return this.$text()\n}\n\n/**\n * Get the source of the cell.\n * @returns {string}\n * @memberof Cell\n */\nCell.prototype.getSource = function () {\n  return this.$source()\n}\n\n/**\n * Get the lines of the cell.\n * @returns {Array<string>}\n * @memberof Cell\n */\nCell.prototype.getLines = function () {\n  return this.$lines()\n}\n\n/**\n * Get the line number of the cell.\n * @returns {number|undefined}\n * @memberof Cell\n */\nCell.prototype.getLineNumber = function () {\n  var lineno = this.$lineno()\n  return lineno === Opal.nil ? undefined : lineno\n}\n\n/**\n * Get the source file of the cell.\n * @returns {string|undefined}\n * @memberof Cell\n */\nCell.prototype.getFile = function () {\n  var file = this.$file()\n  return file === Opal.nil ? undefined : file\n}\n\n/**\n * Get the style of the cell.\n * @returns {string|undefined}\n * @memberof Cell\n */\nCell.prototype.getStyle = function () {\n  var style = this.$style()\n  return style === Opal.nil ? undefined : style\n}\n\n/**\n * Get the column of this cell.\n * @returns {Column|undefined}\n * @memberof Cell\n */\nCell.prototype.getColumn = function () {\n  var column = this.$column()\n  return column === Opal.nil ? undefined : column\n}\n\n/**\n * Get the width of this cell.\n * @returns {string|undefined}\n * @memberof Cell\n */\nCell.prototype.getWidth = function () {\n  return this.getAttribute('width')\n}\n\n/**\n * Get the column width in percentage of this cell.\n * @returns {string|undefined}\n * @memberof Cell\n */\nCell.prototype.getColumnPercentageWidth = function () {\n  return this.getAttribute('colpcwidth')\n}\n\n/**\n * Get the nested {Document} of this cell when style is 'asciidoc'.\n * @returns {Document|undefined} - the nested {Document}\n * @memberof Cell\n */\nCell.prototype.getInnerDocument = function () {\n  var innerDocument = this.inner_document\n  return innerDocument === Opal.nil ? undefined : innerDocument\n}\n\n// Templates\n\n/**\n * @description\n * This API is experimental and subject to change.\n *\n * Please note that this API is currently only available in a Node environment.\n * We recommend to use a custom converter if you are running in the browser.\n *\n * @namespace\n * @module Converter/TemplateConverter\n */\nvar TemplateConverter = Opal.Asciidoctor.Converter.TemplateConverter\n\nif (TemplateConverter) {\n  // Alias\n  Opal.Asciidoctor.TemplateConverter = TemplateConverter\n\n  /**\n   * Create a new TemplateConverter.\n   * @param {string} backend - the backend name\n   * @param templateDirectories - a list of template directories\n   * @param {Object} opts - a JSON of options\n   * @param {string} opts.template_engine - the name of the template engine\n   * @param {Object} [opts.template_cache] - an optional template cache\n   * @param {Object} [opts.template_cache.scans] - a JSON of template objects keyed by template name keyed by path patterns\n   * @param {Object} [opts.template_cache.templates] - a JSON of template objects keyed by file paths\n   * @returns {TemplateConverter}\n   * @memberof Converter/TemplateConverter\n   */\n  TemplateConverter.create = function (backend, templateDirectories, opts) {\n    if (opts && opts.template_cache) {\n      opts.template_cache = toHash(opts.template_cache)\n    }\n    this.$new(backend, templateDirectories, toHash(opts))\n  }\n\n  /**\n   * @returns {Object} - The global cache\n   * @memberof Converter/TemplateConverter\n   */\n  TemplateConverter.getCache = function () {\n    var caches = fromHash(this.caches)\n    if (caches) {\n      if (caches.scans) {\n        caches.scans = fromHash(caches.scans)\n        for (var key in caches.scans) {\n          caches.scans[key] = fromHash(caches.scans[key])\n        }\n      }\n      if (caches.templates) {\n        caches.templates = fromHash(caches.templates)\n      }\n    }\n    return caches\n  }\n\n  /**\n   * Clear the global cache.\n   * @memberof Converter/TemplateConverter\n   */\n  TemplateConverter.clearCache = function () {\n    this.$clear_caches()\n  }\n\n  /**\n   * Convert an {AbstractNode} to the backend format using the named template.\n   *\n   * Looks for a template that matches the value of the template name or,\n   * if the template name is not specified, the value of the {@see AbstractNode.getNodeName} function.\n   *\n   * @param {AbstractNode} node - the AbstractNode to convert\n   * @param {string} templateName - the {string} name of the template to use, or the node name of the node if a template name is not specified. (optional, default: undefined)\n   * @param {Object} opts - an optional JSON that is passed as local variables to the template. (optional, default: undefined)\n   * @returns {string} - The {string} result from rendering the template\n   * @memberof Converter/TemplateConverter\n   */\n  TemplateConverter.prototype.convert = function (node, templateName, opts) {\n    return this.$convert(node, templateName, toHash(opts))\n  }\n\n  /**\n   * Checks whether there is a template registered with the specified name.\n   *\n   * @param {string} name - the {string} template name\n   * @returns {boolean} - a {boolean} that indicates whether a template is registered for the specified template name.\n   * @memberof Converter/TemplateConverter\n   */\n  TemplateConverter.prototype.handles = function (name) {\n    return this['$handles?'](name)\n  }\n\n  /**\n   * Retrieves the templates that this converter manages.\n   *\n   * @returns {Object} - a JSON of template objects keyed by template name\n   * @memberof Converter/TemplateConverter\n   */\n  TemplateConverter.prototype.getTemplates = function () {\n    return fromHash(this.$templates())\n  }\n\n  /**\n   * Registers a template with this converter.\n   *\n   * @param {string} name - the {string} template name\n   * @param {Object} template - the template object to register\n   * @returns {Object} - the template object\n   * @memberof Converter/TemplateConverter\n   */\n  TemplateConverter.prototype.register = function (name, template) {\n    return this.$register(name, template)\n  }\n\n  /**\n   * @namespace\n   * @description\n   * This API is experimental and subject to change.\n   *\n   * Please note that this API is currently only available in a Node environment.\n   * We recommend to use a custom converter if you are running in the browser.\n   *\n   * A pluggable adapter for integrating a template engine into the built-in template converter.\n   */\n  var TemplateEngine = {}\n  TemplateEngine.registry = {}\n\n  // Alias\n  Opal.Asciidoctor.TemplateEngine = TemplateEngine\n\n  /**\n   * Register a template engine adapter for the given names.\n   * @param {string|Array} names - a {string} name or an {Array} of {string} names\n   * @param {Object} templateEngineAdapter - a template engine adapter instance\n   * @example\n   *  const fs = require('fs')\n   *  class DotTemplateEngineAdapter {\n   *    constructor () {\n   *      this.doT = require('dot')\n   *    }\n   *    compile (file, _) {\n   *      const templateFn = this.doT.template(fs.readFileSync(file, 'utf8'))\n   *      return {\n   *        render: templateFn\n   *      }\n   *    }\n   *  }\n   *  asciidoctor.TemplateEngine.register('dot, new DotTemplateEngineAdapter())\n   * @memberof TemplateEngine\n   */\n  TemplateEngine.register = function (names, templateEngineAdapter) {\n    if (typeof names === 'string') {\n      this.registry[names] = templateEngineAdapter\n    } else {\n      // array\n      for (var i = 0; i < names.length; i++) {\n        var name = names[i]\n        this.registry[name] = templateEngineAdapter\n      }\n    }\n  }\n}\n\n/* global Opal, fromHash, toHash, initializeClass */\n// Extensions API\n\n/**\n * @private\n */\nvar toBlock = function (block) {\n  // arity is a mandatory field\n  block.$$arity = block.length\n  return block\n}\n\nvar registerExtension = function (registry, type, processor, name) {\n  if (typeof processor === 'object' || processor.$$is_class) {\n    // processor is an instance or a class\n    return registry['$' + type](processor, name)\n  } else {\n    // processor is a function/lambda\n    return Opal.send(registry, type, name && [name], toBlock(processor))\n  }\n}\n\n/**\n * @namespace\n * @description\n * Extensions provide a way to participate in the parsing and converting\n * phases of the AsciiDoc processor or extend the AsciiDoc syntax.\n *\n * The various extensions participate in AsciiDoc processing as follows:\n *\n * 1. After the source lines are normalized, {{@link Extensions/Preprocessor}}s modify or replace\n *    the source lines before parsing begins. {{@link Extensions/IncludeProcessor}}s are used to\n *    process include directives for targets which they claim to handle.\n * 2. The Parser parses the block-level content into an abstract syntax tree.\n *    Custom blocks and block macros are processed by associated {{@link Extensions/BlockProcessor}}s\n *    and {{@link Extensions/BlockMacroProcessor}}s, respectively.\n * 3. {{@link Extensions/TreeProcessor}}s are run on the abstract syntax tree.\n * 4. Conversion of the document begins, at which point inline markup is processed\n *    and converted. Custom inline macros are processed by associated {InlineMacroProcessor}s.\n * 5. {{@link Extensions/Postprocessor}}s modify or replace the converted document.\n * 6. The output is written to the output stream.\n *\n * Extensions may be registered globally using the {Extensions.register} method\n * or added to a custom {Registry} instance and passed as an option to a single\n * Asciidoctor processor.\n *\n * @example\n * asciidoctor.Extensions.register(function () {\n *   this.block(function () {\n *     var self = this;\n *     self.named('shout');\n *     self.onContext('paragraph');\n *     self.process(function (parent, reader) {\n *       var lines = reader.getLines().map(function (l) { return l.toUpperCase(); });\n *       return self.createBlock(parent, 'paragraph', lines);\n *     });\n *   });\n * });\n */\nvar Extensions = Opal.const_get_qualified(Opal.Asciidoctor, 'Extensions')\n\n// Alias\nOpal.Asciidoctor.Extensions = Extensions\n\n/**\n * Create a new {@link Extensions/Registry}.\n * @param {string} name\n * @param {function} block\n * @memberof Extensions\n * @returns {Extensions/Registry} - returns a {@link Extensions/Registry}\n */\nExtensions.create = function (name, block) {\n  if (typeof name === 'function' && typeof block === 'undefined') {\n    return Opal.send(this, 'create', null, toBlock(name))\n  } else if (typeof block === 'function') {\n    return Opal.send(this, 'create', [name], toBlock(block))\n  } else {\n    return this.$create()\n  }\n}\n\n/**\n * @memberof Extensions\n */\nExtensions.register = function (name, block) {\n  if (typeof name === 'function' && typeof block === 'undefined') {\n    return Opal.send(this, 'register', null, toBlock(name))\n  } else {\n    return Opal.send(this, 'register', [name], toBlock(block))\n  }\n}\n\n/**\n * Get statically-registered extension groups.\n * @memberof Extensions\n */\nExtensions.getGroups = function () {\n  return fromHash(this.$groups())\n}\n\n/**\n * Unregister all statically-registered extension groups.\n * @memberof Extensions\n */\nExtensions.unregisterAll = function () {\n  this.$unregister_all()\n}\n\n/**\n * Unregister the specified statically-registered extension groups.\n *\n * NOTE Opal cannot delete an entry from a Hash that is indexed by symbol, so\n * we have to resort to using low-level operations in this method.\n *\n * @memberof Extensions\n */\nExtensions.unregister = function () {\n  var names = Array.prototype.concat.apply([], arguments)\n  var groups = this.$groups()\n  var groupNameIdx = {}\n  for (var i = 0, groupSymbolNames = groups.$$keys; i < groupSymbolNames.length; i++) {\n    var groupSymbolName = groupSymbolNames[i]\n    groupNameIdx[groupSymbolName.toString()] = groupSymbolName\n  }\n  for (var j = 0; j < names.length; j++) {\n    var groupStringName = names[j]\n    if (groupStringName in groupNameIdx) Opal.hash_delete(groups, groupNameIdx[groupStringName])\n  }\n}\n\n/**\n * @namespace\n * @module Extensions/Registry\n */\nvar Registry = Extensions.Registry\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.getGroups = Extensions.getGroups\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.unregisterAll = function () {\n  this.groups = Opal.hash()\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.unregister = Extensions.unregister\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.prefer = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  if (typeof processor === 'object' || processor.$$is_class) {\n    // processor is an instance or a class\n    return this.$prefer(name, processor)\n  } else {\n    // processor is a function/lambda\n    return Opal.send(this, 'prefer', name && [name], toBlock(processor))\n  }\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.block = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'block', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.inlineMacro = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'inline_macro', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.includeProcessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'include_processor', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.blockMacro = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'block_macro', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.treeProcessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'tree_processor', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.postprocessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'postprocessor', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.preprocessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'preprocessor', processor, name)\n}\n\n/**\n * @memberof Extensions/Registry\n */\nRegistry.prototype.docinfoProcessor = function (name, processor) {\n  if (arguments.length === 1) {\n    processor = name\n    name = null\n  }\n  return registerExtension(this, 'docinfo_processor', processor, name)\n}\n\n/**\n * Checks whether any {{@link Extensions/Preprocessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/Preprocessor}} extensions are registered.\n */\nRegistry.prototype.hasPreprocessors = function () {\n  return this['$preprocessors?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/TreeProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/TreeProcessor}} extensions are registered.\n */\nRegistry.prototype.hasTreeProcessors = function () {\n  return this['$tree_processors?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/IncludeProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/IncludeProcessor}} extensions are registered.\n */\nRegistry.prototype.hasIncludeProcessors = function () {\n  return this['$include_processors?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/Postprocessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/Postprocessor}} extensions are registered.\n */\nRegistry.prototype.hasPostprocessors = function () {\n  return this['$postprocessors?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/DocinfoProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @param location - A {string} for selecting docinfo extensions at a given location (head or footer) (default: undefined)\n * @returns a {boolean} indicating whether any {{@link Extensions/DocinfoProcessor}} extensions are registered.\n */\nRegistry.prototype.hasDocinfoProcessors = function (location) {\n  return this['$docinfo_processors?'](location)\n}\n\n/**\n * Checks whether any {{@link Extensions/BlockProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/BlockProcessor}} extensions are registered.\n */\nRegistry.prototype.hasBlocks = function () {\n  return this['$blocks?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/BlockMacroProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/BlockMacroProcessor}} extensions are registered.\n */\nRegistry.prototype.hasBlockMacros = function () {\n  return this['$block_macros?']()\n}\n\n/**\n * Checks whether any {{@link Extensions/InlineMacroProcessor}} extensions have been registered.\n *\n * @memberof Extensions/Registry\n * @returns a {boolean} indicating whether any {{@link Extensions/InlineMacroProcessor}} extensions are registered.\n */\nRegistry.prototype.hasInlineMacros = function () {\n  return this['$inline_macros?']()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/Preprocessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getPreprocessors = function () {\n  return this.$preprocessors()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/TreeProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getTreeProcessors = function () {\n  return this.$tree_processors()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/IncludeProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getIncludeProcessors = function () {\n  return this.$include_processors()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/Postprocessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getPostprocessors = function () {\n  return this.$postprocessors()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/DocinfoProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @param location - A {string} for selecting docinfo extensions at a given location (head or footer) (default: undefined)\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getDocinfoProcessors = function (location) {\n  return this.$docinfo_processors(location)\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/BlockProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getBlocks = function () {\n  return this.block_extensions.$values()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/BlockMacroProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getBlockMacros = function () {\n  return this.block_macro_extensions.$values()\n}\n\n/**\n * Retrieves the Extension proxy objects for all the {{@link Extensions/InlineMacroProcessor}} instances stored in this registry.\n *\n * @memberof Extensions/Registry\n * @returns an {array} of Extension proxy objects.\n */\nRegistry.prototype.getInlineMacros = function () {\n  return this.$inline_macros()\n}\n\n/**\n * Get any {{@link Extensions/InlineMacroProcessor}} extensions are registered to handle the specified inline macro name.\n *\n * @param name - the {string} inline macro name\n * @memberof Extensions/Registry\n * @returns the Extension proxy object for the {{@link Extensions/InlineMacroProcessor}} that matches the inline macro name or undefined if no match is found.\n */\nRegistry.prototype.getInlineMacroFor = function (name) {\n  var result = this['$registered_for_inline_macro?'](name)\n  return result === false ? undefined : result\n}\n\n/**\n * Get any {{@link Extensions/BlockProcessor}} extensions are registered to handle the specified block name appearing on the specified context.\n * @param name - the {string} block name\n * @param context - the context of the block: paragraph, open... (optional)\n * @memberof Extensions/Registry\n * @returns the Extension proxy object for the {{@link Extensions/BlockProcessor}} that matches the block name and context or undefined if no match is found.\n */\nRegistry.prototype.getBlockFor = function (name, context) {\n  if (typeof context === 'undefined') {\n    var ext = this.$find_block_extension(name)\n    return ext === Opal.nil ? undefined : ext\n  }\n  var result = this['$registered_for_block?'](name, context)\n  return result === false ? undefined : result\n}\n\n/**\n * Get any {{@link Extensions/BlockMacroProcessor}} extensions are registered to handle the specified macro name.\n *\n * @param name - the {string} macro name\n * @memberof Extensions/Registry\n * @returns the Extension proxy object for the {{@link Extensions/BlockMacroProcessor}} that matches the macro name or undefined if no match is found.\n */\nRegistry.prototype.getBlockMacroFor = function (name) {\n  var result = this['$registered_for_block_macro?'](name)\n  return result === false ? undefined : result\n}\n\n/**\n * @namespace\n * @module Extensions/Processor\n */\nvar Processor = Extensions.Processor\n\n/**\n * The extension will be added to the beginning of the list for that extension type. (default is append).\n * @memberof Extensions/Processor\n * @deprecated Please use the <code>prefer</pre> function on the {@link Extensions/Registry},\n * the {@link Extensions/IncludeProcessor},\n * the {@link Extensions/TreeProcessor},\n * the {@link Extensions/Postprocessor},\n * the {@link Extensions/Preprocessor}\n * or the {@link Extensions/DocinfoProcessor}\n */\nProcessor.prototype.prepend = function () {\n  this.$option('position', '>>')\n}\n\n/**\n * @memberof Extensions/Processor\n */\nProcessor.prototype.process = function (block) {\n  var handler = {\n    apply: function (target, thisArg, argumentsList) {\n      for (var i = 0; i < argumentsList.length; i++) {\n        // convert all (Opal) Hash arguments to JSON.\n        if (typeof argumentsList[i] === 'object' && '$$smap' in argumentsList[i]) {\n          argumentsList[i] = fromHash(argumentsList[i])\n        }\n      }\n      return target.apply(thisArg, argumentsList)\n    }\n  }\n  var blockProxy = new Proxy(block, handler)\n  return Opal.send(this, 'process', null, toBlock(blockProxy))\n}\n\n/**\n * @param {string} name\n * @memberof Extensions/Processor\n */\nProcessor.prototype.named = function (name) {\n  return this.$named(name)\n}\n\n/**\n * Creates a block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string} context\n * @param {string|Array<string>} source\n * @param {Object|undefined} attrs - A JSON of attributes\n * @param {Object|undefined} opts - A JSON of options\n * @return {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createBlock = function (parent, context, source, attrs, opts) {\n  return this.$create_block(parent, context, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a list block node and links it to the specified parent.\n *\n * @param parent - The parent Block (Block, Section, or Document) of this new list block.\n * @param {string} context - The list context (e.g., ulist, olist, colist, dlist)\n * @param {Object} attrs - An object of attributes to set on this list block\n * @returns {List}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createList = function (parent, context, attrs) {\n  return this.$create_list(parent, context, toHash(attrs))\n}\n\n/**\n * Creates a list item node and links it to the specified parent.\n *\n * @param {List} parent - The parent {List} of this new list item block.\n * @param {string} text - The text of the list item.\n * @returns {ListItem}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createListItem = function (parent, text) {\n  return this.$create_list_item(parent, text)\n}\n\n/**\n * Creates an image block node and links it to the specified parent.\n * @param {Block|Section|Document} parent - The parent Block of this new image block.\n * @param {Object} attrs - A JSON of attributes\n * @param {string} attrs.target - the target attribute to set the source of the image.\n * @param {string} attrs.alt - the alt attribute to specify an alternative text for the image.\n * @param {Object} opts - A JSON of options\n * @returns {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createImageBlock = function (parent, attrs, opts) {\n  return this.$create_image_block(parent, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a paragraph block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - a paragraph {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createParagraph = function (parent, source, attrs, opts) {\n  return this.$create_paragraph(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates an open block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - an open {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createOpenBlock = function (parent, source, attrs, opts) {\n  return this.$create_open_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates an example block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - an example {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createExampleBlock = function (parent, source, attrs, opts) {\n  return this.$create_example_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a literal block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - a literal {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createPassBlock = function (parent, source, attrs, opts) {\n  return this.$create_pass_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a listing block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - a listing {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createListingBlock = function (parent, source, attrs, opts) {\n  return this.$create_listing_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates a literal block and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string|Array<string>} source - The source\n * @param {Object|undefined} attrs - An object of attributes to set on this block\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Block} - a literal {Block}\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createLiteralBlock = function (parent, source, attrs, opts) {\n  return this.$create_literal_block(parent, source, toHash(attrs), toHash(opts))\n}\n\n/**\n * Creates an inline anchor and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string} text - The text\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Inline} - an {Inline} anchor\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createAnchor = function (parent, text, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$create_anchor(parent, text, toHash(opts))\n}\n\n/**\n * Creates an inline pass and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block (Block, Section, or Document) of this new block.\n * @param {string} text - The text\n * @param {Object|undefined} opts - An object of options to set on this block\n * @returns {Inline} - an {Inline} pass\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createInlinePass = function (parent, text, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$create_inline_pass(parent, text, toHash(opts))\n}\n\n/**\n * Creates an inline node and links it to the specified parent.\n *\n * @param {Block|Section|Document} parent - The parent Block of this new inline node.\n * @param {string} context - The context name\n * @param {string} text - The text\n * @param {Object|undefined} opts - A JSON of options\n * @returns {Inline} - an {Inline} node\n * @memberof Extensions/Processor\n */\nProcessor.prototype.createInline = function (parent, context, text, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return this.$create_inline(parent, context, text, toHash(opts))\n}\n\n/**\n * Parses blocks in the content and attaches the block to the parent.\n * @param {AbstractBlock} parent - the parent block\n * @param {string|Array<string>} content - the content\n * @param {Object|undefined} attrs - an object of attributes\n * @returns {AbstractNode} - The parent node into which the blocks are parsed.\n * @memberof Extensions/Processor\n */\nProcessor.prototype.parseContent = function (parent, content, attrs) {\n  return this.$parse_content(parent, content, attrs)\n}\n\n/**\n *  Parses the attrlist String into a JSON of attributes\n * @param {AbstractBlock} block - the current AbstractBlock or the parent AbstractBlock if there is no current block (used for applying subs)\n * @param {string} attrlist - the list of attributes as a String\n * @param {Object|undefined} opts - an optional JSON of options to control processing:\n * - positional_attributes: an Array of attribute names to map positional arguments to (optional, default: [])\n * - sub_attributes: enables attribute substitution on the attrlist argument (optional, default: false)\n *\n * @returns - a JSON of parsed attributes\n * @memberof Extensions/Processor\n */\nProcessor.prototype.parseAttributes = function (block, attrlist, opts) {\n  if (opts && opts.attributes) {\n    opts.attributes = toHash(opts.attributes)\n  }\n  return fromHash(this.$parse_attributes(block, attrlist, toHash(opts)))\n}\n\n/**\n * @param {string|Array<string>} value - Name of a positional attribute or an Array of positional attribute names\n * @memberof Extensions/Processor\n */\nProcessor.prototype.positionalAttributes = function (value) {\n  return this.$positional_attrs(value)\n}\n\n/**\n * Specify how to resolve attributes.\n *\n * @param {string|Array<string>|Object|boolean} [value] - A specification to resolve attributes.\n * @memberof Extensions/Processor\n */\nProcessor.prototype.resolveAttributes = function (value) {\n  if (typeof value === 'object' && !Array.isArray(value)) {\n    return this.$resolves_attributes(toHash(value))\n  }\n  if (arguments.length > 1) {\n    return this.$resolves_attributes(Array.prototype.slice.call(arguments))\n  }\n  if (typeof value === 'undefined') {\n    // Convert to nil otherwise an exception is thrown at:\n    // https://github.com/asciidoctor/asciidoctor/blob/0bcb4addc17b307f62975aad203fb556a1bcd8a5/lib/asciidoctor/extensions.rb#L583\n    //\n    // if args.size == 1 && !args[0]\n    //\n    // In the above Ruby code, args[0] is undefined and Opal will try to call the function \"!\" on an undefined object.\n    return this.$resolves_attributes(Opal.nil)\n  }\n  return this.$resolves_attributes(value)\n}\n\n/**\n * @deprecated Please use the <code>resolveAttributes</pre> function on the {@link Extensions/Processor}.\n * @memberof Extensions/Processor\n * @see {Processor#resolveAttributes}\n */\nProcessor.prototype.resolvesAttributes = Processor.prototype.resolveAttributes\n\n/**\n * Get the configuration JSON for this processor instance.\n * @memberof Extensions/Processor\n */\nProcessor.prototype.getConfig = function () {\n  return fromHash(this.config)\n}\n\n/**\n * @memberof Extensions/Processor\n */\nProcessor.prototype.option = function (key, value) {\n  this.$option(key, value)\n}\n\n/**\n * @namespace\n * @module Extensions/BlockProcessor\n */\nvar BlockProcessor = Extensions.BlockProcessor\n\n/**\n * @param {Object} value - a JSON of default values for attributes\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.defaultAttributes = function (value) {\n  this.$default_attributes(toHash(value))\n}\n\n/**\n * @param {string} context - A context name\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.onContext = function (context) {\n  return this.$on_context(context)\n}\n\n/**\n * @param {...string} contexts - A list of context names\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.onContexts = function (contexts) {\n  return this.$on_contexts(Array.prototype.slice.call(arguments))\n}\n\n/**\n * @returns {string}\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.getName = function () {\n  var name = this.name\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @param {string} value\n * @memberof Extensions/BlockProcessor\n */\nBlockProcessor.prototype.parseContentAs = function (value) {\n  this.$parse_content_as(value)\n}\n\n/**\n * @namespace\n * @module Extensions/BlockMacroProcessor\n */\nvar BlockMacroProcessor = Extensions.BlockMacroProcessor\n\n/**\n * @param {Object} value - a JSON of default values for attributes\n * @memberof Extensions/BlockMacroProcessor\n */\nBlockMacroProcessor.prototype.defaultAttributes = function (value) {\n  this.$default_attributes(toHash(value))\n}\n\n/**\n * @returns {string} - the block macro name\n * @memberof Extensions/BlockMacroProcessor\n */\nBlockMacroProcessor.prototype.getName = function () {\n  var name = this.name\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @param {string} value\n * @memberof Extensions/BlockMacroProcessor\n */\nBlockMacroProcessor.prototype.parseContentAs = function (value) {\n  this.$parse_content_as(value)\n}\n\n/**\n * @namespace\n * @module Extensions/InlineMacroProcessor\n */\nvar InlineMacroProcessor = Extensions.InlineMacroProcessor\n\n/**\n * @param {Object} value - a JSON of default values for attributes\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.defaultAttributes = function (value) {\n  this.$default_attributes(toHash(value))\n}\n\n/**\n * @returns {string} - the inline macro name\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.getName = function () {\n  var name = this.name\n  return name === Opal.nil ? undefined : name\n}\n\n/**\n * @param {string} value\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.parseContentAs = function (value) {\n  this.$parse_content_as(value)\n}\n\n/**\n * @param {string} value\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.matchFormat = function (value) {\n  this.$match_format(value)\n}\n\n/**\n * @param {RegExp} value\n * @memberof Extensions/InlineMacroProcessor\n */\nInlineMacroProcessor.prototype.match = function (value) {\n  this.$match(value)\n}\n\n/**\n * @namespace\n * @module Extensions/IncludeProcessor\n */\nvar IncludeProcessor = Extensions.IncludeProcessor\n\n/**\n * @memberof Extensions/IncludeProcessor\n */\nIncludeProcessor.prototype.handles = function (block) {\n  return Opal.send(this, 'handles?', null, toBlock(block))\n}\n\n/**\n * @memberof Extensions/IncludeProcessor\n */\nIncludeProcessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @namespace\n * @module Extensions/TreeProcessor\n */\nvar TreeProcessor = Extensions.TreeProcessor\n\n/**\n * @memberof Extensions/TreeProcessor\n */\nTreeProcessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @namespace\n * @module Extensions/Postprocessor\n */\nvar Postprocessor = Extensions.Postprocessor\n\n/**\n * @memberof Extensions/Postprocessor\n */\nPostprocessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @namespace\n * @module Extensions/Preprocessor\n */\nvar Preprocessor = Extensions.Preprocessor\n\n/**\n * @memberof Extensions/Preprocessor\n */\nPreprocessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @namespace\n * @module Extensions/DocinfoProcessor\n */\nvar DocinfoProcessor = Extensions.DocinfoProcessor\n\n/**\n * @memberof Extensions/DocinfoProcessor\n */\nDocinfoProcessor.prototype.prefer = function () {\n  this.$prefer()\n}\n\n/**\n * @param {string} value - The docinfo location (\"head\", \"header\" or \"footer\")\n * @memberof Extensions/DocinfoProcessor\n */\nDocinfoProcessor.prototype.atLocation = function (value) {\n  this.$at_location(value)\n}\n\nfunction initializeProcessorClass (superclassName, className, functions) {\n  var superClass = Opal.const_get_qualified(Extensions, superclassName)\n  return initializeClass(superClass, className, functions, {\n    'handles?': function () {\n      return true\n    }\n  })\n}\n\n// Postprocessor\n\n/**\n * Create a postprocessor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createPostprocessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('Postprocessor', name, functions)\n}\n\n/**\n * Create and instantiate a postprocessor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newPostprocessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createPostprocessor(name, functions).$new()\n}\n\n// Preprocessor\n\n/**\n * Create a preprocessor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createPreprocessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('Preprocessor', name, functions)\n}\n\n/**\n * Create and instantiate a preprocessor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newPreprocessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createPreprocessor(name, functions).$new()\n}\n\n// Tree Processor\n\n/**\n * Create a tree processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createTreeProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('TreeProcessor', name, functions)\n}\n\n/**\n * Create and instantiate a tree processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newTreeProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createTreeProcessor(name, functions).$new()\n}\n\n// Include Processor\n\n/**\n * Create an include processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createIncludeProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('IncludeProcessor', name, functions)\n}\n\n/**\n * Create and instantiate an include processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newIncludeProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createIncludeProcessor(name, functions).$new()\n}\n\n// Docinfo Processor\n\n/**\n * Create a Docinfo processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createDocinfoProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('DocinfoProcessor', name, functions)\n}\n\n/**\n * Create and instantiate a Docinfo processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newDocinfoProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createDocinfoProcessor(name, functions).$new()\n}\n\n// Block Processor\n\n/**\n * Create a block processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createBlockProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('BlockProcessor', name, functions)\n}\n\n/**\n * Create and instantiate a block processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newBlockProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createBlockProcessor(name, functions).$new()\n}\n\n// Inline Macro Processor\n\n/**\n * Create an inline macro processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createInlineMacroProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('InlineMacroProcessor', name, functions)\n}\n\n/**\n * Create and instantiate an inline macro processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newInlineMacroProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createInlineMacroProcessor(name, functions).$new()\n}\n\n// Block Macro Processor\n\n/**\n * Create a block macro processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.createBlockMacroProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return initializeProcessorClass('BlockMacroProcessor', name, functions)\n}\n\n/**\n * Create and instantiate a block macro processor\n * @description this API is experimental and subject to change\n * @memberof Extensions\n */\nExtensions.newBlockMacroProcessor = function (name, functions) {\n  if (arguments.length === 1) {\n    functions = name\n    name = null\n  }\n  return this.createBlockMacroProcessor(name, functions).$new()\n}\n\n// Converter API\n\n/**\n * @namespace\n * @module Converter\n */\nvar Converter = Opal.const_get_qualified(Opal.Asciidoctor, 'Converter')\n\n// Alias\nOpal.Asciidoctor.Converter = Converter\n\n/**\n * Convert the specified node.\n *\n * @param {AbstractNode} node - the AbstractNode to convert\n * @param {string} transform - an optional String transform that hints at\n * which transformation should be applied to this node.\n * @param {Object} opts - a JSON of options that provide additional hints about how to convert the node (default: {})\n * @returns the {Object} result of the conversion, typically a {string}.\n * @memberof Converter\n */\nConverter.prototype.convert = function (node, transform, opts) {\n  return this.$convert(node, transform, toHash(opts))\n}\n\n/**\n * Create an instance of the converter bound to the specified backend.\n *\n * @param {string} backend - look for a converter bound to this keyword.\n * @param {Object} opts - a JSON of options to pass to the converter (default: {})\n * @returns {Converter} - a converter instance for converting nodes in an Asciidoctor AST.\n * @memberof Converter\n */\nConverter.create = function (backend, opts) {\n  return this.$create(backend, toHash(opts))\n}\n\n// Converter Factory API\n\n/**\n * @namespace\n * @module Converter/Factory\n */\nvar ConverterFactory = Opal.Asciidoctor.Converter.Factory\n\nvar ConverterBase = Opal.Asciidoctor.Converter.Base\n\n// Alias\nOpal.Asciidoctor.ConverterFactory = ConverterFactory\n\nvar ConverterBackendTraits = Opal.Asciidoctor.Converter.BackendTraits\n\n// Alias\nOpal.Asciidoctor.ConverterBackendTraits = ConverterBackendTraits\n\n/**\n * Register a custom converter in the global converter factory to handle conversion to the specified backends.\n * If the backend value is an asterisk, the converter is used to handle any backend that does not have an explicit converter.\n *\n * @param converter - The Converter instance to register\n * @param backends {Array} - A {string} {Array} of backend names that this converter should be registered to handle (optional, default: ['*'])\n * @return {*} - Returns nothing\n * @memberof Converter/Factory\n */\nConverterFactory.register = function (converter, backends) {\n  var object\n  var buildBackendTraitsFromObject = function (obj) {\n    return Object.assign({},\n      obj.basebackend ? { basebackend: obj.basebackend } : {},\n      obj.outfilesuffix ? { outfilesuffix: obj.outfilesuffix } : {},\n      obj.filetype ? { filetype: obj.filetype } : {},\n      obj.htmlsyntax ? { htmlsyntax: obj.htmlsyntax } : {},\n      obj.supports_templates ? { supports_templates: obj.supports_templates } : {}\n    )\n  }\n  var assignBackendTraitsToInstance = function (obj, instance) {\n    if (obj.backend_traits) {\n      instance.backend_traits = toHash(obj.backend_traits)\n    } else if (obj.backendTraits) {\n      instance.backend_traits = toHash(obj.backendTraits)\n    } else if (obj.basebackend || obj.outfilesuffix || obj.filetype || obj.htmlsyntax || obj.supports_templates) {\n      instance.backend_traits = toHash(buildBackendTraitsFromObject(obj))\n    }\n  }\n  var bridgeHandlesMethodToInstance = function (obj, instance) {\n    bridgeMethodToInstance(obj, instance, '$handles?', 'handles', function () {\n      return true\n    })\n  }\n  var bridgeComposedMethodToInstance = function (obj, instance) {\n    bridgeMethodToInstance(obj, instance, '$composed', 'composed')\n  }\n  var bridgeMethodToInstance = function (obj, instance, methodName, functionName, defaultImplementation) {\n    if (typeof obj[methodName] === 'undefined') {\n      if (typeof obj[functionName] === 'function') {\n        instance[methodName] = obj[functionName]\n      } else if (defaultImplementation) {\n        instance[methodName] = defaultImplementation\n      }\n    }\n  }\n  var addRespondToMethod = function (instance) {\n    if (typeof instance['$respond_to?'] !== 'function') {\n      instance['$respond_to?'] = function (name) {\n        return typeof this[name] === 'function'\n      }\n    }\n  }\n  if (typeof converter === 'function') {\n    // Class\n    object = initializeClass(ConverterBase, converter.constructor.name, {\n      initialize: function (backend, opts) {\n        var self = this\n        var result = new converter(backend, opts) // eslint-disable-line\n        Object.assign(this, result)\n        assignBackendTraitsToInstance(result, self)\n        var propertyNames = Object.getOwnPropertyNames(converter.prototype)\n        for (var i = 0; i < propertyNames.length; i++) {\n          var propertyName = propertyNames[i]\n          if (propertyName !== 'constructor') {\n            self[propertyName] = result[propertyName]\n          }\n        }\n        if (typeof result.$convert === 'undefined' && typeof result.convert === 'function') {\n          self.$convert = result.convert\n        }\n        bridgeHandlesMethodToInstance(result, self)\n        bridgeComposedMethodToInstance(result, self)\n        addRespondToMethod(self)\n        self.super(backend, opts)\n      }\n    })\n    object.$extend(ConverterBackendTraits)\n  } else if (typeof converter === 'object') {\n    // Instance\n    if (typeof converter.$convert === 'undefined' && typeof converter.convert === 'function') {\n      converter.$convert = converter.convert\n    }\n    assignBackendTraitsToInstance(converter, converter)\n    if (converter.backend_traits) {\n      // \"extends\" ConverterBackendTraits\n      var converterBackendTraitsFunctionNames = [\n        'basebackend',\n        'filetype',\n        'htmlsyntax',\n        'outfilesuffix',\n        'supports_templates',\n        'supports_templates?',\n        'init_backend_traits',\n        'backend_traits'\n      ]\n      for (var functionName of converterBackendTraitsFunctionNames) {\n        converter['$' + functionName] = ConverterBackendTraits.prototype['$' + functionName]\n      }\n      converter.$$meta = ConverterBackendTraits\n    }\n    bridgeHandlesMethodToInstance(converter, converter)\n    bridgeComposedMethodToInstance(converter, converter)\n    addRespondToMethod(converter)\n    object = converter\n  }\n  var args = [object].concat(backends)\n  return Converter.$register.apply(Converter, args)\n}\n\n/**\n * Retrieves the singleton instance of the converter factory.\n *\n * @param {boolean} initialize - instantiate the singleton if it has not yet\n * been instantiated. If this value is false and the singleton has not yet been\n * instantiated, this method returns a fresh instance.\n * @returns {Converter/Factory} an instance of the converter factory.\n * @memberof Converter/Factory\n */\nConverterFactory.getDefault = function (initialize) {\n  return this.$default(initialize)\n}\n\n/**\n * Create an instance of the converter bound to the specified backend.\n *\n * @param {string} backend - look for a converter bound to this keyword.\n * @param {Object} opts - a JSON of options to pass to the converter (default: {})\n * @returns {Converter} - a converter instance for converting nodes in an Asciidoctor AST.\n * @memberof Converter/Factory\n */\nConverterFactory.prototype.create = function (backend, opts) {\n  return this.$create(backend, toHash(opts))\n}\n\n/**\n * Get the converter registry.\n * @returns the registry of converter instances or classes keyed by backend name\n * @memberof Converter/Factory\n */\nConverterFactory.getRegistry = function () {\n  return fromHash(Converter.$registry())\n}\n\n/**\n * Lookup the custom converter registered with this factory to handle the specified backend.\n *\n * @param {string} backend - The {string} backend name.\n * @returns the {Converter} class or instance registered to convert the specified backend or undefined if no match is found.\n * @memberof Converter/Factory\n */\nConverterFactory.for = function (backend) {\n  const converter = Converter.$for(backend)\n  return converter === Opal.nil ? undefined : converter\n}\n\n/*\n * Unregister any custom converter classes that are registered with this factory.\n * Intended for testing only!\n */\nConverterFactory.unregisterAll = function () {\n  var internalRegistry = Converter.DefaultFactory.$$cvars['@@registry']\n  Converter.DefaultFactory.$$cvars['@@registry'] = toHash({ html5: internalRegistry['$[]']('html5') })\n}\n\n// Built-in converter\n\n/**\n * @namespace\n * @module Converter/Html5Converter\n */\nvar Html5Converter = Opal.Asciidoctor.Converter.Html5Converter\n\n// Alias\nOpal.Asciidoctor.Html5Converter = Html5Converter\n\n/**\n * Create a new Html5Converter.\n * @returns {Html5Converter} - a Html5Converter\n * @memberof Converter/Html5Converter\n */\nHtml5Converter.create = function () {\n  return this.$new()\n}\n\n/**\n * Converts an {AbstractNode} using the given transform.\n * This method must be implemented by a concrete converter class.\n *\n * @param {AbstractNode} node - The concrete instance of AbstractNode to convert.\n * @param {string} [transform] - An optional String transform that hints at which transformation should be applied to this node.\n * If a transform is not given, the transform is often derived from the value of the {AbstractNode#getNodeName} property. (optional, default: undefined)\n * @param {Object} [opts]- An optional JSON of options hints about how to convert the node. (optional, default: undefined)\n *\n * @returns {string} - the String result.\n * @memberof Converter/Html5Converter\n */\nHtml5Converter.prototype.convert = function (node, transform, opts) {\n  return this.$convert(node, transform, opts)\n}\n\n\nvar ASCIIDOCTOR_JS_VERSION = '2.2.5';\n\n  /**\n   * Get Asciidoctor.js version number.\n   *\n   * @memberof Asciidoctor\n   * @returns {string} - returns the version number of Asciidoctor.js.\n   */\n  Opal.Asciidoctor.prototype.getVersion = function () {\n    return ASCIIDOCTOR_JS_VERSION\n  }\n  return Opal.Asciidoctor\n}))\n","module.exports = require('@asciidoctor/core')\n"],"sourceRoot":""}